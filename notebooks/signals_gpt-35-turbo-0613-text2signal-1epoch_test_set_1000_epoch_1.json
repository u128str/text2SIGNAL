[
    {
        "filename": "f5213b3ab3",
        "split": "test",
        "name": "Events by User Type and frequency of occurence",
        "query": "SELECT DISTINCT  event_name,\"Event Created by User Type\",count(event_name) AS A\nFROM FLATTEN (\"defaultview-59\")\nORDER BY 3  desc\nlimit 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve distinct event names, count of event names, and sort them in descending order based on the count of event names, and limit the result to 10 rows from the 'defaultview-59' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT DISTINCT(\nEVENT_NAME) AS \"EVENT NAME\",\nCOUNT (EVENT_NAME) AS \"COUNT OF EVENTS\"\nFROM FLATTEN(\"defaultview-59\")\nORDER BY 2 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT DISTINCT(\nEVENT_NAME) AS \"EVENT NAME\",\nCOUNT (EVENT_NAME) AS \"COUNT OF EVENTS\"\nFROM FLATTEN(\"defaultview-59\")\nORDER BY 2 DESC\nLIMIT 10"
    },
    {
        "filename": "bac85808e2",
        "split": "test",
        "name": "Conformance Level",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES (\n    \t'Create PO Item'\n\t\t~> 'Release PO'\n\t\t~> 'Create Goods Receipt'\n\t\t~> ('Record Invoice Receipt'|'Create FI Invoice')\n\t\t~> 'Clear Invoice')) \n\t/ COUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Clear Invoice')) \n    * 100 AS \"Conformance Rate\"\n\nFROM \"defaultview-124\" ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each CASE_ID in the 'defaultview-124' table, count the number of events that match the specified pattern and divide it by the number of events that match the pattern 'Clear Invoice'. The pattern is a sequence of events starting with 'Create PO Item', followed by 'Release PO', then 'Create Goods Receipt', then either 'Record Invoice Receipt' or 'Create FI Invoice', and finally 'Clear Invoice'. The result is then multiplied by 100 to express it as a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\ncount(event_name) filter (where match (\n    (event_name = 'Create PO Item') \n    -> (event_name = 'Release PO') \n        -> (event_name = 'Create Goods Receipt') \n                -> (event_name IN ('Record Invoice Receipt', 'Create FI Invoice')) \n    -> (event_name = 'Clear Invoice')\n            )))\n/ \ncount(event_name) filter (where match(\n    (event_name = 'Clear Invoice')\n            ))\n*100\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\ncount(event_name) filter (where match (\n    (event_name = 'Create PO Item') \n    -> (event_name = 'Release PO') \n        -> (event_name = 'Create Goods Receipt') \n                -> (event_name IN ('Record Invoice Receipt', 'Create FI Invoice')) \n    -> (event_name = 'Clear Invoice')\n            )))\n/ \ncount(event_name) filter (where match(\n    (event_name = 'Clear Invoice')\n            ))\n*100\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "d9c60165f1",
        "split": "test",
        "name": "PO Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"PO Confirmation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Get the percentage of rejected PO items that are catalog items. Filter the results by 'Last Invoice Id' and calculate the percentage by dividing the count of distinct 'Last Invoice Id' for rejected PO items by the total count of distinct 'Last Invoice Id'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(\n    DISTINCT \"Last Invoice Id\") FILTER (\n    WHERE\n      PO_STATUS = 'Rejected' ) / COUNT(\n    DISTINCT \"Last Invoice Id\")\n    FILTER (\n      WHERE FORKNAME = 'Extract PO Items'\n      AND (\"Is Catalog Item\" = 'Yes' )) * 100\n          \nFROM\n  (\n    FLATTEN(\"defaultview-11406\") FILTER (\n      (\"PO Item Change Doc Obj (i_werks)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_werks))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         )) OR \"PO Item Change Doc Obj (i_mblnr)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_mblnr))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         ) OR \"PO Item Change Doc Obj (i_refbn)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_refbn))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         ) OR \"PO Item Change Doc Obj (i_rm06b)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_rm06b))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         ) OR \"PO Item Change Doc Obj (i_tcmmf)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_tcmmf))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         ))\n    )\n  AND (\n    (\n      \"PO Item Change Document Change (i_op)\" IN ('Change PO Item')\n      AND (\n        \"PO Item Change Document Changed On (i_udat)\" IN (\n          SELECT\n            LAST (\"PO Item Change Document Changed On (i_udat))\"\n          WHERE\n            \"PO Item Change Document Change (i_op)\" IN ('Create PO Item')\n        )\n        OR \"PO Item Change Document Changed At (i_nact)\" IN (\n          SELECT\n            LAST (\"PO Item Change Document Changed At (i_nact))\"\n          WHERE\n            \"PO Item Change Document Change (i_op)\" IN ('Create PO Item')\n        )\n        OR \"PO Item Change Document Changed By (i_cnam)\" IN (\n          SELECT\n            LAST (\"PO Item Change Document Changed By (i_cnam))\"\n          WHERE\n            \"PO Item Change Document Change (i_op)\" IN ('Create PO Item')\n        )\n      )\n    )\n    OR \"PO Item Change Document Change (i_op)\" IN ('Create PO Item')\n    OR \"PO Item Change Document Change (i_op)\" IN ('Reset to In Process')\n    OR \"PO Item Change Document Change (i_op)\" IN ('Accept PO')\n    OR \"PO Item Change Document Change (i_op)\" IN ('Create PO with ref')\n    OR \"PO Item Change Document Change (i_op)\" IN ('Change PO with ref')\n  )\n  AND (\n    \"Last Putaway Level 1 Text\" LIKE 'Maintain %before GR%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain % before GR %'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain GR%before GR date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain GR % before GR date %'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%before GR Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%before GR Date %'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain % Before GR Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain %before%GR Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain %before GR%Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%before%GR Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%in  PUTAWAY%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%In PUTAWAY%'\n  )\n)",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(\n    DISTINCT \"Last Invoice Id\") FILTER (\n    WHERE\n      PO_STATUS = 'Rejected' ) / COUNT(\n    DISTINCT \"Last Invoice Id\")\n    FILTER (\n      WHERE FORKNAME = 'Extract PO Items'\n      AND (\"Is Catalog Item\" = 'Yes' )) * 100\n          \nFROM\n  (\n    FLATTEN(\"defaultview-11406\") FILTER (\n      (\"PO Item Change Doc Obj (i_werks)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_werks))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         )) OR \"PO Item Change Doc Obj (i_mblnr)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_mblnr))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         ) OR \"PO Item Change Doc Obj (i_refbn)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_refbn))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         ) OR \"PO Item Change Doc Obj (i_rm06b)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_rm06b))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         ) OR \"PO Item Change Doc Obj (i_tcmmf)\" IN (\n           SELECT\n             LAST (\"PO Item Change Doc Obj (i_tcmmf))\"\n           WHERE\n             \"PO Item Change Document Change (i_op)\" IN ('Create PO Item','Change PO Item')\n         ))\n    )\n  AND (\n    (\n      \"PO Item Change Document Change (i_op)\" IN ('Change PO Item')\n      AND (\n        \"PO Item Change Document Changed On (i_udat)\" IN (\n          SELECT\n            LAST (\"PO Item Change Document Changed On (i_udat))\"\n          WHERE\n            \"PO Item Change Document Change (i_op)\" IN ('Create PO Item')\n        )\n        OR \"PO Item Change Document Changed At (i_nact)\" IN (\n          SELECT\n            LAST (\"PO Item Change Document Changed At (i_nact))\"\n          WHERE\n            \"PO Item Change Document Change (i_op)\" IN ('Create PO Item')\n        )\n        OR \"PO Item Change Document Changed By (i_cnam)\" IN (\n          SELECT\n            LAST (\"PO Item Change Document Changed By (i_cnam))\"\n          WHERE\n            \"PO Item Change Document Change (i_op)\" IN ('Create PO Item')\n        )\n      )\n    )\n    OR \"PO Item Change Document Change (i_op)\" IN ('Create PO Item')\n    OR \"PO Item Change Document Change (i_op)\" IN ('Reset to In Process')\n    OR \"PO Item Change Document Change (i_op)\" IN ('Accept PO')\n    OR \"PO Item Change Document Change (i_op)\" IN ('Create PO with ref')\n    OR \"PO Item Change Document Change (i_op)\" IN ('Change PO with ref')\n  )\n  AND (\n    \"Last Putaway Level 1 Text\" LIKE 'Maintain %before GR%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain % before GR %'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain GR%before GR date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain GR % before GR date %'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%before GR Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%before GR Date %'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain % Before GR Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain %before%GR Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain %before GR%Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%before%GR Date%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%in  PUTAWAY%'\n    OR \"Last Putaway Level 1 Text\" LIKE 'Maintain%In PUTAWAY%'\n  )\n)"
    },
    {
        "filename": "1c43801ce6",
        "split": "test",
        "name": "TOP 10 Customers with most Invoice Changes ",
        "query": "SELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Invoice%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of unique events with the name containing 'Invoice' and ChangeType = 'Update', grouped by SalesDocCustomerCompany, sorted in descending order by the number of changes, limited to 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) as \"# Changes\",'SalesDocCustomerCompany'  \nFROM \"SIP_INVOICE_CHANGE\"\nWHERE  EventName LIKE '%Invoice%'  AND ChangeType = 'Update'\nGroup by 2\nORDER BY 1 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) as \"# Changes\",'SalesDocCustomerCompany'  \nFROM \"SIP_INVOICE_CHANGE\"\nWHERE  EventName LIKE '%Invoice%'  AND ChangeType = 'Update'\nGroup by 2\nORDER BY 1 DESC\nLIMIT 10\n"
    },
    {
        "filename": "aef7816f49",
        "split": "test",
        "name": "On time Delivery Rate",
        "query": "SELECT COUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE (\"DeliveryGoodsMovementOnTime\" = 'Yes')) > 0\n\t)\n/ COUNT(case_id)\n* 100 \nFROM \"defaultview-43\"\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Get the percentage of on-time deliveries for the 'DeliveryGoodsMovementOnTime' event. Filter the results to only include cases where the count of 'DeliveryGoodsMovementOnTime' events is greater than zero. The result is calculated by dividing the count of case IDs that match the filter by the total count of case IDs, then multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n    COUNT (CASE_ID) FILTER (\n        WHERE (SELECT COUNT (EVENT_NAME)\n            WHERE EVENT_NAME MATCHES ('DeliveryGoodsMovementOnTime') )) \n\n    / COUNT (CASE_ID) FILTER (\n        WHERE (SELECT COUNT (EVENT_NAME) \n            WHERE (EVENT_NAME IN ('SalesOrderDelivery','DeliveryDocumentCreatedOnTime'))))\n\n    * 100\nFROM \"defaultview-106\"\nWHERE \n  (\n\t  \"deliveryDocumentCreated\" = 'Yes'\n      AND DATE_TRUNC('day', \"DeliveryDocumentCreateDate\") \n     \t<= DATE_TRUNC('day', \"DeliveryDocumentDeliveryDate\")\n  )\n \n  AND NOT (\n\t  \"deliveryDocumentCreated\" = 'No' \n      AND DATE_TRUNC('day', \"DeliveryDocumentDeliveryDate\") - \"EndEventOccurrenceTime\" \n      \t> DURATION '3day'\n      )\n\n  AND NOT (\n\t  \"deliveryDocumentCreated\" = 'No' \n      )\n        ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n    COUNT (CASE_ID) FILTER (\n        WHERE (SELECT COUNT (EVENT_NAME)\n            WHERE EVENT_NAME MATCHES ('DeliveryGoodsMovementOnTime') )) \n\n    / COUNT (CASE_ID) FILTER (\n        WHERE (SELECT COUNT (EVENT_NAME) \n            WHERE (EVENT_NAME IN ('SalesOrderDelivery','DeliveryDocumentCreatedOnTime'))))\n\n    * 100\nFROM \"defaultview-106\"\nWHERE \n  (\n\t  \"deliveryDocumentCreated\" = 'Yes'\n      AND DATE_TRUNC('day', \"DeliveryDocumentCreateDate\") \n     \t<= DATE_TRUNC('day', \"DeliveryDocumentDeliveryDate\")\n  )\n \n  AND NOT (\n\t  \"deliveryDocumentCreated\" = 'No' \n      AND DATE_TRUNC('day', \"DeliveryDocumentDeliveryDate\") - \"EndEventOccurrenceTime\" \n      \t> DURATION '3day'\n      )\n\n  AND NOT (\n\t  \"deliveryDocumentCreated\" = 'No' \n      )\n        "
    },
    {
        "filename": "2ea60d0c15",
        "split": "test",
        "name": "Orders with SFC Activities not started",
        "query": "SELECT\n  count(\"case_id\")\nFROM\n  (\n    SELECT\n      DISTINCT case_id,\n      COUNT(DISTINCT \"event_name\") AS cnt\n    FROM\n      FLATTEN(\"defaultview-545\")\n    GROUP BY\n      1\n  ) AS T\nWHERE\n  cnt = 2",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct case IDs from the 'defaultview-545' table where the count of distinct event names is equal to 2.",
        "llm_gpt-35-turbo-0613_query": "SELECT \ncount(case_id) FILTER (WHERE (\n  SELECT \n    bool_or(match(IS_NOT_NULL(event_name))) \n  FROM \n    (\n      SELECT First_match AS event_name\n    ) AS sub1\n)))    \nFROM \"defaultview-545\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \ncount(case_id) FILTER (WHERE (\n  SELECT \n    bool_or(match(IS_NOT_NULL(event_name))) \n  FROM \n    (\n      SELECT First_match AS event_name\n    ) AS sub1\n)))    \nFROM \"defaultview-545\"\n"
    },
    {
        "filename": "8898300b76",
        "split": "test",
        "name": "Total Spend by PO Supplier (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the total PO amount, average cycle time, and PO supplier ID from the 'defaultview-431' table. Sort the results by total PO amount in descending order and limit the output to the first 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM(po_amount) AS \"Total PO Amount\",\n  AVG(FIRST ((END_TIME - START_TIME)))) AS \"Avg Cycle Time\",\n  \"PO asn supp. ID\" AS \"PO Supplier ID\"\nFROM\n  \"defaultview-431\"\nLIMIT\n  10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM(po_amount) AS \"Total PO Amount\",\n  AVG(FIRST ((END_TIME - START_TIME)))) AS \"Avg Cycle Time\",\n  \"PO asn supp. ID\" AS \"PO Supplier ID\"\nFROM\n  \"defaultview-431\"\nLIMIT\n  10"
    },
    {
        "filename": "adbdde6533",
        "split": "test",
        "name": "Average invoice customer process time",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) WHERE event_name IN ('Create Invoice'))\n\t-\n\t(SELECT FIRST(end_time) WHERE event_name IN ('Post Goods Issue'))\n)\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last 'Create Invoice' event and the first 'Post Goods Issue' event for the 'defaultview-290' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG(\n    (\n      SELECT\n        LAST(end_time)\n      FILTER (\n        WHERE\n          event_name IN ('Create Invoice')\n      )\n    ) - (\n      SELECT\n        FIRST(end_time)\n      FILTER (\n          WHERE\n          event_name IN ('Post Goods Issue')\n      )\n    )\n  ) \n  AS \"Avg. Time from Goods Issue to Invoice Creation\"\nFROM\n  \"defaultview-290\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG(\n    (\n      SELECT\n        LAST(end_time)\n      FILTER (\n        WHERE\n          event_name IN ('Create Invoice')\n      )\n    ) - (\n      SELECT\n        FIRST(end_time)\n      FILTER (\n          WHERE\n          event_name IN ('Post Goods Issue')\n      )\n    )\n  ) \n  AS \"Avg. Time from Goods Issue to Invoice Creation\"\nFROM\n  \"defaultview-290\"\n                "
    },
    {
        "filename": "abc59e9a38",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time PO Creation to PO Release ( > 3 Days)  by PO Plant",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - \n(SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg Cycle Time PO Create to PO Release\",\n\"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 20",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases, average cycle time for PO create to PO release, and PO plant. Filter the results to show only records where the cycle time is greater than 3 days. Group the results by 3 and order them by the number of cases in descending order. Limit the results to 20.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(CASE_ID) as \"No. of cases\",\nAVG(CYCLE_TIME) AS \"AVG. Cycle time\" ,\n\"PO\"\nFROM(SELECT\n    CASE_ID,\n    CYCLE_TIME,\n         \"PO Plant\" AS \"PO\"\nFROM\n    \"defaultview-28\") AS SUB\nWhere \"AVG. Cycle time\" > DURATION '3DAYS' \nGROUP BY 3\nORDER BY 1 desc\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(CASE_ID) as \"No. of cases\",\nAVG(CYCLE_TIME) AS \"AVG. Cycle time\" ,\n\"PO\"\nFROM(SELECT\n    CASE_ID,\n    CYCLE_TIME,\n         \"PO Plant\" AS \"PO\"\nFROM\n    \"defaultview-28\") AS SUB\nWhere \"AVG. Cycle time\" > DURATION '3DAYS' \nGROUP BY 3\nORDER BY 1 desc\nLIMIT 20"
    },
    {
        "filename": "73a2f1f5d3",
        "split": "test",
        "name": "Number of Invoice without PO",
        "query": "SELECT \nCOUNT(DISTINCT \"Last Invoice Id\")FILTER (WHERE \"PO ID\" IS NULL) AS \"# PO without Invoice\"\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct 'Last Invoice Id' from the 'defaultview-431' table where the 'PO ID' column is null, and filter the results using the 'FILTER' clause.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\nCOUNT(DISTINCT \"Last Invoice Id\" )\nFILTER (\n\tWHERE \"PO ID\" IS NULL)   \nFROM \"defaultview-431\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\nCOUNT(DISTINCT \"Last Invoice Id\" )\nFILTER (\n\tWHERE \"PO ID\" IS NULL)   \nFROM \"defaultview-431\" "
    },
    {
        "filename": "e21acbeec8",
        "split": "test",
        "name": "_Total approved hours",
        "query": "\nSELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of the 'TSR_HoursApproved' column from the 'defaultview-197' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\"TSR_HoursApproved\")\nFROM\n  \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\"TSR_HoursApproved\")\nFROM\n  \"defaultview-197\"\n                "
    },
    {
        "filename": "55cd82a6dd",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create FI Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-124\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Create FI Invoice')",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last 'Create FI Invoice' event and the first 'Create PO Item' event for each process instance in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\"Last FI Invoice post date\" - \"First PO Item post date\")\nFROM\n(\n \n SELECT\n    (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') AS \"Last FI Invoice post date\"\n   ,(SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') AS \"First PO Item post date\"\n    \n    FROM \"defaultview-124\"\n ) AS sub",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\"Last FI Invoice post date\" - \"First PO Item post date\")\nFROM\n(\n \n SELECT\n    (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') AS \"Last FI Invoice post date\"\n   ,(SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') AS \"First PO Item post date\"\n    \n    FROM \"defaultview-124\"\n ) AS sub"
    },
    {
        "filename": "0f63bf2cea",
        "split": "test",
        "name": "Planning Rate",
        "query": "SELECT \nCOUNT(case_id) \n\tFILTER(WHERE \"Planned Order Number\" IS NOT NULL)\n/ \nCOUNT(case_id)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Get the percentage of planned order numbers that are not null. Filter the count of case IDs where the planned order number is not null, then divide by the total count of case IDs and multiply by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n( COUNT (DISTINCT CASE_ID) FILTER\n     (WHERE \"Planned order number\" IS NOT NULL)\n/ COUNT (DISTINCT CASE_ID)) \n* 100  AS \"planned order numbers\"\nFROM \"defaultview-181\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n( COUNT (DISTINCT CASE_ID) FILTER\n     (WHERE \"Planned order number\" IS NOT NULL)\n/ COUNT (DISTINCT CASE_ID)) \n* 100  AS \"planned order numbers\"\nFROM \"defaultview-181\"\n                "
    },
    {
        "filename": "a8de636039",
        "split": "test",
        "name": "SOL-1709 No-Touch Invoice Processing Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES  (('Remove Dunning Block'\n    \t\t|'Set Dunning Block'|'Change Dunning Block'|'Send 1st Overdue Notice'\n    \t\t|'Update Baseline Date'|'Update Payment Term'|'Reverse Invoice'))) \n    \tAND (event_name MATCHES('Clear Invoice'))\n\t)\n/ (COUNT(case_id) FILTER (\n\tWHERE event_name MATCHES('Clear Invoice'))\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieves the percentage of cleared invoices out of all invoices that have been processed, by counting the number of case IDs that have 'Clear Invoice' event and dividing it by the total number of case IDs that have any event related to dunning, payment, or invoice reversal, and then multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE \n    (\n \t \t \n \t \t(SELECT FIRST(event_name) FILTER (\n \t \t \tWHERE event_name IN ('Clear Invoice')\n \t \t \t ))\n \t \t \n \t ) IS NOT NULL\n    )\n) \n/ COUNT (CASE_ID) FILTER (\n\tWHERE EVENT_NAME MATCHES(\n\t\t('^Dunning - Add fee$')\t\t\t-- Dunning - Add fee\n\t\t| ('^Dunning - Block invoice$')\t\t-- Dunning - Block invoice\n\t\t| ('^Dunning - Change data$')\t\t-- Dunning - Change data\n\t\t| ('^Dunning - Change level$')\t\t-- Dunning - Change level\n\t\t| ('^Dunning - Create case$')\t\t-- Dunning - Create case\n\t\t| ('^Dunning - Form Dunning Notice$')\t-- Dunning - Form Dunning Notice\n\t\t| ('^Dunning - Idea collection$')\t-- Dunning - Idea collection\n\t\t| ('^Dunning - Post Dunning$')\t\t-- Dunning - Post Dunning\n\t\t| ('^Dunning - Post form$')\t\t-- Dunning - Post form\n\t\t| ('^Dunning - Remove block$')\t\t-- Dunning - Remove block\n\t\t| ('^Dunning - Set eligible$')\t\t-- Dunning - Set eligible\n\t\t| ('^Dunning - Unset eligible$')\t-- Dunning - Unset eligible\n\t\t| ('^Payment - Post payment$')\t\t-- Payment - Post payment\n\t\t| ('^Payment at due date$')\t\t\t-- Payment at due date\n\t\t| ('^Payment different payment terms$')\t\t-- Payment different payment terms\n\t\t| ('^Payment Post WAT Document$')\t\t\t-- Payment Post WAT Document\n\t\t| ('^Payment Post WHT Document$')\t\t\t-- Payment Post WHT Document\n\t\t| ('^Post Incoming Credit Memo$')\t\t\t\t\t-- Post Incoming Credit Memo\n\t\t| ('^Registration of invoice$')\t\t\t\t\t\t-- Registration of invoice\n\t\t| ('^Registration of supplier invoice FI$')\t\t\t-- Registration of supplier invoice FI\n\t\t| ('^Release invoice$')\t\t\t\t\t\t\t\t\t-- Release invoice\n\t\t| ('^Remove Clearing Document$')\t\t\t\t\t\t-- Remove Clearing Document\n\t\t| ('^Reverse Invoice$')\t\t\t\t\t\t\t\t\t-- Reverse Invoice\n\t\t| ('^Reverse Invoice Contract Account$')\t\t\t\t-- Reverse Invoice Contract Account\n\t\t| ('^Reverse Invoice in VIM$')\t\t\t\t\t\t\t-- Reverse Invoice in VIM\n\t\t| ('^Reverse Post BE Doc No Grp$')\t\t\t\t\t    -- Reverse Post BE Doc No Grp\n\t\t| ('^Reverse Post BE Doc No Grpc AccGrp$')\t\t    -- Reverse Post BE Doc No Grpc AccGrp\n\t\t| ('^Reverse Post BE Lam Doituong$')\t\t\t\t\t-- Reverse Post BE Lam Doituong\n\t\t| ('^Reverse Post BE Voucher$')\t\t\t\t\t\t\t-- Reverse Post BE Voucher\n\t\t| ('^Reverse Post Car Asset$')\t\t\t\t\t\t\t-- Reverse Post Car Asset\n\t \t| ('^Reverse Post CAR Asset Transfer$')\t\t\t\t-- Reverse Post CAR Asset Transfer\n\t \t| ('^Reverse Post Car Other$')\t\t\t\t\t\t\t-- Reverse Post Car Other\n\t \t| ('^Reverse Post Car Sub Asset$')\t\t\t\t\t\t-- Reverse Post Car Sub Asset\n\t \t| ('^Reverse Post Cash Journal$')\t\t\t\t\t\t-- Reverse Post Cash Journal\n\t \t| ('^Reverse Post Functional Area$')\t\t\t\t\t-- Reverse Post Functional Area\n\t \t| ('^Reverse Post GL Document$')\t\t\t\t\t\t-- Reverse Post GL Document\n\t \t| ('^Reverse Post Material Doc$')\t\t\t\t\t\t-- Reverse Post Material Doc\n\t \t| ('^Reverse Post Payment FI$')\t\t\t\t\t\t\t-- Reverse Post Payment FI\n\t \t| ('^Reverse Post Vendor Doc to FI$')\t\t\t\t\t-- Reverse Post Vendor Doc to FI\n\t \t| ('^Reverse Post Vendor Invoice$')\t\t\t\t\t\t-- Reverse Post Vendor Invoice\n\t \t| ('^Tolerances invoice reversal$')\t\t\t\t\t\t-- Tolerances invoice reversal\n\t \t| ('^Transfer BigGL GR/IR$')\t\t\t\t\t\t\t\t-- Transfer BigGL GR/IR\n\t \t| ('^Transfer FI Vendor Down Payment$')\t\t\t\t\t-- Transfer FI Vendor Down Payment\n\t \t| ('^Transfer FI Vendor Down Payment Checklist$')\t-- Transfer FI Vendor Down Payment Checklist\n\t \t| ('^Transfer GL Doc to Fi Doc$')\t\t\t\t\t\t-- Transfer GL Doc to Fi Doc\n\t\t| ('^Write-off of vendor open items$') \t\t\t-- Write-off of vendor open items\n\t\t| ('^Write-off of vendor open items (FM)') \t\t-- Write-off of vendor open items (FM)\n\t\t| ('^Write-off vendor open items FM Cluster$')\t\t-- Write-off vendor open items FM Cluster\n\t\t| ('^Write-off vendor open items FM Fd Res$')\t\t-- Write-off vendor open items FM Fd Res\n\t\t| ('^Write-off vendor open items FM Fund$')\t\t\t-- Write-off vendor open items FM Fund\n\t\t| ('^Write-off vendor open items FM Fd Res GR/IR$')\t\t-- Write-off vendor open items FM Fd Res GR/IR\n\t\t| ('^Write-off vendor open items FM Fund GR/IR$')\t\t\t-- Write-off vendor open items FM Fund GR/IR\n\t\t| ('^Write-off vendor open items FM FuncArea GR/IR$')\t\t-- Write-off vendor open items FM FuncArea GR/IR\n\t\t| ('^Write-off vendor open items FM FuncArea Rel$')\t\t-- Write-off vendor open items FM FuncArea Rel\n\t\t| ('^Write-off vendor open items (GR/IR)')\t\t\t\t\t-- Write-off vendor open items (GR/IR)\n\t\t| ('^Write-off vendor open items (Service)')\t\t\t\t-- Write-off vendor open items (Service)\n\t\t| ('^Write-off vendor open items FM Cluster GR/IR$')\t\t\t-- Write-off vendor open items FM Cluster GR/IR\n\t\t| ('^Write-off vendor open items FM Fd Res GR/IR$')\t\t-- Write-off vendor open items FM Fd Res GR/IR\n\t\t| ('^Write-off vendor open items FM Fund GR/IR$')\t\t\t-- Write-off vendor open items FM Fund GR/IR\n\t\t| ('^Write-off vendor open items FM FuncArea GR/IR$')\t\t-- Write-off vendor open items FM FuncArea GR/IR\n )\n))\n\n* 100 AS \"Indicator: Clearance Rate of Invoice\"\n\nFROM \"signavio-94bckwa-9v324j\"\nWHERE\n--Filters out Invoices without Status changes\n(event_name IN  ('Set Status Cleared Item' ,'Set Status Cleared','Set Status payment Order',\n 'Set Status Recd Partial Payment','Set Status Recd','Set Status Rejected','Set Status Payment advised to Vendor',\n 'Set Status Approved for Payment','Set Status Recd LR','Set Status in Process Invoice','Set Status Deleted')) )",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE \n    (\n \t \t \n \t \t(SELECT FIRST(event_name) FILTER (\n \t \t \tWHERE event_name IN ('Clear Invoice')\n \t \t \t ))\n \t \t \n \t ) IS NOT NULL\n    )\n) \n/ COUNT (CASE_ID) FILTER (\n\tWHERE EVENT_NAME MATCHES(\n\t\t('^Dunning - Add fee$')\t\t\t-- Dunning - Add fee\n\t\t| ('^Dunning - Block invoice$')\t\t-- Dunning - Block invoice\n\t\t| ('^Dunning - Change data$')\t\t-- Dunning - Change data\n\t\t| ('^Dunning - Change level$')\t\t-- Dunning - Change level\n\t\t| ('^Dunning - Create case$')\t\t-- Dunning - Create case\n\t\t| ('^Dunning - Form Dunning Notice$')\t-- Dunning - Form Dunning Notice\n\t\t| ('^Dunning - Idea collection$')\t-- Dunning - Idea collection\n\t\t| ('^Dunning - Post Dunning$')\t\t-- Dunning - Post Dunning\n\t\t| ('^Dunning - Post form$')\t\t-- Dunning - Post form\n\t\t| ('^Dunning - Remove block$')\t\t-- Dunning - Remove block\n\t\t| ('^Dunning - Set eligible$')\t\t-- Dunning - Set eligible\n\t\t| ('^Dunning - Unset eligible$')\t-- Dunning - Unset eligible\n\t\t| ('^Payment - Post payment$')\t\t-- Payment - Post payment\n\t\t| ('^Payment at due date$')\t\t\t-- Payment at due date\n\t\t| ('^Payment different payment terms$')\t\t-- Payment different payment terms\n\t\t| ('^Payment Post WAT Document$')\t\t\t-- Payment Post WAT Document\n\t\t| ('^Payment Post WHT Document$')\t\t\t-- Payment Post WHT Document\n\t\t| ('^Post Incoming Credit Memo$')\t\t\t\t\t-- Post Incoming Credit Memo\n\t\t| ('^Registration of invoice$')\t\t\t\t\t\t-- Registration of invoice\n\t\t| ('^Registration of supplier invoice FI$')\t\t\t-- Registration of supplier invoice FI\n\t\t| ('^Release invoice$')\t\t\t\t\t\t\t\t\t-- Release invoice\n\t\t| ('^Remove Clearing Document$')\t\t\t\t\t\t-- Remove Clearing Document\n\t\t| ('^Reverse Invoice$')\t\t\t\t\t\t\t\t\t-- Reverse Invoice\n\t\t| ('^Reverse Invoice Contract Account$')\t\t\t\t-- Reverse Invoice Contract Account\n\t\t| ('^Reverse Invoice in VIM$')\t\t\t\t\t\t\t-- Reverse Invoice in VIM\n\t\t| ('^Reverse Post BE Doc No Grp$')\t\t\t\t\t    -- Reverse Post BE Doc No Grp\n\t\t| ('^Reverse Post BE Doc No Grpc AccGrp$')\t\t    -- Reverse Post BE Doc No Grpc AccGrp\n\t\t| ('^Reverse Post BE Lam Doituong$')\t\t\t\t\t-- Reverse Post BE Lam Doituong\n\t\t| ('^Reverse Post BE Voucher$')\t\t\t\t\t\t\t-- Reverse Post BE Voucher\n\t\t| ('^Reverse Post Car Asset$')\t\t\t\t\t\t\t-- Reverse Post Car Asset\n\t \t| ('^Reverse Post CAR Asset Transfer$')\t\t\t\t-- Reverse Post CAR Asset Transfer\n\t \t| ('^Reverse Post Car Other$')\t\t\t\t\t\t\t-- Reverse Post Car Other\n\t \t| ('^Reverse Post Car Sub Asset$')\t\t\t\t\t\t-- Reverse Post Car Sub Asset\n\t \t| ('^Reverse Post Cash Journal$')\t\t\t\t\t\t-- Reverse Post Cash Journal\n\t \t| ('^Reverse Post Functional Area$')\t\t\t\t\t-- Reverse Post Functional Area\n\t \t| ('^Reverse Post GL Document$')\t\t\t\t\t\t-- Reverse Post GL Document\n\t \t| ('^Reverse Post Material Doc$')\t\t\t\t\t\t-- Reverse Post Material Doc\n\t \t| ('^Reverse Post Payment FI$')\t\t\t\t\t\t\t-- Reverse Post Payment FI\n\t \t| ('^Reverse Post Vendor Doc to FI$')\t\t\t\t\t-- Reverse Post Vendor Doc to FI\n\t \t| ('^Reverse Post Vendor Invoice$')\t\t\t\t\t\t-- Reverse Post Vendor Invoice\n\t \t| ('^Tolerances invoice reversal$')\t\t\t\t\t\t-- Tolerances invoice reversal\n\t \t| ('^Transfer BigGL GR/IR$')\t\t\t\t\t\t\t\t-- Transfer BigGL GR/IR\n\t \t| ('^Transfer FI Vendor Down Payment$')\t\t\t\t\t-- Transfer FI Vendor Down Payment\n\t \t| ('^Transfer FI Vendor Down Payment Checklist$')\t-- Transfer FI Vendor Down Payment Checklist\n\t \t| ('^Transfer GL Doc to Fi Doc$')\t\t\t\t\t\t-- Transfer GL Doc to Fi Doc\n\t\t| ('^Write-off of vendor open items$') \t\t\t-- Write-off of vendor open items\n\t\t| ('^Write-off of vendor open items (FM)') \t\t-- Write-off of vendor open items (FM)\n\t\t| ('^Write-off vendor open items FM Cluster$')\t\t-- Write-off vendor open items FM Cluster\n\t\t| ('^Write-off vendor open items FM Fd Res$')\t\t-- Write-off vendor open items FM Fd Res\n\t\t| ('^Write-off vendor open items FM Fund$')\t\t\t-- Write-off vendor open items FM Fund\n\t\t| ('^Write-off vendor open items FM Fd Res GR/IR$')\t\t-- Write-off vendor open items FM Fd Res GR/IR\n\t\t| ('^Write-off vendor open items FM Fund GR/IR$')\t\t\t-- Write-off vendor open items FM Fund GR/IR\n\t\t| ('^Write-off vendor open items FM FuncArea GR/IR$')\t\t-- Write-off vendor open items FM FuncArea GR/IR\n\t\t| ('^Write-off vendor open items FM FuncArea Rel$')\t\t-- Write-off vendor open items FM FuncArea Rel\n\t\t| ('^Write-off vendor open items (GR/IR)')\t\t\t\t\t-- Write-off vendor open items (GR/IR)\n\t\t| ('^Write-off vendor open items (Service)')\t\t\t\t-- Write-off vendor open items (Service)\n\t\t| ('^Write-off vendor open items FM Cluster GR/IR$')\t\t\t-- Write-off vendor open items FM Cluster GR/IR\n\t\t| ('^Write-off vendor open items FM Fd Res GR/IR$')\t\t-- Write-off vendor open items FM Fd Res GR/IR\n\t\t| ('^Write-off vendor open items FM Fund GR/IR$')\t\t\t-- Write-off vendor open items FM Fund GR/IR\n\t\t| ('^Write-off vendor open items FM FuncArea GR/IR$')\t\t-- Write-off vendor open items FM FuncArea GR/IR\n )\n))\n\n* 100 AS \"Indicator: Clearance Rate of Invoice\"\n\nFROM \"signavio-94bckwa-9v324j\"\nWHERE\n--Filters out Invoices without Status changes\n(event_name IN  ('Set Status Cleared Item' ,'Set Status Cleared','Set Status payment Order',\n 'Set Status Recd Partial Payment','Set Status Recd','Set Status Rejected','Set Status Payment advised to Vendor',\n 'Set Status Approved for Payment','Set Status Recd LR','Set Status in Process Invoice','Set Status Deleted')) )"
    },
    {
        "filename": "cbc696ff54",
        "split": "test",
        "name": "Overdue Receivables",
        "query": "SELECT \n \"AR_CustomerName\" ,\n\"Overdue Category\", \ncount(\"ARUniqueKey\" ) as \"#Receivables\"\nFROM FLATTEN (\"defaultview-197\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate \n \n GROUP BY 1,2\n ORDER BY  3 DESC\nLIMIT 20",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the customer name, overdue category, and count of receivables from the 'defaultview-197' table where the net due date is not null, event name is 'Create Accounts Receivable', clearing date is null, and the current date is greater than or equal to the net due date. Group the results by customer name and overdue category, order by the count of receivables in descending order, and limit the results to 20.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Clearing Doc. Involved Counterparty (Name)\" AS \"Customer Name\", \nCASE \n    WHEN \"Net Due Date Overdue Category\" = '0-30 Days' THEN '0-30 Days'\n    WHEN \"Net Due Date Overdue Category\" = '31-60 Days' THEN '31-60 Days'\n    WHEN \"Net Due Date Overdue Category\" = '61-90 Days' THEN '61-90 Days'\n    WHEN \"Net Due Date Overdue Category\" = '91-120 Days' THEN '91-120 Days'\n    WHEN \"Net Due Date Overdue Category\" = '121-180 Days' THEN '121-180 Days'\n    WHEN \"Net Due Date Overdue Category\" = '181-365 Days' THEN '181-365 Days'\n    WHEN \"Net Due Date Overdue Category\" = '> 365' THEN '> 365'\n    ELSE  'Not Due'\nEND AS \"Overdue Category\",\n\nCOUNT(\"Customer Master: Paying Company Code\") as \"Count of Receivables\"\nFROM FLATTEN (\"defaultview-197\")\nWHERE \"Net Due Date\" IS NOT NULL\n    AND EVENT_NAME='Create Accounts Receivable'\n    AND \"Clearing Date\" IS NULL \n\tAND (DATE_TRUNC('day', NOW())  >= \"Net Due Date\")     \t\nGROUP BY 1,2\nORDER BY 3 desc \nLIMIT 20\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Clearing Doc. Involved Counterparty (Name)\" AS \"Customer Name\", \nCASE \n    WHEN \"Net Due Date Overdue Category\" = '0-30 Days' THEN '0-30 Days'\n    WHEN \"Net Due Date Overdue Category\" = '31-60 Days' THEN '31-60 Days'\n    WHEN \"Net Due Date Overdue Category\" = '61-90 Days' THEN '61-90 Days'\n    WHEN \"Net Due Date Overdue Category\" = '91-120 Days' THEN '91-120 Days'\n    WHEN \"Net Due Date Overdue Category\" = '121-180 Days' THEN '121-180 Days'\n    WHEN \"Net Due Date Overdue Category\" = '181-365 Days' THEN '181-365 Days'\n    WHEN \"Net Due Date Overdue Category\" = '> 365' THEN '> 365'\n    ELSE  'Not Due'\nEND AS \"Overdue Category\",\n\nCOUNT(\"Customer Master: Paying Company Code\") as \"Count of Receivables\"\nFROM FLATTEN (\"defaultview-197\")\nWHERE \"Net Due Date\" IS NOT NULL\n    AND EVENT_NAME='Create Accounts Receivable'\n    AND \"Clearing Date\" IS NULL \n\tAND (DATE_TRUNC('day', NOW())  >= \"Net Due Date\")     \t\nGROUP BY 1,2\nORDER BY 3 desc \nLIMIT 20\n"
    },
    {
        "filename": "c6d0126e8f",
        "split": "test",
        "name": "Monthly average number of reworks per case",
        "query": "SELECT \nDATE_TRUNC('month', \n                   (SELECT FIRST(end_time) \n                    WHERE event_name \n                    IN ('Change Status to Closed')\n                   )\n          ) AS \"Month\",\nAVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1 AS \"Rework ratio per case\" \nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1\n  AND \"ResolutionStatus\" IS NOT NULL\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the average rework ratio per case for each month. Rework ratio is calculated by subtracting 1 from the count of events with name 'Change Status to In Progress', divided by the count of events with name 'Change Status to Closed'. Filter the results to only include months with more than one case and where the resolution status is not null.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG (\"case_rework_ratio\") AS \"Avg. Rework Ratio per Month\",\n    DATE_TRUNC('month', MAX (\"end_time\")) AS \"Months\"\n            \nFROM\n(SELECT\n\"CASE_ID\",\n(\"event_l_\"count_event_name\"-\"event_f_\"count_event_name\") / NULLIF (\"event_l_\"count_event_name\", 0) AS \"case_rework_ratio\",\n(end_time) AS \"end_time\"\nFROM\n(\nSELECT\n\"CASE_ID\",\nCOUNT (EVENT_NAME) FILTER (\n\tWHERE (EVENT_NAME IN ('Change Status to In Progress')) ) AS\n\"event_f_\"count_event_name\",\nCOUNT (EVENT_NAME) AS \"event_l_\"count_event_name\",\nFIRST(end_time) AS end_time\nFROM FLATTEN(\"defaultview-327\")\nWHERE \"resolution status\" IS NOT NULL\nORDER BY 1 ASC\n) AS sub1\n) AS sub2\nGROUP BY 2  \nHAVING COUNT (\"CASE_ID\") > 1\nORDER BY 2 ASC NULLS LAST\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG (\"case_rework_ratio\") AS \"Avg. Rework Ratio per Month\",\n    DATE_TRUNC('month', MAX (\"end_time\")) AS \"Months\"\n            \nFROM\n(SELECT\n\"CASE_ID\",\n(\"event_l_\"count_event_name\"-\"event_f_\"count_event_name\") / NULLIF (\"event_l_\"count_event_name\", 0) AS \"case_rework_ratio\",\n(end_time) AS \"end_time\"\nFROM\n(\nSELECT\n\"CASE_ID\",\nCOUNT (EVENT_NAME) FILTER (\n\tWHERE (EVENT_NAME IN ('Change Status to In Progress')) ) AS\n\"event_f_\"count_event_name\",\nCOUNT (EVENT_NAME) AS \"event_l_\"count_event_name\",\nFIRST(end_time) AS end_time\nFROM FLATTEN(\"defaultview-327\")\nWHERE \"resolution status\" IS NOT NULL\nORDER BY 1 ASC\n) AS sub1\n) AS sub2\nGROUP BY 2  \nHAVING COUNT (\"CASE_ID\") > 1\nORDER BY 2 ASC NULLS LAST\n"
    },
    {
        "filename": "1f62e5a6ab",
        "split": "test",
        "name": "Average number of reworks per case",
        "query": "\nSELECT\nAVG((SELECT COUNT(event_name) - COUNT(DISTINCT event_name)))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average of the difference between the total count of event_name and the count of distinct event_name in the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG((SELECT count(event_name) FILTER(WHERE \"event_type\" = 'end') - count(DISTINCT event_name)))\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG((SELECT count(event_name) FILTER(WHERE \"event_type\" = 'end') - count(DISTINCT event_name)))\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "0d0de12fc7",
        "split": "test",
        "name": "Invoice Open Amount",
        "query": "SELECT SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\" ) \n+ SUM(\"AR_ClearedAmountInCompanyCodeCurrency\" )\nFROM \"defaultview-197\"\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of AR_InvoicedAmountInCompanyCodeCurrency and AR_ClearedAmountInCompanyCodeCurrency columns from the defaultview-197 table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"AR_InvoicedAmountInCompanyCodeCurrency\"),\nSUM(\"AR_ClearedAmountInCompanyCodeCurrency\")\nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"AR_InvoicedAmountInCompanyCodeCurrency\"),\nSUM(\"AR_ClearedAmountInCompanyCodeCurrency\")\nFROM \"defaultview-197\""
    },
    {
        "filename": "6777a222c9",
        "split": "test",
        "name": "Rate of Cases executed in a given timeframe",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (\n    \tWHERE (SELECT LAST (END_TIME) FILTER (\n        \tWHERE EVENT_NAME IN ('Clear Invoice')) \n\t- FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))) \n        \t< DURATION '14days') \n\t/ COUNT (CASE_ID) * 100\n    \nFROM \"defaultview-225\" ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each CASE_ID in the 'defaultview-225' table, count the number of instances where the END_TIME of an event with EVENT_NAME = 'Clear Invoice' minus the END_TIME of the previous event with EVENT_NAME = 'Post Invoice' is less than 14 days, and then divide that count by the total number of CASE_IDs and multiply by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE\n WHEN (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Post Invoice') < DURATION '14days' THEN 1\nELSE NULL\nEND\n) / COUNT (CASE_ID) *100\nFROM \"defaultview-225\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE\n WHEN (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Post Invoice') < DURATION '14days' THEN 1\nELSE NULL\nEND\n) / COUNT (CASE_ID) *100\nFROM \"defaultview-225\"\n"
    },
    {
        "filename": "ec2c5da4a8",
        "split": "test",
        "name": "<<Placeholder>>",
        "query": "SELECT MIN(1) FROM \"defaultview-124\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the minimum value of column 1 from the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  MIN(\"COLUMN_1\")\nFROM\n  \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  MIN(\"COLUMN_1\")\nFROM\n  \"defaultview-124\"\n                "
    },
    {
        "filename": "a77c1ac911",
        "split": "test",
        "name": "SOL-1742 Cases at compliance risk",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (NOT event_name MATCHES('Create Invoice' \t~> 'Post Invoice' \t~> 'Clear Invoice' \t~> 'Due Date passed')\n\tAND (SELECT BOOL_OR( event_name IN ('Post Invoice')))\n\tAND (SELECT\n\t\tLAST(end_time) FILTER (WHERE event_name IN ('Clear Invoice'))\n\t\t-\n\t\tFIRST(end_time) FILTER (WHERE event_name IN ('Create Invoice'))\n\t) < DURATION '25days'\n\t)\n)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of case_id where the event_name does not match the sequence 'Create Invoice' followed by 'Post Invoice' followed by 'Clear Invoice' followed by 'Due Date passed', and the existence of 'Post Invoice' event is true, and the time difference between the last 'Clear Invoice' event and the first 'Create Invoice' event is less than 25 days.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) Filter(\n\tWHERE event_name NOT MATCHES('Create Invoice' \n   \t\t~> 'Post Invoice'\n       \t~> 'Clear Invoice'\n     \t~> 'Due Date passed')\n    AND\n    event_name MATCHES('Post Invoice')\n    AND(\"Last clear invoice Date\"\n\t - \"First clear invoice Date\") \n           \t\t\t\t\t\t< DURATION '25days'\n        )\nAS \"# Cases\",\nCOUNT(case_id) Filter(\n\tWHERE event_name NOT MATCHES('Create Invoice' \n   \t\t~> 'Post Invoice'\n       \t~> 'Clear Invoice'\n     \t~> 'Due Date passed')\n    AND\n    event_name MATCHES('Post Invoice')\n    AND(\"Last clear invoice Date\"\n\t - \"First clear invoice Date\") \n           \t\t\t\t\t\t> DURATION '25days'\n        )\nAS \"# Cases long Repeated Inv\",\n(SELECT COUNT(case_id) Filter(\n\tWHERE event_name NOT MATCHES('Create Invoice' \n   \t\t~> 'Post Invoice'\n       \t~> 'Clear Invoice'\n     \t~> 'Due Date passed')\n    AND\n    event_name MATCHES('Post Invoice')\n    AND(\"Last clear invoice Date\"\n\t - \"First clear invoice Date\") \n           \t\t\t\t\t\t> DURATION '25days'\n        )\n)\n    /\n\t (COUNT(case_id)) * 100\n\tAS \"# Cases % Repeated Inv long\"\nFROM \"Invoice BE - Event\"\nWHERE (event_name MATCHES ('Due Date passed') )",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) Filter(\n\tWHERE event_name NOT MATCHES('Create Invoice' \n   \t\t~> 'Post Invoice'\n       \t~> 'Clear Invoice'\n     \t~> 'Due Date passed')\n    AND\n    event_name MATCHES('Post Invoice')\n    AND(\"Last clear invoice Date\"\n\t - \"First clear invoice Date\") \n           \t\t\t\t\t\t< DURATION '25days'\n        )\nAS \"# Cases\",\nCOUNT(case_id) Filter(\n\tWHERE event_name NOT MATCHES('Create Invoice' \n   \t\t~> 'Post Invoice'\n       \t~> 'Clear Invoice'\n     \t~> 'Due Date passed')\n    AND\n    event_name MATCHES('Post Invoice')\n    AND(\"Last clear invoice Date\"\n\t - \"First clear invoice Date\") \n           \t\t\t\t\t\t> DURATION '25days'\n        )\nAS \"# Cases long Repeated Inv\",\n(SELECT COUNT(case_id) Filter(\n\tWHERE event_name NOT MATCHES('Create Invoice' \n   \t\t~> 'Post Invoice'\n       \t~> 'Clear Invoice'\n     \t~> 'Due Date passed')\n    AND\n    event_name MATCHES('Post Invoice')\n    AND(\"Last clear invoice Date\"\n\t - \"First clear invoice Date\") \n           \t\t\t\t\t\t> DURATION '25days'\n        )\n)\n    /\n\t (COUNT(case_id)) * 100\n\tAS \"# Cases % Repeated Inv long\"\nFROM \"Invoice BE - Event\"\nWHERE (event_name MATCHES ('Due Date passed') )"
    },
    {
        "filename": "27e7e22e07",
        "split": "test",
        "name": "Payment Terms Differences where PO is better",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n\t\t< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \n\tELSE \"PO Cash Discount Days 1\" END))\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of case_id from the 'defaultview-57' table where the value in the 'Last FI Invoice Item Cash Discount Days 1' column is less than the value in the 'PO Cash Discount Days 1' column, or 0 if 'PO Cash Discount Days 1' is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE \"Last FI Invoice Item Cash Discount Days 1\" < \n(CASE WHEN \"PO Cash Discount Days 1\" IS NULL \n\t\tTHEN 0 ELSE \"PO Cash Discount Days 1\" END))) AS \"Number of Cases\"\nFROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE \"Last FI Invoice Item Cash Discount Days 1\" < \n(CASE WHEN \"PO Cash Discount Days 1\" IS NULL \n\t\tTHEN 0 ELSE \"PO Cash Discount Days 1\" END))) AS \"Number of Cases\"\nFROM \"defaultview-57\""
    },
    {
        "filename": "fd2419de53",
        "split": "test",
        "name": "Open Overdue Invoices by Company Code (Top-10)",
        "query": "SELECT \n\"Inv. Company Code Text\" AS \"Company Code Name\"\n,SUM (\"Inv. Converted USD Amount\") AS \"Invoice Amount in $\"\n,COUNT(case_id) AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n  AND \"Last Inv. Item Due Date\" < DATE_TRUNC('day', NOW()) \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the Company Code Name, Invoice Amount in $, and No. of Invoices from the 'defaultview-225' table where the Last Inv. Item Clearing Date is null and the Last Inv. Item Due Date is before the current day, group the results by Company Code Name, order them by Invoice Amount in $ descending, and limit the output to 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Company Code Name\"\n,SUM(\"Inv `2nd` If Item `2nd` If Clearing Amount in LC\")\nAS \"Invoice Amount in $\"\n,COUNT(\"Last Inv. Item Id\") AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nWHERE\n\t(\n\t\t\"Last Inv. Item Clearing Date\" IS NULL \n        AND \"Last Inv. Item Due Date\" <= DATE_TRUNC('day', NOW())\n\t)\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n                ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Company Code Name\"\n,SUM(\"Inv `2nd` If Item `2nd` If Clearing Amount in LC\")\nAS \"Invoice Amount in $\"\n,COUNT(\"Last Inv. Item Id\") AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nWHERE\n\t(\n\t\t\"Last Inv. Item Clearing Date\" IS NULL \n        AND \"Last Inv. Item Due Date\" <= DATE_TRUNC('day', NOW())\n\t)\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n                "
    },
    {
        "filename": "05eb19e4de",
        "split": "test",
        "name": "Number of idle cases",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOW() - (SELECT LAST(end_time)) > DURATION '21days'\n\t\tAND (SELECT FIRST(event_name) FILTER (\n\t\t\tWHERE event_name IN ('Update Opportunity Stage to: Closed Won',\n'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n'Update Opportunity Stage to: Closed Lost',\n'Update Opportunity Stage to: Dead',\n'Update Opportunity Stage to: Dead - No Opportunity',\n'Update Opportunity Stage to: Dead - No Decision',\n'Update Opportunity Stage to: Dead - Duplicate',\n'Update Opportunity Stage to: 00 Dead - Lost',\n'Update Lead Status to: Archive',\n'Reject Quote'))) IS NULL\n   )\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of case_id where the last updated time is more than 21 days ago, and the first event name is not in the list of specified values (Update Opportunity Stage to: Closed Won, Update Opportunity Stage to: 06 Closed Won (Onboarding), Update Opportunity Stage to: Closed Lost, Update Opportunity Stage to: Dead, Update Opportunity Stage to: Dead - No Opportunity, Update Opportunity Stage to: Dead - No Decision, Update Opportunity Stage to: Dead - Duplicate, Update Opportunity Stage to: 00 Dead - Lost, Update Lead Status to: Archive, Reject Quote) in the defaultview-545 table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n        COUNT(case_id)\n        \nFROM defaultview-545\n        \nWHERE DATEDIFF(day, (SELECT LAST (END_TIME))), NOW()) > 21\nAND         FIRST(event_name) NOT IN ( 'Update Opportunity Stage to: Closed Won' ,'Update Opportunity Stage to: 06 Closed Won (Onboarding)' ,'Update Opportunity Stage to: Closed Lost' ,'Update Opportunity Stage to: Dead' ,'Update Opportunity Stage to: Dead - No Opportunity' ,'Update Opportunity Stage to: Dead - No Decision' ,'Update Opportunity Stage to: Dead - Duplicate' ,'Update Opportunity Stage to: 00 Dead - Lost' ,'Update Lead Status to: Archive' ,'Reject Quote')\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n        COUNT(case_id)\n        \nFROM defaultview-545\n        \nWHERE DATEDIFF(day, (SELECT LAST (END_TIME))), NOW()) > 21\nAND         FIRST(event_name) NOT IN ( 'Update Opportunity Stage to: Closed Won' ,'Update Opportunity Stage to: 06 Closed Won (Onboarding)' ,'Update Opportunity Stage to: Closed Lost' ,'Update Opportunity Stage to: Dead' ,'Update Opportunity Stage to: Dead - No Opportunity' ,'Update Opportunity Stage to: Dead - No Decision' ,'Update Opportunity Stage to: Dead - Duplicate' ,'Update Opportunity Stage to: 00 Dead - Lost' ,'Update Lead Status to: Archive' ,'Reject Quote')\n"
    },
    {
        "filename": "40f1d116ed",
        "split": "test",
        "name": "Invoice Open Overdue Amount",
        "query": "SELECT \nSUM(\"AmountInGlobalCurrency\" )  \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND NOW() >= NetDueDate )\nAS \"Amount\"\nFROM  FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the sum of AmountInGlobalCurrency for all entries in the defaultview-222 table where the EventName is 'Create Accounts Receivable', ClearingJournalEntry is null, and the current date is greater than or equal to the NetDueDate.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(AmountInGlobalCurrency) FROM \"defaultview-222\" \nWhere EventName in \n('Create Accounts Receivable') \nAnd\nClearingJournalEntry is null\nAnd (SELECT Today() )\n>= NetDueDate",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(AmountInGlobalCurrency) FROM \"defaultview-222\" \nWhere EventName in \n('Create Accounts Receivable') \nAnd\nClearingJournalEntry is null\nAnd (SELECT Today() )\n>= NetDueDate"
    },
    {
        "filename": "dbf5719713",
        "split": "test",
        "name": "Last PO Terms of Payment Key",
        "query": "SELECT \"Last PO Terms of Payment Key\" AS \"Last PO Terms of Payment Key\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the last payment terms for each payment key, and count the number of invoices for each payment key, sorted in descending order by the number of invoices.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tLAST(\"Payment Terms\") AS \"Last Payment Terms\", \n    COUNT(\"Payment Terms\") AS \"# Invoices\"\n    , \"Lenistics-EndInvoicePaymentId\" AS \"Payment Key #\"\nFROM \"Lenistics-Process\"\nORDER BY 2 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tLAST(\"Payment Terms\") AS \"Last Payment Terms\", \n    COUNT(\"Payment Terms\") AS \"# Invoices\"\n    , \"Lenistics-EndInvoicePaymentId\" AS \"Payment Key #\"\nFROM \"Lenistics-Process\"\nORDER BY 2 DESC"
    },
    {
        "filename": "3ca9a3a9b0",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference grouped by Plant",
        "query": "SELECT COUNT (CASE_ID), \"Plant\"\nFROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL\nGROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of unique CASE_IDs from the 'defaultview-183' table where the 'Actual Finish Date' matches the 'Scheduled Finish Date' and 'Planned Order Number' is null. Group the results by the 'Plant' column and order them in descending order by the count of CASE_IDs. Limit the results to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT CASE_ID) AS \"Count of Orders\",\n\"Plant\"\nFROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\"\nAND \"Planned Order Number\" IS NULL\nGROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT CASE_ID) AS \"Count of Orders\",\n\"Plant\"\nFROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\"\nAND \"Planned Order Number\" IS NULL\nGROUP BY 2\nORDER BY 1 desc\nLIMIT 10"
    },
    {
        "filename": "efb87ebe9e",
        "split": "test",
        "name": "Market forecast override rate",
        "query": "SELECT\nCOUNT(case_id) FILTER(\n\tWHERE(\n\t\t(SELECT FIRST(\"end_time\")\n\t\t\tWHERE event_name IN ('Review Marketing Forecast') \n\t\t)IS NOT NULL\n\t)\n)\n/\nCOUNT(case_id) FILTER(\n\tWHERE \"Marketing Forecast Qty\" <> 0\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count of case_id where end_time is not null and Marketing Forecast Qty is not zero, calculated as percentage of total count of case_id.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM (COUNT (CASE_ID)) FILTER (WHERE \"Marketing Forecast End Time\" IS NOT NULL) /\nSUM (COUNT (CASE_ID)) FILTER (WHERE \"Marketing Actual End Time\" IS NOT NULL AND \"Marketing Forecast Qty\" != 0) * 100\nFROM \"defaultview-146\"\nWHERE BreadcrumbName MATCHES \n('Marketing Reconciliation Receive Order Confirmation'\n'~>' Any \n'Marketing Reconciliation MO Creation' \n'~>' Any ('Marketing Reconciliation MO Creation')) AS \"Received Confirm\"\nAND BreadcrumbName MATCHES ('Order Flights Delete Order Item' '||>' \n('Order Flights Create Order Item')) AS \"Create2SecondReceiveOrder\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM (COUNT (CASE_ID)) FILTER (WHERE \"Marketing Forecast End Time\" IS NOT NULL) /\nSUM (COUNT (CASE_ID)) FILTER (WHERE \"Marketing Actual End Time\" IS NOT NULL AND \"Marketing Forecast Qty\" != 0) * 100\nFROM \"defaultview-146\"\nWHERE BreadcrumbName MATCHES \n('Marketing Reconciliation Receive Order Confirmation'\n'~>' Any \n'Marketing Reconciliation MO Creation' \n'~>' Any ('Marketing Reconciliation MO Creation')) AS \"Received Confirm\"\nAND BreadcrumbName MATCHES ('Order Flights Delete Order Item' '||>' \n('Order Flights Create Order Item')) AS \"Create2SecondReceiveOrder\""
    },
    {
        "filename": "bead32ea3f",
        "split": "test",
        "name": "$ of Invoices with its PT better than Vendor Master data",
        "query": "SELECT SUM(\"Inv. Converted USD Amount\") FILTER(\n\t\tWHERE (\"Last Inv. Item Cash Discount Days 1\") < \n    \t  (\"Last Inv. Item Vendor Master CD 1\") OR \n          (\"Last Inv. Item Cash Discount Days 2\") < \n    \t  (\"Last Inv. Item Vendor Master CD 2\") OR \n          (\"Last Inv. Item Net Payment Terms Period\") <\n          (\"Last Inv. Item Vendor Master NDD\"))\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the sum of the 'Inv. Converted USD Amount' column in the 'defaultview-225' table, filtered by the conditions: 'Last Inv. Item Cash Discount Days 1' is less than 'Last Inv. Item Vendor Master CD 1', or 'Last Inv. Item Cash Discount Days 2' is less than 'Last Inv. Item Vendor Master CD 2', or 'Last Inv. Item Net Payment Terms Period' is less than 'Last Inv. Item Vendor Master NDD'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tSUM(\"Inv. Converted USD Amount\") FILTER (\n    WHERE (\"Last Inv. Item Cash Discount Days 1\" < \n    \"Last Inv. Item Vendor Master CD 1\")\n    OR (\"Last Inv. Item Cash Discount Days 2\" < \n    \"Last Inv. Item Vendor Master CD 2\")\n    OR (\"Last Inv. Item Net Payment Terms Period\" < \n    \"Last Inv. Item Vendor Master NDD\")\n\t)\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tSUM(\"Inv. Converted USD Amount\") FILTER (\n    WHERE (\"Last Inv. Item Cash Discount Days 1\" < \n    \"Last Inv. Item Vendor Master CD 1\")\n    OR (\"Last Inv. Item Cash Discount Days 2\" < \n    \"Last Inv. Item Vendor Master CD 2\")\n    OR (\"Last Inv. Item Net Payment Terms Period\" < \n    \"Last Inv. Item Vendor Master NDD\")\n\t)\nFROM \"defaultview-225\""
    },
    {
        "filename": "e9674c4a5e",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of delivery item changes ",
        "query": "SELECT COUNT (\"event_name\") \n\tFILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n\t\t'Change Delivery%' OR event_name LIKE 'Update Delivery%') \n        AS created_with_dialog MATCHES (created_with_dialog))\n    ,\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nWHERE SalesDocCustomerCompany IS NOT NULL\nGROUP BY 2\nORDER BY 1 DESC\nLimit 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct event names that have 'Change Delivery' or 'Update Delivery%' in them, where the created_with_dialog flag matches, from the defaultview-290 table, grouped by SalesDocCustomerCompany, sorted in descending order by count, and limit the result to 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(distinct event_name)) as \"# Updates\", \"SalesDocCustomerCompany\"\nFROM FLATTEN(\"defaultview-290\")\nWHERE (event_name MATCHES ('Change Delivery') or event_name match  ('Update Delivery%'))\nAND created_with_dialog \nORDER BY 1 desc\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(distinct event_name)) as \"# Updates\", \"SalesDocCustomerCompany\"\nFROM FLATTEN(\"defaultview-290\")\nWHERE (event_name MATCHES ('Change Delivery') or event_name match  ('Update Delivery%'))\nAND created_with_dialog \nORDER BY 1 desc\nLIMIT 10"
    },
    {
        "filename": "a9ef667704",
        "split": "test",
        "name": "Average Payment Time",
        "query": "SELECT \nAVG (\"ClearingDate\"   - \"CreationDate\"  ) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \nAs \"AVG Clearing Time\"\nFROM FLATTEN(\"defaultview-222\")\nWHERE \"ClearingDate\" IS NOT NULL AND \"NetDueDate\" IS NOT NULL",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average clearing time for all clearing events. Clearing time is calculated by subtracting the creation date from the clearing date. The average is taken only for events where the event name contains the string 'Clear'. The results are filtered to only include rows where both the clearing date and net due date are not null.",
        "llm_gpt-35-turbo-0613_query": "SELECT avg(clearing_date - creation_date)\nFROM \"defaultview-235\"\nWHERE eventname LIKE '%Clear%' and \nclearing_date IS NOT NULL AND net_due_date IS NOT NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT avg(clearing_date - creation_date)\nFROM \"defaultview-235\"\nWHERE eventname LIKE '%Clear%' and \nclearing_date IS NOT NULL AND net_due_date IS NOT NULL"
    },
    {
        "filename": "0f07aff629",
        "split": "test",
        "name": "_Percentage of projects in execution",
        "query": "\nSELECT\n(\nCOUNT(case_id) FILTER (WHERE Project_StageText = 'In Execution')\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of cases in execution stage out of all cases, using data from the 'defaultview-197' table. The calculation is done by counting the number of case_id's where the Project_StageText is 'In Execution' and dividing it by the total number of case_id's, then multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE \"Project_StageText\" = 'In Execution')\n/ \nCOUNT(case_id)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (WHERE \"Project_StageText\" = 'In Execution')\n/ \nCOUNT(case_id)\n* 100\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "3f84ef5334",
        "split": "test",
        "name": "Early Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Due Date\" - \"Last Inv. Item Clearing Date\" > DURATION '5days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For the table 'defaultview-225', calculate the percentage of cases where the last inventory item due date is more than 5 days after the last inventory item clearing date. The calculation is done by dividing the count of cases that meet this condition by the total count of cases where the last inventory item clearing date is not null, and then multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  count(CASE_ID) FILTER (\n      WHERE (SELECT LAST (\"Inventory Item Due Date\") \n      \t\t\t\tWHERE \"Inventory Item Clearing Date\" IS NOT NULL)\n       \t \t- LAST (\"Inventory Item Clearing Date\") > DURATION '5day') \n        /count(CASE_ID) FILTER (\n     \tWHERE LAST (\"Inventory Item Clearing Date\") IS NOT NULL)\n     * 100\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  count(CASE_ID) FILTER (\n      WHERE (SELECT LAST (\"Inventory Item Due Date\") \n      \t\t\t\tWHERE \"Inventory Item Clearing Date\" IS NOT NULL)\n       \t \t- LAST (\"Inventory Item Clearing Date\") > DURATION '5day') \n        /count(CASE_ID) FILTER (\n     \tWHERE LAST (\"Inventory Item Clearing Date\") IS NOT NULL)\n     * 100\nFROM \"defaultview-225\""
    },
    {
        "filename": "cd37fa8683",
        "split": "test",
        "name": "Avg. Cycle Time (Create PO to Release PO)",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')\n- (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item'))\nAS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average cycle time for creating a PO item and releasing a PO. The cycle time is calculated by subtracting the first end time of the 'Create PO Item' event from the last end time of the 'Release PO' event. The calculation is performed on the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n\tAVG(\"lastend_createPOItem\" - \"firstend_releasePO\")\nFROM\n\t(\n\t\tSELECT\n\t\t\tFIRST (END_TIME) FILTER (\n\t\t\t\tWHERE EVENT_NAME IN ('Create PO Item')\n\t\t\t) OVER (PARTITION BY CASE_ID) AS \"firstend_createPOItem\",\n\t\t\tFIRST (END_TIME) FILTER (\n\t\t\t\tWHERE EVENT_NAME IN ('Release PO')\n\t\t\t) OVER (PARTITION BY CASE_ID) AS \"firstend_releasePO\",\n\t\t\tLAST (END_TIME) FILTER (\n\t\t\t\tWHERE EVENT_NAME IN ('Create PO Item')\n\t\t\t) OVER (PARTITION BY CASE_ID) AS \"lastend_createPOItem\"\n\t\tFROM\n\t\t\t(\n\t\t\t\tSELECT\n\t\t\t\t\t*,\n\t\t\t\t\tSUM (IS_CREATE_NEW_CASE) OVER (ORDER BY CASE_ID, END_TIME ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS \"NewCase\"\n\t\t\t\tFROM\n\t\t\t\t\t(\n\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\"CASE_ID\"\n                            , \"EVENT_NAME\" \n                            , \"END_TIME\" \n\n                            , CASE WHEN LAG(\"EVENT_NAME\", 1) OVER (PARTITION BY \"CASE_ID\" ORDER BY \"END_TIME\" ASC) \n                            \t\tIN ('Create PO Item' ) THEN 1 ELSE 0 END AS IS_CREATE_NEW_CASE\n\n\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\"CASE_ID\"\n\t\t\t\t\t\t\t\t\t,\"EVENT_NAME\"\n\t\t\t\t\t\t\t\t\t,\"END_TIME\"\n\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\t\tLAG(\"CASE_ID\", 1) OVER (PARTITION BY \"EVENT_ID\" ORDER BY \"EVENT_ID\") AS \"CASE_ID\"\n\t\t\t\t\t\t\t\t\t\t\t,CASE\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Create PO Item' ) THEN 'dpams1'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO (ME22N)' ) THEN 'dpams2'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Cond. (MEK2)' ) THEN 'dpams3'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO Order Text' ) THEN 'dpams4'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print the PO' ) THEN 'dpams5'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Create Delivery Note from PO' ) THEN 'dpams6'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO Account Assignment (ME22N)' ) THEN 'dpams7'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Generate PO via Request for Quotation (ME59N)' ) THEN 'dpams8'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Post Goods Issue' ) THEN 'dpams9'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Supplier Confirmation Before PO' ) THEN 'dpams10'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print PO Match Form' ) THEN 'dpams11'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('MRP List (MD04)' ) THEN 'dpams12'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Goods Receipt for Production Order' ) THEN 'dpams13'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Completion Confirmations for PO' ) THEN 'dpams14'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Process PP Orders KKA1' ) THEN 'dpams15'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Component (CA02)' ) THEN 'dpams16'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Release PO' ) THEN 'dpams17'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO Currency (ME22N)' ) THEN 'dpams18'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Calculate Planned PO Price' ) THEN 'dpams19'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save as Complete (IW38)' ) THEN 'dpams20'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Goods Receipt Store Order' ) THEN 'dpams21'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Release RFQ (ME29N)' ) THEN 'dpams22'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Convert TO WN' ) THEN 'dpams23'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save CO/PP Order as Complete' ) THEN 'dpams24'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Order (IA02)' ) THEN 'dpams25'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Confirm Production Order' ) THEN 'dpams26'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Subcontract Release (ME84)' ) THEN 'dpams27'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Archive Subsequent Documents' ) THEN 'dpams28'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save the TECO (IW42)' ) THEN 'dpams29'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Maintain Purchase Order Supplement (AUT02)' ) THEN 'dpams30'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Maintain Confirmation of PO' ) THEN 'dpams31'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Reject Confirmation of PO' ) THEN 'dpams32'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Release Purchase Requisition (ME55)' ) THEN 'dpams33'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Close Production Order' ) THEN 'dpams34'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Date Adjustment (MF50)' ) THEN 'dpams35'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Delete Subsequently Issued Documents' ) THEN 'dpams36'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Archive Original Document' ) THEN 'dpams37'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Calculate Targets' ) THEN 'dpams38'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save the Documents (IW38)' ) THEN 'dpams39'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Maintain Purchase Order Header Supplement (AUT02)' ) THEN 'dpams40'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Convert Planned Order to Production Order' ) THEN 'dpams41'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Enter Actual Data (IW41)' ) THEN 'dpams42'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save Operation' ) THEN 'dpams43'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Order Settlement, Full' ) THEN 'dpams44'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print Document' ) THEN 'dpams45'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print GR Slip' ) THEN 'dpams46'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Delete Confirmation of PO' ) THEN 'dpams47'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Enter Actual Data for OO Confirmation' ) THEN 'dpams48'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Overwrite Receipt Bill of Material' ) THEN 'dpams49'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Delete PO History Snapshots (ME84)' ) THEN 'dpams50'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Date (CA21)' ) THEN 'dpams51'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save Confirmation' ) THEN 'dpams52'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Goods Receipt (MIGO)' ) THEN 'dpams53'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO Final Invoice Indicator (ME22N)' ) THEN 'dpams54'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print Correcting Document Dispatch Note' ) THEN 'dpams55'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Enter Notification (IW51)' ) THEN 'dpams56'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Publish BOM (LV08)' ) THEN 'dpams57'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Automatic Batch Determination: Initiate' ) THEN 'dpams58'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Convert PI Document (LAKE)' ) THEN 'dpams59'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Batch Input - Forward') THEN '!!!group divider!!!'\n'integrationhub_noname' WHEN \"EVENT_NAME\" IN ('Integrate CCS into Sales Order (ZDOCU-WQ)') THEN 'dpams60'\n'integrationhub_noname' WHEN \"EVENT_NAME\" IN ('Integrate CCS into Sales Order') THEN 'dpams61'\n'integrationhub_noname' WHEN \"EVENT_NAME\" IN ('Integrate CCS into Sales Order (ZDOCU-WQ)2') THEN 'dpams62'\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\t\t\t\t\t\tEND AS EVENT_GROUP_KEY\n\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\t\t\t\t(CASE_ID || '  ' || EVENT_ID) AS TEMP1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t(CASE_ID || '  ' || (EVENT_ID + 1)) AS TEMP2,\n\t\t\t\t\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"CASE_ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT_ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT_NAME\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"END_TIME\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"CUSTOM_ATTR_NAME\" = 'Process'\n                                                                AND \"EVENT_NAME\" IN (\n                                                                'Change PO Order Text' \n                                                            ,'Create PO Item' \n                                                            ,'Print PO Match Form' \n                                                            ,'Print the PO' \n                                                        ,'Release PO'\n                                        )\n\t\t\t\t\t\t\t\t\t\t\t\t\t) AS I1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tLEFT JOIN\n\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"CASE_ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT_ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT_NAME\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"CUSTOM_ATTR_NAME\" = 'Process'\n                                                                AND \"EVENT_NAME\" IN (\n                                                                'Change PO Order Text' \n                                                            ,'Create PO Item' \n                                                            ,'Print PO Match Form' \n                                                            ,'Print the PO' \n                                                        ,'Release PO'\n                                        )\n\t\t\t\t\t\t\t\t\t\t\t\t\t) AS I2 ON I1.TEMP1 = I2.TEMP2\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\n\t\t\t\t\t\t\t\t\t\tI2.TEMP1 IS NULL\n\t\t\t\t\t\t\t\t\t\t\t\t\t--ORDER BY \"CASE_ID\", EVENT_ID\n\t\t\t\t\t\t\t\t\t\t\t) AS SF1\n\t\t\t\t\t\t\t\t\t) AS SF2\n\t\t\t\t\t\t\t) AS SF3\n\t\t\t\t\t) AS SF4\n\t\t\t) AS SF5\n\t\t\t--WHERE EVENT_NAME = 'Release PO'\n\t\tORDER BY\n\t\t\t--\"END_TIME\"\n\t\t\t--,\"EVENT_NAME\"\n\t\t\t\"CASE_ID\"\n\t\t\t--,\"EVENT_GROUP_KEY\"\n\t) AS \"eventview-3\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n\tAVG(\"lastend_createPOItem\" - \"firstend_releasePO\")\nFROM\n\t(\n\t\tSELECT\n\t\t\tFIRST (END_TIME) FILTER (\n\t\t\t\tWHERE EVENT_NAME IN ('Create PO Item')\n\t\t\t) OVER (PARTITION BY CASE_ID) AS \"firstend_createPOItem\",\n\t\t\tFIRST (END_TIME) FILTER (\n\t\t\t\tWHERE EVENT_NAME IN ('Release PO')\n\t\t\t) OVER (PARTITION BY CASE_ID) AS \"firstend_releasePO\",\n\t\t\tLAST (END_TIME) FILTER (\n\t\t\t\tWHERE EVENT_NAME IN ('Create PO Item')\n\t\t\t) OVER (PARTITION BY CASE_ID) AS \"lastend_createPOItem\"\n\t\tFROM\n\t\t\t(\n\t\t\t\tSELECT\n\t\t\t\t\t*,\n\t\t\t\t\tSUM (IS_CREATE_NEW_CASE) OVER (ORDER BY CASE_ID, END_TIME ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS \"NewCase\"\n\t\t\t\tFROM\n\t\t\t\t\t(\n\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\"CASE_ID\"\n                            , \"EVENT_NAME\" \n                            , \"END_TIME\" \n\n                            , CASE WHEN LAG(\"EVENT_NAME\", 1) OVER (PARTITION BY \"CASE_ID\" ORDER BY \"END_TIME\" ASC) \n                            \t\tIN ('Create PO Item' ) THEN 1 ELSE 0 END AS IS_CREATE_NEW_CASE\n\n\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\"CASE_ID\"\n\t\t\t\t\t\t\t\t\t,\"EVENT_NAME\"\n\t\t\t\t\t\t\t\t\t,\"END_TIME\"\n\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\t\tLAG(\"CASE_ID\", 1) OVER (PARTITION BY \"EVENT_ID\" ORDER BY \"EVENT_ID\") AS \"CASE_ID\"\n\t\t\t\t\t\t\t\t\t\t\t,CASE\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Create PO Item' ) THEN 'dpams1'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO (ME22N)' ) THEN 'dpams2'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Cond. (MEK2)' ) THEN 'dpams3'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO Order Text' ) THEN 'dpams4'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print the PO' ) THEN 'dpams5'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Create Delivery Note from PO' ) THEN 'dpams6'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO Account Assignment (ME22N)' ) THEN 'dpams7'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Generate PO via Request for Quotation (ME59N)' ) THEN 'dpams8'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Post Goods Issue' ) THEN 'dpams9'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Supplier Confirmation Before PO' ) THEN 'dpams10'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print PO Match Form' ) THEN 'dpams11'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('MRP List (MD04)' ) THEN 'dpams12'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Goods Receipt for Production Order' ) THEN 'dpams13'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Completion Confirmations for PO' ) THEN 'dpams14'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Process PP Orders KKA1' ) THEN 'dpams15'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Component (CA02)' ) THEN 'dpams16'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Release PO' ) THEN 'dpams17'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO Currency (ME22N)' ) THEN 'dpams18'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Calculate Planned PO Price' ) THEN 'dpams19'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save as Complete (IW38)' ) THEN 'dpams20'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Goods Receipt Store Order' ) THEN 'dpams21'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Release RFQ (ME29N)' ) THEN 'dpams22'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Convert TO WN' ) THEN 'dpams23'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save CO/PP Order as Complete' ) THEN 'dpams24'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Order (IA02)' ) THEN 'dpams25'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Confirm Production Order' ) THEN 'dpams26'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Subcontract Release (ME84)' ) THEN 'dpams27'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Archive Subsequent Documents' ) THEN 'dpams28'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save the TECO (IW42)' ) THEN 'dpams29'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Maintain Purchase Order Supplement (AUT02)' ) THEN 'dpams30'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Maintain Confirmation of PO' ) THEN 'dpams31'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Reject Confirmation of PO' ) THEN 'dpams32'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Release Purchase Requisition (ME55)' ) THEN 'dpams33'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Close Production Order' ) THEN 'dpams34'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Date Adjustment (MF50)' ) THEN 'dpams35'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Delete Subsequently Issued Documents' ) THEN 'dpams36'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Archive Original Document' ) THEN 'dpams37'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Calculate Targets' ) THEN 'dpams38'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save the Documents (IW38)' ) THEN 'dpams39'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Maintain Purchase Order Header Supplement (AUT02)' ) THEN 'dpams40'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Convert Planned Order to Production Order' ) THEN 'dpams41'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Enter Actual Data (IW41)' ) THEN 'dpams42'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save Operation' ) THEN 'dpams43'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Order Settlement, Full' ) THEN 'dpams44'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print Document' ) THEN 'dpams45'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print GR Slip' ) THEN 'dpams46'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Delete Confirmation of PO' ) THEN 'dpams47'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Enter Actual Data for OO Confirmation' ) THEN 'dpams48'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Overwrite Receipt Bill of Material' ) THEN 'dpams49'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Delete PO History Snapshots (ME84)' ) THEN 'dpams50'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change Date (CA21)' ) THEN 'dpams51'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Save Confirmation' ) THEN 'dpams52'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Goods Receipt (MIGO)' ) THEN 'dpams53'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Change PO Final Invoice Indicator (ME22N)' ) THEN 'dpams54'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Print Correcting Document Dispatch Note' ) THEN 'dpams55'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Enter Notification (IW51)' ) THEN 'dpams56'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Publish BOM (LV08)' ) THEN 'dpams57'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Automatic Batch Determination: Initiate' ) THEN 'dpams58'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Convert PI Document (LAKE)' ) THEN 'dpams59'\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN \"EVENT_NAME\" IN ('Batch Input - Forward') THEN '!!!group divider!!!'\n'integrationhub_noname' WHEN \"EVENT_NAME\" IN ('Integrate CCS into Sales Order (ZDOCU-WQ)') THEN 'dpams60'\n'integrationhub_noname' WHEN \"EVENT_NAME\" IN ('Integrate CCS into Sales Order') THEN 'dpams61'\n'integrationhub_noname' WHEN \"EVENT_NAME\" IN ('Integrate CCS into Sales Order (ZDOCU-WQ)2') THEN 'dpams62'\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\t\t\t\t\t\t\tEND AS EVENT_GROUP_KEY\n\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\t\t\t\t(CASE_ID || '  ' || EVENT_ID) AS TEMP1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t(CASE_ID || '  ' || (EVENT_ID + 1)) AS TEMP2,\n\t\t\t\t\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"CASE_ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT_ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT_NAME\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"END_TIME\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"CUSTOM_ATTR_NAME\" = 'Process'\n                                                                AND \"EVENT_NAME\" IN (\n                                                                'Change PO Order Text' \n                                                            ,'Create PO Item' \n                                                            ,'Print PO Match Form' \n                                                            ,'Print the PO' \n                                                        ,'Release PO'\n                                        )\n\t\t\t\t\t\t\t\t\t\t\t\t\t) AS I1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tLEFT JOIN\n\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"CASE_ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT_ID\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT_NAME\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"EVENT\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"CUSTOM_ATTR_NAME\" = 'Process'\n                                                                AND \"EVENT_NAME\" IN (\n                                                                'Change PO Order Text' \n                                                            ,'Create PO Item' \n                                                            ,'Print PO Match Form' \n                                                            ,'Print the PO' \n                                                        ,'Release PO'\n                                        )\n\t\t\t\t\t\t\t\t\t\t\t\t\t) AS I2 ON I1.TEMP1 = I2.TEMP2\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\n\t\t\t\t\t\t\t\t\t\tI2.TEMP1 IS NULL\n\t\t\t\t\t\t\t\t\t\t\t\t\t--ORDER BY \"CASE_ID\", EVENT_ID\n\t\t\t\t\t\t\t\t\t\t\t) AS SF1\n\t\t\t\t\t\t\t\t\t) AS SF2\n\t\t\t\t\t\t\t) AS SF3\n\t\t\t\t\t) AS SF4\n\t\t\t) AS SF5\n\t\t\t--WHERE EVENT_NAME = 'Release PO'\n\t\tORDER BY\n\t\t\t--\"END_TIME\"\n\t\t\t--,\"EVENT_NAME\"\n\t\t\t\"CASE_ID\"\n\t\t\t--,\"EVENT_GROUP_KEY\"\n\t) AS \"eventview-3\"\n                "
    },
    {
        "filename": "4cc4a0017e",
        "split": "test",
        "name": "SOL-1742 Average cycle time for cases affected by rework",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last and first end time of events, where the occurrence of the event name is greater than 1, in the defaultview-59 table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG (\n\t(SELECT LAST(END_TIME) FILTER (\n    \tWHERE (event_name LIKE 'X_Step_DatabaseAccess'))\n    ) - \n    (SELECT FIRST(END_TIME) FILTER (\n    \tWHERE (event_name LIKE 'X_Step_DatabaseAccess'))\n    )\n)\nFROM \"defaultview-59\" \nWHERE (event_name LIKE 'X_Step_DatabaseAccess') > 1\n\n                \n\n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG (\n\t(SELECT LAST(END_TIME) FILTER (\n    \tWHERE (event_name LIKE 'X_Step_DatabaseAccess'))\n    ) - \n    (SELECT FIRST(END_TIME) FILTER (\n    \tWHERE (event_name LIKE 'X_Step_DatabaseAccess'))\n    )\n)\nFROM \"defaultview-59\" \nWHERE (event_name LIKE 'X_Step_DatabaseAccess') > 1\n\n                \n\n\n                "
    },
    {
        "filename": "7003c60890",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Type",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Type\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases, total PO value, and PO type from the 'defaultview-124' table. Sort the results by the number of cases in descending order and limit the output to 50 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) as \"No. of Cases\", \nSUM(\"Total PO Value\") AS \"Total PO Value\", \nCASE \n\tWHEN po_item_type = 'ACCQ' THEN 'Accounting Variance'\n    WHEN po_item_type = 'ACCR' THEN 'Accounting Variance'\n    WHEN po_item_type = 'AOC' THEN 'Accounting Variance'\n    WHEN po_item_type = 'AOCQ' THEN 'Accounting Variance'\n    WHEN po_item_type = 'CR' THEN 'Cancellation Request'\n    WHEN po_item_type = 'GC' THEN 'Contract Governance'\n    WHEN po_item_type = 'ICC' THEN 'Contract Change'\n    WHEN po_item_type = 'IVDC' THEN 'Delivery Completness'\n    WHEN po_item_type = 'IVMC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'MIRI' THEN '1st Inv. Receipt' \n    WHEN po_item_type = 'MIRM' THEN '1st Inv. Receipt' \n    WHEN po_item_type = 'NRCL' THEN 'Non-started PR rxn.' \n    WHEN po_item_type = 'NRDI' THEN 'Non-started PR rxn.' \n    WHEN po_item_type = 'NRLI' THEN 'Non-started PR rxn.' \n    WHEN po_item_type = 'PO' THEN 'Release Order' \n    WHEN po_item_type = 'PQ' THEN 'PR to PO'\n    WHEN po_item_type = 'PRLI' THEN 'PR to PO'\n    WHEN po_item_type = 'RDC' THEN 'Delivery Completness'\n    WHEN po_item_type = 'RDV' THEN 'Delivery Completness'\n    WHEN po_item_type = 'RELI' THEN 'Delivery Completness'\n    WHEN po_item_type = 'RFQDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RMDC' THEN 'Delivery Completness'\n    WHEN po_item_type = 'RMDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RMDR' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RMLI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RDVV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RO' THEN 'Release Orde/Order Acknowledgement' \n    WHEN po_item_type = 'ROLI' THEN 'Release Orde/Order Acknowledgement' \n    WHEN po_item_type = 'SMDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STDV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STLI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STQ' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STQDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STQDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STQDV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STLDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STLDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STLDV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VCC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VCV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VLI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VPDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VPDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VDVV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VLDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VI' THEN 'Variation' ELSE 'Something' \n    END AS \"PO Type\"\nFROM \"defaultview-124\"\nOrder BY 1 Desc\nLIMIT 50",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) as \"No. of Cases\", \nSUM(\"Total PO Value\") AS \"Total PO Value\", \nCASE \n\tWHEN po_item_type = 'ACCQ' THEN 'Accounting Variance'\n    WHEN po_item_type = 'ACCR' THEN 'Accounting Variance'\n    WHEN po_item_type = 'AOC' THEN 'Accounting Variance'\n    WHEN po_item_type = 'AOCQ' THEN 'Accounting Variance'\n    WHEN po_item_type = 'CR' THEN 'Cancellation Request'\n    WHEN po_item_type = 'GC' THEN 'Contract Governance'\n    WHEN po_item_type = 'ICC' THEN 'Contract Change'\n    WHEN po_item_type = 'IVDC' THEN 'Delivery Completness'\n    WHEN po_item_type = 'IVMC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'MIRI' THEN '1st Inv. Receipt' \n    WHEN po_item_type = 'MIRM' THEN '1st Inv. Receipt' \n    WHEN po_item_type = 'NRCL' THEN 'Non-started PR rxn.' \n    WHEN po_item_type = 'NRDI' THEN 'Non-started PR rxn.' \n    WHEN po_item_type = 'NRLI' THEN 'Non-started PR rxn.' \n    WHEN po_item_type = 'PO' THEN 'Release Order' \n    WHEN po_item_type = 'PQ' THEN 'PR to PO'\n    WHEN po_item_type = 'PRLI' THEN 'PR to PO'\n    WHEN po_item_type = 'RDC' THEN 'Delivery Completness'\n    WHEN po_item_type = 'RDV' THEN 'Delivery Completness'\n    WHEN po_item_type = 'RELI' THEN 'Delivery Completness'\n    WHEN po_item_type = 'RFQDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RMDC' THEN 'Delivery Completness'\n    WHEN po_item_type = 'RMDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RMDR' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RMLI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RDVV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'RO' THEN 'Release Orde/Order Acknowledgement' \n    WHEN po_item_type = 'ROLI' THEN 'Release Orde/Order Acknowledgement' \n    WHEN po_item_type = 'SMDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STDV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STLI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STQ' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STQDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STQDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STQDV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STLDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STLDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'STLDV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VCC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VCV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VLI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VPDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VPDI' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VDVV' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VLDC' THEN 'Delivery Completness' \n    WHEN po_item_type = 'VI' THEN 'Variation' ELSE 'Something' \n    END AS \"PO Type\"\nFROM \"defaultview-124\"\nOrder BY 1 Desc\nLIMIT 50"
    },
    {
        "filename": "da7eeb3527",
        "split": "test",
        "name": "%Manually created Process orders grouped by Business Line",
        "query": "SELECT \ncount(Distinct case_id) as \"#Process Orders\",\n(COUNT (EVENT_NAME) FILTER \n(WHERE \"Event Created By User Type\" IN ('Dialog'))) / (COUNT (EVENT_NAME))* 100 \nas \"Manual rate\",\n\"Division\"\nFROM FLATTEN(\"defaultview-183\")\nWHERE EVENT_NAME = 'Create Process Order'\norder by 1 desc\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of distinct case IDs for process orders, the manual rate of process orders created by users, and the division. Filter the events by 'Create Process Order' and order the results descending by the first column.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT \"case_id\") AS \"# PO's Created\",\nCOUNT(\"case_id\") FILTER (WHERE created_by IS NOT NULL) / COUNT(\"case_id\")  * 100 AS \"Manual Rate\", \n\"Division\"\nFROM\n(\nSELECT \n\"case_id\",\nEVENT_NAME AS \"PO Events\" ,\n(end_time - DURATION '0 minute') AS DURATION,   \nBE (ATTRIBUTE_VALUE('Created By')) AS created_by,\nBE (ATTRIBUTE_VALUE('Division')) AS \"Division\"\n\nFROM FLATTEN(\"PO Event\")\n)\nAS SUB\nWHERE \"PO Events\" = 'Create Process Order' \nGROUP BY 3\nORDER BY 1 DESC\n ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT \"case_id\") AS \"# PO's Created\",\nCOUNT(\"case_id\") FILTER (WHERE created_by IS NOT NULL) / COUNT(\"case_id\")  * 100 AS \"Manual Rate\", \n\"Division\"\nFROM\n(\nSELECT \n\"case_id\",\nEVENT_NAME AS \"PO Events\" ,\n(end_time - DURATION '0 minute') AS DURATION,   \nBE (ATTRIBUTE_VALUE('Created By')) AS created_by,\nBE (ATTRIBUTE_VALUE('Division')) AS \"Division\"\n\nFROM FLATTEN(\"PO Event\")\n)\nAS SUB\nWHERE \"PO Events\" = 'Create Process Order' \nGROUP BY 3\nORDER BY 1 DESC\n "
    },
    {
        "filename": "505cfbf1ae",
        "split": "test",
        "name": "Cleared Amount",
        "query": "SELECT SUM(\"AmountInGlobalCurrency\" )\nFROM FLATTEN(\"defaultview-222\")\nWHERE event_name LIKE 'Clear%'",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Summarize the total amount in global currency for all events with names containing 'Clear' from the defaultview-222 table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\"Amount in Global Currency\")\nFROM \"defaultview-222\"\nWHERE EVENT_NAME LIKE 'Clear%'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\"Amount in Global Currency\")\nFROM \"defaultview-222\"\nWHERE EVENT_NAME LIKE 'Clear%'"
    },
    {
        "filename": "0761bcb1e5",
        "split": "test",
        "name": "Open Overdue Amount (15+ Days)",
        "query": "SELECT SUM(\"AmountInCompanyCodeCurrency\"  ) \nFROM FLATTEN(\"defaultview-197\")\nWHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day'",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Summarize the total amount in company code currency from the defaultview-197 table where the event name is 'Create Accounts Receivable', ClearingJournalEntry is null, and the difference between the current date and the net due date is greater than 15 days.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"ARCompanyCodeCurrencyAmount\") FILTER (\n\tWHERE EVENT_NAME = 'Create Accounts Receivable' AND \"ClearingJournalEntry\" IS NULL\n\t   AND  CURDATE() - \"NetDueDate\" > DURATION '15day' )\n\nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"ARCompanyCodeCurrencyAmount\") FILTER (\n\tWHERE EVENT_NAME = 'Create Accounts Receivable' AND \"ClearingJournalEntry\" IS NULL\n\t   AND  CURDATE() - \"NetDueDate\" > DURATION '15day' )\n\nFROM \"defaultview-197\""
    },
    {
        "filename": "707fa40cc4",
        "split": "test",
        "name": "AVG Cycle Time for On-Time Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" > \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average of the differences between the last end time of events named 'Pay Invoice' and the first end time of events named 'Receive Invoice', from the 'defaultview-431' table, where the event name matches 'Receive Invoice' followed by 'Pay Invoice' and the last invoice due date is greater than the last invoice payment date.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Pay Invoice') - \n    (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive Invoice')) \n\t\n\n\n\nFROM \"defaultview-431\"\nWHERE EVENT_NAME MATCHES ('Receive Invoice'~>'Pay Invoice') \n    AND \"Last Invoice Due Date\" > \"Last Invoice Payment Date\"\n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Pay Invoice') - \n    (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive Invoice')) \n\t\n\n\n\nFROM \"defaultview-431\"\nWHERE EVENT_NAME MATCHES ('Receive Invoice'~>'Pay Invoice') \n    AND \"Last Invoice Due Date\" > \"Last Invoice Payment Date\"\n\n                "
    },
    {
        "filename": "d6c10482e1",
        "split": "test",
        "name": "Combinations with understocking",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Inventory Target\" > \"Stock on Hand\") \n\tAND DATE_TRUNC('month', NOW()) = \"MONTH\"\n)\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of case_id in the 'defaultview-404' table where the value in the 'Inventory Target' column is greater than the value in the 'Stock on Hand' column and the current month matches the month in the 'MONTH' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER (\n    WHERE (\"Inventory Target\" > \"Stock on Hand\"\n    \t\tAND \"MONTH\" = date_trunc('month', NOW())))\nFROM \"defaultview-404\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER (\n    WHERE (\"Inventory Target\" > \"Stock on Hand\"\n    \t\tAND \"MONTH\" = date_trunc('month', NOW())))\nFROM \"defaultview-404\""
    },
    {
        "filename": "6ec4e9c927",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Type",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Process Order Type\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of process orders for each order type, grouped by order type, and sorted in descending order by the number of process orders.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT \"ProcessOrder\") as \"# Process Orders\",\n\"OrderType\"\n\nFROM \"SAP_TransactionData\"\n\nGROUP by 2\nORDER BY 1 DESC\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT \"ProcessOrder\") as \"# Process Orders\",\n\"OrderType\"\n\nFROM \"SAP_TransactionData\"\n\nGROUP by 2\nORDER BY 1 DESC\n\n"
    },
    {
        "filename": "cf2c703ad2",
        "split": "test",
        "name": "No. of Cases by PO Vendor & PO Plant City",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\", \n\"PO Vendor Name\" AS \"PO Vendor\", \n\"PO Item Plant City\" AS \"PO Plant City\"\nFROM \"defaultview-124\"\n--WHERE (EVENT_NAME MATCHES ('Clear Invoice') AND EVENT_NAME MATCHES ('Create PR Item'))\nORDER BY 1 DESC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases, PO vendor name, and PO plant city from the 'defaultview-124' table. Filter the results to show only rows where the event name matches either 'Clear Invoice' or 'Create PR Item'. Order the results by the number of cases in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id), \"PO Vendor name\", \"PO Plant City\" \nFROM \"defaultview-124\"\nWHERE event_name MATCHES ('Clear Invoice'|'Create PR Item')\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id), \"PO Vendor name\", \"PO Plant City\" \nFROM \"defaultview-124\"\nWHERE event_name MATCHES ('Clear Invoice'|'Create PR Item')\nORDER BY 1 DESC"
    },
    {
        "filename": "2b513712ff",
        "split": "test",
        "name": "Number of Billing Documents Cancelled",
        "query": "SELECT \nCOUNT(DISTINCT \"BillingDocument\") FILTER (\n\tWHERE event_name ='Cancel Billing Document')\n\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of distinct 'BillingDocument' rows in the 'defaultview-222' table, where the 'event_name' column value is 'Cancel Billing Document'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\ncount (DISTINCT \"BillingDocument\") FILTER (\n\tWHERE event_name IN('Cancel Billing Document') )\nFROM \"defaultview-222\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\ncount (DISTINCT \"BillingDocument\") FILTER (\n\tWHERE event_name IN('Cancel Billing Document') )\nFROM \"defaultview-222\"\n"
    },
    {
        "filename": "b3e2ffc236",
        "split": "test",
        "name": "Production quantity accuracy ",
        "query": "SELECT \nAVG(\n\t\"Produced Delivered Quantity\"/\"Total Order Quantity\")\n\tFILTER(WHERE \"Delivery Completed\" IS NOT NULL)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average of 'Produced Delivered Quantity' divided by 'Total Order Quantity' for rows where 'Delivery Completed' is not null, and then multiply the result by 100. The query uses the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG((\"Produced Delivered Quantity\"/\"Total Order Quantity\")) \nFILTER(\n\tWHERE event_name MATCHES ('Delivery Completed') NOT\n)\n* 100\nFROM \"defaultview-183\"\nWHERE (event_name MATCHES ('Create Delivery'))\n                    \n    \n                    \n    \n                    \n    \n                \n\n\n-- SELECT count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Created') AS \"Orders Placed\" \n\n-- ,count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Released To Production' \n-- OR \"Order Status\" = 'Released To Production By Order Planner' \n-- OR \"Order Status\" = 'Released To Production By Scheduler') AS \"Orders In Production\" \n\n-- ,(count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Released To Production' \n-- OR \"Order Status\" = 'Released To Production By Order Planner' \n-- OR \"Order Status\" = 'Released To Production By Scheduler'))\n-- /\n-- (count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Created'))\n-- * 100 AS \"OP2/OP1 %\"\n\n-- ,(count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Goods Receipt Entered' OR \n-- \"Order Status\"='Delivery Completed')) / \n-- (count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Released To Production' \n-- OR \"Order Status\" = 'Released To Production By Order Planner' \n-- OR \"Order Status\" = 'Released To Production By Scheduler'))\n-- * 100 AS \"DP3/OP2 %\"\n\n-- ,(count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Released To Production' \n-- OR \"Order Status\" = 'Released To Production By Order Planner' \n-- OR \"Order Status\" = 'Released To Production By Scheduler' OR \n-- \"Order Status\" = 'Goods Receipt Entered' OR \n-- \"Order Status\"='Delivery Completed'))\n-- /\n-- (count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Created'))\n-- * 100 AS \"QC2/OP1 %\"\n\n-- ,(count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'QC Passed' \n-- OR \"Order Status\" = 'QC Rejected' \n-- OR \"Order Status\" = 'QC Started')) \n-- /\n-- (count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Created'))\n-- * 100 AS \"QC2/OP1 %\"\n\n\n-- FROM \"defaultview-183\"\n-- WHERE (event_name MATCHES ('Goods Receipt Entered') \n-- OR event_name MATCHES ('Delivery Completed')\n-- OR event_name MATCHES ('Released To Production')\n-- OR event_name MATCHES ('Released To Production By Order Planner')\n-- OR event_name MATCHES ('Released To Production By Scheduler')\n-- OR event_name MATCHES ('Created')\n-- )\n\n\n-- SELECT\n-- count(\"Order ID\") AS \"No of Orders Placed\"\n-- ,(select count (\"Order ID\" ) ) AS \"No of Orders in Production\"\n-- ,\"No of Orders in Production\" / \"No of Orders Placed\" * 100 AS \"Open orders in Production %\"\n-- FROM \"defaultview-183\"\n-- WHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\" )                                                                                                                       \n--                                     OR   event_name MATCHES ('Released To Production' Notify \"Order Status\" ) \n--                                     OR event_name MATCHES ('Released To Production' Notify \"Order Status\" ) \n--                                     OR event_name MATCHES ('Released To Production' Notify \"Order Status\" ) \n--                                     OR event_name MATCHES ('Released To Production' Notify \"Order Status\" ) )\n--                         ) \n-- AND (\"Order Status\" MATCHES ('Goods Receipt Entered' \n--                                     OR \"Delivery Completed\" ))\n\n                    \n\n-- ,\"Max Released Date\" - \"Created Date\"   AS \"Order to Released Days\"\n-- ,\"Max Order End Date\" - \"Created Date\"   AS \"Order to End Days\"\n\n\n\n\n\n\n\n\n-- ,\"Max End Confirmation Date\" - \"Created Date\"   AS \"Order to End Days\"\n\n-- ,\"Confirmed Finsihed Date\" - \"Created Date\"   AS \"Order to Finished Days\"\n-- ,\"Order Closed Date\" - \"Created Date\"   AS \"Order to Finished Days\"\n \n-- ,\"Order Closed Date\" - \"Created Date\"   AS \"Order to Finished Days\"\n\n\n\n--,\"Event End Time\" - \"Created Date\"   AS \"Order to End Days\"\n--,\"Event End Time\" - \"Created Date\"\n--, count(\"Order ID\")\n--FROM \"defaultview-183\"\n--WHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\") \n--\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n--  event_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n  --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n   --\t)\n\n--,\"Order Status\" MATCHES ('Goods Receipt Entered' \n--\t\t\t\t\t\t\tOR \"Delivery Completed\")\n--FILTER (\n--\tWHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\") \n--\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n  --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n   --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\"))\n--,\"Order Status\" MATCHES ('Goods Receipt Entered' \n--                            OR \"Delivery Completed\"))\n        \n       \n\t--SELECT count(\"Order ID\"), (SELECT count(\"Order ID\"))--, \"Order ID\"\n        --WHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\") \n\t\t--event_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\t\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\t\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\t\tevent_name MATCHES ('Released To Production' Notify \"Order Status\"))\n \n        --WHERE (\"Order Status\") MATCHES (BEFORE EVENT\n        --\t('Goods Receipt Entered' OR 'Delivery Completed') \n        --    EVENT ('Released To Production') NOTIFY (\"Order Status\")) \n\t\n        //--,(\"Order Status\") MATCHES (BEFORE EVENT\n        --\t('Goods Receipt Entered' OR 'Delivery Completed') \n        --    EVENT ('Delivery of Produced Quantity') NOTIFY (\"Order Status\")) \n        --(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR 'Delivery Completed')\n        --AND \"Order Status\" BECOMES ('Released To Production'))) \n        --AND BOOL_OR (\"Order Status\" BECOMES \n        --('Goods Receipt Entered' OR 'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n        --(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR 'Delivery Completed')\n        --AND \"Order Status\" BECOMES ('Released To Production'))) \n        --AND BOOL_OR (\"Order Status\" BECOMES \n        --('Goods Receipt Entered' OR 'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n        --(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR \n        --                                          'Delivery Completed'))AND \"Order Status\" BECOMES ('Released To Production'))\n        --AND BOOL_OR (\"Order Status\" BECOMES ('Goods Receipt Entered' OR \n        --                                    'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n        \n        --FROM \"defaultview-183\"\n        --WHERE (\"Order Status\") MATCHES (BEFORE EVENT\n        --\t BECOMES ('Goods Receipt Entered' OR 'Delivery Completed')) \n                         \n        --,\"Order Status\" MATCHES (BEFORE EVENT\n        --\t('Released To Production') BECOMES ('Goods Receipt Entered' OR 'Delivery Completed')) \n\t\n\t\n\t\n--(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR 'Delivery Completed')\n        --AND \"Order Status\" BECOMES ('Released To Production'))) \n        --AND BOOL_OR (\"Order Status\" BECOMES \n        --('Goods Receipt Entered' OR 'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n\n\n\n\n--(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR 'Delivery Completed')\n        --AND \"Order Status\" BECOMES ('Released To Production'))) \n        --AND BOOL_OR (\"Order Status\" BECOMES \n        --('Goods Receipt Entered' OR 'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n        \t\n       -- FROM \"defaultview-183\"\n       -- WHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\")\n       -- event_name MATCHES ('Released To Production' Notify \"Order Status\")\n       -- event_name MATCHES ('Released To Production' Notify \"Order Status\")\n      \n       -- event_name MATCHES ('Released To Production' Notify \"Order Status\")\n       -- event_name MATCHES ('Released To Production' Notify \"Order Status\"))\n        --AND \n        --('Goods Receipt Entered' \n       -- OR 'Delivery Completed')\n       --) AND SHOW ON AXIS\n       --DATE_TRUNC('MONTH', \"Event End Time\")\n       --, count(\"Order Id\")\n       --calculated -->FROM \"defaultview-183\";\n            --add more FILTER to cover all month",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG((\"Produced Delivered Quantity\"/\"Total Order Quantity\")) \nFILTER(\n\tWHERE event_name MATCHES ('Delivery Completed') NOT\n)\n* 100\nFROM \"defaultview-183\"\nWHERE (event_name MATCHES ('Create Delivery'))\n                    \n    \n                    \n    \n                    \n    \n                \n\n\n-- SELECT count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Created') AS \"Orders Placed\" \n\n-- ,count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Released To Production' \n-- OR \"Order Status\" = 'Released To Production By Order Planner' \n-- OR \"Order Status\" = 'Released To Production By Scheduler') AS \"Orders In Production\" \n\n-- ,(count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Released To Production' \n-- OR \"Order Status\" = 'Released To Production By Order Planner' \n-- OR \"Order Status\" = 'Released To Production By Scheduler'))\n-- /\n-- (count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Created'))\n-- * 100 AS \"OP2/OP1 %\"\n\n-- ,(count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Goods Receipt Entered' OR \n-- \"Order Status\"='Delivery Completed')) / \n-- (count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Released To Production' \n-- OR \"Order Status\" = 'Released To Production By Order Planner' \n-- OR \"Order Status\" = 'Released To Production By Scheduler'))\n-- * 100 AS \"DP3/OP2 %\"\n\n-- ,(count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Released To Production' \n-- OR \"Order Status\" = 'Released To Production By Order Planner' \n-- OR \"Order Status\" = 'Released To Production By Scheduler' OR \n-- \"Order Status\" = 'Goods Receipt Entered' OR \n-- \"Order Status\"='Delivery Completed'))\n-- /\n-- (count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Created'))\n-- * 100 AS \"QC2/OP1 %\"\n\n-- ,(count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'QC Passed' \n-- OR \"Order Status\" = 'QC Rejected' \n-- OR \"Order Status\" = 'QC Started')) \n-- /\n-- (count(\"Order ID\") FILTER (WHERE \"Order Status\" = 'Created'))\n-- * 100 AS \"QC2/OP1 %\"\n\n\n-- FROM \"defaultview-183\"\n-- WHERE (event_name MATCHES ('Goods Receipt Entered') \n-- OR event_name MATCHES ('Delivery Completed')\n-- OR event_name MATCHES ('Released To Production')\n-- OR event_name MATCHES ('Released To Production By Order Planner')\n-- OR event_name MATCHES ('Released To Production By Scheduler')\n-- OR event_name MATCHES ('Created')\n-- )\n\n\n-- SELECT\n-- count(\"Order ID\") AS \"No of Orders Placed\"\n-- ,(select count (\"Order ID\" ) ) AS \"No of Orders in Production\"\n-- ,\"No of Orders in Production\" / \"No of Orders Placed\" * 100 AS \"Open orders in Production %\"\n-- FROM \"defaultview-183\"\n-- WHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\" )                                                                                                                       \n--                                     OR   event_name MATCHES ('Released To Production' Notify \"Order Status\" ) \n--                                     OR event_name MATCHES ('Released To Production' Notify \"Order Status\" ) \n--                                     OR event_name MATCHES ('Released To Production' Notify \"Order Status\" ) \n--                                     OR event_name MATCHES ('Released To Production' Notify \"Order Status\" ) )\n--                         ) \n-- AND (\"Order Status\" MATCHES ('Goods Receipt Entered' \n--                                     OR \"Delivery Completed\" ))\n\n                    \n\n-- ,\"Max Released Date\" - \"Created Date\"   AS \"Order to Released Days\"\n-- ,\"Max Order End Date\" - \"Created Date\"   AS \"Order to End Days\"\n\n\n\n\n\n\n\n\n-- ,\"Max End Confirmation Date\" - \"Created Date\"   AS \"Order to End Days\"\n\n-- ,\"Confirmed Finsihed Date\" - \"Created Date\"   AS \"Order to Finished Days\"\n-- ,\"Order Closed Date\" - \"Created Date\"   AS \"Order to Finished Days\"\n \n-- ,\"Order Closed Date\" - \"Created Date\"   AS \"Order to Finished Days\"\n\n\n\n--,\"Event End Time\" - \"Created Date\"   AS \"Order to End Days\"\n--,\"Event End Time\" - \"Created Date\"\n--, count(\"Order ID\")\n--FROM \"defaultview-183\"\n--WHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\") \n--\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n--  event_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n  --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n   --\t)\n\n--,\"Order Status\" MATCHES ('Goods Receipt Entered' \n--\t\t\t\t\t\t\tOR \"Delivery Completed\")\n--FILTER (\n--\tWHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\") \n--\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n  --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n   --\tevent_name MATCHES ('Released To Production' Notify \"Order Status\"))\n--,\"Order Status\" MATCHES ('Goods Receipt Entered' \n--                            OR \"Delivery Completed\"))\n        \n       \n\t--SELECT count(\"Order ID\"), (SELECT count(\"Order ID\"))--, \"Order ID\"\n        --WHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\") \n\t\t--event_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\t\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\t\tevent_name MATCHES ('Released To Production' Notify \"Order Status\")\n --\t\tevent_name MATCHES ('Released To Production' Notify \"Order Status\"))\n \n        --WHERE (\"Order Status\") MATCHES (BEFORE EVENT\n        --\t('Goods Receipt Entered' OR 'Delivery Completed') \n        --    EVENT ('Released To Production') NOTIFY (\"Order Status\")) \n\t\n        //--,(\"Order Status\") MATCHES (BEFORE EVENT\n        --\t('Goods Receipt Entered' OR 'Delivery Completed') \n        --    EVENT ('Delivery of Produced Quantity') NOTIFY (\"Order Status\")) \n        --(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR 'Delivery Completed')\n        --AND \"Order Status\" BECOMES ('Released To Production'))) \n        --AND BOOL_OR (\"Order Status\" BECOMES \n        --('Goods Receipt Entered' OR 'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n        --(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR 'Delivery Completed')\n        --AND \"Order Status\" BECOMES ('Released To Production'))) \n        --AND BOOL_OR (\"Order Status\" BECOMES \n        --('Goods Receipt Entered' OR 'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n        --(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR \n        --                                          'Delivery Completed'))AND \"Order Status\" BECOMES ('Released To Production'))\n        --AND BOOL_OR (\"Order Status\" BECOMES ('Goods Receipt Entered' OR \n        --                                    'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n        \n        --FROM \"defaultview-183\"\n        --WHERE (\"Order Status\") MATCHES (BEFORE EVENT\n        --\t BECOMES ('Goods Receipt Entered' OR 'Delivery Completed')) \n                         \n        --,\"Order Status\" MATCHES (BEFORE EVENT\n        --\t('Released To Production') BECOMES ('Goods Receipt Entered' OR 'Delivery Completed')) \n\t\n\t\n\t\n--(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR 'Delivery Completed')\n        --AND \"Order Status\" BECOMES ('Released To Production'))) \n        --AND BOOL_OR (\"Order Status\" BECOMES \n        --('Goods Receipt Entered' OR 'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n\n\n\n\n--(SELECT BOOL_OR (BEFORE_EVENT_NAME MATCHES ('Goods Receipt Entered' OR 'Delivery Completed')\n        --AND \"Order Status\" BECOMES ('Released To Production'))) \n        --AND BOOL_OR (\"Order Status\" BECOMES \n        --('Goods Receipt Entered' OR 'Delivery Completed'))) GETIMES (DATE_TRUNC('MONTH', \"Event End Time\")), count(\"Order ID\")\n        \t\n       -- FROM \"defaultview-183\"\n       -- WHERE (event_name MATCHES ('Released To Production' Notify \"Order Status\")\n       -- event_name MATCHES ('Released To Production' Notify \"Order Status\")\n       -- event_name MATCHES ('Released To Production' Notify \"Order Status\")\n      \n       -- event_name MATCHES ('Released To Production' Notify \"Order Status\")\n       -- event_name MATCHES ('Released To Production' Notify \"Order Status\"))\n        --AND \n        --('Goods Receipt Entered' \n       -- OR 'Delivery Completed')\n       --) AND SHOW ON AXIS\n       --DATE_TRUNC('MONTH', \"Event End Time\")\n       --, count(\"Order Id\")\n       --calculated -->FROM \"defaultview-183\";\n            --add more FILTER to cover all month"
    },
    {
        "filename": "d7a764fe04",
        "split": "test",
        "name": "AVG Cycle Time for Late Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average of the differences between the last end time of events named 'Pay Invoice' and the first end time of events named 'Receive Invoice', from the 'defaultview-431' table, where the event name matches 'Receive Invoice' followed by 'Pay Invoice' and the last invoice due date is less than the last invoice payment date.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG(\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Pay Invoice')\n        )\n    ) - (\n      SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Receive Invoice')\n        )\n    )\n  ) FILTER (\n    WHERE\n      (\n        SELECT\n          LAST (\"Invoice Due Date\") < LAST (\"Invoice Payment Date\")\n      )\n  )\nFROM\n  \"defaultview-431\"\nWHERE\n  EVENT_NAME MATCHES ('Receive Invoice' ~> 'Pay Invoice')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG(\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Pay Invoice')\n        )\n    ) - (\n      SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Receive Invoice')\n        )\n    )\n  ) FILTER (\n    WHERE\n      (\n        SELECT\n          LAST (\"Invoice Due Date\") < LAST (\"Invoice Payment Date\")\n      )\n  )\nFROM\n  \"defaultview-431\"\nWHERE\n  EVENT_NAME MATCHES ('Receive Invoice' ~> 'Pay Invoice')"
    },
    {
        "filename": "7cda2249c2",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For the cases where the last invoice due date is before the last invoice payment date, calculate the percentage of cases where the last invoice payment date is not null. This is done by dividing the count of cases where the last invoice due date is before the last invoice payment date by the count of all cases where the last invoice payment date is not null, and then multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT LAST(invoice_due_date)) < (SELECT LAST(invoice_payment_date)))) / \nCOUNT(case_id) FILTER(\n\tWHERE (SELECT LAST (invoice_payment_date)) IS NOT null\n\t)\n* 100\nFROM \"defaultview-682\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT LAST(invoice_due_date)) < (SELECT LAST(invoice_payment_date)))) / \nCOUNT(case_id) FILTER(\n\tWHERE (SELECT LAST (invoice_payment_date)) IS NOT null\n\t)\n* 100\nFROM \"defaultview-682\""
    },
    {
        "filename": "b1511789a0",
        "split": "test",
        "name": "Current status - what was the last activity",
        "query": "SELECT \nCOUNT(case_id) AS \"Affected Invoice Volume\"\n,LAST(event_name) AS \"Last Activity\"\n,\"Last FI Invoice Item Due Date\"- DATE_TRUNC('day', NOW()) AS \"Days until Due\"\n\nFROM FLATTEN(\"defaultview-57\")\nWHERE (\"Last FI Invoice Item Clearing Date\" IS NULL)\nAND \"Last FI Invoice ID\" IS NOT NULL\nORDER BY 1 desc",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of affected invoices, last activity, and days until the due date for invoices with no clearing date and a non-null last FI invoice ID, sorted in descending order by the number of affected invoices.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\"Affected Invoices\" as \"No. of Affected Invoices\" ,\n\"Last Activity\" as \"Days Since Last Activity\",\n\"Difference\" as \"Days Until Due Date\"\nFROM\n(\n SELECT \n  \tCOUNT(DISTINCT \"FI Invoice ID\") AS \"Affected Invoices\",\n    LAST(End_Timestamp) AS \"Last Activity\",\n    DATE_TRUNC('day', NOW()) - (DATE_TRUNC('day', (SELECT LAST (DATE) \n    \t\t\t\t  WHERE EVENT_NAME IN ('Create_FI_Document'))))) AS \"Difference\"\n    \n FROM \"defaultview-f831d42d-dd5c-48a1-b379-15ac1a64e313\"\n  \n WHERE (\"FI Invoice Clearing Date\" IS NULL OR \"FI Invoice Clearing Date\" = '') \n \tAND \"Last FI Invoice ID\" IS NOT NULL\n) AS Inv \n--Cohort\nLEFT JOIN\n(\n SELECT \n  \"Last Change User\" AS \"User\",\n DATE_TRUNC('day', NOW()) - DATE_TRUNC('day', LAST(End_Timestamp)) AS \"Difference\"\n FROM \"defaultview-f831d42d-dd5c-48a1-b379-15ac1a64e313\"\n WHERE EVENT_NAME = 'Change FI Invoice (FB02)'\n GROUP BY 1\n) AS Coh\nON Inv.\"Difference\" = Coh.\"Difference\"\n--Cohort END\n\nLEFT JOIN\n(\n SELECT \n    \tDATE_TRUNC('day', NOW()) - (DATE_TRUNC('day', ((SELECT LAST (\"Final Due Date\"))\n\t\t\t\t  WHERE EVENT_NAME IN ('FI_Invoice_Create'))))) AS \"Difference\",\n        LAST (\"FI Invoice ID\") AS \"Last Inv. No.\"\n FROM \"defaultview-f831d42d-dd5c-48a1-b379-15ac1a64e313\"\n WHERE EVENT_NAME IN ('FI_Invoice_Create',\n \t\t\t\t\t   'FI_Invoice_Change')\n GROUP BY 2, 1\n) AS due\nON Inv.\"Difference\" = due.\"Difference\"\nWHERE (FOLLOWS (SELECT LAST (EVENT_NAME) FILTER \n\t (WHERE EVENT_NAME IN ('Change CO Account Assignment',\n                           'Change FI Account Assignment',\n                           'Change FI Payment Term',\n                           'Change FI Terms of Payment',\n                           'Make Accounting Complete',\n                           'Make Accounting Incomplete',\n                           'Reverse Invoice',\n                           'Set FI Supplier Field',\n                           'Set Journal Entry Item Text',\n                           'Set Worklist To Paid')),\n                    \"CL Index\") AS \"Last FI Inv. Change\"\n       OR\n      (SELECT LAST (EVENT_NAME) FILTER \n\t (WHERE EVENT_NAME IN ('Create Accounting Document',\n                           'Create Supplier Invoice',\n                           'Delete Open Item Entry',\n                           'Modify Accounting Document',\n                           'Modify Purchase Order Accounting',\n                           'Revoke Last Release FIN',\n                           'Revoke Last Release LOG',\n                           'Uncheck Inv. Postings')))\n )\n       OR\n       (SELECT LAST (EVENT_NAME) FILTER  \n\t (WHERE EVENT_NAME IN ('Set Document To Rejected Fin',\n                           'Set Reserve Invoice Status',\n                           'FI Invoice Clear',\n                           'FI Invoice Deletion Post')))\n )IS NOT NULL\nGROUP BY 1, 2, 3\nORDER BY 1 desc\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\"Affected Invoices\" as \"No. of Affected Invoices\" ,\n\"Last Activity\" as \"Days Since Last Activity\",\n\"Difference\" as \"Days Until Due Date\"\nFROM\n(\n SELECT \n  \tCOUNT(DISTINCT \"FI Invoice ID\") AS \"Affected Invoices\",\n    LAST(End_Timestamp) AS \"Last Activity\",\n    DATE_TRUNC('day', NOW()) - (DATE_TRUNC('day', (SELECT LAST (DATE) \n    \t\t\t\t  WHERE EVENT_NAME IN ('Create_FI_Document'))))) AS \"Difference\"\n    \n FROM \"defaultview-f831d42d-dd5c-48a1-b379-15ac1a64e313\"\n  \n WHERE (\"FI Invoice Clearing Date\" IS NULL OR \"FI Invoice Clearing Date\" = '') \n \tAND \"Last FI Invoice ID\" IS NOT NULL\n) AS Inv \n--Cohort\nLEFT JOIN\n(\n SELECT \n  \"Last Change User\" AS \"User\",\n DATE_TRUNC('day', NOW()) - DATE_TRUNC('day', LAST(End_Timestamp)) AS \"Difference\"\n FROM \"defaultview-f831d42d-dd5c-48a1-b379-15ac1a64e313\"\n WHERE EVENT_NAME = 'Change FI Invoice (FB02)'\n GROUP BY 1\n) AS Coh\nON Inv.\"Difference\" = Coh.\"Difference\"\n--Cohort END\n\nLEFT JOIN\n(\n SELECT \n    \tDATE_TRUNC('day', NOW()) - (DATE_TRUNC('day', ((SELECT LAST (\"Final Due Date\"))\n\t\t\t\t  WHERE EVENT_NAME IN ('FI_Invoice_Create'))))) AS \"Difference\",\n        LAST (\"FI Invoice ID\") AS \"Last Inv. No.\"\n FROM \"defaultview-f831d42d-dd5c-48a1-b379-15ac1a64e313\"\n WHERE EVENT_NAME IN ('FI_Invoice_Create',\n \t\t\t\t\t   'FI_Invoice_Change')\n GROUP BY 2, 1\n) AS due\nON Inv.\"Difference\" = due.\"Difference\"\nWHERE (FOLLOWS (SELECT LAST (EVENT_NAME) FILTER \n\t (WHERE EVENT_NAME IN ('Change CO Account Assignment',\n                           'Change FI Account Assignment',\n                           'Change FI Payment Term',\n                           'Change FI Terms of Payment',\n                           'Make Accounting Complete',\n                           'Make Accounting Incomplete',\n                           'Reverse Invoice',\n                           'Set FI Supplier Field',\n                           'Set Journal Entry Item Text',\n                           'Set Worklist To Paid')),\n                    \"CL Index\") AS \"Last FI Inv. Change\"\n       OR\n      (SELECT LAST (EVENT_NAME) FILTER \n\t (WHERE EVENT_NAME IN ('Create Accounting Document',\n                           'Create Supplier Invoice',\n                           'Delete Open Item Entry',\n                           'Modify Accounting Document',\n                           'Modify Purchase Order Accounting',\n                           'Revoke Last Release FIN',\n                           'Revoke Last Release LOG',\n                           'Uncheck Inv. Postings')))\n )\n       OR\n       (SELECT LAST (EVENT_NAME) FILTER  \n\t (WHERE EVENT_NAME IN ('Set Document To Rejected Fin',\n                           'Set Reserve Invoice Status',\n                           'FI Invoice Clear',\n                           'FI Invoice Deletion Post')))\n )IS NOT NULL\nGROUP BY 1, 2, 3\nORDER BY 1 desc\n"
    },
    {
        "filename": "9667cec47a",
        "split": "test",
        "name": "AVG Cycle Time",
        "query": "SELECT AVG((SELECT LAST(end_time))\n\t\t- (SELECT FIRST(end_time)))\nAS \"AVG Cycle Time\"\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average cycle time for the process instances in the 'defaultview-545' table. The cycle time is calculated by subtracting the first end time from the last end time for each process instance.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME)))\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME)))\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "a864b7d746",
        "split": "test",
        "name": "Number Created Receivables over Time",
        "query": "SELECT  \n\tDATE_TRUNC('Day', \"end_time\" )  AS \"Creation Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve creation date and count of unique receivables from 'defaultview-222' table, where event name is 'Create Accounts Receivable', ordered by creation date ascending.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tDATE_TRUNC('day', \"EventCreated\") AS \"Creation Date\",\n    COUNT (DISTINCT \"AccountsReceivable\") AS \"Receivables count\"\n    \nFROM FLATTEN(\"defaultview-222\")\nWHERE \"EventName\" = 'Create Accounts Receivable'\nORDER BY 1 ASC NULLS FIRST\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tDATE_TRUNC('day', \"EventCreated\") AS \"Creation Date\",\n    COUNT (DISTINCT \"AccountsReceivable\") AS \"Receivables count\"\n    \nFROM FLATTEN(\"defaultview-222\")\nWHERE \"EventName\" = 'Create Accounts Receivable'\nORDER BY 1 ASC NULLS FIRST\n"
    },
    {
        "filename": "ed8e83eb28",
        "split": "test",
        "name": "Number of changes in invoice items",
        "query": "SELECT COUNT(\"event_name\") \n\tFILTER(WHERE BEHAVIOR (\n           event_name LIKE 'Change Invoice%' \n           OR event_name LIKE 'Create Invoice Cancellation%' \n           OR event_name LIKE 'Update Invoice%'\n           ) AS created_with_dialog MATCHES (created_with_dialog))\nFROM FLATTEN(\"defaultview-290\")\n\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of events with names containing 'Change Invoice', 'Create Invoice Cancellation', or 'Update Invoice' that were created using a dialog, from the 'defaultview-290' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(event_name) FILTER (\n\tWHERE event_name LIKE '%Change Invoice%'\n\t\tOR event_name LIKE '%Create Invoice Cancellation%'\n        OR event_name LIKE '%Update Invoice%') \n        AS \"Invoice Changed By User\"\nFROM \"defaultview-290\"\nWHERE EVentName  MATCHES ('Create Billing Document' ~> (BEFORE event_name :: (event_name LIKE '%Change Invoice%'\n\t\tOR event_name LIKE '%Create Invoice Cancellation%'\n        OR event_name LIKE '%Update Invoice%'\n        OR event_name LIKE '%Change Invoice%')) UNNEST)\nAND \"Created Using Dialog\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(event_name) FILTER (\n\tWHERE event_name LIKE '%Change Invoice%'\n\t\tOR event_name LIKE '%Create Invoice Cancellation%'\n        OR event_name LIKE '%Update Invoice%') \n        AS \"Invoice Changed By User\"\nFROM \"defaultview-290\"\nWHERE EVentName  MATCHES ('Create Billing Document' ~> (BEFORE event_name :: (event_name LIKE '%Change Invoice%'\n\t\tOR event_name LIKE '%Create Invoice Cancellation%'\n        OR event_name LIKE '%Update Invoice%'\n        OR event_name LIKE '%Change Invoice%')) UNNEST)\nAND \"Created Using Dialog\""
    },
    {
        "filename": "33b740656c",
        "split": "test",
        "name": "% Cases Started Late WITHOUT planned order reference",
        "query": "SELECT (count(case_id)\nFILTER (WHERE \"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\n \n  FROM \"defaultview-183\"\n\nWHERE \"Planned Order Number\" IS NULL\n\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For the defaultview-183 table, calculate the percentage of cases where the actual start date is later than the scheduled start date, by counting the number of case IDs that meet this condition, dividing it by the total number of case IDs, and multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) FILTER (\n\tWHERE \n    \"Actual Start Date\" > \"Scheduled Start Date\"\n)\n/\nCOUNT(CASE_ID)\n* 100\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) FILTER (\n\tWHERE \n    \"Actual Start Date\" > \"Scheduled Start Date\"\n)\n/\nCOUNT(CASE_ID)\n* 100\nFROM \"defaultview-183\""
    },
    {
        "filename": "093ba34496",
        "split": "test",
        "name": "JSM Average Closing Time",
        "query": "\nSELECT\nAVG(\n\tIF(\"Issue Type\" = '[System] Change',\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Canceled','Issue status change: Completed','Issue status change: Failed'))\n\t\t-(\"Issue Created Date\" ),\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Closed','Issue status change: Done'))\n\t\t-(\"Issue Created Date\" ))\n   )\nFROM \"defaultview-370\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time it takes for issues with the type '[System] Change' to move from created to closed, completed, or failed, minus the time it takes for issues to be created, using the 'Issue Created Date' column and the 'end_time' column of the 'Issue status change' events.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG ((SELECT END_TIME WHERE EVENT_NAME = 'Close Issue (System)') - (SELECT END_TIME WHERE EVENT_NAME = 'Create Issue (System)')) \n- AVG ((SELECT END_TIME WHERE EVENT_NAME = 'Create Issue (System)')) AS \"Avg. Duration (Issue closed) - Issue created (Filter solely systemic issue type change)\"\n\nFROM\n\"Defaultview-289\" \nWHERE issue_type_change_event_text = '[System] Change'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG ((SELECT END_TIME WHERE EVENT_NAME = 'Close Issue (System)') - (SELECT END_TIME WHERE EVENT_NAME = 'Create Issue (System)')) \n- AVG ((SELECT END_TIME WHERE EVENT_NAME = 'Create Issue (System)')) AS \"Avg. Duration (Issue closed) - Issue created (Filter solely systemic issue type change)\"\n\nFROM\n\"Defaultview-289\" \nWHERE issue_type_change_event_text = '[System] Change'"
    },
    {
        "filename": "a9f69086c6",
        "split": "test",
        "name": "POs created after Invoice Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER\n\t(WHERE (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice') ~> 'Create PO Item')))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct case IDs from the 'defaultview-545' table where the event name matches either 'Receive Invoice' or 'Reconcile Invoice' and is followed by 'Create PO Item'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tCOUNT(DISTINCT \"CASE_ID\") FILTER (\n    \tWHERE BEHAVIOR (\n        \t(event_name IN ('Receive Invoice','Reconcile Invoice')) \n            ->(LAG(event_name) IN ('Create PO Item')))\n    \tAS created_invoice MATCHES (created_invoice) ))\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tCOUNT(DISTINCT \"CASE_ID\") FILTER (\n    \tWHERE BEHAVIOR (\n        \t(event_name IN ('Receive Invoice','Reconcile Invoice')) \n            ->(LAG(event_name) IN ('Create PO Item')))\n    \tAS created_invoice MATCHES (created_invoice) ))\nFROM \"defaultview-545\""
    },
    {
        "filename": "4ed73943d3",
        "split": "test",
        "name": "Number of Invoices ",
        "query": "SELECT\n  COUNT( case_id)\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of unique case IDs from the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(DISTINCT \"caseId\") FROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(DISTINCT \"caseId\") FROM \"defaultview-545\""
    },
    {
        "filename": "88d017c4a6",
        "split": "test",
        "name": "Total PO discount Amount on Catalog item",
        "query": "SELECT -SUM(\"PO Amount Discount\") AS \"Total PO discount Amount\"\nFROM \"defaultview-431\"\nWHERE \"PO Item Line Type\" = 'Catalog'",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of the 'PO Amount Discount' column from the 'defaultview-431' table where the 'PO Item Line Type' column is equal to 'Catalog'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"PO Amount Discount\") AS \"Sum PO Amount Discount\"\nFROM \"defaultview-431\"\nWHERE \"PO Item Line Type\" = 'Catalog'\n-- WHERE \"PO Number\" = '4505431268'\n-- AND \"Is Complete\" = 'true'\n-- AND \"Payment Date\" > '2000-01-0l'\n-- AND \"Process Name\" IN ('Create Order')\n\n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"PO Amount Discount\") AS \"Sum PO Amount Discount\"\nFROM \"defaultview-431\"\nWHERE \"PO Item Line Type\" = 'Catalog'\n-- WHERE \"PO Number\" = '4505431268'\n-- AND \"Is Complete\" = 'true'\n-- AND \"Payment Date\" > '2000-01-0l'\n-- AND \"Process Name\" IN ('Create Order')\n\n\n\n\n"
    },
    {
        "filename": "7701541719",
        "split": "test",
        "name": "Average Cycle Time Over Time",
        "query": "SELECT\n    DATE_TRUNC('month', (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"PO Creation Date\",\n    \n    AVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Receive Invoice')))\n   \t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"Average cycle time\"\n    \nFROM \"defaultview-545\"\nWHERE event_name MATCHES ('Create PO Item' 'Receive Invoice')\nORDER BY 1 ASC NULLS FIRST\nFILL TIMESERIES('MONTH'), NULL",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the average cycle time for creating PO items and receiving invoices. Calculate the difference between the last end time of 'Receive Invoice' and the first end time of 'Create PO Item' for each month. Display the monthly average cycle time and the corresponding PO creation date.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  DATE_TRUNC('month', (SELECT FIRST(end_time) WHERE activity_name = 'Create PO Item')),\n  AVG((SELECT LAST(end_time) WHERE activity_name = 'Receive Invoice') - (SELECT FIRST(end_time) WHERE activity_name = 'Create PO Item'))) AS \"Avg. Cycle Time\"\nFROM\n  \"defaultview-324\"\nWHERE \nactivity_name IN ('Create PO Item', 'Receive Invoice')\nGROUP BY 1\nORDER BY 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  DATE_TRUNC('month', (SELECT FIRST(end_time) WHERE activity_name = 'Create PO Item')),\n  AVG((SELECT LAST(end_time) WHERE activity_name = 'Receive Invoice') - (SELECT FIRST(end_time) WHERE activity_name = 'Create PO Item'))) AS \"Avg. Cycle Time\"\nFROM\n  \"defaultview-324\"\nWHERE \nactivity_name IN ('Create PO Item', 'Receive Invoice')\nGROUP BY 1\nORDER BY 1"
    },
    {
        "filename": "ce0a335a7b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Set Deletion Flag WITHOUT planned order reference",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Deletion Flag')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last 'Deletion Flag' event and the first 'Create Process Order' event for all processes where the 'Planned Order Number' is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG(\n    (\n      SELECT\n        LAST(\"time_stamp\") FILTER (\n          WHERE\n            event_name IN ('Deletion Flag')\n        )\n    ) - (\n      SELECT\n        FIRST(\"time_stamp\") FILTER (\n          WHERE\n            event_name IN ('Create Process Order')\n        )\n    )\n  ) AS \"Difference in Time\",\n  COUNT(\"case_id\") AS \"Number of Cases\"\nFROM\n  \"defaultview-329\"\nWHERE\n  \"Planned Order Number\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG(\n    (\n      SELECT\n        LAST(\"time_stamp\") FILTER (\n          WHERE\n            event_name IN ('Deletion Flag')\n        )\n    ) - (\n      SELECT\n        FIRST(\"time_stamp\") FILTER (\n          WHERE\n            event_name IN ('Create Process Order')\n        )\n    )\n  ) AS \"Difference in Time\",\n  COUNT(\"case_id\") AS \"Number of Cases\"\nFROM\n  \"defaultview-329\"\nWHERE\n  \"Planned Order Number\" IS NULL"
    },
    {
        "filename": "7d57352489",
        "split": "test",
        "name": "Late Delivery after on-time release",
        "query": "SELECT (count(case_id)\nFILTER (\nWHERE \"Actual Delivery Date\" - \"Scheduled Finish Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\nFROM \"defaultview-183\"\nWhere \"Actual Release Date\" - \"Scheduled Release Date\" = DURATION '0seconds'\nAND \"Actual Finish Date\" is not null\nAND \"Scheduled Finish Date\" is not null\nAND \"Actual Start Date\" is not null\nAND \"Scheduled Start Date\" is not null\n\n\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For the defaultview-183 table, calculate the percentage of cases where the actual delivery date is later than the scheduled finish date, considering only cases where the actual release date is equal to the scheduled release date, the actual finish date is not null, the scheduled finish date is not null, the actual start date is not null, and the scheduled start date is not null.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (CASE_ID) FILTER (WHERE (( \"Actual Release Date\" )  =  ( \"Scheduled Release Date\" )   ) AND  (\"Actual Finish Date\"  IS NOT NULL )\n\t\t\t\t\t\t\t\tAND  (\"Scheduled Finish Date\"  IS NOT NULL )\n\t\t\t\t\t\t\t\tAND  (\"Actual Start Date\"  IS NOT NULL )\n\t\t\t\t\t\t\t\tAND  (\"Scheduled Start Date\"  IS NOT NULL )))\n/\nCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Planned Start'))\n*\n100\n\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (CASE_ID) FILTER (WHERE (( \"Actual Release Date\" )  =  ( \"Scheduled Release Date\" )   ) AND  (\"Actual Finish Date\"  IS NOT NULL )\n\t\t\t\t\t\t\t\tAND  (\"Scheduled Finish Date\"  IS NOT NULL )\n\t\t\t\t\t\t\t\tAND  (\"Actual Start Date\"  IS NOT NULL )\n\t\t\t\t\t\t\t\tAND  (\"Scheduled Start Date\"  IS NOT NULL )))\n/\nCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Planned Start'))\n*\n100\n\nFROM \"defaultview-183\""
    },
    {
        "filename": "7afbed3e6c",
        "split": "test",
        "name": "Avg. Cycle Time (GRN to Post Invoice) by PO Purchasing Group",
        "query": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\",\n\"PO Purchasing Group Text\" AS \"Purchasing Group\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases, average cycle time, and purchasing group from the 'defaultview-124' table. The cycle time is calculated by subtracting the last end time of the 'Create Goods Receipt' event from the last end time of the 'Create FI Invoice' event. Group the results by the purchasing group and order them descending by the number of cases. Limit the output to 50 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg Cycle Time\",\n\"Purchasing Group\"\nFROM \"defaultview-124\"\nWHERE EVENT_NAME MATCHES ('Create Goods Receipt' ~> 'Create FI Invoice')\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg Cycle Time\",\n\"Purchasing Group\"\nFROM \"defaultview-124\"\nWHERE EVENT_NAME MATCHES ('Create Goods Receipt' ~> 'Create FI Invoice')\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50\n"
    },
    {
        "filename": "ebfb4c5190",
        "split": "test",
        "name": "_Average timesheet approval time",
        "query": "\nSELECT\nSUM(\"TSR_AVGCreationTillApprovalTime\" * \"TSR_Count\")\n/\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time taken for approval per TSR, by summing up the time taken for creation till approval for each TSR and dividing it by the total count of TSRs.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG\n\t(  (SELECT FIRST (\"End Time\") FILTER (WHERE \"ActivityName\" = 'Approval') )\n\t\t- (SELECT FIRST (\"End Time\") FILTER (WHERE \"ActivityName\" = 'Create TS Request') )\n\t)\n/ COUNT (\"TS Request ID\") AS \"Avg. Approval per TSR\"\nFROM \"defaultview-352\"\nWHERE \"ActivityName\" = 'Approval'\n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG\n\t(  (SELECT FIRST (\"End Time\") FILTER (WHERE \"ActivityName\" = 'Approval') )\n\t\t- (SELECT FIRST (\"End Time\") FILTER (WHERE \"ActivityName\" = 'Create TS Request') )\n\t)\n/ COUNT (\"TS Request ID\") AS \"Avg. Approval per TSR\"\nFROM \"defaultview-352\"\nWHERE \"ActivityName\" = 'Approval'\n\n\n\n"
    },
    {
        "filename": "d62720137d",
        "split": "test",
        "name": "Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of invoices with due date before clearing date. Filter the results to only include invoices with a non-null clearing date.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n COUNT(DISTINCT \"Clearing Invoice\") FILTER (\n    \tWHERE (DueDate < ClearingDate))\n        / COUNT(DISTINCT \"Clearing Invoice\") FILTER (\n\t\tWHERE ClearingDate IS NOT NULL) \n        * 100\nFROM \"slick_case_6\"\n                    \n    \n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n COUNT(DISTINCT \"Clearing Invoice\") FILTER (\n    \tWHERE (DueDate < ClearingDate))\n        / COUNT(DISTINCT \"Clearing Invoice\") FILTER (\n\t\tWHERE ClearingDate IS NOT NULL) \n        * 100\nFROM \"slick_case_6\"\n                    \n    \n                "
    },
    {
        "filename": "aa7861486e",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-133\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of the 'Inv. Converted USD Amount' column in the 'defaultview-133' table, where the 'Last Inv. Item Clearing Date' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"Inv. Converted USD Amount\") \nFROM \"defaultview-133\" \nWHERE \"Last Inv. Item Clearing Date\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"Inv. Converted USD Amount\") \nFROM \"defaultview-133\" \nWHERE \"Last Inv. Item Clearing Date\" IS NULL"
    },
    {
        "filename": "935da015df",
        "split": "test",
        "name": "Percentage of not Approved Timesheets by Activity Type",
        "query": "SELECT\n(\nCount(distinct TimesheetRecord) \nFILTER \n(WHERE event_name = 'Create Timesheet Record')\n-\n Count(distinct TimesheetRecord) \nFILTER \n(WHERE event_name IN ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record'))\n)\n/ Count(distinct TimesheetRecord) * 100 AS \"% of not Approved Timesheets\",\n\n\"ActivityType\"  AS \"Activity Type\"\n\n\nFROM FLATTEN(\"defaultview-197\")\n\nORDER BY 1 DESC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the percentage of non-approved timesheets. Calculate by subtracting the count of timesheets with event names 'Approve Timesheet Record', 'Auto-Approve Timesheet Record', or 'Cancel Timesheet Record' from the total count of distinct timesheets, then dividing by 100. Sort the results in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n(COUNT (DISTINCT \"Timesheet Id\") FILTER (\n\tWHERE (SELECT BOOL_OR (IF (EV_NAME IN ('Approve Timesheet Record' \n\t ,'Auto-Approve Timesheet Record' \n\t ,'Cancel Timesheet Record'), NULL, TRUE)))\n   )\n) / COUNT(DISTINCT \"Timesheet Id\") * 100\nFROM \"defaultview-932\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n(COUNT (DISTINCT \"Timesheet Id\") FILTER (\n\tWHERE (SELECT BOOL_OR (IF (EV_NAME IN ('Approve Timesheet Record' \n\t ,'Auto-Approve Timesheet Record' \n\t ,'Cancel Timesheet Record'), NULL, TRUE)))\n   )\n) / COUNT(DISTINCT \"Timesheet Id\") * 100\nFROM \"defaultview-932\" "
    },
    {
        "filename": "fdbbf9f7fc",
        "split": "test",
        "name": "% of automatic delivery items changes",
        "query": "SELECT\n    COUNT(\"event_name\") FILTER (\n        WHERE BEHAVIOR (\n              \"EventCreatedByUserType\"  IN ('System','Service','Batch Job')\n            ) AS created_with_dialog MATCHES (created_with_dialog)\n    ) / COUNT(\"event_name\") * 100\nFROM FLATTEN(\"defaultview-290\")\nWHERE (event_name LIKE 'Change Delivery%' \n\tOR event_name LIKE 'Update Delivery%')",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the percentage of delivery-related events created by System, Service, or Batch Job, out of all delivery-related events, from the defaultview-290 table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (\"event name\") FILTER(\n\tWHERE category_1 = 'Create' \n    AND (\"Created by Status\" IN ('System', 'Service') \n    \tOR \"Created by Job in\" IN ('Batch'))     ) \n / COUNT (\"event name\") FILTER(\n\tWHERE category_1 = 'Create') \n* 100 AS \"Events created by %\"\nFROM \"defaultview-290\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (\"event name\") FILTER(\n\tWHERE category_1 = 'Create' \n    AND (\"Created by Status\" IN ('System', 'Service') \n    \tOR \"Created by Job in\" IN ('Batch'))     ) \n / COUNT (\"event name\") FILTER(\n\tWHERE category_1 = 'Create') \n* 100 AS \"Events created by %\"\nFROM \"defaultview-290\" "
    },
    {
        "filename": "d1bd2930bd",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average duration between 'Basic Start Date' and 'Basic Finish Date' for all records in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG (\"Basic Finish Date\" - \"Basic Start Date\" )\n\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG (\"Basic Finish Date\" - \"Basic Start Date\" )\n\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "005b27854f",
        "split": "test",
        "name": "Top 10 Customers with highest Open Receivables Amounts",
        "query": "SELECT\n     \"AR_CustomerName\"  AS \"Customer\",\n    SUM(\"AmountInCompanyCodeCurrency\" ) as \"Amount\"\nFROM FLATTEN(\"defaultview-197\")\nWHERE \"ClearingDate\"  IS NULL\nAND event_name =  'Create Accounts Receivable' \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the top 10 customers with the highest amount owed to them, based on the 'AmountInCompanyCodeCurrency' column, from the 'defaultview-197' table, where the 'ClearingDate' is null and the 'event_name' is 'Create Accounts Receivable', group the results by the 'Customer' column, which is derived from the 'AR_CustomerName' column, and order the results descendingly by the 'Amount' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT top(10) \nSUM(\"AmountInCompanyCodeCurrency\" ) FILTER \n(WHERE event_name = 'Create Accounts Receivable') AS \"Amount\"\n,\"Customer\" \nFROM FLATTEN(\"defaultview-197\")\n--WHERE  (\"ClearingDate\" IS NULL   )\nWHERE event_name  IN ('Create Accounts Receivable') \nGROUP BY 2\nORDER BY 2 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT top(10) \nSUM(\"AmountInCompanyCodeCurrency\" ) FILTER \n(WHERE event_name = 'Create Accounts Receivable') AS \"Amount\"\n,\"Customer\" \nFROM FLATTEN(\"defaultview-197\")\n--WHERE  (\"ClearingDate\" IS NULL   )\nWHERE event_name  IN ('Create Accounts Receivable') \nGROUP BY 2\nORDER BY 2 DESC\n"
    },
    {
        "filename": "4f97b966fc",
        "split": "test",
        "name": "Top Vendors with worse Payments Terms on their invoice",
        "query": "SELECT \nSUM (\"Last FI Invoice Item Gross Amount in USD\") \nFILTER (WHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \nELSE \"PO Cash Discount Days 1\" END)) AS \"Payment Terms Differences where PO is better (Amount)\"\n,\"PO Vendor Name\"\nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of the 'Last FI Invoice Item Gross Amount in USD' column from the 'defaultview-124' table, but only for rows where the 'Last FI Invoice Item Cash Discount Days 1' column is less than the 'PO Cash Discount Days 1' column, or the 'PO Cash Discount Days 1' column is null. The result should be labeled as 'Payment Terms Differences where PO is better (Amount)'. Additionally, include the 'PO Vendor Name' column in the output.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"Last FI Invoice Item Gross Amount in USD\")  FILTER (\n\tWHERE (\n\t\t\"Last FI Invoice Item Cash Discount Days 1\" < \"PO Cash Discount Days 1\"\n        OR \"PO Cash Discount Days 1\" IS NULL\n\t)\n), \"PO Vendor Name\", \nCOUNT(\"PO Cash Discount Days 1\")\n-- COUNT(\"Last FI Invoice Item Cash Discount Days 1\")\n                FROM \"defaultview-124\"\n            WHERE EVENTMATCH(\"PO Cash Discount Days 1 IS Null Or \nPO Cash Discount Days 1 > 0 Event\") -- limitation FILTER with event pattern\n            AND NOT (\n            \t\"PO Cash Discount Days 1 IS Null Or \nPO Cash Discount Days 1 > 0 Event\"\n              {BEFORE LAST PO Cash Discount Days 1 IS Null Or \nPO Cash Discount Days 1 > 0 Event}\n                                )\nAND NOT (\"PO Cash Discount Days 1 IS Null Or \nPO Cash Discount Days 1 > 0 Event\")\n                -- AND EVENTMATCH('PO Cash Discount Days 1 > 0 IF')\nGROUP BY 2\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"Last FI Invoice Item Gross Amount in USD\")  FILTER (\n\tWHERE (\n\t\t\"Last FI Invoice Item Cash Discount Days 1\" < \"PO Cash Discount Days 1\"\n        OR \"PO Cash Discount Days 1\" IS NULL\n\t)\n), \"PO Vendor Name\", \nCOUNT(\"PO Cash Discount Days 1\")\n-- COUNT(\"Last FI Invoice Item Cash Discount Days 1\")\n                FROM \"defaultview-124\"\n            WHERE EVENTMATCH(\"PO Cash Discount Days 1 IS Null Or \nPO Cash Discount Days 1 > 0 Event\") -- limitation FILTER with event pattern\n            AND NOT (\n            \t\"PO Cash Discount Days 1 IS Null Or \nPO Cash Discount Days 1 > 0 Event\"\n              {BEFORE LAST PO Cash Discount Days 1 IS Null Or \nPO Cash Discount Days 1 > 0 Event}\n                                )\nAND NOT (\"PO Cash Discount Days 1 IS Null Or \nPO Cash Discount Days 1 > 0 Event\")\n                -- AND EVENTMATCH('PO Cash Discount Days 1 > 0 IF')\nGROUP BY 2\n"
    },
    {
        "filename": "59a5b5c1d4",
        "split": "test",
        "name": "Projects by Project Profile",
        "query": "SELECT count(case_id) AS \"# Projects\", \nProject_ProfileCode AS \"Project Profile\"\nFROM \"defaultview-197\"\nORDER BY 1 DESC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of projects and project profiles from the 'defaultview-197' table, order the results by the number of projects in descending order, and display the results with the column headers '# Projects' and 'Project Profile'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"project_id\") AS \"# Projects\",\n\"Project Profile\"  \nFROM \"defaultview-197\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"project_id\") AS \"# Projects\",\n\"Project Profile\"  \nFROM \"defaultview-197\"\nORDER BY 1 DESC"
    },
    {
        "filename": "defa1f2d35",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Business Line",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Division\"\nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases (Cases), average cycle time (Cycle Time), and division from the 'defaultview-183' table. Order the results by Cases in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(CASE_ID) AS \"Cases\",\nAVG (END_TIME - START_TIME) AS \"Cycle Time\", \n\"Division\"\nFROM \"defaultview-183\" \nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(CASE_ID) AS \"Cases\",\nAVG (END_TIME - START_TIME) AS \"Cycle Time\", \n\"Division\"\nFROM \"defaultview-183\" \nORDER BY 1 DESC"
    },
    {
        "filename": "92022651c1",
        "split": "test",
        "name": "SOL-1682 Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n        WHERE (SELECT COUNT(event_name)\n                        WHERE (\"Last Inv. Item Clearing Date\" > \"Last Inv. Item Due Date\")) > 0\n        )\n/ COUNT (case_id) * 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For the table 'defaultview-59', calculate the percentage of case IDs that have at least one event name with a clearing date after the due date. First, filter the cases where the count of such events is greater than zero. Then, divide the filtered count of case IDs by the total count of case IDs and multiply by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (CASE_ID)\nFILTER (WHERE (SELECT COUNT (EVENT_NAME) \n                WHERE \"Clearing Date\" > \"Due Date\") > 0)\n/ COUNT (CASE_ID) \n* 100\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (CASE_ID)\nFILTER (WHERE (SELECT COUNT (EVENT_NAME) \n                WHERE \"Clearing Date\" > \"Due Date\") > 0)\n/ COUNT (CASE_ID) \n* 100\nFROM \"defaultview-59\""
    },
    {
        "filename": "ef3533bece",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Controlling Area",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Controlling Area\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of unique CASE_IDs for each Controlling Area in the defaultview-183 table, group the results by Controlling Area, and sort the results in descending order by the number of CASE_IDs.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (UNIQUE CASE_ID)) AS \"Number of Cases\", \"Controlling Area\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC\n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (UNIQUE CASE_ID)) AS \"Number of Cases\", \"Controlling Area\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC\n\n\n\n"
    },
    {
        "filename": "7a820c8c23",
        "split": "test",
        "name": "Ratio of tickets with rework",
        "query": "SELECT COUNT(case_id) \nFILTER (\n\tWHERE (SELECT count(event_name) WHERE event_name = 'Change Status to In Progress' ) > 1 )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-217\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Get the percentage of cases where the event 'Change Status to In Progress' occurred more than once, for each case in the defaultview-217 table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (SELECT COUNT (EVENT_NAME)\n    \t\tFROM FLATTEN(\"defaultview-217\"))\n    > 1)\n/\nCOUNT (CASE_ID) \nFILTER (WHERE \"Change Status to In Progress\" IS NOT NULL)\n* 100\nFROM \"defaultview-217\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (SELECT COUNT (EVENT_NAME)\n    \t\tFROM FLATTEN(\"defaultview-217\"))\n    > 1)\n/\nCOUNT (CASE_ID) \nFILTER (WHERE \"Change Status to In Progress\" IS NOT NULL)\n* 100\nFROM \"defaultview-217\""
    },
    {
        "filename": "57824bbefa",
        "split": "test",
        "name": "First call resolution ratio",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT COUNT(DISTINCT event_name)) = (SELECT COUNT(event_name))\n\t)\n/ COUNT(case_id)\n*100\n\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each case_id in the 'defaultview-545' table, count the number of distinct event_names and filter out any case_ids that have the same number of distinct event_names as the total number of event_names. Then, divide the filtered count by the total count of case_ids and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(DISTINCT case_id) FILTER (\n\tWHERE (\n\t\tSELECT\n\t\tCOUNT(DISTINCT event_name) \n\t\tWHERE event_duration > DURATION '0seconds'\n\t\t)\n\t\t= (\n\t\tSELECT\n\t\tCOUNT(event_name)\n\t\t)\n    \t)\n/ COUNT(case_id) \n* 100 AS \"Cases completed event\"\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(DISTINCT case_id) FILTER (\n\tWHERE (\n\t\tSELECT\n\t\tCOUNT(DISTINCT event_name) \n\t\tWHERE event_duration > DURATION '0seconds'\n\t\t)\n\t\t= (\n\t\tSELECT\n\t\tCOUNT(event_name)\n\t\t)\n    \t)\n/ COUNT(case_id) \n* 100 AS \"Cases completed event\"\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "c428caeb29",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Plant",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Plant\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of unique CASE_IDs for each Plant, grouped by Plant, and sorted in descending order by the count of CASE_IDs.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"CASE_ID\") as \"# Cases\",\n\"Plant\"\nFROM \nFLATTEN(aggregated_extract)\nGROUP BY 2\norder by 1 desc\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"CASE_ID\") as \"# Cases\",\n\"Plant\"\nFROM \nFLATTEN(aggregated_extract)\nGROUP BY 2\norder by 1 desc\n"
    },
    {
        "filename": "1898593acc",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Receive Invoice')",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last 'Receive Invoice' event and the first 'Create PO Item' event for each process instance in the 'defaultview-431' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG(\n\t(SELECT LAST(end_time) \n    FILTER (WHERE event_name = 'Receive Invoice')) \n    -\n    (SELECT FIRST(end_time) \n    FILTER (WHERE event_name = 'Create PO Item'))\n   )\nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG(\n\t(SELECT LAST(end_time) \n    FILTER (WHERE event_name = 'Receive Invoice')) \n    -\n    (SELECT FIRST(end_time) \n    FILTER (WHERE event_name = 'Create PO Item'))\n   )\nFROM \"defaultview-431\""
    },
    {
        "filename": "ec1afff845",
        "split": "test",
        "name": "Number of invoices with \"Last Inv. Item Terms of Payment Key\" column is NULL",
        "query": "SELECT COUNT(case_id), \"Last Inv. Item Terms of Payment Key\"\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Terms of Payment Key\" IS NULL",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of case_id where the value of Last Inv. Item Terms of Payment Key is null",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) \nFROM \"SAP_BPW\".\"Last Investment Item\"\nWHERE \"Terms of Payment Key\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) \nFROM \"SAP_BPW\".\"Last Investment Item\"\nWHERE \"Terms of Payment Key\" IS NULL"
    },
    {
        "filename": "717545c103",
        "split": "test",
        "name": "\u00d8 Automation Rate of Payment Events",
        "query": "SELECT\n  SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            (\n              \"Event Created By User Type\" IN ('System', 'Service')\n              AND (event_name LIKE '%Payment%')\n            )\n        )\n    )\n  ) / SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            event_name LIKE '%Payment%' AND \"Event Created By User Type\" IS NOT NULL\n        )\n    )\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of payment events created by system or service users out of all payment events. First, count the number of payment events created by system or service users (Event Created By User Type IN ('System', 'Service') and event_name LIKE '%Payment%') and divide it by the total number of payment events (event_name LIKE '%Payment%'). Then, multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\ncount(event_name) filter (\n\twhere\n\t\t\"Event Created By User Type\" IN ('System','Service')\n\t\tand event_name LIKE '%Payment%'\n\t)\n/ count(event_name) filter (\n\twhere\n\t\tevent_name LIKE '%Payment%'\n\t)\n* 100\nFROM  \"Daimler - Case Study 2 - Event\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\ncount(event_name) filter (\n\twhere\n\t\t\"Event Created By User Type\" IN ('System','Service')\n\t\tand event_name LIKE '%Payment%'\n\t)\n/ count(event_name) filter (\n\twhere\n\t\tevent_name LIKE '%Payment%'\n\t)\n* 100\nFROM  \"Daimler - Case Study 2 - Event\"\n                "
    },
    {
        "filename": "aef1c8c1d7",
        "split": "test",
        "name": "Top 10 Customers with highest Invoiced Amounts",
        "query": "SELECT\n    AR_CustomerName AS \"Customer\",\n    SUM(\"AR_InvoicedAmountInGlobalCurrency\") AS \"Amount\"\nFROM \"defaultview-222\"\nWHERE AR_CustomerName IS NOT NULL\n\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the top 10 customers with their names and total invoiced amount, grouped by customer, sorted by amount in descending order, and limited to only customers with non-null names.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n    COUNT(\"Customer\") as \"Number of Customers\",\n    SUM(\"Total Net Amount In doc. Curr.\") AS \"Total Invoiced Amount\",    \n    AVG(\"Total Net Amount In doc. Curr.\") AS \"Average Invoiced Amount\",\n    MEDIAN(\"Total Net Amount In doc. Curr.\") AS \"Median Invoiced Amount\",\n    MIN(\"Total Net Amount In doc. Curr.\") AS \"Minimal Invoiced Amount\",\n    MAX(\"Total Net Amount In doc. Curr.\") AS \"Maximal Invoiced Amount\",\n    PERCENTILE(TOTAL 0.2, \"Total Net Amount In doc. Curr.\") AS \"20 percent Quartile\",\n    PERCENTILE(TOTAL 0.5, \"Total Net Amount In doc. Curr.\") AS \"50 percent Quartile\",\n    PERCENTILE(TOTAL 0.8, \"Total Net Amount In doc. Curr.\") AS \"80 percent Quartile\",\n    STDDEV(\"Total Net Amount In doc. Curr.\") AS \"Standard Deviation\"\n    \nFROM \"signavio-viewer-3\" \n-- WHERE EVENT_NAME = 'Invoice Created'\n\n-- RANGE (\"Start Invoice\", \"End Invoice\")\n \n\n--WHERE \"Start Time\">\n--      (SELECT MIN(\"Start Time\") \n--      WHERE \"EVENT_NAME\" IN ('Invoice Posted to accounting') \n--      ) \n--AND \"Start Time\" <    \n--     (\n--      SELECT MAX(\"Start Time\") \n--      WHERE \"EVENT_NAME\" IN ('Invoice Posted to accounting') \n--      ) \nWHERE \"EVENT_NAME\" IN ('Invoice Posted to accounting')  --AND SUBCRIPTION_CUSTOMER_HAS_NAME = true\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n    COUNT(\"Customer\") as \"Number of Customers\",\n    SUM(\"Total Net Amount In doc. Curr.\") AS \"Total Invoiced Amount\",    \n    AVG(\"Total Net Amount In doc. Curr.\") AS \"Average Invoiced Amount\",\n    MEDIAN(\"Total Net Amount In doc. Curr.\") AS \"Median Invoiced Amount\",\n    MIN(\"Total Net Amount In doc. Curr.\") AS \"Minimal Invoiced Amount\",\n    MAX(\"Total Net Amount In doc. Curr.\") AS \"Maximal Invoiced Amount\",\n    PERCENTILE(TOTAL 0.2, \"Total Net Amount In doc. Curr.\") AS \"20 percent Quartile\",\n    PERCENTILE(TOTAL 0.5, \"Total Net Amount In doc. Curr.\") AS \"50 percent Quartile\",\n    PERCENTILE(TOTAL 0.8, \"Total Net Amount In doc. Curr.\") AS \"80 percent Quartile\",\n    STDDEV(\"Total Net Amount In doc. Curr.\") AS \"Standard Deviation\"\n    \nFROM \"signavio-viewer-3\" \n-- WHERE EVENT_NAME = 'Invoice Created'\n\n-- RANGE (\"Start Invoice\", \"End Invoice\")\n \n\n--WHERE \"Start Time\">\n--      (SELECT MIN(\"Start Time\") \n--      WHERE \"EVENT_NAME\" IN ('Invoice Posted to accounting') \n--      ) \n--AND \"Start Time\" <    \n--     (\n--      SELECT MAX(\"Start Time\") \n--      WHERE \"EVENT_NAME\" IN ('Invoice Posted to accounting') \n--      ) \nWHERE \"EVENT_NAME\" IN ('Invoice Posted to accounting')  --AND SUBCRIPTION_CUSTOMER_HAS_NAME = true\n\n"
    },
    {
        "filename": "8092de898c",
        "split": "test",
        "name": "Manual Change Rate by Top 10 Material",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocItemMaterial\" AS \"SD Material\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of Sales Documents (SDs) created by Dialog, and the percentage of SDs updated by Dialog out of the total number of SDs. The query filters the SDs based on the EventCreatedByUserType and ChangeType, and then calculates the percentage of SDs updated by Dialog. The results are sorted in descending order by the number of SDs and limited to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\"SalesDocument\") AS \"# SDs created by Dialog\",\n  (SELECT\n    \tCOUNT(\"SalesDocument\") FILTER (\n        \tWHERE (EventCreatedByUserType IN ('Dialog'))\n            AND ChangeType IS NULL\n        )) AS \"# SDs updated by Dialog\"\n  / COUNT(\"SalesDocument\") * 100 AS \"% SDs updated by Dialog\"\nFROM\n\"SAP_ERP_Billing\".\"SD Change Document\"\nWHERE\n (DATE \"01.01.2018\" <=\n  DATE_TRUNC('day', LAST(END_TIME))))\n\nORDER BY 1 DESC\nLIMIT 10\n ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\"SalesDocument\") AS \"# SDs created by Dialog\",\n  (SELECT\n    \tCOUNT(\"SalesDocument\") FILTER (\n        \tWHERE (EventCreatedByUserType IN ('Dialog'))\n            AND ChangeType IS NULL\n        )) AS \"# SDs updated by Dialog\"\n  / COUNT(\"SalesDocument\") * 100 AS \"% SDs updated by Dialog\"\nFROM\n\"SAP_ERP_Billing\".\"SD Change Document\"\nWHERE\n (DATE \"01.01.2018\" <=\n  DATE_TRUNC('day', LAST(END_TIME))))\n\nORDER BY 1 DESC\nLIMIT 10\n "
    },
    {
        "filename": "487549492d",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term'))))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the percentage of payment term updates by counting the number of case IDs that have at least one event with the name 'Update Payment Term' and dividing it by the total number of case IDs, from the 'defaultview-59' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) FILTER \n(WHERE (SELECT bool_or(\"event_name\" = 'Update Payment Term') \nFROM (SELECT \"event_name\") AS \"DUMMY_1\") = true)\n/\ncount(case_id)\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) FILTER \n(WHERE (SELECT bool_or(\"event_name\" = 'Update Payment Term') \nFROM (SELECT \"event_name\") AS \"DUMMY_1\") = true)\n/\ncount(case_id)\nFROM \"defaultview-59\""
    },
    {
        "filename": "8deb242ea5",
        "split": "test",
        "name": "_Invoice cancellation rate",
        "query": "\nSELECT\n(\nSUM(\"BillingDoc_TotalCancelled\")\n/\nSUM(\"BillingDoc_TotalCount\")\n)\n* 100\n\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of cancelled billing documents out of the total number of billing documents. Using the 'BillingDoc_TotalCancelled' and 'BillingDoc_TotalCount' columns from the 'defaultview-197' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  SUM (\"BillingDoc_TotalCancelled\" ) \n  / SUM (\"BillingDoc_TotalCount\" )\n* 100 AS \"Cancellation Rate in percent\" from \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  SUM (\"BillingDoc_TotalCancelled\" ) \n  / SUM (\"BillingDoc_TotalCount\" )\n* 100 AS \"Cancellation Rate in percent\" from \"defaultview-197\""
    },
    {
        "filename": "df5561bb21",
        "split": "test",
        "name": "Confirmed process orders",
        "query": "SELECT COUNT(event_name)\n    FILTER(WHERE event_name MATCHES ('Confirmed'))\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of events with the name 'Confirmed' from the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(1) as \"No. of Confirmed Issues\"\n\nFROM \"defaultview-183\"\n\nWHERE\n\"Activity\" MATCHES ('Confirm')\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(1) as \"No. of Confirmed Issues\"\n\nFROM \"defaultview-183\"\n\nWHERE\n\"Activity\" MATCHES ('Confirm')\n"
    },
    {
        "filename": "6ff4a8f764",
        "split": "test",
        "name": "Late deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of case_id where the last GR creation date is after the PO item last requested delivery date and the PO item delivery completed is yes.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID)\nFROM \"data-20200131145957335\".\"PO_GoodsReceiptToPOItem\"\nWHERE\n\"REQ_ITEM_LAST_DELIVERY_DATE\" < \"GR_CREATION_DATE\" \nAND PO_ITEM_DELIVERY_COMPLETED = 'Yes'\n\n\n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID)\nFROM \"data-20200131145957335\".\"PO_GoodsReceiptToPOItem\"\nWHERE\n\"REQ_ITEM_LAST_DELIVERY_DATE\" < \"GR_CREATION_DATE\" \nAND PO_ITEM_DELIVERY_COMPLETED = 'Yes'\n\n\n\n\n\n"
    },
    {
        "filename": "6ad1f0922e",
        "split": "test",
        "name": "\u00d8 SFC Initial Quantity",
        "query": "SELECT AVG(\"SFC Initial Quantity\") FROM \"defaultview-270\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average value of the 'SFC Initial Quantity' column in the 'defaultview-270' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG(\"SFC Initial Quantity\" )\nFROM\n  \"defaultview-270\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG(\"SFC Initial Quantity\" )\nFROM\n  \"defaultview-270\""
    },
    {
        "filename": "b371622da1",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Requested Delivery Date\"\n\t\tAND \"PO Delivery Status\" = 'Received'\n\t)\n/\nCOUNT(case_id) FILTER (\n\tWHERE \"PO Delivery Status\" = 'Received'\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each day, calculate the percentage of received purchase order deliveries out of all purchase order deliveries, by counting the number of case IDs that have a last GR creation date after the requested delivery date and a delivery status of 'Received', and then dividing that number by the total number of case IDs with a delivery status of 'Received'. The data is fetched from the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  date_trunc('day', \"LastGRCreationDate\") AS \"Date\",\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      \"LastGRCreationDate\" > \"Req. Delivery Date\"\n      AND \"DeliveryStatus\" = 'Received'\n  ) / COUNT(CASE_ID) FILTER (\n    WHERE\n      \"DeliveryStatus\" = 'Received'\n  ) * 100\nFROM\n  \"defaultview-545\"\nWHERE\n  \"DeliveryStatus\" <> 'Completed'\n  AND \"Req. Delivery Date\" IS NOT NULL\nGROUP BY\n  1\nORDER BY\n  1\n  date_trunc('day', \"LastGRCreationDate\")\nASC\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  date_trunc('day', \"LastGRCreationDate\") AS \"Date\",\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      \"LastGRCreationDate\" > \"Req. Delivery Date\"\n      AND \"DeliveryStatus\" = 'Received'\n  ) / COUNT(CASE_ID) FILTER (\n    WHERE\n      \"DeliveryStatus\" = 'Received'\n  ) * 100\nFROM\n  \"defaultview-545\"\nWHERE\n  \"DeliveryStatus\" <> 'Completed'\n  AND \"Req. Delivery Date\" IS NOT NULL\nGROUP BY\n  1\nORDER BY\n  1\n  date_trunc('day', \"LastGRCreationDate\")\nASC\n"
    },
    {
        "filename": "8977266362",
        "split": "test",
        "name": "WC Impact of Invoices with immediate payment terms",
        "query": "\nSELECT\nSUM(\"Last FI Invoice Item Gross Amount in USD\") FILTER(\n\tWHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) *15*0.04/365\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the sum of the 'Last FI Invoice Item Gross Amount in USD' column in the 'defaultview-124' table, but only for rows where the 'Last FI Invoice Item Cash Discount Days 1' column is either null or equal to 0, and then multiply the result by 15 and 0.04/365.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM (\"Last FI Invoice Item Gross Amount in USD\")\nFILTER (\n\tWHERE (\"Last FI Invoice Item Cash Discount Days 1\" IS NULL OR \"Last FI Invoice Item Cash Discount Days 1\" = 0))\n* 15 * 0.04 / 365\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM (\"Last FI Invoice Item Gross Amount in USD\")\nFILTER (\n\tWHERE (\"Last FI Invoice Item Cash Discount Days 1\" IS NULL OR \"Last FI Invoice Item Cash Discount Days 1\" = 0))\n* 15 * 0.04 / 365\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "b3b2c64a6b",
        "split": "test",
        "name": "Number of Billing Requests rejected",
        "query": "SELECT \nCOUNT(DISTINCT \"SalesDocument\") FILTER (\n\tWHERE event_name LIKE 'Reject Billing Request%')\nFROM FLATTEN(\"defaultview-197\")",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of distinct SalesDocuments in the defaultview-197 table where the event name is like 'Reject Billing Request%'",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"SalesDocument\") \nFROM FLATTEN(\"defaultview-197\")\nWHERE Event_Name MATCHES ('Reject Billing Request%')\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"SalesDocument\") \nFROM FLATTEN(\"defaultview-197\")\nWHERE Event_Name MATCHES ('Reject Billing Request%')\n\n"
    },
    {
        "filename": "f8140fe8c4",
        "split": "test",
        "name": "Number of Tickets Completed/Rejected",
        "query": "SELECT \n\tDATE_TRUNC('month', \n    \t(SELECT FIRST(end_time) \n        WHERE event_name IN ('Change Status to Closed'))) AS \"Month when Issue Closed\",\n\tCOUNT(case_id) \n    FILTER (WHERE event_name MATCHES(('Change Status to Closed'))) AS \"# Cases\"\nFROM \"defaultview-217\"\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the month when issues were closed and the number of cases closed for that month. The data is filtered by events named 'Change Status to Closed' and grouped by month.",
        "llm_gpt-35-turbo-0613_query": "SELECT date_trunc('month', \"ClosedTimeStamp\") as \"Month of close\", COUNT(case_id) as \"Closed Cases\"\nFROM \"cl_ariba_p2p\".\"Event_log\"\nWHERE \"Event Name\" in ('Change Status to Closed' )\nGROUP BY 1\nORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT date_trunc('month', \"ClosedTimeStamp\") as \"Month of close\", COUNT(case_id) as \"Closed Cases\"\nFROM \"cl_ariba_p2p\".\"Event_log\"\nWHERE \"Event Name\" in ('Change Status to Closed' )\nGROUP BY 1\nORDER BY 1 ASC"
    },
    {
        "filename": "a6cf9b8367",
        "split": "test",
        "name": "Immediate WC Impact grouped by PO Vendor Name",
        "query": "SELECT SUM (\"Last FI Invoice Item Gross Amount Document Curr.\") \nFILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL \nOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) * 15 * 0.04 / 365 \nAS \"WC Impact of Invoices with immediate payment terms\", \"PO Vendor Name\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of the 'Last FI Invoice Item Gross Amount Document Curr' column in the 'defaultview-124' table, where the 'Last FI Invoice Item Cash Discount Days 1' column is either null or equal to zero, and then multiply the result by 15 and 0.04/365, and order the result by the first column in descending order, with null values placed last, and limit the result to 30 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\"Last FI Invoice Item Gross Amount Document Curr\")\nFILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\nOR \"Last FI Invoice Item Cash Discount Days 1\" = 0)\n* 15 * 0.04 / 365\nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\"Last FI Invoice Item Gross Amount Document Curr\")\nFILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\nOR \"Last FI Invoice Item Cash Discount Days 1\" = 0)\n* 15 * 0.04 / 365\nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30\n"
    },
    {
        "filename": "8411df93d4",
        "split": "test",
        "name": "Automation Rate Technically completed",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Technically completed'\n\n\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each event_name in FLATTEN(\"defaultview-183\") where event_name = 'Technically completed', calculate the percentage of events that were not created by a user of type 'Dialog' by dividing the count of such events by the total count of events and multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\n\t(SELECT COUNT(event_name) FILTER(\n\t\tWHERE \"Event Originator Type\" IS NULL\n\t\tOR \"Event Originator Type\" NOT IN ('Dialog')))\n\t/\n\t(SELECT COUNT(event_name)) * 100\n\t)\n/ COUNT(event_name) FILTER (\n\tWHERE event_name = 'Technically completed'\n   )\n* 100\n,\"event_name\"\nFROM \"defaultview-183\"\nWHERE event_name = 'Technically completed'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\n\t(SELECT COUNT(event_name) FILTER(\n\t\tWHERE \"Event Originator Type\" IS NULL\n\t\tOR \"Event Originator Type\" NOT IN ('Dialog')))\n\t/\n\t(SELECT COUNT(event_name)) * 100\n\t)\n/ COUNT(event_name) FILTER (\n\tWHERE event_name = 'Technically completed'\n   )\n* 100\n,\"event_name\"\nFROM \"defaultview-183\"\nWHERE event_name = 'Technically completed'"
    },
    {
        "filename": "e9259d68f7",
        "split": "test",
        "name": "Olap Table",
        "query": "SELECT case_id, \n\"Planned Release Date\", \n\"Scheduled Release date\",\n\"Actual Release Date\", \n\"Scheduled Start Date\", \n\"Actual Start Date\",     \n\"Scheduled Finish Date\", \n\"Confirmed Finish Date\",\n\"Actual Finish Date\", \n\"Basic Start Date\",\n--\"Basic End Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",   \n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"\nFROM \"defaultview-183\"\nLimit 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve 10 rows from the 'defaultview-183' table with the following columns: case_id, Planned Release Date, Scheduled Release date, Actual Release Date, Scheduled Start Date, Actual Start Date, Scheduled Finish Date, Confirmed Finish Date, Actual Finish Date, Basic Start Date, Planned Order Opening Date, Planned Order Start Date, Actual Delivery Date, Planned Order Actual Delivery Date, and Basic Finish Date.",
        "llm_gpt-35-turbo-0613_query": "SELECT case_id,\n--\"Planned Release Date\",\n--\"Scheduled Release date\",\n--\"Actual Release Date\",\n--\"Scheduled Start Date\",\n--\"Actual Start Date\",\n--\"Scheduled Finish Date\",\n--\"Confirmed Finish Date\",\n--\"Actual Finish Date\",\n--\"Basic Start Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",\n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"\n\nFROM FLATTEN (\"defaultview-183\")\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT case_id,\n--\"Planned Release Date\",\n--\"Scheduled Release date\",\n--\"Actual Release Date\",\n--\"Scheduled Start Date\",\n--\"Actual Start Date\",\n--\"Scheduled Finish Date\",\n--\"Confirmed Finish Date\",\n--\"Actual Finish Date\",\n--\"Basic Start Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",\n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"\n\nFROM FLATTEN (\"defaultview-183\")\nLIMIT 10"
    },
    {
        "filename": "88033c5325",
        "split": "test",
        "name": "Total Spend by PO Material (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Material Number\" \nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the total PO amount, average cycle time, and PO material number from the 'defaultview-431' table. Sort the results by total PO amount in descending order and limit the output to the first 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(\"PO Number\") AS \"Total Number of POs\",\nSUM(\"PO Net Order Value Amount in Crcy after GR\") AS \"Total PO Value\",\nAVG ((SELECT LAST( \"case_end\".\"EVENT_TIME\") FILTER (WHERE \"Event Name\" = 'Goods Receipt' AND \"PO Item Added Indicator\" = 'Yes'))\n\t- (SELECT FIRST( \"case_end\".\"EVENT_TIME\") FILTER (WHERE \"Event Name\" = 'PO Creation'))) AS \"Average Cycle Time\",\n\"PO Number\" AS \"PO Item\"\nFROM \"defaultview-431\"\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(\"PO Number\") AS \"Total Number of POs\",\nSUM(\"PO Net Order Value Amount in Crcy after GR\") AS \"Total PO Value\",\nAVG ((SELECT LAST( \"case_end\".\"EVENT_TIME\") FILTER (WHERE \"Event Name\" = 'Goods Receipt' AND \"PO Item Added Indicator\" = 'Yes'))\n\t- (SELECT FIRST( \"case_end\".\"EVENT_TIME\") FILTER (WHERE \"Event Name\" = 'PO Creation'))) AS \"Average Cycle Time\",\n\"PO Number\" AS \"PO Item\"\nFROM \"defaultview-431\"\nORDER BY 2 DESC\nLIMIT 10\n"
    },
    {
        "filename": "125e48fc10",
        "split": "test",
        "name": "Avg. Cycle Time per Case ID (20 shortest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n    \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) \n              AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 ASC\nLIMIT 20\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the average cycle time for each project. The cycle time is calculated by subtracting the start time of the 'Start Project' event from the end time of the 'Close Project' event. The results are grouped by project and sorted in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT project_name,\nAVG ((SELECT end_time WHERE event_name = 'Close Project') - (SELECT end_time WHERE event_name = 'Start Project') ) AS \"Average cycle time\"\nFROM  \"defaultview-6\"\nGROUP BY 1\nORDER BY 2",
        "llm_gpt-35-turbo-0613_full_output": "SELECT project_name,\nAVG ((SELECT end_time WHERE event_name = 'Close Project') - (SELECT end_time WHERE event_name = 'Start Project') ) AS \"Average cycle time\"\nFROM  \"defaultview-6\"\nGROUP BY 1\nORDER BY 2"
    },
    {
        "filename": "d1ef7aa5cf",
        "split": "test",
        "name": "Table",
        "query": "SELECT\nIF (bucket_id > 20, -1, (bucket_id * 50) + 0) AS bucket_end,\n\"ClientCount\"\nFROM (\nSELECT\nBUCKET(EventCount, 0, 50, 20) as bucket_id,\nCOUNT(CASE_ID) AS \"ClientCount\" FROM\n(\nSELECT CASE_ID, \nCOUNT(EVENT_NAME) as EventCount\nFROM FLATTEN(\"defaultview-124\")\n) AS sq1\n) AS sq2\nORDER BY 1 ASC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Select bucket_id and ClientCount from sq2, where bucket_id is computed as bucket_id > 20 ? -1 : bucket_id * 50 + 0, and ClientCount is computed as the count of distinct case_id's in sq1, and sq2 is computed as the bucketing of EventCount in sq1 with buckets of size 50 and step size 20.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  FLATTEN ((SELECT BUCKET_EVENT_COUNT () \n    WITH bucket_id > 20 AS \"Event without case\" \n    \tTHEN -1 --Event out of case\n        WHEN EVENTCOUNT(USE sub_event_name) > 0 \n         THEN BUCKET_EVENT_COUNT () //Event which is not the first event\n    ELSE BUCKET_EVENT_COUNT ( )\n    AS \"ClientCount\" ))\n    AS \"ClientCount\"\nFROM FLATTEN(SELECT  eventcount(USE sub_event_name)) AS FLATTEN_1\n(USE \"EventCount\"), (SELECT eventcount(sub_event_name))\nAS subq1 ON 1=1\nINTO sq1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  FLATTEN ((SELECT BUCKET_EVENT_COUNT () \n    WITH bucket_id > 20 AS \"Event without case\" \n    \tTHEN -1 --Event out of case\n        WHEN EVENTCOUNT(USE sub_event_name) > 0 \n         THEN BUCKET_EVENT_COUNT () //Event which is not the first event\n    ELSE BUCKET_EVENT_COUNT ( )\n    AS \"ClientCount\" ))\n    AS \"ClientCount\"\nFROM FLATTEN(SELECT  eventcount(USE sub_event_name)) AS FLATTEN_1\n(USE \"EventCount\"), (SELECT eventcount(sub_event_name))\nAS subq1 ON 1=1\nINTO sq1"
    },
    {
        "filename": "431e0f5dc2",
        "split": "test",
        "name": "Percent of Cases with Rework",
        "query": "SELECT COUNT (CASE_ID) \n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1) \n    \tFROM (SELECT OCCURRENCE(EVENT_NAME) AS occurrence) AS sub)) \n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the percentage of cases where the occurrence of an event is greater than 1, calculated by counting the number of unique case IDs that match the filter and dividing it by the total number of case IDs, from the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM (SELECT (SELECT BOOL_OR(\n\t\t\tBEFORE.EVENTNAME = 'Order completed')) AS occurrence) BEFOR\n\t\tWHERE BEFOR.occurrence IS NOT NULL))) \n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM (SELECT (SELECT BOOL_OR(\n\t\t\tBEFORE.EVENTNAME = 'Order completed')) AS occurrence) BEFOR\n\t\tWHERE BEFOR.occurrence IS NOT NULL))) \n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "7524851a3d",
        "split": "test",
        "name": "Percentage of products touched by IO",
        "query": "\nSELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE (\n\t\tSELECT SUM(\"Recommended Safety Stock\") = 0\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n* 100\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For the last 320 days, calculate the percentage of product IDs with non-zero recommended safety stock, filtered by month and compared to the current month.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\"PRODUCTS\".\"ID\") FILTER (\n\tWHERE (\"INVENTORY\".\"RECOMMENDED_SAFETY_STOCK\" != 0))\n/ COUNT(\"PRODUCTS\".\"ID\") * 100\n, DATE_TRUNC('month', LAST(end_time))) as \"DATE\"\nSUM(count) \nFILTER (WHERE DATE_TRUNC('month', NOW()) = DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\")))) AS \"current month\"\n, SUM(count) \nFILTER (WHERE DATE_TRUNC('month', NOW()) - INTERVAL '1 month' <= DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\")) \nAND DATE_TRUNC('month', NOW()) + INTERVAL '2 month' > DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\")))) AS \"last month\"\n, SUM(count) \nFILTER ( WHERE DATE_TRUNC('month', NOW()) \n- INTERVAL '2 month' < DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\"))\nAND DATE_TRUNC('month', NOW()) + INTERVAL '1 month'> DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\")))) AS \"2nd last month\"\n\nFROM \"PROCESS_TIMESLICE\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\"PRODUCTS\".\"ID\") FILTER (\n\tWHERE (\"INVENTORY\".\"RECOMMENDED_SAFETY_STOCK\" != 0))\n/ COUNT(\"PRODUCTS\".\"ID\") * 100\n, DATE_TRUNC('month', LAST(end_time))) as \"DATE\"\nSUM(count) \nFILTER (WHERE DATE_TRUNC('month', NOW()) = DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\")))) AS \"current month\"\n, SUM(count) \nFILTER (WHERE DATE_TRUNC('month', NOW()) - INTERVAL '1 month' <= DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\")) \nAND DATE_TRUNC('month', NOW()) + INTERVAL '2 month' > DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\")))) AS \"last month\"\n, SUM(count) \nFILTER ( WHERE DATE_TRUNC('month', NOW()) \n- INTERVAL '2 month' < DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\"))\nAND DATE_TRUNC('month', NOW()) + INTERVAL '1 month'> DATE_TRUNC('month', TO_DATE(\"DATE_TRUNCTIME\")))) AS \"2nd last month\"\n\nFROM \"PROCESS_TIMESLICE\"\n"
    },
    {
        "filename": "28105fe921",
        "split": "test",
        "name": "First time fix rate",
        "query": "\nSELECT\n(COUNT (case_id) FILTER(WHERE ((SELECT COUNT (event_name) FILTER (WHERE event_name IN ('Technically Completed')) < 2) ))\n/ \nCOUNT (case_id) )*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Select the percentage of case_id where the count of event_name is less than 2 and event_name is in ('Technically Completed') from the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n    COUNT(case_id) FILTER (\n        WHERE (\n            SELECT\n                BOOL_OR(\n                    \"event_name\" IN ('Technically Completed')\n                )\n        )) AS \"permittedCount\" ,\n    COUNT(case_id) FILTER (\n        WHERE (\n          SELECT BOOL_OR((cnt < 2))\n        )\n    ) AS \"Count With Condition\"\nFROM\n    (\n        SELECT\n            case_id,\n            event_name,\n            (\n                CASE\n                    WHEN LAG (event_name,1)\n                        OVER (PARTITION BY case_id\n                            ORDER BY\n                                (\n                                    SELECT\n                                        FIRST_OCCURRENCE (event_name)\n                                )) IS NULL THEN 1\n                    WHEN FIRST_OCCURRENCE (event_name) IS NULL THEN NULL\n                    ELSE FIRST_OCCURRENCE ((cnt-1) IN (1)))\n        END AS \"count_of_event_name_LESS_than_2\"\n    FROM\n        (\n            SELECT\n                case_id,\n                event_name,\n                1 AS cnt\n            FROM\n                FLATTEN(\"defaultview-545\")\n            ORDER BY\n                case_id\n        )\n    )\nAS C\nWHERE\n    permittedCount = 1\n    ORDER BY 2 DESC NULLS FIRST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n    COUNT(case_id) FILTER (\n        WHERE (\n            SELECT\n                BOOL_OR(\n                    \"event_name\" IN ('Technically Completed')\n                )\n        )) AS \"permittedCount\" ,\n    COUNT(case_id) FILTER (\n        WHERE (\n          SELECT BOOL_OR((cnt < 2))\n        )\n    ) AS \"Count With Condition\"\nFROM\n    (\n        SELECT\n            case_id,\n            event_name,\n            (\n                CASE\n                    WHEN LAG (event_name,1)\n                        OVER (PARTITION BY case_id\n                            ORDER BY\n                                (\n                                    SELECT\n                                        FIRST_OCCURRENCE (event_name)\n                                )) IS NULL THEN 1\n                    WHEN FIRST_OCCURRENCE (event_name) IS NULL THEN NULL\n                    ELSE FIRST_OCCURRENCE ((cnt-1) IN (1)))\n        END AS \"count_of_event_name_LESS_than_2\"\n    FROM\n        (\n            SELECT\n                case_id,\n                event_name,\n                1 AS cnt\n            FROM\n                FLATTEN(\"defaultview-545\")\n            ORDER BY\n                case_id\n        )\n    )\nAS C\nWHERE\n    permittedCount = 1\n    ORDER BY 2 DESC NULLS FIRST"
    },
    {
        "filename": "a043407a7a",
        "split": "test",
        "name": "4. Percentage of Payments Manually processed (out of all clearly allocated payments ('SA','DZ'))",
        "query": "SELECT\n(count(DISTINCT \"ARUniqueKey\"  ) FILTER\n(WHERE event_name = 'Clear Accounts Receivable' and \"AutomationFlag\" is null)\n/ \ncount(DISTINCT \"ARUniqueKey\"  ) FILTER \n(WHERE event_name IN \n('Clear Accounts Receivable')\n)\n) \n* 100\n FROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each unique ARUniqueKey, calculate the percentage of accounts receivable cleared when the event name is 'Clear Accounts Receivable' and the AutomationFlag is null, out of all accounts receivable cleared with the event name 'Clear Accounts Receivable'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"ARClearInvAccntKey\" ) FILTER \n(\n\tWHERE EVENT_NAME = 'Clear Accounts Receivable' AND AutomationFlag IS NULL\n)\n/\nCOUNT(DISTINCT \"ARClearInvAccntKey\" ) FILTER \n(\n\tWHERE EVENT_NAME = 'Clear Accounts Receivable'\n)\n*100\nFROM \"defaultview-454\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"ARClearInvAccntKey\" ) FILTER \n(\n\tWHERE EVENT_NAME = 'Clear Accounts Receivable' AND AutomationFlag IS NULL\n)\n/\nCOUNT(DISTINCT \"ARClearInvAccntKey\" ) FILTER \n(\n\tWHERE EVENT_NAME = 'Clear Accounts Receivable'\n)\n*100\nFROM \"defaultview-454\"\n                "
    },
    {
        "filename": "aade6751ff",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Clear Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))))      \nFROM \"defaultview-133\" \nWHERE EVENT_NAME MATCHES ('Post Invoice' 'Clear Invoice')",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last 'Clear Invoice' event and the first 'Post Invoice' event for each process instance in the 'defaultview-133' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG ((SELECT LAST (END_TIME) \n    WHERE EVENT_NAME IN ('Clear Invoice') )\n- (SELECT FIRST (END_TIME) \n    WHERE EVENT_NAME IN ('Post Invoice') ))\nFROM \"defaultview-133\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG ((SELECT LAST (END_TIME) \n    WHERE EVENT_NAME IN ('Clear Invoice') )\n- (SELECT FIRST (END_TIME) \n    WHERE EVENT_NAME IN ('Post Invoice') ))\nFROM \"defaultview-133\""
    },
    {
        "filename": "d39c3be180",
        "split": "test",
        "name": "Overdue payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL AND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL)\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of overdue invoices with no payment date, out of all invoices with no payment date, for the current day. Overdue invoices are defined as those with a due date before the current day. The calculation is based on the 'defaultview-545' table, using the 'case_id' column for counting and the 'Last Invoice Payment Date' and 'Last Invoice Due Date' columns for filtering.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"No Payment Date and Overdue Invoices\") / SUM(\"No Payment Date Invoices\") * 100\n\nFROM\n(\nSELECT\n\tCOUNT(case_id) AS \"No Payment Date and Overdue Invoices\",\n    COUNT(case_id) FILTER(\n\t\tWHERE \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))\n        AS \"No Payment Date Invoices\"\nFROM \"defaultview-545\"\n)\nAS sub1\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"No Payment Date and Overdue Invoices\") / SUM(\"No Payment Date Invoices\") * 100\n\nFROM\n(\nSELECT\n\tCOUNT(case_id) AS \"No Payment Date and Overdue Invoices\",\n    COUNT(case_id) FILTER(\n\t\tWHERE \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))\n        AS \"No Payment Date Invoices\"\nFROM \"defaultview-545\"\n)\nAS sub1\n                "
    },
    {
        "filename": "c6857d95da",
        "split": "test",
        "name": "% Process Orders Released Early  grouped by most relevant Business Lines",
        "query": "SELECT \ncount(case_id) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') AS \"# Process Orders released early\",\nCOUNT (CASE_ID) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') / COUNT (CASE_ID)* 100 AS \"% Released Early\",\n\"Division\"\nFROM \"defaultview-183\"\n-- GROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of process orders released early, calculated as the difference between the actual release date and the scheduled release date, and divide it by the total number of process orders, then sort the result in descending order and limit it to the top 10 rows, based on the 'defaultview-183' table, with column names: 'case_id', 'Actual Release Date', 'Scheduled Release Date', and 'Division'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  count(case_id) FILTER (\n    WHERE\n      (\n        \"ReleaseDate\" - \"Scheduled Date\"\n      ) < DURATION '0seconds'\n  ) / count(case_id) * 100 AS \"% Process Orders Released Early\",\n  count(case_id) AS \"# Process Orders Released\",\n  \"Division\",\n  \"case_id\"\nFROM\n  \"defaultview-183\"\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  count(case_id) FILTER (\n    WHERE\n      (\n        \"ReleaseDate\" - \"Scheduled Date\"\n      ) < DURATION '0seconds'\n  ) / count(case_id) * 100 AS \"% Process Orders Released Early\",\n  count(case_id) AS \"# Process Orders Released\",\n  \"Division\",\n  \"case_id\"\nFROM\n  \"defaultview-183\"\nORDER BY\n  1 DESC\nLIMIT\n  10"
    },
    {
        "filename": "5cc0dd8c2b",
        "split": "test",
        "name": "SOL-1742 Fraction of total average cycle time spent on rework",
        "query": "\nSELECT\n((AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM (SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t))\n-\n(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\n)\n/(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last and first occurrence of each event, filter out events that have only one occurrence, and then subtract the average time difference from the overall average time difference.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG (\n\t\t(\n\t\t\tSELECT\n\t\t\t\tAVG (ENDDATE - BEGINDATE) FILTER (\n\t\t\t\t\tWHERE\n\t\t\t\t\t\t(R_INDEX) = 'Last'\n\t\t\t\t\t\tAND (\n\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\tBOOL_OR (\"CASE\" IS NULL AND \"AL1\" IS NULL)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t) \n\t\t-- Subtraction of Query1 and Query2 to get the AE End-Date -  Last AL Causing End-Date and Fixing the code.\n        - (\n\t\t\tSELECT\n\t\t\t\tAVG (ENDDATE - BEGINDATE) FILTER (\n\t\t\t\t\tWHERE\n\t\t\t\t\t\t(R_INDEX) = 'Last'\n\t\t\t\t\t\tAND (\"CASE\" IS NULL AND \"AL1\" IS NULL)\n\t\t\t\t\t\t)\n\t\t) \n    )\nFROM\n\tFLATTEN (\"model\". \"queryview-13\") ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG (\n\t\t(\n\t\t\tSELECT\n\t\t\t\tAVG (ENDDATE - BEGINDATE) FILTER (\n\t\t\t\t\tWHERE\n\t\t\t\t\t\t(R_INDEX) = 'Last'\n\t\t\t\t\t\tAND (\n\t\t\t\t\t\t\tSELECT\n\t\t\t\t\t\t\t\tBOOL_OR (\"CASE\" IS NULL AND \"AL1\" IS NULL)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t) \n\t\t-- Subtraction of Query1 and Query2 to get the AE End-Date -  Last AL Causing End-Date and Fixing the code.\n        - (\n\t\t\tSELECT\n\t\t\t\tAVG (ENDDATE - BEGINDATE) FILTER (\n\t\t\t\t\tWHERE\n\t\t\t\t\t\t(R_INDEX) = 'Last'\n\t\t\t\t\t\tAND (\"CASE\" IS NULL AND \"AL1\" IS NULL)\n\t\t\t\t\t\t)\n\t\t) \n    )\nFROM\n\tFLATTEN (\"model\". \"queryview-13\") "
    },
    {
        "filename": "df00ed7208",
        "split": "test",
        "name": "\u00d8 Cycle Time (Full Process)",
        "query": "SELECT AVG (\n\t(SELECT LAST (END_TIME)) \n  - (SELECT FIRST (END_TIME))) AS \"Average cycle time\"\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average cycle time for the defaultview-270 table. The calculation is done by subtracting the first END_TIME value from the last END_TIME value and then taking the average of the result.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG\n\t( (SELECT LAST (\"END_TIME\")) - (SELECT FIRST (\"END_TIME\")) \n)\nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG\n\t( (SELECT LAST (\"END_TIME\")) - (SELECT FIRST (\"END_TIME\")) \n)\nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "4d015ef6e5",
        "split": "test",
        "name": "No. of Invoices Paid Late",
        "query": "SELECT \nCOUNT(DISTINCT CASE_ID) AS \"Case Count\"\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct case IDs from the 'defaultview-124' table where the last FI invoice item due date is less than the last FI invoice item clearing date.",
        "llm_gpt-35-turbo-0613_query": "SELECT\ncount(DISTINCT \"Case Id\") FILTER (\n\tWHERE (SELECT LAST(\"FI Invoice Item Due Date\")) < (SELECT LAST(\"FI Invoice Item Clearing Date\")))\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\ncount(DISTINCT \"Case Id\") FILTER (\n\tWHERE (SELECT LAST(\"FI Invoice Item Due Date\")) < (SELECT LAST(\"FI Invoice Item Clearing Date\")))\nFROM \"defaultview-124\""
    },
    {
        "filename": "73e9b28d90",
        "split": "test",
        "name": "Number of Orders delayed in completion",
        "query": "\nSELECT\ncount(case_id) FILTER(\n\tWHERE \"Order Actual Start\" IS NOT NULL\n\tAND \"Order Actual Completion\" - \"Order Scheduled Completion\" > DURATION '0minutes') \nFROM \"defaultview-538\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count of case_id where Order Actual Start is not null and Order Actual Completion minus Order Scheduled Completion is greater than 0 minutes",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id)\nFROM \"Order Details\"\nWHERE\n\"Order Actual Start\" IS NOT NULL\nAND\n(\"Order Actual Completion\" - \"Order Scheduled Completion\") > DURATION '0minutes'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id)\nFROM \"Order Details\"\nWHERE\n\"Order Actual Start\" IS NOT NULL\nAND\n(\"Order Actual Completion\" - \"Order Scheduled Completion\") > DURATION '0minutes'"
    },
    {
        "filename": "7896255b68",
        "split": "test",
        "name": "Number Created Receivables over Time Posting",
        "query": "SELECT  \n\t\"PostingDate\"   AS \"Posting Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the posting date and count of distinct receivables from the 'defaultview-222' table, where the event name is like 'Create Accounts Receivable', sorted by posting date in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT \"Accounting Document Item\") AS \"Distinct Receibales\",\n\"postingDate\" \nFROM \"defaultview-222\" \n--WHERE event_name = 'Create Accounts Receivable'\nWHERE event_name  LIKE '%Create Accounts Receivable%'\nOrder by 2\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT \"Accounting Document Item\") AS \"Distinct Receibales\",\n\"postingDate\" \nFROM \"defaultview-222\" \n--WHERE event_name = 'Create Accounts Receivable'\nWHERE event_name  LIKE '%Create Accounts Receivable%'\nOrder by 2\n"
    },
    {
        "filename": "ae803079ca",
        "split": "test",
        "name": "Sources of Change (Table) - # Events",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\", \"Changed Table\"\nFROM FLATTEN((SELECT \"case_id\", \"event_name\", \"end_time\", \"Change New Value\", \"Change Old Value\", \"Change Type\", \"Changed Field\", \"Changed Object Id\", \"Changed Table\", \"Event Created By User Id\", \"Event Created By User Type\"\nFROM \"defaultview-124\") AS sub)\nWHERE \"Changed Table\" IS NOT NULL\norder by 1 desc\nLIMIT 500",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve 500 rows from the 'defaultview-124' table, sorted in descending order by the 'Cases' column, which contains the count of distinct 'case_id' values. Filter the results to only include rows where the 'Changed Table' column is not null. The selected columns are 'case_id', 'event_name', 'end_time', 'Change New Value', 'Change Old Value', 'Change Type', 'Changed Field', 'Changed Object Id', 'Changed Table', 'Event Created By User Id', and 'Event Created By User Type'.",
        "llm_gpt-35-turbo-0613_query": "SELECT distinct case_id\n        , event_name\n        , end_time\n        , \"Change New Value\"\n        , \"Change Old Value\"\n        , \"Change Type\"\n        ,'Changed Field'\n        , 'Changed Object Id'\n        , \"Changed Table\"\n        , \"Event Created By User Id\"\n        , \"Event Created By User Type\"\nFROM FLATTEN(\"defaultview-124\")\nWHERE ( \"Changed Table\"  <> 'null' ) \n\n\norder by 3 DESC\nlimit 500",
        "llm_gpt-35-turbo-0613_full_output": "SELECT distinct case_id\n        , event_name\n        , end_time\n        , \"Change New Value\"\n        , \"Change Old Value\"\n        , \"Change Type\"\n        ,'Changed Field'\n        , 'Changed Object Id'\n        , \"Changed Table\"\n        , \"Event Created By User Id\"\n        , \"Event Created By User Type\"\nFROM FLATTEN(\"defaultview-124\")\nWHERE ( \"Changed Table\"  <> 'null' ) \n\n\norder by 3 DESC\nlimit 500"
    },
    {
        "filename": "812a094000",
        "split": "test",
        "name": "# PO confirmed",
        "query": "SELECT count(case_id) FILTER (WHERE event_name MATCHES ('Confirmed')) FROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct case IDs from the 'defaultview-183' table where the 'event_name' column matches the string 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(DISTINCT \"case_id\")\nFROM\n  FLATTEN(\"defaultview-183\")\nWHERE\n  (\n    SELECT\n      BOOL_OR(\"event_name\" MATCHES ('Confirmed'))\n  )",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(DISTINCT \"case_id\")\nFROM\n  FLATTEN(\"defaultview-183\")\nWHERE\n  (\n    SELECT\n      BOOL_OR(\"event_name\" MATCHES ('Confirmed'))\n  )"
    },
    {
        "filename": "427922cb53",
        "split": "test",
        "name": "Number of PRs",
        "query": "SELECT count(DISTINCT \"Last PR Id\") FROM \"defaultview-431\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct 'Last PR Id' values from the 'defaultview-431' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT(DISTINCT \"Last PR Id\")\nFROM\n  \"defaultview-431\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT(DISTINCT \"Last PR Id\")\nFROM\n  \"defaultview-431\"\n                "
    },
    {
        "filename": "ba61aabb1a",
        "split": "test",
        "name": "Event: Update Payment Term (PO)",
        "query": "SELECT\n    count(event_name) / 1000\nFROM\n    FLATTEN(\"defaultview-225\")\nWHERE\n    event_name IN ('Update PO Payment Terms')",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For every 1000 rows in the 'defaultview-225' table, count the number of rows where the 'event_name' column has a value of 'Update PO Payment Terms'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(\"event_name\" \nMATCH (BEHAVIOR OF \n\t(UPDATE PO Payment Terms))))\n/FREQ(\"CASE_ID\")\n*1000\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(\"event_name\" \nMATCH (BEHAVIOR OF \n\t(UPDATE PO Payment Terms))))\n/FREQ(\"CASE_ID\")\n*1000\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "f17c42daff",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of the 'Inv. Converted USD Amount' column in the 'defaultview-225' table where the 'Last Inv. Item Clearing Date' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \nSUM(\"Inv. Converted USD Amount\"  ) FILTER (WHERE \"Last Inv. Item Clearing Date\" IS NULL) \n FROM \"defaultview-225\"\n ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \nSUM(\"Inv. Converted USD Amount\"  ) FILTER (WHERE \"Last Inv. Item Clearing Date\" IS NULL) \n FROM \"defaultview-225\"\n "
    },
    {
        "filename": "54c0f08366",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Production Scheduler Profile",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of unique CASE_IDs for each Production Scheduler Profile in the defaultview-183 table, group the results by the Profile, and order the results descending by the number of CASE_IDs.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(DISTINCT \"CASE_ID\") as \"No of Cases\", \"Production Scheduler Profile\" as \"Case Owner Profile\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC, 2 ASC\n--Bubbles As Displayed Column 3",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(DISTINCT \"CASE_ID\") as \"No of Cases\", \"Production Scheduler Profile\" as \"Case Owner Profile\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC, 2 ASC\n--Bubbles As Displayed Column 3"
    },
    {
        "filename": "9a9d898912",
        "split": "test",
        "name": "Invoice Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"Last Invoice Reconciliation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Get the percentage of rejected invoices with catalog items in the defaultview-431 table. Filter the results to only include invoices with a Last Invoice Reconciliation Status of 'Rejected' and a PO Item Line Type of 'Catalog'. Calculate the percentage by dividing the count of distinct Last Invoice Id for the filtered results by the total count of distinct Last Invoice Id and multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (DISTINCT \"Last Invoice Id\") FILTER(\n\tWHERE\n\t\"Last Invoice Reconciliation Result\" IN ('Last Invoice Rejected') \n\tAND \"PO Last Item Currency\" IS NOT NULL\n\tAND \"PO Item Line Type\" IN ('Catalog'))\n/ COUNT (DISTINCT \"Last Invoice Id\" ) FILTER(\n\tWHERE\n\t\"Last Invoice Reconciliation Result\" IS NOT NULL\n\tAND \"PO Last Item Currency\" IS NOT NULL\n\tAND \"PO Item Line Type\" IN ('Catalog')\n\t) \n* 100\nFROM \"defaultview-431\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (DISTINCT \"Last Invoice Id\") FILTER(\n\tWHERE\n\t\"Last Invoice Reconciliation Result\" IN ('Last Invoice Rejected') \n\tAND \"PO Last Item Currency\" IS NOT NULL\n\tAND \"PO Item Line Type\" IN ('Catalog'))\n/ COUNT (DISTINCT \"Last Invoice Id\" ) FILTER(\n\tWHERE\n\t\"Last Invoice Reconciliation Result\" IS NOT NULL\n\tAND \"PO Last Item Currency\" IS NOT NULL\n\tAND \"PO Item Line Type\" IN ('Catalog')\n\t) \n* 100\nFROM \"defaultview-431\"\n                "
    },
    {
        "filename": "5f9ce977a7",
        "split": "test",
        "name": "Automation Rate Deletion Flag",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Deletion Flag'\n\n\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each event_name in FLATTEN(\"defaultview-183\"), count the number of events where the 'Event Created By User Type' column does not contain the value 'Dialog'. Then, divide that count by the total number of events with the same event_name and multiply by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n--(count(event_name) WHERE \"Event Created By User Type\" NOT IN ('Dialog')) / count(event_name) * 100,\ncount(event_name) ,\nevent_name\nFROM \"defaultview-183\"\n--WHERE\n--\"Event Created By User Type\" NOT IN ('Dialog')\n--AND \"Event Created By User Type\" IS NOT NULL\n--AND \"Event Created By User Type\" = 'System'\nGROUP BY 2\n--HAVING count(1) = 1\nORDER BY 1 Desc\n--LIMIT 5\n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n--(count(event_name) WHERE \"Event Created By User Type\" NOT IN ('Dialog')) / count(event_name) * 100,\ncount(event_name) ,\nevent_name\nFROM \"defaultview-183\"\n--WHERE\n--\"Event Created By User Type\" NOT IN ('Dialog')\n--AND \"Event Created By User Type\" IS NOT NULL\n--AND \"Event Created By User Type\" = 'System'\nGROUP BY 2\n--HAVING count(1) = 1\nORDER BY 1 Desc\n--LIMIT 5\n\n                "
    },
    {
        "filename": "9676e5663d",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Creation to PO Release",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last 'Release PO' event and the first 'Create PO Item' event for each process instance in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\n\t  (SELECT LAST(end_time) WHERE event_name = 'Release PO')\n\t- (SELECT FIRST(end_time) WHERE event_name = 'Create PO Item')\n   )\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\n\t  (SELECT LAST(end_time) WHERE event_name = 'Release PO')\n\t- (SELECT FIRST(end_time) WHERE event_name = 'Create PO Item')\n   )\nFROM \"defaultview-124\""
    },
    {
        "filename": "dfc90845e4",
        "split": "test",
        "name": "Average Invoice Clearing Time",
        "query": "SELECT\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Pay Invoice')\n        )\n    ) - (\n      SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Receive Invoice')\n        )\n    )\n  ) AS PaymentTime\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average payment time for invoices. The calculation is done by subtracting the last end time of an event named 'Receive Invoice' from the first end time of an event named 'Pay Invoice'. The events are selected from the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG(\n\t(SELECT LAST(end_time) FILTER (\n\t\tWHERE event_name IN ('Receive Invoice')))\n\t-(SELECT FIRST(end_time) FILTER (\n\t\tWHERE event_name IN ('Pay Invoice')))\n   )\n   \nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG(\n\t(SELECT LAST(end_time) FILTER (\n\t\tWHERE event_name IN ('Receive Invoice')))\n\t-(SELECT FIRST(end_time) FILTER (\n\t\tWHERE event_name IN ('Pay Invoice')))\n   )\n   \nFROM \"defaultview-545\""
    },
    {
        "filename": "bfb506743e",
        "split": "test",
        "name": "% of ODO Items w/o WTs",
        "query": "\nSELECT\nCOUNT(\nCASE WHEN event_name MATCHES('Create Warehouse Task') THEN null\nELSE case_id\nEND)\n/\nCOUNT(case_id)\n*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of warehouse tasks created out of all cases, by counting the number of case IDs that match the event name 'Create Warehouse Task' and dividing it by the total number of case IDs, in the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (\"event name\" IN ('Create Warehouse Task'))\n      )\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (\"event name\" IN ('Create Warehouse Task'))\n      )\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-545\""
    },
    {
        "filename": "bdf1b3383d",
        "split": "test",
        "name": "SOL-1742 Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of case IDs that have at least two occurrences of any event name, by filtering the count of case IDs using a subquery that checks for occurrence > 1, and then dividing the result by the total count of case IDs and multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE (SELECT BOOL_OR(sub > 1) \nFROM (SELECT count(\"case_id\") AS sub WHERE sub > 0)) )) / \nCOUNT(case_id) * 100\nFROM \"SapCases\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (WHERE (SELECT BOOL_OR(sub > 1) \nFROM (SELECT count(\"case_id\") AS sub WHERE sub > 0)) )) / \nCOUNT(case_id) * 100\nFROM \"SapCases\"\n                "
    },
    {
        "filename": "547ec2c903",
        "split": "test",
        "name": "No. of Mat. Invoices (Create to Clear Invoice Time > 18 Days) by Inv. Payment Term",
        "query": "SELECT \nCOUNT (CASE_ID) AS \"No. of Cases\", \nSUM(\"Last FI Invoice Item Gross Amount Local Curr.\") AS \"Total Inv. Amount\",\n\"Last FI Invoice Item Terms of Payment Key\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') > DURATION '18DAYS'\nGROUP BY 3\nORDER BY 1 DESC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases, total invoice amount, and terms of payment key from the 'defaultview-124' table. Filter the results to only include cases where the clear invoice event occurred at least 18 days after the create FI invoice event. Group the results by the terms of payment key and order them by the number of cases in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT(CASE_ID) AS \"No. of Cases\", \n  SUM(\"Clear invoice amount in LC\") AS \"Total Invoice Amount\",\n  --\"Clearing document number\" AS \"Accounting Doc No.\"\n  \"terms of payment key\"\nFROM \"defaultview-124\"\nWHERE EVENT_NAME MATCHES('Match Incoming Invoice to PO')\n AND (\"Clearing date\" - \"create FI invoice date\") > DURATION '17DAYS'\nGROUP BY 3\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT(CASE_ID) AS \"No. of Cases\", \n  SUM(\"Clear invoice amount in LC\") AS \"Total Invoice Amount\",\n  --\"Clearing document number\" AS \"Accounting Doc No.\"\n  \"terms of payment key\"\nFROM \"defaultview-124\"\nWHERE EVENT_NAME MATCHES('Match Incoming Invoice to PO')\n AND (\"Clearing date\" - \"create FI invoice date\") > DURATION '17DAYS'\nGROUP BY 3\nORDER BY 1 DESC"
    },
    {
        "filename": "82093ccee6",
        "split": "test",
        "name": "_Number of  timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of the 'TSR_Count' column in the 'defaultview-197' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "2dd9d9b679",
        "split": "test",
        "name": "Number of goods receipts",
        "query": "SELECT SUM((\n\tSELECT COUNT(event_name)\n\tFILTER(WHERE event_name LIKE 'GR%')))\nFROM \"defaultview-183\"\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the sum of the count of events with names starting with 'GR' from the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM(\n    (\n      SELECT\n        COUNT(evt_name)\n      WHERE\n        evt_name LIKE 'GR%'\n    )\n  ) AS \"No of Goods Receipts\"\nFROM\n  FLATTEN(\"defaultview-183\")\n                ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM(\n    (\n      SELECT\n        COUNT(evt_name)\n      WHERE\n        evt_name LIKE 'GR%'\n    )\n  ) AS \"No of Goods Receipts\"\nFROM\n  FLATTEN(\"defaultview-183\")\n                "
    },
    {
        "filename": "852ec656c8",
        "split": "test",
        "name": "Number of events",
        "query": "SELECT COUNT(event_name) FROM \"defaultview-124\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Counting the number of events with name 'event_name' in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (event_name) FROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (event_name) FROM \"defaultview-124\""
    },
    {
        "filename": "496950a757",
        "split": "test",
        "name": "Average Payment Time Over Time and Company Codes",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\",\n    AR_CompanyCode\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve average clearing time and clearing date for each company code. Clearing date is calculated by truncating the end time to the first day of the month. Creation date is used as the reference date. Filter events with names containing 'Clear'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG(\"ClearingDate\") AS \"Clearing Date\",\nAVG(\"ClearingTime\") AS \"AVG. Clearing Time\"\nFROM \n(\nSELECT \nDATE_TRUNC('MONTH', (SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create vs. SUS Bank Transfer Clearing Created'))),\nAVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'FB1D Clearing Changed'))) \n-- \"Create vs. SUS Bank Transfer Clearing Created\" ~end_time~> (SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'FB1D Clearing Changed'))\nAS \"AVG. ClearingTime\",\nevent_name AS \"Events\"\nFROM \"data-6376930732474516905\".\"event\"\n) AS temp\nWHERE NOT \"Events\" IS NULL\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG(\"ClearingDate\") AS \"Clearing Date\",\nAVG(\"ClearingTime\") AS \"AVG. Clearing Time\"\nFROM \n(\nSELECT \nDATE_TRUNC('MONTH', (SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create vs. SUS Bank Transfer Clearing Created'))),\nAVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'FB1D Clearing Changed'))) \n-- \"Create vs. SUS Bank Transfer Clearing Created\" ~end_time~> (SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'FB1D Clearing Changed'))\nAS \"AVG. ClearingTime\",\nevent_name AS \"Events\"\nFROM \"data-6376930732474516905\".\"event\"\n) AS temp\nWHERE NOT \"Events\" IS NULL\n"
    },
    {
        "filename": "c8419a5887",
        "split": "test",
        "name": "Number of accounts receivables documents paid late",
        "query": "\nSELECT\nSUM(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of the 'AR_PaidLateCount' column from the 'defaultview-222' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n SUM(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n SUM(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"\n                "
    },
    {
        "filename": "1049f58d89",
        "split": "test",
        "name": "Manual Change Rate by SD Customer Country ",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocCustomerCountry\" AS \"SD Customer Country\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of sales documents (SDs) and the change rate of SDs created with Dialog by user type, and the customer country of SDs, from the 'defaultview-383' table, ordered by the number of SDs in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\"SD\") AS \"No\"\n,\"Dialog_UserType\" \n,CASE \n WHEN \"Dialog_IsSpeciallyChangedBy\" IN (',FM2'', ',FM3'') THEN ''SDs FM'' \n WHEN \"Dialog_IsSpeciallyChangedBy\" IN (''0'') THEN ''Self service'' \n WHEN \"Dialog_IsSpeciallyChangedBy\" IS NULL THEN ''not pre-selected''\n ELSE ''other'' END AS \"Case Type\"\n,CustomerCountry\n,sum(CaseTypeCount)/count(\"SD\") as \"Change Rate\" --(1-(count(\"CaseType Index\")/count(\"SD\"))) as \"Change Rate\"\nFROM \"defaultview-383\"\nWHERE DATE_TRUNC(''day'', FirstEvent) \nBETWEEN '2021-05-01' AND '2022-04-30'\nAND (((\"Dialog_CC\" ~ 'CT[12]V_') OR (\"Dialog_CC\" ~ 'CT[3456]V_.') OR (\"Dialog_CC\" ~ 'CT[3456]R_.')OR (\"Dialog_CC\" ~ 'CT[3456]_R.') OR (\"Dialog_CC\" ~ 'CT_7._R') OR (\"Dialog_CC\" ~ 'CT[78]_.') OR (\"Dialog_CC\" ~ 'CT[78]R_.') OR (\"Dialog_CC\" ~ 'CT_8.R') OR (\"Dialog_CC\" ~ 'CV8_.') OR (\"Dialog_CC\" ~ 'DT-AWB_.') OR (\"Dialog_CC\" ~ 'DT-.') OR (\"Dialog_CC\" ~ 'F7_.') OR (\"Dialog_CC\" ~ 'IF_.') OR (\"Dialog_CC\" ~ 'JTPAB_') OR (\"Dialog_CC\" ~ 'JTYJ_.') OR (\"Dialog_CC\" ~ 'KY_.') OR (\"Dialog_CC\" ~ 'KZ_.YZ') OR (\"Dialog_CC\" ~ 'KZ_.') OR (\"Dialog_CC\" ~ 'PH_21_.') OR (\"Dialog_CC\" ~ 'RO_.') OR (\"Dialog_CC\" ~ 'SQ_.') OR (\"Dialog_CC\" ~ 'ST_.') OR (\"Dialog_CC\" ~ 'SW_.') OR (\"Dialog_CC\" ~ 'TA_.') OR (\"Dialog_CC\" ~ 'TK_.YZ.TM_MCPL') OR (\"Dialog_CC\" ~ 'TK_2CPL') OR (\"Dialog_CC\" ~ 'TK_2_SUBL') OR (\"Dialog_CC\" ~ 'TK_3CPL') OR (\"Dialog_CC\" ~ 'TK_3_SUBL') OR (\"Dialog_CC\" ~ 'TK_4CPL') OR (\"Dialog_CC\" ~ 'TK_4_SUBL') OR (\"Dialog_CC\" ~ 'TK_AUFL') OR (\"Dialog_CC\" ~ 'TK_CP_.') OR (\"Dialog_CC\" ~ 'TK_CPL') OR (\"Dialog_CC\" ~ 'TK_R_SUBL') OR (\"Dialog_CC\" ~ 'TU_.YZ.TM_MCPL'))\n OR ((\"Dialog_CC\" ~ 'VN_.YZ') OR (\"Dialog_CC\" ~ 'VN_.') OR (\"Dialog_CC\" ~ 'VL_.') OR (\"Dialog_CC\" ~ 'VU_.YZ') OR (\"Dialog_CC\" ~ 'VU_.') OR (\"Dialog_CC\" ~ 'VZ_.') OR (\"Dialog_CC\" ~ 'WA_.YZ') OR (\"Dialog_CC\" ~ 'WA_.') OR (\"Dialog_CC\" ~ 'WB_.') OR (\"Dialog_CC\" ~ 'WF_.') OR (\"Dialog_CC\" ~ 'WG_.') OR (\"Dialog_CC\" ~ 'WH_.') OR (\"Dialog_CC\" ~ 'WJ_.') OR (\"Dialog_CC\" ~ 'WK_.') OR (\"Dialog_CC\" ~ 'WK_.PCL') OR (\"Dialog_CC\" ~ 'WL_.') OR (\"Dialog_CC\" ~ 'WM_.') OR (\"Dialog_CC\" ~ 'WQ_.') OR (\"Dialog_CC\" ~ 'WW_.YZ.TM_MCPL') OR (\"Dialog_CC\" ~ 'WW_.') OR (\"Dialog_CC\" ~ 'WY_.') OR (\"Dialog_CC\" ~ 'WZ_.YZ') OR (\"Dialog_CC\" ~ 'WZ_.'))\n OR ((\"Dialog_CC\" ~ 'XK_.') OR (\"Dialog_CC\" ~ 'YD_/*mc*/*/KA') OR (\"Dialog_CC\" ~ 'YD_/*mc*/*') OR (\"Dialog_CC\" ~ 'YD_/*qa*/*') OR (\"Dialog_CC\" ~ 'YD_/*REC*/*') OR (\"Dialog_CC\" ~ 'YD_/*ST*/*') OR (\"Dialog_CC\" ~ 'YD_/*SUP*/*') OR (\"Dialog_CC\" ~ 'YD_/*VL*/*') OR (\"Dialog_CC\" ~ 'YD_/*WB*/*') OR (\"Dialog_CC\" ~ 'YD_/A') OR (\"Dialog_CC\" ~ 'YD_ASE') OR (\"Dialog_CC\" ~ 'YD_BE') OR (\"Dialog_CC\" ~ 'YD_BLW') OR (\"Dialog_CC\" ~ 'YD_BP') OR (\"Dialog_CC\" ~ 'YD_BU') OR (\"Dialog_CC\" ~ 'YD_CFI'))\n OR ((\"Dialog_CC\" ~ 'YD_CLW') OR (\"Dialog_CC\" ~ 'YD_D') OR (\"Dialog_CC\" ~ 'YD_EE') OR (\"Dialog_CC\" ~ 'YD_EC') OR (\"Dialog_CC\" ~ 'YD_EP') OR (\"Dialog_CC\" ~ 'YD_FA') OR (\"Dialog_CC\" ~ 'YD_FIREAF') OR (\"Dialog_CC\" ~ 'YD_FLO') OR (\"Dialog_CC\" ~ 'YD_G_WFA') OR (\"Dialog_CC\" ~ 'YD_GG')\n OR ((\"Dialog_CC\" ~ 'YD_GLW') OR (\"Dialog_CC\" ~ 'YD_HEM') OR (\"Dialog_CC\" ~ 'YD_HESCA') OR (\"Dialog_CC\" ~ 'YD_JCM') OR (\"Dialog_CC\" ~ 'YD_JDG') OR (\"Dialog_CC\" ~ 'YD_JE') OR (\"Dialog_CC\" ~ 'YD_JFASUE') OR (\"Dialog_CC\" ~ 'YD_JG') OR (\"Dialog_CC\" ~ 'YD_JGPD') OR (\"Dialog_CC\" ~ 'YD_JGDSD')\n OR ((\"Dialog_CC\" ~ 'YD_JGDSI') OR (\"Dialog_CC\" ~ 'YD_JGFMCPL')) OR (\"Dialog_CC\" ~ 'YD_JKBJJK') OR (\"Dialog_CC\" ~ 'YD_JM') OR (\"Dialog_CC\" ~ 'YD_JP') OR (\"Dialog_CC\" ~ 'YD_JTH') OR (\"Dialog_CC\" ~ 'YD_JWFD') OR (\"Dialog_CC\" ~ 'YD_KA') OR (\"Dialog_CC\" ~ 'YD_KFI') OR (\"Dialog_CC\" ~ 'YD_KK')))\n OR ((\"Dialog_CC\" ~ 'YD_KM') OR (\"Dialog_CC\" ~ 'YD_KASU') OR (\"Dialog_CC\" ~ 'YD_KY') OR (\"Dialog_CC\" ~ 'YD_LCF') OR (\"Dialog_CC\" ~ 'YD_LIQU') OR (\"Dialog_CC\" ~ 'YD_LKM') OR (\"Dialog_CC\" ~ 'YD_LFA') OR (\"Dialog_CC\" ~ 'YD_LFME') OR (\"Dialog_CC\" ~ 'YD_FT1') OR (\"Dialog_CC\" ~ 'YD_MFA'))\n OR ((\"Dialog_CC\" ~ 'YD_MG') OR (\"Dialog_CC\" ~ 'YD_MGME') OR (\"Dialog_CC\" ~ 'YD_MMG') OR (\"Dialog_CC\" ~ 'YD_MR') OR (\"Dialog_CC\" ~ 'YD_MS') OR (\"Dialog_CC\" ~ 'YD_MT') OR (\"Dialog_CC\" ~ 'YD_MCJU') OR (\"Dialog_CC\" ~ 'YD_MKASU') OR (\"Dialog_CC\" ~ 'YD_NLJ') OR (\"Dialog_CC\" ~ 'YD_NLUB'))\n OR ((\"Dialog_CC\" ~ 'YD_NO') OR (\"Dialog_CC\" ~ 'YD_NLASU') OR (\"Dialog_CC\" ~ 'YD_OC') OR (\"Dialog_CC\" ~ 'YD_PPR') OR (\"Dialog_CC\" ~ 'YD_PLW') OR (\"Dialog_CC\" ~ 'YD_PO') OR (\"Dialog_CC\" ~ 'YD_PD') OR (\"Dialog_CC\" ~ 'YD_PDE') OR (\"Dialog_CC\" ~ 'YD_PDU_DEU') OR (\"Dialog_CC\" ~ 'YD_PH')))\n OR ((\"Dialog_CC\" ~ 'YD_PL') OR (\"Dialog_CC\" ~ 'YD_PS') OR (\"Dialog_CC\" ~ 'YD_PSA') OR (\"Dialog_CC\" ~ 'YD_PDN_SDW') OR (\"Dialog_CC\" ~ 'YD_PDN_SDN') OR (\"Dialog_CC\" ~ 'YD_SAAD') OR (\"Dialog_CC\" ~ 'YD_SAKS') OR (\"Dialog_CC\" ~ 'YD_SD') OR (\"Dialog_CC\" ~ 'YD_SEWI') OR (\"Dialog_CC\" ~ 'YD_SKASU'))\n OR ((\"Dialog_CC\" ~ 'YD_SMC') OR (\"Dialog_CC\" ~ 'YD_SMCB') OR (\"Dialog_CC\" ~ 'YD_SMCSA') OR (\"Dialog_CC\" ~ 'YD_SSCA') OR (\"Dialog_CC\" ~ 'YD_SSC') OR (\"Dialog_CC\" ~ 'YD_SU') OR (\"Dialog_CC\" ~ 'YD_SUSU') OR (\"Dialog_CC\" ~ 'YD_SUFI') OR (\"Dialog_CC\" ~ 'YD_TBWB') OR (\"Dialog_CC\" ~ 'YD_TR_RF')\n OR ((\"Dialog_CC\" ~ 'YD_TRA') OR (\"Dialog_CC\" ~ 'YD_TSW') OR (\"Dialog_CC\" ~ 'YD_UA') OR (\"Dialog_CC\" ~ 'YD_UGY') OR (\"Dialog_CC\" ~ 'YD_UHSCA') OR (\"Dialog_CC\" ~ 'YD_ULW') OR (\"Dialog_CC\" ~ 'YD_UUB') OR (\"Dialog_CC\" ~ 'YD_UU') OR (\"Dialog_CC\" ~ 'YD_UUFI') OR (\"Dialog_CC\" ~ 'YD_UX_CT')))\n OR ((\"Dialog_CC\" ~ 'YD_UX_PSE') OR (\"Dialog_CC\" ~ 'YD_BDE_PSE') OR (\"Dialog_CC\" ~ 'YD_UX_RD') OR (\"Dialog_CC\" ~ 'YD_JZCTFRDWLSCA') OR (\"Dialog_CC\" ~ 'YD_JZDWLFWLSCA') OR (\"Dialog_CC\" ~ 'YD_DEJTJZDWLFWLSCA') OR (\"Dialog_CC\" ~ 'YD_DEJTJZCTFRDWLSCADeJTJZCTFRDWLSCA'))\n OR ((\"Dialog_CC\" ~ 'YD_GCFWLAUFLCA') OR (\"Dialog_CC\" ~ 'YD_PWKDBAD') OR (\"Dialog_CC\" ~ 'YD_KKOCHER') OR (\"Dialog_CC\" ~ 'YD_DEJTJZCTFRDWL') OR (\"Dialog_CC\" ~ 'YD_JZCKOCHNJZDEC') OR (\"Dialog_CC\" ~ 'YD_JZCUEXJZCUEX') OR (\"Dialog_CC\" ~ 'YD_JZCZFRACKJZCZFRACK') OR (\"Dialog_CC\" ~ 'YD_DEJTGJZDEJT')\n OR ((\"Dialog_CC\" ~ 'YD_DEJTGJZGUHLJZGERCRCA') OR (\"Dialog_CC\" ~ 'YD_DEJTJZDEJTAGJZDEC') OR (\"Dialog_CC\" ~ 'YD_JZDEJTJZDEJTKOCHNC') OR (\"Dialog_CC\" ~ 'YD_DEJTJZDEJTKOCH') OR (\"Dialog_CC\" ~ 'YD_JZDEJTKOCHNJDLDGJZKRE') OR (\"Dialog_CC\" ~ 'YD_ULJZC') OR (\"Dialog_CC\" ~ 'YD_JZDEJTKOCHNJDLDGJZK'))\n OR ((\"Dialog_CC\" ~ 'YD_JZMJZMJZMJZ'));\n ,\"Dialog_UserType\" \nGROUP BY 2,3,4\nORDER BY 1 DESC\nFILL 0\n,2\n,3\n,4",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\"SD\") AS \"No\"\n,\"Dialog_UserType\" \n,CASE \n WHEN \"Dialog_IsSpeciallyChangedBy\" IN (',FM2'', ',FM3'') THEN ''SDs FM'' \n WHEN \"Dialog_IsSpeciallyChangedBy\" IN (''0'') THEN ''Self service'' \n WHEN \"Dialog_IsSpeciallyChangedBy\" IS NULL THEN ''not pre-selected''\n ELSE ''other'' END AS \"Case Type\"\n,CustomerCountry\n,sum(CaseTypeCount)/count(\"SD\") as \"Change Rate\" --(1-(count(\"CaseType Index\")/count(\"SD\"))) as \"Change Rate\"\nFROM \"defaultview-383\"\nWHERE DATE_TRUNC(''day'', FirstEvent) \nBETWEEN '2021-05-01' AND '2022-04-30'\nAND (((\"Dialog_CC\" ~ 'CT[12]V_') OR (\"Dialog_CC\" ~ 'CT[3456]V_.') OR (\"Dialog_CC\" ~ 'CT[3456]R_.')OR (\"Dialog_CC\" ~ 'CT[3456]_R.') OR (\"Dialog_CC\" ~ 'CT_7._R') OR (\"Dialog_CC\" ~ 'CT[78]_.') OR (\"Dialog_CC\" ~ 'CT[78]R_.') OR (\"Dialog_CC\" ~ 'CT_8.R') OR (\"Dialog_CC\" ~ 'CV8_.') OR (\"Dialog_CC\" ~ 'DT-AWB_.') OR (\"Dialog_CC\" ~ 'DT-.') OR (\"Dialog_CC\" ~ 'F7_.') OR (\"Dialog_CC\" ~ 'IF_.') OR (\"Dialog_CC\" ~ 'JTPAB_') OR (\"Dialog_CC\" ~ 'JTYJ_.') OR (\"Dialog_CC\" ~ 'KY_.') OR (\"Dialog_CC\" ~ 'KZ_.YZ') OR (\"Dialog_CC\" ~ 'KZ_.') OR (\"Dialog_CC\" ~ 'PH_21_.') OR (\"Dialog_CC\" ~ 'RO_.') OR (\"Dialog_CC\" ~ 'SQ_.') OR (\"Dialog_CC\" ~ 'ST_.') OR (\"Dialog_CC\" ~ 'SW_.') OR (\"Dialog_CC\" ~ 'TA_.') OR (\"Dialog_CC\" ~ 'TK_.YZ.TM_MCPL') OR (\"Dialog_CC\" ~ 'TK_2CPL') OR (\"Dialog_CC\" ~ 'TK_2_SUBL') OR (\"Dialog_CC\" ~ 'TK_3CPL') OR (\"Dialog_CC\" ~ 'TK_3_SUBL') OR (\"Dialog_CC\" ~ 'TK_4CPL') OR (\"Dialog_CC\" ~ 'TK_4_SUBL') OR (\"Dialog_CC\" ~ 'TK_AUFL') OR (\"Dialog_CC\" ~ 'TK_CP_.') OR (\"Dialog_CC\" ~ 'TK_CPL') OR (\"Dialog_CC\" ~ 'TK_R_SUBL') OR (\"Dialog_CC\" ~ 'TU_.YZ.TM_MCPL'))\n OR ((\"Dialog_CC\" ~ 'VN_.YZ') OR (\"Dialog_CC\" ~ 'VN_.') OR (\"Dialog_CC\" ~ 'VL_.') OR (\"Dialog_CC\" ~ 'VU_.YZ') OR (\"Dialog_CC\" ~ 'VU_.') OR (\"Dialog_CC\" ~ 'VZ_.') OR (\"Dialog_CC\" ~ 'WA_.YZ') OR (\"Dialog_CC\" ~ 'WA_.') OR (\"Dialog_CC\" ~ 'WB_.') OR (\"Dialog_CC\" ~ 'WF_.') OR (\"Dialog_CC\" ~ 'WG_.') OR (\"Dialog_CC\" ~ 'WH_.') OR (\"Dialog_CC\" ~ 'WJ_.') OR (\"Dialog_CC\" ~ 'WK_.') OR (\"Dialog_CC\" ~ 'WK_.PCL') OR (\"Dialog_CC\" ~ 'WL_.') OR (\"Dialog_CC\" ~ 'WM_.') OR (\"Dialog_CC\" ~ 'WQ_.') OR (\"Dialog_CC\" ~ 'WW_.YZ.TM_MCPL') OR (\"Dialog_CC\" ~ 'WW_.') OR (\"Dialog_CC\" ~ 'WY_.') OR (\"Dialog_CC\" ~ 'WZ_.YZ') OR (\"Dialog_CC\" ~ 'WZ_.'))\n OR ((\"Dialog_CC\" ~ 'XK_.') OR (\"Dialog_CC\" ~ 'YD_/*mc*/*/KA') OR (\"Dialog_CC\" ~ 'YD_/*mc*/*') OR (\"Dialog_CC\" ~ 'YD_/*qa*/*') OR (\"Dialog_CC\" ~ 'YD_/*REC*/*') OR (\"Dialog_CC\" ~ 'YD_/*ST*/*') OR (\"Dialog_CC\" ~ 'YD_/*SUP*/*') OR (\"Dialog_CC\" ~ 'YD_/*VL*/*') OR (\"Dialog_CC\" ~ 'YD_/*WB*/*') OR (\"Dialog_CC\" ~ 'YD_/A') OR (\"Dialog_CC\" ~ 'YD_ASE') OR (\"Dialog_CC\" ~ 'YD_BE') OR (\"Dialog_CC\" ~ 'YD_BLW') OR (\"Dialog_CC\" ~ 'YD_BP') OR (\"Dialog_CC\" ~ 'YD_BU') OR (\"Dialog_CC\" ~ 'YD_CFI'))\n OR ((\"Dialog_CC\" ~ 'YD_CLW') OR (\"Dialog_CC\" ~ 'YD_D') OR (\"Dialog_CC\" ~ 'YD_EE') OR (\"Dialog_CC\" ~ 'YD_EC') OR (\"Dialog_CC\" ~ 'YD_EP') OR (\"Dialog_CC\" ~ 'YD_FA') OR (\"Dialog_CC\" ~ 'YD_FIREAF') OR (\"Dialog_CC\" ~ 'YD_FLO') OR (\"Dialog_CC\" ~ 'YD_G_WFA') OR (\"Dialog_CC\" ~ 'YD_GG')\n OR ((\"Dialog_CC\" ~ 'YD_GLW') OR (\"Dialog_CC\" ~ 'YD_HEM') OR (\"Dialog_CC\" ~ 'YD_HESCA') OR (\"Dialog_CC\" ~ 'YD_JCM') OR (\"Dialog_CC\" ~ 'YD_JDG') OR (\"Dialog_CC\" ~ 'YD_JE') OR (\"Dialog_CC\" ~ 'YD_JFASUE') OR (\"Dialog_CC\" ~ 'YD_JG') OR (\"Dialog_CC\" ~ 'YD_JGPD') OR (\"Dialog_CC\" ~ 'YD_JGDSD')\n OR ((\"Dialog_CC\" ~ 'YD_JGDSI') OR (\"Dialog_CC\" ~ 'YD_JGFMCPL')) OR (\"Dialog_CC\" ~ 'YD_JKBJJK') OR (\"Dialog_CC\" ~ 'YD_JM') OR (\"Dialog_CC\" ~ 'YD_JP') OR (\"Dialog_CC\" ~ 'YD_JTH') OR (\"Dialog_CC\" ~ 'YD_JWFD') OR (\"Dialog_CC\" ~ 'YD_KA') OR (\"Dialog_CC\" ~ 'YD_KFI') OR (\"Dialog_CC\" ~ 'YD_KK')))\n OR ((\"Dialog_CC\" ~ 'YD_KM') OR (\"Dialog_CC\" ~ 'YD_KASU') OR (\"Dialog_CC\" ~ 'YD_KY') OR (\"Dialog_CC\" ~ 'YD_LCF') OR (\"Dialog_CC\" ~ 'YD_LIQU') OR (\"Dialog_CC\" ~ 'YD_LKM') OR (\"Dialog_CC\" ~ 'YD_LFA') OR (\"Dialog_CC\" ~ 'YD_LFME') OR (\"Dialog_CC\" ~ 'YD_FT1') OR (\"Dialog_CC\" ~ 'YD_MFA'))\n OR ((\"Dialog_CC\" ~ 'YD_MG') OR (\"Dialog_CC\" ~ 'YD_MGME') OR (\"Dialog_CC\" ~ 'YD_MMG') OR (\"Dialog_CC\" ~ 'YD_MR') OR (\"Dialog_CC\" ~ 'YD_MS') OR (\"Dialog_CC\" ~ 'YD_MT') OR (\"Dialog_CC\" ~ 'YD_MCJU') OR (\"Dialog_CC\" ~ 'YD_MKASU') OR (\"Dialog_CC\" ~ 'YD_NLJ') OR (\"Dialog_CC\" ~ 'YD_NLUB'))\n OR ((\"Dialog_CC\" ~ 'YD_NO') OR (\"Dialog_CC\" ~ 'YD_NLASU') OR (\"Dialog_CC\" ~ 'YD_OC') OR (\"Dialog_CC\" ~ 'YD_PPR') OR (\"Dialog_CC\" ~ 'YD_PLW') OR (\"Dialog_CC\" ~ 'YD_PO') OR (\"Dialog_CC\" ~ 'YD_PD') OR (\"Dialog_CC\" ~ 'YD_PDE') OR (\"Dialog_CC\" ~ 'YD_PDU_DEU') OR (\"Dialog_CC\" ~ 'YD_PH')))\n OR ((\"Dialog_CC\" ~ 'YD_PL') OR (\"Dialog_CC\" ~ 'YD_PS') OR (\"Dialog_CC\" ~ 'YD_PSA') OR (\"Dialog_CC\" ~ 'YD_PDN_SDW') OR (\"Dialog_CC\" ~ 'YD_PDN_SDN') OR (\"Dialog_CC\" ~ 'YD_SAAD') OR (\"Dialog_CC\" ~ 'YD_SAKS') OR (\"Dialog_CC\" ~ 'YD_SD') OR (\"Dialog_CC\" ~ 'YD_SEWI') OR (\"Dialog_CC\" ~ 'YD_SKASU'))\n OR ((\"Dialog_CC\" ~ 'YD_SMC') OR (\"Dialog_CC\" ~ 'YD_SMCB') OR (\"Dialog_CC\" ~ 'YD_SMCSA') OR (\"Dialog_CC\" ~ 'YD_SSCA') OR (\"Dialog_CC\" ~ 'YD_SSC') OR (\"Dialog_CC\" ~ 'YD_SU') OR (\"Dialog_CC\" ~ 'YD_SUSU') OR (\"Dialog_CC\" ~ 'YD_SUFI') OR (\"Dialog_CC\" ~ 'YD_TBWB') OR (\"Dialog_CC\" ~ 'YD_TR_RF')\n OR ((\"Dialog_CC\" ~ 'YD_TRA') OR (\"Dialog_CC\" ~ 'YD_TSW') OR (\"Dialog_CC\" ~ 'YD_UA') OR (\"Dialog_CC\" ~ 'YD_UGY') OR (\"Dialog_CC\" ~ 'YD_UHSCA') OR (\"Dialog_CC\" ~ 'YD_ULW') OR (\"Dialog_CC\" ~ 'YD_UUB') OR (\"Dialog_CC\" ~ 'YD_UU') OR (\"Dialog_CC\" ~ 'YD_UUFI') OR (\"Dialog_CC\" ~ 'YD_UX_CT')))\n OR ((\"Dialog_CC\" ~ 'YD_UX_PSE') OR (\"Dialog_CC\" ~ 'YD_BDE_PSE') OR (\"Dialog_CC\" ~ 'YD_UX_RD') OR (\"Dialog_CC\" ~ 'YD_JZCTFRDWLSCA') OR (\"Dialog_CC\" ~ 'YD_JZDWLFWLSCA') OR (\"Dialog_CC\" ~ 'YD_DEJTJZDWLFWLSCA') OR (\"Dialog_CC\" ~ 'YD_DEJTJZCTFRDWLSCADeJTJZCTFRDWLSCA'))\n OR ((\"Dialog_CC\" ~ 'YD_GCFWLAUFLCA') OR (\"Dialog_CC\" ~ 'YD_PWKDBAD') OR (\"Dialog_CC\" ~ 'YD_KKOCHER') OR (\"Dialog_CC\" ~ 'YD_DEJTJZCTFRDWL') OR (\"Dialog_CC\" ~ 'YD_JZCKOCHNJZDEC') OR (\"Dialog_CC\" ~ 'YD_JZCUEXJZCUEX') OR (\"Dialog_CC\" ~ 'YD_JZCZFRACKJZCZFRACK') OR (\"Dialog_CC\" ~ 'YD_DEJTGJZDEJT')\n OR ((\"Dialog_CC\" ~ 'YD_DEJTGJZGUHLJZGERCRCA') OR (\"Dialog_CC\" ~ 'YD_DEJTJZDEJTAGJZDEC') OR (\"Dialog_CC\" ~ 'YD_JZDEJTJZDEJTKOCHNC') OR (\"Dialog_CC\" ~ 'YD_DEJTJZDEJTKOCH') OR (\"Dialog_CC\" ~ 'YD_JZDEJTKOCHNJDLDGJZKRE') OR (\"Dialog_CC\" ~ 'YD_ULJZC') OR (\"Dialog_CC\" ~ 'YD_JZDEJTKOCHNJDLDGJZK'))\n OR ((\"Dialog_CC\" ~ 'YD_JZMJZMJZMJZ'));\n ,\"Dialog_UserType\" \nGROUP BY 2,3,4\nORDER BY 1 DESC\nFILL 0\n,2\n,3\n,4"
    },
    {
        "filename": "d5bcc67962",
        "split": "test",
        "name": "Overdue deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', NOW()) > \"PO Item Last Requested Delivery Date\"\n    \tAND \"PO Item Delivery Completed\" IS NULL\n      ) \nFROM \"defaultview-57\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of case_id where the current date is after the PO Item Last Requested Delivery Date and the PO Item Delivery Completed is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) AS \"# Incomplete PO Delivery Items\"\nFROM \"default\".\"process_PO.PO Create Goods Receipt\" \n\nWHERE\n(\"current\" > \"PO Item Last Requested Delivery Date\") AND \"PO Item Delivery Completed\" IS NULL\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) AS \"# Incomplete PO Delivery Items\"\nFROM \"default\".\"process_PO.PO Create Goods Receipt\" \n\nWHERE\n(\"current\" > \"PO Item Last Requested Delivery Date\") AND \"PO Item Delivery Completed\" IS NULL\n"
    },
    {
        "filename": "76aa55b92b",
        "split": "test",
        "name": "Table",
        "query": "SELECT title, case_id, \"IssueType\"  FROM \"defaultview-217\"\nWHERE title LIKE '%Support%'",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the title, case_id, and IssueType columns from the defaultview-217 table where the title contains the string 'Support'.",
        "llm_gpt-35-turbo-0613_query": "SELECT title, case_id, \"IssueType\"\nFROM \"defaultview-217\"\nWHERE title LIKE '%Support%'\n    ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT title, case_id, \"IssueType\"\nFROM \"defaultview-217\"\nWHERE title LIKE '%Support%'\n    "
    },
    {
        "filename": "acf8aac40c",
        "split": "test",
        "name": "SOL-1709 Late Payment Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days')\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each case_id in the 'defaultview-59' table, count the number of instances where the 'Last Inv. Item Clearing Date' is greater than the 'Last Inv. Item Due Date' by more than 1 day, and then divide that number by the total number of case_id where the 'Last Inv. Item Clearing Date' is not null, and finally multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\") > DURATION '1day'\n)\n/ COUNT (CASE_ID) FILTER (WHERE \"Last Inv. Item Clearing Date\" IS NOT NULL)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\") > DURATION '1day'\n)\n/ COUNT (CASE_ID) FILTER (WHERE \"Last Inv. Item Clearing Date\" IS NOT NULL)\n* 100\nFROM \"defaultview-59\"\n                "
    },
    {
        "filename": "4688181a90",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Vendor Name",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Item Material Group Text\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the top 50 rows from the 'defaultview-124' table, sort them in descending order by the 'No. of Cases' column, and return the total number of cases, the sum of the 'PO Item Net Order Value' column, and the 'PO Item Material Group Text' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\" ) AS \"PO Value\",\n\"PO Item Material Group Text\" \nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\" ) AS \"PO Value\",\n\"PO Item Material Group Text\" \nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n"
    },
    {
        "filename": "baf597ad20",
        "split": "test",
        "name": "Percentage of products with at least one period (month) where demand is not fulfilled",
        "query": "SELECT\nCOUNT(\"case_id\") FILTER(\n\tWHERE(\n\t\"Consensus Demand Delivered\" <> \"Consensus Demand\"\n\t)\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n    AND \"Consensus Demand\" > 0 \n)\n/\nCOUNT(\"case_id\") FILTER(\n\tWHERE \"Consensus Demand\" > 0\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count of case_id where Consensus Demand Delivered is not equal to Consensus Demand, month is greater than or equal to the current month, and month minus the current month is less than 320 days, and Consensus Demand is greater than 0, expressed as a percentage of the total count of case_id where Consensus Demand is greater than 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(\n    case_id\n  ) FILTER (\n    WHERE\n      \"Consensus Demand Delivered\" != \"Consensus Demand\" \n      AND month >= DATE_TRUNC('month', NOW()) \n      AND \"month\" - DATE_TRUNC('month', NOW()) <= DURATION '320days'\n    )\n  / COUNT(case_id) FILTER (\n    WHERE\n      \"Consensus Demand\" > 0\n    ) * 100\nFROM\n  \"defaultview-32\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(\n    case_id\n  ) FILTER (\n    WHERE\n      \"Consensus Demand Delivered\" != \"Consensus Demand\" \n      AND month >= DATE_TRUNC('month', NOW()) \n      AND \"month\" - DATE_TRUNC('month', NOW()) <= DURATION '320days'\n    )\n  / COUNT(case_id) FILTER (\n    WHERE\n      \"Consensus Demand\" > 0\n    ) * 100\nFROM\n  \"defaultview-32\""
    },
    {
        "filename": "b4ef96ed37",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"\t",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average duration between 'Basic Start Date' and 'Basic Finish Date' for all records in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\"Basic Finish Date\" - \"Basic Start Date\" )\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\"Basic Finish Date\" - \"Basic Start Date\" )\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "eb31f2d40f",
        "split": "test",
        "name": "_Average project start to end time",
        "query": "\nSELECT\nAVG(Project_StartToEndTime)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average value of the 'Project_StartToEndTime' column in the 'defaultview-197' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t\t(\n\t\tSELECT FIRST(end_time) \n\t\t\tWHERE event_name IN ('Project Start')\n\t\t)\n\t\t-\n\t\t(\n\t\tSELECT FIRST(end_time) \n\t\t\tWHERE event_name IN ('Project Finished')\n\t\t)\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t\t(\n\t\tSELECT FIRST(end_time) \n\t\t\tWHERE event_name IN ('Project Start')\n\t\t)\n\t\t-\n\t\t(\n\t\tSELECT FIRST(end_time) \n\t\t\tWHERE event_name IN ('Project Finished')\n\t\t)\n\t)\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "511c40d335",
        "split": "test",
        "name": "Last PO Vendor Name (too much null...not worthy)",
        "query": "SELECT \"Last PO Vendor Name\" AS \"Last PO Vendor Name\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the last purchase order vendor name and the number of invoices for each vendor, grouped by vendor, and sorted by the number of invoices in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\t\"Last PO Vendor Name\" AS \"Vendor Name\",\n    COUNT(\"Event Name\") FILTER(WHERE SIGNAL_EVENT_NAME = 'Create Invoice') AS \"No of Invoces\"\nFROM\n\t(\n    \tSELECT \n\t\t\t\"CASE ID\",\n        \t\"Last PO Vendor Name\",\n        \t\"Event Name\",\n        \t\"Event Number\"\n    \tFROM \n\t\t\t(\n            \tSELECT \n\t\t\t\t\t\"CASE ID\",\n                \t\"Last PO Vendor Name\",\n                \t\"Event Name\",\n                \t\"Event Number\"\n            \tFROM \n\t\t\t\t\t(\n\t\t\t\t\t\tSELECT \n\t\t\t\t\t\t\tCASE_ID AS \"CASE ID\",\n                        \t\"Last PO Vendor Name\",\n                        \t\"Event Name\",\n                        \t\"Event Number\"\n            \t\t\tFROM FLATTEN(\"POHEAD\",\n                           FLATTEN(\"INVOICE\", \n                           FLATTEN(\"GR/GI\", \n                           FLATTEN(\"POITEM\", \n                           (SELECT \n                               \"PO PR Item DEL REC Date Diff Prev\" AS \"Event Name\",\n                               \"PO PR Item DEL REC Date Diff Prev Event Number\" AS \"Event Number\",\n                               \"PO PR Item PO Vendor Name\" AS \"Last PO Vendor Name\",\n                               \"POITEM.ORDER_ITEM_ACCOUNT\" AS \"PO/PR Ordered Item Account\",\n                               CASE_ID AS Event_Attached_Case_ID\n                               WHERE EVENT_NAME IN ('Goods Receipt',\n                                     'Fulfillment Reverse',\n                                     'Purchase order Header & Item Create',\n                                     'Purchase Req Release'\n                                   )\n                               )\n                           ))\n                       ))\n                     ))\n            \t)\n        \tGROUP BY 1,2,3\n        \t) AS t2\n    \tLEFT JOIN\n        \t(\n            \tSELECT \n                \t\"Event Number\",\n                \t\"CASE ID\",\n                \t\"Event Name\"\n            \tFROM \n\t\t\t\t\t(\n                        SELECT\n                            (\"Event Number\" - 1) \n                            \tAS \"Event Number\"\n                            ,\"CASE_ID\" AS \"CASE ID\"\n                            --,\"Process Name\"\n                            ,\"Event Name\" AS \"Event Name\"\n                          FROM\n                          \t(\n                                SELECT\n                                    \"Last PO Event Number\" AS \"Event Number\"\n                                    ,\"Last PO Case ID\" AS \"CASE_ID\"\n                                    --,\"PO Process Name\" AS \"Process Name\"\n                                    ,\"Last PO Event Name\" AS \"Event Name\"\n                                FROM\n                                \t(\n                                        SELECT\n                                            \"CASE_ID\" AS \"Last PO Case ID\"\n                                            --,\"PO PR PO Process Name\" AS \"PO Process Name\"\n                                            ,\"PO PR Event Name\" AS \"Last PO Event Name\"\n                                            --,\"PO PR PO Event Number\" AS \"PO Event Number\"\n                                            \"PO PR PO Event Number\" AS \"Last PO Event Number\"\n                                        FROM\n                                        \t(\n                                                SELECT\n                                                    CASE_ID\n                                                    ,\"Event Name\" AS \"PO PR Event Name\"\n                                                    ,\"PO PR PO Event Number\"\n                                                    --,\"PO PR PO Process Name\" AS \"PO Process Name\"\n                                                FROM\n                                                \t(\n                                                        SELECT\n                                                            \"Last CASE_ID\" AS \"CASE_ID\"\n                                                            ,\"Last Event Name\" AS \"Event Name\"\n                                                            --,\"Last PO No PR PO Process Name\" AS \"PO Process Name\"\n                                                            --,\"Last PO No PR PO Event Number\" AS \"PO Event Number\"\n                                                            ,\"Last PO No PR PO Event Number\" AS \"PO PR PO Event Number\"\n                                                        FROM\n                                                        \t(\n                                                                SELECT\n                                                                    \"CASE_ID\" AS \"Last CASE_ID\"\n                                                                    ,\"Event Name\" AS \"Last Event Name\"\n                                                                    --,\"PO Process Name\" AS \"Last PO No PR PO Process Name\"\n                                                                    --,\"PO Event Number\" AS \"Last PO No PR PO Event Number\"\n                                                                    --,\"PO Event Name\" AS \"PO No PR PO Last Event Name\"\n                                                                FROM\n                                                                \t(\n                                                                        SELECT\n                                                                            \"CASE_ID\"\n                                                                            ,\"Event Name\"\n                                                                            --,\"PO Process Name\"\n                                                                            --,\"PO Event Number\"\n                                                                            --,\"PO Event Name\"\n                                                                            ,LEAD(\"Event Name\") OVER (PARTITION BY \"CASE_ID\" ORDER BY \"Event Number\") AS \"LEAD EVENT NAME\"\n                                                                        FROM\n                                                                        \t(\n                                                                                SELECT\n                                                                                    \"CASE_ID\"\n                                                                                    ,\"Event Name\"\n                                                                                    --,\"PO Process Name\" AS \"PO Process Name\"\n                                                                                    --,\"PO Event Number\" AS \"PO Event Number\"\n                                                                                    --,\"PO Event Name\" AS \"PO Event Name\"\n                                                                                    ,ROW_NUMBER() OVER (PARTITION BY \"CASE_ID\",\"POProcess_Instance_ID\"  ORDER BY \"Event Number\") AS \"EVENT NUMBER\"\n                                                                                FROM\n                                                                                \t(\n                                                                                        SELECT\n                                                                                            --\"CASE_ID\" AS \"CI/PI CASE ID\"\n                                                                                            \"POProcess_Case_ID\" AS \"CASE_ID\"\n                                                                                            ,\"POProcess_Event_Name\" AS \"Event Name\"\n                                                                                            --,\"POProcess_Process_Name\" AS \"PO Process Name\"\n                                                                                            \"POEvent_Event_Number\" AS \"PO Event Number\"\n                                                                                            --,\"POEvent_Event_Name\" AS \"PO Event Name\"\n                                                                                            ,\"POProcess_Instance_ID\"\n                                                                                        FROM FLATTEN(\"POEvent\", 1)\n                                                                                    ) AS subprocess_event\n                                                                                ORDER BY 1,4,5\n                                                                            ) AS ordered_sub\n                                                                    ORDER BY 1,4,5\n                                                                ) AS without_PR\n                                                        WHERE\n                                                        \t(\n                                                                (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Receive Goods')\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Fulfillment (Delivery) Due Date Change')\t\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Fulfillment (Delivery) Item Due Date Change')\t\n                                                        \t)\n                                                            \t\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Change Purchase Order Lines')\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Change Purchase Order Release State')\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Reduction of Ordered Quantity or Amount' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                        \t)\n                                                        \t\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'GR/GI for Invoice' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'GR/GI for Invoice (PO Item)' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'GR/GI for Invoice (PO Item)' AND \"LEAD EVENT NAME\" = 'Goods Receipt' )\n                                                        \t)\n                                                        \t)\n                                                        \n\n                                                            \t\n                                                        OR\n                                                        (\n                                                        \t(\"Last Event Name\" = 'Goods Receipt' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                        \t\tOR\n                                                        \t(\"Last Event Name\" = 'Fulfillment Reverse' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                        )\n                                                        OR\n                                                        (\n                                                        \t(\"Last Event Name\" = 'Purchase order Header & Item Create' AND \"LEAD EVENT NAME\" = 'Post Invoice') \t\n                                                        )\n                                                            \n\n                                                         OR\n                                                         (\n                                                         \t--Change PO\n                                                         \t\t(\"Last Event Name\" = 'Purchase order Item Change (approved)' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                             OR (\"Last Event Name\" = 'PO Item Delivery Schedule Changed' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                             OR (\"Last Event Name\" = 'PO Item Account Assignment Changed' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                             OR (\"Last Event Name\" = 'PO Item Material Changed' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                            --Creation \n                                                             OR  (\"Last Event Name\" = 'PO Created' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                             OR (\"Last Event Name\" = 'PO Item Added' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                             --Deletion\n                                                             OR (\"Last Event Name\" = 'PO Item Position Changed' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                             OR (\"Last Event Name\" = 'PO Deleted' AND \"LEAD EVENT NAME\" = 'Post Invoice' )           \n                                                         )                                                    \n                                                            \n\n                                                        --AND (\"PO Event Name\" = 'PO Last Processed')                                                     \n                                                        GROUP BY\n                                                        \t1,2,3,4\n                                                    ) AS selected_events\n                                             WHERE\n                                             \t(\"CASE_ID\" <> \"Last CASE_ID\")\n\n                                         \t)\n\n                                        \tWHERE \"PO PR Event Name\" IS NOT NULL --AND \"PO PR PO Event Number\" >= 5\n                                \t) As Process_Steps_Timeline\n                            \tINNER JOIN\n                                (\n                                \tSELECT\n                                         \"CASE_ID\" as \"POProcess_Case_ID\"\n                                    \t,\"Event_Name\" as \"POProcess_Event_Name\"\n                                        --,\"Process_Name\" as \"POProcess_Process_Name\"\n                                        ,\"Event_Number\" AS \"POEvent_Event_Number\"\n                                        ,\"PRLast_Processed_PO_Event_Number\"\n                                    FROM\n                                        (\n                                        \tSELECT\n                                            \t\"CASE_ID\"\n                                                ,\"Event_Number\"\n                                                --,\"Event_Name\"\n                                                --,\"Process_Name\"\n                                                ,LEAD(\"Event_Name\") OVER (PARTITION BY \"CASE_ID\" ORDER BY \"Event_Number\") AS \"LEAD EVENT NAME\"\n                                                ,LAG(\"Event_Name\") OVER (PARTITION BY \"CASE_ID\" ORDER BY \"Event_Number\") AS \"LAST EVENT NAME\"\n                                                --,\"PO Last Event Number\"\n                                               -- ,\"Last Processed PO Event Number\"\n                                               ,LAG(\"Event_Number\") OVER\n                                                     (\n                                                       PARTITION BY \"CASE_ID\" --,\"Process_Name\"\n                                                       ORDER BY \"Event_Number\"\n                                                     ) AS \"PRLast_Processed_PO_Event_Number\"  \n                                         \tFROM\n                                            \t(\n                                             \t\tSELECT DISTINCT\n                                                    \t\"CASE_ID\"\n                                                        ,\"Event_Number\"\n                                                        ,\"Event_Name\"\n                                                       -- ,\"PO Event Number\"\n                                                      FROM\n                                                    \t(\n                                                 \t\t\t--Select All Event & Process Columns\n                                               \t\t\t \tSELECT DISTINCT\n                                                    \t\t\tCASE_ID,\n                                                    \t\t\tEvent_Number,\n                                                    \t\t\tEvent_Name,\n                                                                        --\"PO Last Event Name\",\n                                                                       --\"PO Last Event Number\",\n                                                                       --\"PO Last Process Name\",\n                                                                       --\"PO Last Process Definition ID\",\n                                                                       --\"PO Last Process Version\",\n                                                                       --\"PO Last Process Application\",\n                                                                       --\"PR Created On\",\n                                                                       --\"PO Item Changed By (All Times)\",\n                                                                       --\"PO Item created On\",\n                                                                       --\"PO Created On\",\n                                                                       --\"Event End\"\n                                                       -- FROM(SELECT\n                                                            \t\t----PO Event Name\n                                                           \t\t\t--\"PO Event Name\",\n                                                            \t\t--Event_Number as \"Relabeled Confirmation OID ID 2 Event\"\n                                                               -- FROM(SELECT\n                                                                        \t--Relabeled Confirmation OID ID 2 1 \"Confirmation OID ID 2 Event Name\", \n                                                                            --\"Event Number\"\n                                                                        \t--FROM(SELECT\n                                                                                \t\t--888888 \"Relabeled Confirmation OID ID 2 1 Event\", \n                                                                                        --\"Fulfillment (Delivery) Item Reverse Red\"\n                                                                            \t\t\t--\"Relabeled Confirmation Last OID Item Reverse Red\",\n                                                                                        --\"PO Fulfillment Exchange Rate\" \n                                                                                \t--FROM FLATTEN(\"POEVENT\", (SELECT \"Conf. Check Del. Item Reverse\" \n                                                                                \t\t--FROM FLATTEN(\"POEVENT\", 1) \n                                                                                    \tWHERE (\"Fulfillment (Delivery) Item Reverse Red\" = \"PO Fulfillment Exchange Rate\" )\n                                                                            \t--\t))) - the event name was wrong -->\n                                                                        \t--SELECT event after posting last PO with last PO not-GI/GR//\n                                                                        --  SELECT event after PO sanity check complete\n                                                               --\tFROM FLATTEN(\"POEVENT\", (SELECT \n                                                                     --   \t\t\"Relabeled Confirmation Last OID Item Reverse Red\"\n                                                                        --\t\t\"Relabeled Confirmation OID ID 2 1 Event\"\n                                                                          --  \t\tFROM FLATTEN(\"POEVENT\", 1)       \t\t\t\n                                                                            \t--\tWHERE (\"PO SD Last Sanity Check Complete Checkmark\" = TRUE AS \"Boolean\")\n                                                                        \t\t\t--))\n                                                                \t--\t)\n                                                                           --  )\n                                                                             -- as temp\n                                                                     \n                                                        --GROUP BY 1\n                                                        \n                                                        \n                                                        SELECT\n                                                    \t--CASE_ID,\n                                                    \tEvent_Number,\n                                                    \tEvent_Name\n                                                        FROM FLATTEN(\"POEVENT\", 1)\n                                               \t\t  \t)\n                                               \t\t  )\n                                                 \t\n                                                -- end\n                                             ORDER BY 1,2\n                                         \t)\n                                        ) As Subprocess_Selected_Events\n                              ON Process_Steps_Timeline.CASE_ID = Subprocess_Selected_Events.CASE_ID\n                              AND Process_Steps_Timeline.\"Event Number\" = Subprocess_Selected_Events.POEvent_Event_Number\n                             \n                              ORDER BY 1,2\n                  \t\t\t  ) AS enriched_sub  \n                              \n                            ON without_PR.\"CASE_ID\" = enriched_sub.\"CASE_ID\"\n                            AND without_PR.\"Event Number\" = enriched_sub.POEvent_Event_Number\n                                \t\n             \n                            ORDER BY enriched_sub.CASE_ID, enriched_sub.POEvent_Event_Number\n                        ) AS enriched_events\n                    GROUP BY 1\n                    ) AS fine\n                    \n                    ON t2.\"Event Number\" = fine.\"PO Event Number\"\n            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tORDER BY 2 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\t\"Last PO Vendor Name\" AS \"Vendor Name\",\n    COUNT(\"Event Name\") FILTER(WHERE SIGNAL_EVENT_NAME = 'Create Invoice') AS \"No of Invoces\"\nFROM\n\t(\n    \tSELECT \n\t\t\t\"CASE ID\",\n        \t\"Last PO Vendor Name\",\n        \t\"Event Name\",\n        \t\"Event Number\"\n    \tFROM \n\t\t\t(\n            \tSELECT \n\t\t\t\t\t\"CASE ID\",\n                \t\"Last PO Vendor Name\",\n                \t\"Event Name\",\n                \t\"Event Number\"\n            \tFROM \n\t\t\t\t\t(\n\t\t\t\t\t\tSELECT \n\t\t\t\t\t\t\tCASE_ID AS \"CASE ID\",\n                        \t\"Last PO Vendor Name\",\n                        \t\"Event Name\",\n                        \t\"Event Number\"\n            \t\t\tFROM FLATTEN(\"POHEAD\",\n                           FLATTEN(\"INVOICE\", \n                           FLATTEN(\"GR/GI\", \n                           FLATTEN(\"POITEM\", \n                           (SELECT \n                               \"PO PR Item DEL REC Date Diff Prev\" AS \"Event Name\",\n                               \"PO PR Item DEL REC Date Diff Prev Event Number\" AS \"Event Number\",\n                               \"PO PR Item PO Vendor Name\" AS \"Last PO Vendor Name\",\n                               \"POITEM.ORDER_ITEM_ACCOUNT\" AS \"PO/PR Ordered Item Account\",\n                               CASE_ID AS Event_Attached_Case_ID\n                               WHERE EVENT_NAME IN ('Goods Receipt',\n                                     'Fulfillment Reverse',\n                                     'Purchase order Header & Item Create',\n                                     'Purchase Req Release'\n                                   )\n                               )\n                           ))\n                       ))\n                     ))\n            \t)\n        \tGROUP BY 1,2,3\n        \t) AS t2\n    \tLEFT JOIN\n        \t(\n            \tSELECT \n                \t\"Event Number\",\n                \t\"CASE ID\",\n                \t\"Event Name\"\n            \tFROM \n\t\t\t\t\t(\n                        SELECT\n                            (\"Event Number\" - 1) \n                            \tAS \"Event Number\"\n                            ,\"CASE_ID\" AS \"CASE ID\"\n                            --,\"Process Name\"\n                            ,\"Event Name\" AS \"Event Name\"\n                          FROM\n                          \t(\n                                SELECT\n                                    \"Last PO Event Number\" AS \"Event Number\"\n                                    ,\"Last PO Case ID\" AS \"CASE_ID\"\n                                    --,\"PO Process Name\" AS \"Process Name\"\n                                    ,\"Last PO Event Name\" AS \"Event Name\"\n                                FROM\n                                \t(\n                                        SELECT\n                                            \"CASE_ID\" AS \"Last PO Case ID\"\n                                            --,\"PO PR PO Process Name\" AS \"PO Process Name\"\n                                            ,\"PO PR Event Name\" AS \"Last PO Event Name\"\n                                            --,\"PO PR PO Event Number\" AS \"PO Event Number\"\n                                            \"PO PR PO Event Number\" AS \"Last PO Event Number\"\n                                        FROM\n                                        \t(\n                                                SELECT\n                                                    CASE_ID\n                                                    ,\"Event Name\" AS \"PO PR Event Name\"\n                                                    ,\"PO PR PO Event Number\"\n                                                    --,\"PO PR PO Process Name\" AS \"PO Process Name\"\n                                                FROM\n                                                \t(\n                                                        SELECT\n                                                            \"Last CASE_ID\" AS \"CASE_ID\"\n                                                            ,\"Last Event Name\" AS \"Event Name\"\n                                                            --,\"Last PO No PR PO Process Name\" AS \"PO Process Name\"\n                                                            --,\"Last PO No PR PO Event Number\" AS \"PO Event Number\"\n                                                            ,\"Last PO No PR PO Event Number\" AS \"PO PR PO Event Number\"\n                                                        FROM\n                                                        \t(\n                                                                SELECT\n                                                                    \"CASE_ID\" AS \"Last CASE_ID\"\n                                                                    ,\"Event Name\" AS \"Last Event Name\"\n                                                                    --,\"PO Process Name\" AS \"Last PO No PR PO Process Name\"\n                                                                    --,\"PO Event Number\" AS \"Last PO No PR PO Event Number\"\n                                                                    --,\"PO Event Name\" AS \"PO No PR PO Last Event Name\"\n                                                                FROM\n                                                                \t(\n                                                                        SELECT\n                                                                            \"CASE_ID\"\n                                                                            ,\"Event Name\"\n                                                                            --,\"PO Process Name\"\n                                                                            --,\"PO Event Number\"\n                                                                            --,\"PO Event Name\"\n                                                                            ,LEAD(\"Event Name\") OVER (PARTITION BY \"CASE_ID\" ORDER BY \"Event Number\") AS \"LEAD EVENT NAME\"\n                                                                        FROM\n                                                                        \t(\n                                                                                SELECT\n                                                                                    \"CASE_ID\"\n                                                                                    ,\"Event Name\"\n                                                                                    --,\"PO Process Name\" AS \"PO Process Name\"\n                                                                                    --,\"PO Event Number\" AS \"PO Event Number\"\n                                                                                    --,\"PO Event Name\" AS \"PO Event Name\"\n                                                                                    ,ROW_NUMBER() OVER (PARTITION BY \"CASE_ID\",\"POProcess_Instance_ID\"  ORDER BY \"Event Number\") AS \"EVENT NUMBER\"\n                                                                                FROM\n                                                                                \t(\n                                                                                        SELECT\n                                                                                            --\"CASE_ID\" AS \"CI/PI CASE ID\"\n                                                                                            \"POProcess_Case_ID\" AS \"CASE_ID\"\n                                                                                            ,\"POProcess_Event_Name\" AS \"Event Name\"\n                                                                                            --,\"POProcess_Process_Name\" AS \"PO Process Name\"\n                                                                                            \"POEvent_Event_Number\" AS \"PO Event Number\"\n                                                                                            --,\"POEvent_Event_Name\" AS \"PO Event Name\"\n                                                                                            ,\"POProcess_Instance_ID\"\n                                                                                        FROM FLATTEN(\"POEvent\", 1)\n                                                                                    ) AS subprocess_event\n                                                                                ORDER BY 1,4,5\n                                                                            ) AS ordered_sub\n                                                                    ORDER BY 1,4,5\n                                                                ) AS without_PR\n                                                        WHERE\n                                                        \t(\n                                                                (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Receive Goods')\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Fulfillment (Delivery) Due Date Change')\t\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Fulfillment (Delivery) Item Due Date Change')\t\n                                                        \t)\n                                                            \t\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Change Purchase Order Lines')\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Post Invoice' AND \"LEAD EVENT NAME\" = 'Change Purchase Order Release State')\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'Reduction of Ordered Quantity or Amount' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                        \t)\n                                                        \t\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'GR/GI for Invoice' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'GR/GI for Invoice (PO Item)' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                        \t)\n                                                        \tOR\n                                                        \t(\n                                                        \t    (\"Last Event Name\" = 'GR/GI for Invoice (PO Item)' AND \"LEAD EVENT NAME\" = 'Goods Receipt' )\n                                                        \t)\n                                                        \t)\n                                                        \n\n                                                            \t\n                                                        OR\n                                                        (\n                                                        \t(\"Last Event Name\" = 'Goods Receipt' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                        \t\tOR\n                                                        \t(\"Last Event Name\" = 'Fulfillment Reverse' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                        )\n                                                        OR\n                                                        (\n                                                        \t(\"Last Event Name\" = 'Purchase order Header & Item Create' AND \"LEAD EVENT NAME\" = 'Post Invoice') \t\n                                                        )\n                                                            \n\n                                                         OR\n                                                         (\n                                                         \t--Change PO\n                                                         \t\t(\"Last Event Name\" = 'Purchase order Item Change (approved)' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                             OR (\"Last Event Name\" = 'PO Item Delivery Schedule Changed' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                             OR (\"Last Event Name\" = 'PO Item Account Assignment Changed' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                             OR (\"Last Event Name\" = 'PO Item Material Changed' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                            --Creation \n                                                             OR  (\"Last Event Name\" = 'PO Created' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                             OR (\"Last Event Name\" = 'PO Item Added' AND \"LEAD EVENT NAME\" = 'Post Invoice')\n                                                             --Deletion\n                                                             OR (\"Last Event Name\" = 'PO Item Position Changed' AND \"LEAD EVENT NAME\" = 'Post Invoice' )\n                                                             OR (\"Last Event Name\" = 'PO Deleted' AND \"LEAD EVENT NAME\" = 'Post Invoice' )           \n                                                         )                                                    \n                                                            \n\n                                                        --AND (\"PO Event Name\" = 'PO Last Processed')                                                     \n                                                        GROUP BY\n                                                        \t1,2,3,4\n                                                    ) AS selected_events\n                                             WHERE\n                                             \t(\"CASE_ID\" <> \"Last CASE_ID\")\n\n                                         \t)\n\n                                        \tWHERE \"PO PR Event Name\" IS NOT NULL --AND \"PO PR PO Event Number\" >= 5\n                                \t) As Process_Steps_Timeline\n                            \tINNER JOIN\n                                (\n                                \tSELECT\n                                         \"CASE_ID\" as \"POProcess_Case_ID\"\n                                    \t,\"Event_Name\" as \"POProcess_Event_Name\"\n                                        --,\"Process_Name\" as \"POProcess_Process_Name\"\n                                        ,\"Event_Number\" AS \"POEvent_Event_Number\"\n                                        ,\"PRLast_Processed_PO_Event_Number\"\n                                    FROM\n                                        (\n                                        \tSELECT\n                                            \t\"CASE_ID\"\n                                                ,\"Event_Number\"\n                                                --,\"Event_Name\"\n                                                --,\"Process_Name\"\n                                                ,LEAD(\"Event_Name\") OVER (PARTITION BY \"CASE_ID\" ORDER BY \"Event_Number\") AS \"LEAD EVENT NAME\"\n                                                ,LAG(\"Event_Name\") OVER (PARTITION BY \"CASE_ID\" ORDER BY \"Event_Number\") AS \"LAST EVENT NAME\"\n                                                --,\"PO Last Event Number\"\n                                               -- ,\"Last Processed PO Event Number\"\n                                               ,LAG(\"Event_Number\") OVER\n                                                     (\n                                                       PARTITION BY \"CASE_ID\" --,\"Process_Name\"\n                                                       ORDER BY \"Event_Number\"\n                                                     ) AS \"PRLast_Processed_PO_Event_Number\"  \n                                         \tFROM\n                                            \t(\n                                             \t\tSELECT DISTINCT\n                                                    \t\"CASE_ID\"\n                                                        ,\"Event_Number\"\n                                                        ,\"Event_Name\"\n                                                       -- ,\"PO Event Number\"\n                                                      FROM\n                                                    \t(\n                                                 \t\t\t--Select All Event & Process Columns\n                                               \t\t\t \tSELECT DISTINCT\n                                                    \t\t\tCASE_ID,\n                                                    \t\t\tEvent_Number,\n                                                    \t\t\tEvent_Name,\n                                                                        --\"PO Last Event Name\",\n                                                                       --\"PO Last Event Number\",\n                                                                       --\"PO Last Process Name\",\n                                                                       --\"PO Last Process Definition ID\",\n                                                                       --\"PO Last Process Version\",\n                                                                       --\"PO Last Process Application\",\n                                                                       --\"PR Created On\",\n                                                                       --\"PO Item Changed By (All Times)\",\n                                                                       --\"PO Item created On\",\n                                                                       --\"PO Created On\",\n                                                                       --\"Event End\"\n                                                       -- FROM(SELECT\n                                                            \t\t----PO Event Name\n                                                           \t\t\t--\"PO Event Name\",\n                                                            \t\t--Event_Number as \"Relabeled Confirmation OID ID 2 Event\"\n                                                               -- FROM(SELECT\n                                                                        \t--Relabeled Confirmation OID ID 2 1 \"Confirmation OID ID 2 Event Name\", \n                                                                            --\"Event Number\"\n                                                                        \t--FROM(SELECT\n                                                                                \t\t--888888 \"Relabeled Confirmation OID ID 2 1 Event\", \n                                                                                        --\"Fulfillment (Delivery) Item Reverse Red\"\n                                                                            \t\t\t--\"Relabeled Confirmation Last OID Item Reverse Red\",\n                                                                                        --\"PO Fulfillment Exchange Rate\" \n                                                                                \t--FROM FLATTEN(\"POEVENT\", (SELECT \"Conf. Check Del. Item Reverse\" \n                                                                                \t\t--FROM FLATTEN(\"POEVENT\", 1) \n                                                                                    \tWHERE (\"Fulfillment (Delivery) Item Reverse Red\" = \"PO Fulfillment Exchange Rate\" )\n                                                                            \t--\t))) - the event name was wrong -->\n                                                                        \t--SELECT event after posting last PO with last PO not-GI/GR//\n                                                                        --  SELECT event after PO sanity check complete\n                                                               --\tFROM FLATTEN(\"POEVENT\", (SELECT \n                                                                     --   \t\t\"Relabeled Confirmation Last OID Item Reverse Red\"\n                                                                        --\t\t\"Relabeled Confirmation OID ID 2 1 Event\"\n                                                                          --  \t\tFROM FLATTEN(\"POEVENT\", 1)       \t\t\t\n                                                                            \t--\tWHERE (\"PO SD Last Sanity Check Complete Checkmark\" = TRUE AS \"Boolean\")\n                                                                        \t\t\t--))\n                                                                \t--\t)\n                                                                           --  )\n                                                                             -- as temp\n                                                                     \n                                                        --GROUP BY 1\n                                                        \n                                                        \n                                                        SELECT\n                                                    \t--CASE_ID,\n                                                    \tEvent_Number,\n                                                    \tEvent_Name\n                                                        FROM FLATTEN(\"POEVENT\", 1)\n                                               \t\t  \t)\n                                               \t\t  )\n                                                 \t\n                                                -- end\n                                             ORDER BY 1,2\n                                         \t)\n                                        ) As Subprocess_Selected_Events\n                              ON Process_Steps_Timeline.CASE_ID = Subprocess_Selected_Events.CASE_ID\n                              AND Process_Steps_Timeline.\"Event Number\" = Subprocess_Selected_Events.POEvent_Event_Number\n                             \n                              ORDER BY 1,2\n                  \t\t\t  ) AS enriched_sub  \n                              \n                            ON without_PR.\"CASE_ID\" = enriched_sub.\"CASE_ID\"\n                            AND without_PR.\"Event Number\" = enriched_sub.POEvent_Event_Number\n                                \t\n             \n                            ORDER BY enriched_sub.CASE_ID, enriched_sub.POEvent_Event_Number\n                        ) AS enriched_events\n                    GROUP BY 1\n                    ) AS fine\n                    \n                    ON t2.\"Event Number\" = fine.\"PO Event Number\"\n            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tORDER BY 2 DESC"
    },
    {
        "filename": "11f85b95e3",
        "split": "test",
        "name": "Case Count & Cycle Time (PR Approval to Create PO) by PO Business Unit",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create PO Item')) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Approve PR item'))) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\", \n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 100",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases, average cycle time, and PO Business Unit from the 'defaultview-545' table. The cycle time is calculated by subtracting the first END_TIME of events with the name 'Approve PR item' from the last END_TIME of events with the name 'Create PO Item', and then averaging the result. The results are sorted in descending order by the number of cases and limited to the top 100 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\" ,\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') - (\"firsteventendtime\")) AS \"Average Cycle Time\",\n-- AVG(\"PR Item Processing Time\") AS \"Average Cycle Time\"\n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 desc\nLIMIT 100\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\" ,\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') - (\"firsteventendtime\")) AS \"Average Cycle Time\",\n-- AVG(\"PR Item Processing Time\") AS \"Average Cycle Time\"\n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 desc\nLIMIT 100\n"
    },
    {
        "filename": "1387d29cf3",
        "split": "test",
        "name": "\u00d8 WIP time Painting -> Assembly",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0020'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0010'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average of the differences between the first 'Start%' event's end time and the first 'Complete%' event's end time for each row in the 'defaultview-270' table, where the 'Routing Step' column value is either '0020' or '0010'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG ((SELECT FIRST (END_TIME)\n    \tWHERE EVENT_NAME IN ('Start%') \n        ) - (SELECT FIRST (END_TIME)\n    \tWHERE EVENT_NAME IN ('Complete%') )))\n        \nFROM \"defaultview-270\"\nWHERE \"Routing Step\" IN ('0010','0020')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG ((SELECT FIRST (END_TIME)\n    \tWHERE EVENT_NAME IN ('Start%') \n        ) - (SELECT FIRST (END_TIME)\n    \tWHERE EVENT_NAME IN ('Complete%') )))\n        \nFROM \"defaultview-270\"\nWHERE \"Routing Step\" IN ('0010','0020')"
    },
    {
        "filename": "ebc0a9dc87",
        "split": "test",
        "name": "Automation Rate Goods Issue",
        "query": "SELECT SUM(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE (\"Event Created By User Type\" IN ('System','Batch Job','Service') \n        AND event_name IN ('GI for order'))\n\t)\n   ))\n/ SUM((SELECT COUNT(event_name)\n\tFILTER (\n\t\tWHERE (event_name IN ('GI for order')))))\n* 100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of GI for order events created by System, Batch Job, or Service users out of all GI for order events. The calculation is done by dividing the sum of GI for order events created by the specified user types by the total count of GI for order events, then multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n(SUM(\"AllGIsForOrderEvents\" )  FILTER (WHERE \"CreatedByName\" IN ('System','Batch Job','Service') )) \n/   \n( SUM(\"AllGIsForOrderEvents\" ) ) \n* 100\nFROM \"defaultview-2110\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n(SUM(\"AllGIsForOrderEvents\" )  FILTER (WHERE \"CreatedByName\" IN ('System','Batch Job','Service') )) \n/   \n( SUM(\"AllGIsForOrderEvents\" ) ) \n* 100\nFROM \"defaultview-2110\""
    },
    {
        "filename": "4ac3ebb383",
        "split": "test",
        "name": "Invoices with immediate PT",
        "query": "SELECT COUNT(case_id) FILTER(\n\tWHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0) \nFROM \"defaultview-225\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct case IDs from the 'defaultview-225' table where the 'Last Inv. Item Cash Discount Days 1' column is either null or equal to zero.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (DISTINCT \"case_id\" ) FILTER(\n\tWHERE(\"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0))\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (DISTINCT \"case_id\" ) FILTER(\n\tWHERE(\"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0))\nFROM \"defaultview-225\""
    },
    {
        "filename": "67ee27564b",
        "split": "test",
        "name": "Number of Quotation Changes over time",
        "query": "SELECT\n  DATE_TRUNC('month', end_time) AS \"Change Date\",\n  COUNT (DISTINCT \"UniqueEventId\") AS \"# Changes\"\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  EVENT_NAME LIKE '%Quotation%'\n  AND ChangeType = 'Update'\nORDER BY\n  1 ASC NULLS FIRST FILL TIMESERIES('Month'),\n  NULL",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of unique quotation updates per month, where the update type is 'Update' and the event name contains '%Quotation%', from the 'defaultview-383' table, truncating the end time to the first day of the month, and sorting the results by change date in ascending order, with null values filled in the time series.",
        "llm_gpt-35-turbo-0613_query": "SELECT DATE_TRUNC('month', \"changeDate\" )\nAS \"End of relevant period\"\n, COUNT(DISTINCT \"lastChangeId\"\n) AS \"Number of Quotation Updates\"\nFROM \"defaultview-383\"\n\nWHERE BEHAVIOR \n    (SELECT FIRST (BEHAVIOR_NAME()) \n    \tWHERE EVENT_NAME LIKE '%Quotation%')\n    IS 'Update' \n      \nEVENT_NAME LIKE '%Quotation%'\nAND LAST_CHANGE USER_ROLE = 'QU_INTerner UND Extern'\n--AND DATE_TRUNC('month', NOW()) - (SELECT LAST(\"EndOfRelevantPeriod\")) > DURATION '6MONTH'\nGROUP BY 1\nORDER BY 1 ASC NULLS FIRST\nFILL timeseries('MONTH')\n                \n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT DATE_TRUNC('month', \"changeDate\" )\nAS \"End of relevant period\"\n, COUNT(DISTINCT \"lastChangeId\"\n) AS \"Number of Quotation Updates\"\nFROM \"defaultview-383\"\n\nWHERE BEHAVIOR \n    (SELECT FIRST (BEHAVIOR_NAME()) \n    \tWHERE EVENT_NAME LIKE '%Quotation%')\n    IS 'Update' \n      \nEVENT_NAME LIKE '%Quotation%'\nAND LAST_CHANGE USER_ROLE = 'QU_INTerner UND Extern'\n--AND DATE_TRUNC('month', NOW()) - (SELECT LAST(\"EndOfRelevantPeriod\")) > DURATION '6MONTH'\nGROUP BY 1\nORDER BY 1 ASC NULLS FIRST\nFILL timeseries('MONTH')\n                \n"
    },
    {
        "filename": "835c24ddd6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of cases where the last inventory item cash discount days are null or zero, out of all cases.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n    Count(case_id) FILTER(\n    \tWHERE (SELECT LAST(\"Net Order Item Cash Discount Days\") IS NULL\n\t    \t\t OR \n    \t\"Net Order Item Cash Discount Days\" IS NULL) )\n        / Count(case_id) \n    * 100\nFROM  \"coverraspberry-387373273299166239.fsinventorymovement\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n    Count(case_id) FILTER(\n    \tWHERE (SELECT LAST(\"Net Order Item Cash Discount Days\") IS NULL\n\t    \t\t OR \n    \t\"Net Order Item Cash Discount Days\" IS NULL) )\n        / Count(case_id) \n    * 100\nFROM  \"coverraspberry-387373273299166239.fsinventorymovement\""
    },
    {
        "filename": "900d4e70c5",
        "split": "test",
        "name": "Avg. Cycle Time of Cases with Late Payment",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME)))\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last invoice item due date and the last invoice item clearing date for all records in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT LAST (\"InvoiceItem.DueDateGlobal\")) - (SELECT LAST (\"InvoiceItem.ClearingDateGlobal\"))) \n\nFROM \n\"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT LAST (\"InvoiceItem.DueDateGlobal\")) - (SELECT LAST (\"InvoiceItem.ClearingDateGlobal\"))) \n\nFROM \n\"defaultview-124\"\n                "
    },
    {
        "filename": "5ac5c83f16",
        "split": "test",
        "name": "_Number of timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of the 'TSR_Count' column in the 'defaultview-197' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\""
    },
    {
        "filename": "202dcc39f3",
        "split": "test",
        "name": "AVG Payment Time",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\"\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve average clearing time for clearing events. Clearing date is calculated by truncating end time to the nearest month. Creation date is used as the reference date. Filter events with names containing 'Clear'. Order by clearing date ascending.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tDATE_TRUNC('month', END_TIME_TRUNC)  AS \"Clearing date\",\n    AVG(\"Lead time\") AS \"Clearing Time (Avg)\"\nFROM (\n\tSELECT\n\t\tEVENT_NAME,\n\t\tEND_TIME,\n\t\tEND_TIME AS END_TIME_TRUNC,\n        DATE_TRUNC('month', END_TIME) as MONTH,\n    \tEND_TIME - FIRST(END_TIME) OVER (PARTITION BY EVENT_NAME ORDER BY END_TIME) AS \"Lead time\"\n\tFROM\n\tFLATTEN(\"$snapshot\") \n    WHERE EVENT_NAME LIKE '%Clear%' \t\n) AS SUB\nGROUP BY DATE_TRUNC('month', END_TIME) \nORDER BY 1 ASC NULLS FIRST\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tDATE_TRUNC('month', END_TIME_TRUNC)  AS \"Clearing date\",\n    AVG(\"Lead time\") AS \"Clearing Time (Avg)\"\nFROM (\n\tSELECT\n\t\tEVENT_NAME,\n\t\tEND_TIME,\n\t\tEND_TIME AS END_TIME_TRUNC,\n        DATE_TRUNC('month', END_TIME) as MONTH,\n    \tEND_TIME - FIRST(END_TIME) OVER (PARTITION BY EVENT_NAME ORDER BY END_TIME) AS \"Lead time\"\n\tFROM\n\tFLATTEN(\"$snapshot\") \n    WHERE EVENT_NAME LIKE '%Clear%' \t\n) AS SUB\nGROUP BY DATE_TRUNC('month', END_TIME) \nORDER BY 1 ASC NULLS FIRST\n"
    },
    {
        "filename": "4229e2c517",
        "split": "test",
        "name": "Table",
        "query": "SELECT count(case_id), event_name, \"Change Old Value\", \"Change New Value\"  \nFROM FLATTEN(\"defaultview-57\")\nWHERE Event_name ILIKE '%Update%'\nORDER BY 1 desc\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of case_id, event_name, 'Change Old Value', and 'Change New Value' from the 'defaultview-57' table, where event_name contains '%Update%' and order the result by count of case_id in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) AS \"# Cases\",\nCOUNT(event_name) FILTER (\n\t\tWHERE BEHAVIOR 'Change Old Value' IS NOT NULL)\nAS \"# Flights\", \n\nCOUNT(event_name) FILTER (\n\t\tWHERE BEHAVIOR 'Change New Value' IS NULL OR \n        \tBEHAVIOR 'Change Old Value' IS NULL OR\n           (BEHAVIOR 'Change New Value' = 'Change Old Value'\n          OR BEHAVIOR 'Change New Value' <> 'Change Old Value'))\n/ COUNT(event_name) FILTER (\n    \tWHERE BEHAVIOR 'Change Old Value' IS NOT NULL)\nAS \"Flight Rate\"\n\nFROM FLATTEN(\"defaultview-57\")\nWHERE event_name LIKE '%Update%'\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) AS \"# Cases\",\nCOUNT(event_name) FILTER (\n\t\tWHERE BEHAVIOR 'Change Old Value' IS NOT NULL)\nAS \"# Flights\", \n\nCOUNT(event_name) FILTER (\n\t\tWHERE BEHAVIOR 'Change New Value' IS NULL OR \n        \tBEHAVIOR 'Change Old Value' IS NULL OR\n           (BEHAVIOR 'Change New Value' = 'Change Old Value'\n          OR BEHAVIOR 'Change New Value' <> 'Change Old Value'))\n/ COUNT(event_name) FILTER (\n    \tWHERE BEHAVIOR 'Change Old Value' IS NOT NULL)\nAS \"Flight Rate\"\n\nFROM FLATTEN(\"defaultview-57\")\nWHERE event_name LIKE '%Update%'\nORDER BY 1 DESC"
    },
    {
        "filename": "0a048d6ae2",
        "split": "test",
        "name": "Avg. Cycle Time (Create to Clear Invoice)",
        "query": "SELECT\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice')) AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average cycle time for clearing invoices. First, find the last event time for 'Create FI Invoice' using the 'FIRST' aggregation function. Then, find the last event time for 'Clear Invoice' using the 'LAST' aggregation function. Calculate the difference between these two times, and then take the average of those differences using the 'AVG' aggregation function. Finally, display the result as 'Avg. Cycle Time'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT LAST (END_TIME) \n        WHERE EVENT_NAME IN ('Clear Invoice')) \n    - (SELECT FIRST (END_TIME) \n      \tWHERE EVENT_NAME IN ('Create FI Invoice'))\n    ) AS \"Avg. Cycle Time\"\nFROM \"5k_Einnahmeprozess_1\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT LAST (END_TIME) \n        WHERE EVENT_NAME IN ('Clear Invoice')) \n    - (SELECT FIRST (END_TIME) \n      \tWHERE EVENT_NAME IN ('Create FI Invoice'))\n    ) AS \"Avg. Cycle Time\"\nFROM \"5k_Einnahmeprozess_1\"\n                "
    },
    {
        "filename": "d56a723b4e",
        "split": "test",
        "name": "_Number of completed projects",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE \"Project_StageText\" = 'Completed'\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of case_id where Project_StageText is 'Completed' from the defaultview-197 table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n\tCOUNT(\"case_id\") FILTER (\n    \tWHERE \"Project_StageText\" = 'Completed' \n        )\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n\tCOUNT(\"case_id\") FILTER (\n    \tWHERE \"Project_StageText\" = 'Completed' \n        )\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "1052a139b9",
        "split": "test",
        "name": "_Percentage of projects created after start date",
        "query": "\nSELECT\n(\nSUM(\"Project_CreationAfterStartFlag\" )\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of projects created after the start flag for all projects in the 'defaultview-197' table. The formula used is: (SUM(Project_CreationAfterStartFlag)) / COUNT(case_id) * 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(SUM(Project_CreationAfterStartFlag)) / COUNT(case_id) * 100\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(SUM(Project_CreationAfterStartFlag)) / COUNT(case_id) * 100\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "b20189ef80",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\n  /\n  COUNT(case_id) FILTER (\n      WHERE \"PO Item Delivery Completed\" = 'Yes'\n      )\n  * 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each day, calculate the percentage of delivery requests that were completed, by dividing the number of delivery requests completed on that day (filtered by 'Yes' in 'PO Item Delivery Completed' column) by the total number of delivery requests (filtered by 'Yes' in 'PO Item Delivery Completed' column) and then multiplying by 100. The calculation is based on the data in the 'defaultview-57' table, using the 'case_id' column for counting and the 'Last GR Creation Date' column for determining the delivery date.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  DATE_TRUNC('day', \"Last GR Creation Date\") AS \"Delivery Date\" \n,\n  COUNT (CASE WHEN \"PO Item Delivery Completed\" = 'Yes' THEN \"case_id\" END) \n  / COUNT (CASE WHEN \"PO Item Delivery Completed\" IN ('Yes') THEN \"case_id\" END) \n  * 100 AS \"Percentage of Delivery Requests Completed\" \nFROM \"defaultview-57\"\nORDER BY 1 ASC NULLS FIRST \nFILL TIMESERIES('day')\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  DATE_TRUNC('day', \"Last GR Creation Date\") AS \"Delivery Date\" \n,\n  COUNT (CASE WHEN \"PO Item Delivery Completed\" = 'Yes' THEN \"case_id\" END) \n  / COUNT (CASE WHEN \"PO Item Delivery Completed\" IN ('Yes') THEN \"case_id\" END) \n  * 100 AS \"Percentage of Delivery Requests Completed\" \nFROM \"defaultview-57\"\nORDER BY 1 ASC NULLS FIRST \nFILL TIMESERIES('day')\n"
    },
    {
        "filename": "c0ee4f416c",
        "split": "test",
        "name": "PTP_DB_On-Time Delivery Rate",
        "query": "\nSELECT\n(1 - \n\tCOUNT(case_id) FILTER (\n\t\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n\t\t\tAND \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n\t/\n\tCOUNT(case_id) FILTER (\n\t\tWHERE \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n)\n* 100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of delivery requests that were completed on time, by dividing the number of delivery requests completed on time by the total number of delivery requests, and then multiplying by 100. The delivery requests are considered completed on time if the last GR creation date is after the PO item last requested delivery date and the PO item delivery completed is Yes.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER(\n\tWHERE \"Last GR Creation Date\"\n\t\t> \"PO Item Last Requested Delivery Date\" \n\t\t\tAND \"PO Item Delivery Completed\" = 'Yes'\n\t)\n/\nCOUNT (CASE_ID) FILTER(\n\tWHERE \"PO Item Delivery Completed\" = 'Yes'\n\t)\n*100\nFROM \"SAP PO Delivery Indicators\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER(\n\tWHERE \"Last GR Creation Date\"\n\t\t> \"PO Item Last Requested Delivery Date\" \n\t\t\tAND \"PO Item Delivery Completed\" = 'Yes'\n\t)\n/\nCOUNT (CASE_ID) FILTER(\n\tWHERE \"PO Item Delivery Completed\" = 'Yes'\n\t)\n*100\nFROM \"SAP PO Delivery Indicators\"\n                "
    },
    {
        "filename": "8f6fbc2031",
        "split": "test",
        "name": "Cancellation rate of purchase orders",
        "query": "SELECT COUNT(case_id) FILTER (\n    WHERE (SELECT FIRST(event_name) FILTER (\n            WHERE event_name IN ('Delete PO Item'))) IS NOT NULL\n    )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each case_id in the 'defaultview-57' table, count the number of events with a name of 'Delete PO Item' that occur before any event with a name of 'Delete PO Item' and then divide that count by the total number of case_ids and multiply by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) FILTER\n(\n\tWHERE event_name MATCHES('Delete PO Item')\n    \tAND (SELECT FIRST(event_name) \n        \t\tWHERE event_name MATCHES('Delete PO Item')) IS NULL\n) / count(CASE_ID) * 100\nFROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) FILTER\n(\n\tWHERE event_name MATCHES('Delete PO Item')\n    \tAND (SELECT FIRST(event_name) \n        \t\tWHERE event_name MATCHES('Delete PO Item')) IS NULL\n) / count(CASE_ID) * 100\nFROM \"defaultview-57\""
    },
    {
        "filename": "d2566dc5b5",
        "split": "test",
        "name": "Top 5 Variants ranked by 90th Percentile Cycle Time",
        "query": "SELECT event_name AS \"Variant\", \n\t  PERCENTILE_DISC(0.9) WITHIN GROUP(ORDER BY (SELECT LAST(end_time) - FIRST(end_time))) AS \"90th Percentile Cycle Time per Variant\"\n  FROM \"defaultview-9\"\n GROUP BY 1\n ORDER BY 2 DESC\n LIMIT 5",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For the table 'defaultview-9', select the 'event_name' column and calculate the 90th percentile of the 'end_time' column, minus the 'first' column, for each distinct 'event_name' group. Then, order the results by the calculated 90th percentile in descending order and limit the output to the top 5 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\npercentile(90) (end_time - first) AS \"Percentile 90 end_time-first\",\nevent_name AS \"event_name\"\nFROM \"defaultview-9\"\nORDER BY 1 DESC\nLIMIT 5",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\npercentile(90) (end_time - first) AS \"Percentile 90 end_time-first\",\nevent_name AS \"event_name\"\nFROM \"defaultview-9\"\nORDER BY 1 DESC\nLIMIT 5"
    },
    {
        "filename": "c2922a0092",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with manual changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term')) AND BOOL_OR(\"Event Created By User Type\" = 'Dialog')))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For every case in the 'defaultview-59' table, count the number of events where the event name is 'Update Payment Term' or the event was created by a user type of 'Dialog', and then divide that count by the total number of cases, and multiply by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (EVENT_NAME)\nFILTER (\n\tWHERE (EVENT_NAME = 'Update Payment Term'\n\t\t\tOR CREATED_BY_USER_TYPE IN ('Dialog')\n\t\t\t)\n\t\t\t)\n/\nCOUNT(CASE_ID) *100\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (EVENT_NAME)\nFILTER (\n\tWHERE (EVENT_NAME = 'Update Payment Term'\n\t\t\tOR CREATED_BY_USER_TYPE IN ('Dialog')\n\t\t\t)\n\t\t\t)\n/\nCOUNT(CASE_ID) *100\nFROM \"defaultview-59\""
    },
    {
        "filename": "9c5586849c",
        "split": "test",
        "name": "_Number of projects with costs after end date",
        "query": "\nSELECT\nCOUNT (case_id) FILTER (\n\tWHERE (\"CostDoc_EnterDocAfterProjectClosingCount\" > 0)\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of case_id from the 'defaultview-197' table where the value in the 'CostDoc_EnterDocAfterProjectClosingCount' column is greater than 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id)\nFROM \n\"defaultview-197\"\nWHERE\n\"CostDoc_EnterDocAfterProjectClosingCount\" > 0\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id)\nFROM \n\"defaultview-197\"\nWHERE\n\"CostDoc_EnterDocAfterProjectClosingCount\" > 0\n\n"
    },
    {
        "filename": "b412cf1c81",
        "split": "test",
        "name": "Number of Closed Projects",
        "query": "SELECT COUNT(DISTINCT case_id)\nFROM \"defaultview-197\"\nWHERE \"Project_Stage\"  IN ('P005')\n\n--SELECT COUNT(DISTINCT case_id)\n--FROM FLATTEN(\"defaultview-197\")\n--WHERE event_name = ('Close Project')\n--AND end_time < NOW()",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Counts the number of unique case IDs in the 'defaultview-197' table where the 'Project_Stage' column has a value of 'P005'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\ncount(distinct \"CASE_ID\") \nFROM \"defaultview-197\"\nWHERE \n\"Project_Stage\" \nIN (SELECT \"Project_Stage\" \n\tFROM \"defaultview-197\"\n    GROUP BY 1\n    HAVING bool_and(\"Project_Stage\" IN ('P005')))\n    ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\ncount(distinct \"CASE_ID\") \nFROM \"defaultview-197\"\nWHERE \n\"Project_Stage\" \nIN (SELECT \"Project_Stage\" \n\tFROM \"defaultview-197\"\n    GROUP BY 1\n    HAVING bool_and(\"Project_Stage\" IN ('P005')))\n    "
    },
    {
        "filename": "1b5cdb573c",
        "split": "test",
        "name": "Value",
        "query": "SELECT\nSUM(\n\t(SELECT COUNT(CASE_ID) FILTER (\n \tWHERE (EVENT_NAME IN ('Personal Data Change WF Initiated'))))) \n/ COUNT (CASE_ID) \n*100\nFROM \"defaultview-299\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of Personal Data Change WF Initiated events out of all events in the defaultview-299 table. The formula used is: (SUM(CASE_ID) FILTER (WHERE EVENT_NAME IN ('Personal Data Change WF Initiated'))) / COUNT(CASE_ID) * 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  (SUM(CASE_ID) FILTER (WHERE EVENT_NAME IN ('Personal Data Change WF Initiated'))) \n  / COUNT(CASE_ID) * 100\nFROM \"defaultview-299\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  (SUM(CASE_ID) FILTER (WHERE EVENT_NAME IN ('Personal Data Change WF Initiated'))) \n  / COUNT(CASE_ID) * 100\nFROM \"defaultview-299\""
    },
    {
        "filename": "208336c2e5",
        "split": "test",
        "name": "Automation Rate Material availability checked",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Check Material Availability'\n\n\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For each event named 'Check Material Availability' in the 'defaultview-183' table, calculate the percentage of events that were not created by a user of type 'Dialog'. The calculation is done by dividing the count of such events by the total count of events with the same name, and then multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (EVENT_NAME) \nFILTER (WHERE \"CreatedByDialog\" = FALSE)\n/ COUNT (EVENT_NAME) \nFILTER (WHERE \"CreatedByDialog\" IS NOT NULL)\n* 100\nFROM FLATTEN(\"defaultview-183\")\nWHERE EVENT_NAME IN ('Check Material Availability')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (EVENT_NAME) \nFILTER (WHERE \"CreatedByDialog\" = FALSE)\n/ COUNT (EVENT_NAME) \nFILTER (WHERE \"CreatedByDialog\" IS NOT NULL)\n* 100\nFROM FLATTEN(\"defaultview-183\")\nWHERE EVENT_NAME IN ('Check Material Availability')"
    },
    {
        "filename": "e048ff1b2f",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))\n        \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item'  'Receive Invoice')\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last 'Receive Invoice' event and the first 'Create PO Item' event for each process instance in the 'defaultview-431' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT avg(\n\t(SELECT LAST(end_time) \n    \tWHERE event_name IN ('Receive Invoice')) \n-\t(SELECT FIRST(end_time) \n    \tWHERE event_name IN ('Create PO Item'))\n   )\n   \nFROM \"defaultview-431\" \n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT avg(\n\t(SELECT LAST(end_time) \n    \tWHERE event_name IN ('Receive Invoice')) \n-\t(SELECT FIRST(end_time) \n    \tWHERE event_name IN ('Create PO Item'))\n   )\n   \nFROM \"defaultview-431\" \n"
    },
    {
        "filename": "8dc7922da6",
        "split": "test",
        "name": "PO Item changes rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES(ILIKE '%Update%')))\n\t/\n\tCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES('Create PO Item'))\n\t)\n\t* 100\n    \n    -- ILIKE '%Update%'\n    \n    \nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of updated items out of all items created in the 'defaultview-124' table. First, count the number of case IDs that have an event name containing the word 'Update' using the ILIKE operator with the '%Update%' pattern. Then, count the number of case IDs that have an event name equal to 'Create PO Item'. Finally, divide the first count by the second count and multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\n\t\tSELECT bool_or(event_name ILIKE '%Update%')\n\t)\n)\n/\nCOUNT (case_id) FILTER (\n\tWHERE (event_name = 'Create PO Item')\n)\n\n*100\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\n\t\tSELECT bool_or(event_name ILIKE '%Update%')\n\t)\n)\n/\nCOUNT (case_id) FILTER (\n\tWHERE (event_name = 'Create PO Item')\n)\n\n*100\nFROM \"defaultview-124\""
    },
    {
        "filename": "4d107651fe",
        "split": "test",
        "name": "Volume of cancelled orders",
        "query": "SELECT SUM(\"PO Item Net Order Value in USD\") FILTER (\n\tWHERE event_name MATCHES('Delete PO Item')\n\t)\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the sum of the 'PO Item Net Order Value in USD' column in the 'defaultview-57' table, where the 'event_name' column matches the value 'Delete PO Item'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"PO Item Net Order Value in USD\")\nFROM \"defaultview-57\"\nMATCHING\n(\nevent_name = 'Delete PO Item'\n)\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"PO Item Net Order Value in USD\")\nFROM \"defaultview-57\"\nMATCHING\n(\nevent_name = 'Delete PO Item'\n)\n                "
    },
    {
        "filename": "e0aec295eb",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For the table 'defaultview-225', calculate the percentage of cases where the last inventory item clearing date is greater than one day after the last inventory item due date. The calculation is done by counting the number of cases where the clearing date is greater than one day after the due date, dividing it by the total number of cases where the clearing date is not null, and then multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(distinct case_id) \nFILTER (WHERE (SELECT LAST (INV1.\"Clearing Date\")) - (SELECT LAST (INV1.\"Due Date\")) > DURATION '1day')  \n/\ncount(distinct case_id) FILTER (WHERE \"Last Clearing Date\" IS NOT NULL) * 100\n\n\nFROM FLATTEN(\"defaultview-225\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(distinct case_id) \nFILTER (WHERE (SELECT LAST (INV1.\"Clearing Date\")) - (SELECT LAST (INV1.\"Due Date\")) > DURATION '1day')  \n/\ncount(distinct case_id) FILTER (WHERE \"Last Clearing Date\" IS NOT NULL) * 100\n\n\nFROM FLATTEN(\"defaultview-225\")"
    },
    {
        "filename": "488b42c7bc",
        "split": "test",
        "name": "Company code and its latest changes ",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the company code, the most recent invoice date, the last invoice item terms of payment key, and the last invoice item vendor master payment terms for each case in the defaultview-225 table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Company Code\" as \"Company Code\",\n\"Last Invoice Date\" as \"Last Invoice Date\",\n\"Last Invoice item terms of payment key\" as \"Last Invoice item terms of payment key\",\n\"Last Invoice item vendor master payment terms\" as \"Last Invoice item vendor master payment terms\"\nFROM view_239",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Company Code\" as \"Company Code\",\n\"Last Invoice Date\" as \"Last Invoice Date\",\n\"Last Invoice item terms of payment key\" as \"Last Invoice item terms of payment key\",\n\"Last Invoice item vendor master payment terms\" as \"Last Invoice item vendor master payment terms\"\nFROM view_239"
    },
    {
        "filename": "a58ec89c7f",
        "split": "test",
        "name": "Table",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the company code, the most recent invoice date, the last invoice item terms of payment key, and the last invoice item vendor master payment terms for each case in the defaultview-225 table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  \t\"CompanyCode\",\n    \"InvDocLastChangingDate\" AS \"Invoice Date\"  ,\n    \"TermsOfPaymentKeyItem\" AS \"Last Invoice Item Terms of Payment\"  ,\n    \"PaymentTermsVendor\",\n    \"PaymentTermsText\"\n    \nFROM \"defaultview-225\"\nWHERE EVENT_NAME MATCHES ('ReleaseToAccounting')\nORDER BY 3 DESC NULLS FIRST , 1 ASC NULLS FIRST, 2 ASC NULLS FIRST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  \t\"CompanyCode\",\n    \"InvDocLastChangingDate\" AS \"Invoice Date\"  ,\n    \"TermsOfPaymentKeyItem\" AS \"Last Invoice Item Terms of Payment\"  ,\n    \"PaymentTermsVendor\",\n    \"PaymentTermsText\"\n    \nFROM \"defaultview-225\"\nWHERE EVENT_NAME MATCHES ('ReleaseToAccounting')\nORDER BY 3 DESC NULLS FIRST , 1 ASC NULLS FIRST, 2 ASC NULLS FIRST"
    },
    {
        "filename": "72e24c5831",
        "split": "test",
        "name": " Time difference planned vs actual end date without planned order",
        "query": "SELECT avg(\n\"Scheduled Finish Date\" - \"Actual Finish Date\" \n)\nFROM \"defaultview-183\"\nWhere \"Planned Order Number\" is null",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average difference between the scheduled finish date and actual finish date for all rows in the 'defaultview-183' table where the planned order number is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG ((SELECT LAST( \"Actual Finish Date\" )) - (SELECT LAST( \"Scheduled Finish Date\" )) ) \nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG ((SELECT LAST( \"Actual Finish Date\" )) - (SELECT LAST( \"Scheduled Finish Date\" )) ) \nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL"
    },
    {
        "filename": "0df706fd5d",
        "split": "test",
        "name": "Work Order Backlog",
        "query": "SELECT count(case_id) \n\t\tFILTER( WHERE(\n        \tSELECT count(event_name)\n            WHERE event_name = 'Order: REL - Released') < 1)\n\nFROM \"defaultview-95\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Get the count of distinct case IDs from the 'defaultview-95' table where the count of events with the name 'Order: REL - Released' is less than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(DISTINCT \"case_id\") FILTER (\n      WHERE (SELECT\n              COUNT(event_name)\n            WHERE event_name IN ('Order: REL - Released')\n            ) < 1 )\nFROM \"defaultview-95\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(DISTINCT \"case_id\") FILTER (\n      WHERE (SELECT\n              COUNT(event_name)\n            WHERE event_name IN ('Order: REL - Released')\n            ) < 1 )\nFROM \"defaultview-95\"\nORDER BY 1 DESC"
    },
    {
        "filename": "e0ceb3aa5d",
        "split": "test",
        "name": "Total No. of Cases",
        "query": "SELECT COUNT(CASE_ID) \nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of unique CASE_ID values from the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT CASE_ID ) AS \"case count\"\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT CASE_ID ) AS \"case count\"\nFROM \"defaultview-124\""
    },
    {
        "filename": "0e70ef39a0",
        "split": "test",
        "name": "Late Payment Rate  (by Volume)",
        "query": "SELECT (\nCOUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' \nAND (ClearingDate   - NetDueDate)  > DURATION '1day')  \n/ COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n) * 100\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For every unique ARUniqueKey, calculate the percentage of ClearingDate - NetDueDate greater than 1 day, out of all ClearingDate - NetDueDate for that ARUniqueKey.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(CASE_ID) FILTER (\n\tWHERE\n\t\t(ClearingDate - NetDueDate)  > DURATION '1day' \n\t)\n\t/ COUNT (CASE_ID)\n\t* 100\nFROM \"defaultview-196\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(CASE_ID) FILTER (\n\tWHERE\n\t\t(ClearingDate - NetDueDate)  > DURATION '1day' \n\t)\n\t/ COUNT (CASE_ID)\n\t* 100\nFROM \"defaultview-196\""
    },
    {
        "filename": "3ffcebe83b",
        "split": "test",
        "name": "Late Payments by Company Code",
        "query": "SELECT\n  \"Accounting Company Code\"  AS \"Company Code\",\n  SUM (\"Last Invoice Item Amount\" ) AS \"Invoice Amount\",\n  COUNT(case_id) AS \"Number of Invoices\"\nFROM\n  \"defaultview-545\"\nWHERE\n  (\n    \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\n  )\nORDER BY\n  2 DESC\nNULLS LAST",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the Accounting Company Code, sum of Last Invoice Item Amount, and count of case_id from the defaultview-545 table where the Last Invoice Due Date is less than the Last Invoice Payment Date, ordered by Invoice Amount in descending order, with null values placed last.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Last Invoice Accounting Company Code\",\nSUM(\"Last Invoice Item Amount\") AS \"CC_Terms_Cutoff_Inv_Amt\",\nCOUNT(case_id) AS \"# Cases_Auto_CC_Cancel_Inv\"\nFROM \"defaultview-545\"\nWHERE (\"Last Invoice Due Date\" > \"Last Invoice Payment Date\") \nORDER BY 3 DESC NULLS LAST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Last Invoice Accounting Company Code\",\nSUM(\"Last Invoice Item Amount\") AS \"CC_Terms_Cutoff_Inv_Amt\",\nCOUNT(case_id) AS \"# Cases_Auto_CC_Cancel_Inv\"\nFROM \"defaultview-545\"\nWHERE (\"Last Invoice Due Date\" > \"Last Invoice Payment Date\") \nORDER BY 3 DESC NULLS LAST"
    },
    {
        "filename": "a399be4a32",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference",
        "query": "SELECT count(case_id) FROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of case_id from the 'defaultview-183' table where the 'Actual Finish Date' column matches the 'Scheduled Finish Date' column and the 'Planned Order Number' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) \nFILTER (WHERE\n( \"Actual Finish Date\" MATCHES \"Scheduled Finish Date\")\nAND\n  \"Planned Order Number\" IS NULL\n)\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) \nFILTER (WHERE\n( \"Actual Finish Date\" MATCHES \"Scheduled Finish Date\")\nAND\n  \"Planned Order Number\" IS NULL\n)\nFROM \"defaultview-183\""
    },
    {
        "filename": "737c4d00c6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of cases where the last inventory item cash discount days are null or zero, out of all cases.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(CASE_ID) FILTER (WHERE (\n\tLAST(\"Inventory item cash discount days\") IS NULL OR\n    LAST(\"Inventory item cash discount days\") = 0\n  \t)\n) / COUNT(CASE_ID) AS \"Case percentage without inv. cash discount days\"\nFROM \"defaultview-638\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(CASE_ID) FILTER (WHERE (\n\tLAST(\"Inventory item cash discount days\") IS NULL OR\n    LAST(\"Inventory item cash discount days\") = 0\n  \t)\n) / COUNT(CASE_ID) AS \"Case percentage without inv. cash discount days\"\nFROM \"defaultview-638\"\n                "
    },
    {
        "filename": "2a5c42276f",
        "split": "test",
        "name": "\u00d8 WIP time Assembly -> Inspection",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0030'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0020'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average of the differences between the first 'Start%' event and the first 'Complete%' event for each routing step, using the 'defaultview-270' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n    AVG(\n        (\n         SELECT FIRST(\"Start%\") FILTER (\n         \tWHERE event_name IN ('Calculate Weekly Anticipated Output')\n        \t)\n        ) - \n        (\n         SELECT FIRST(\"Complete%\") FILTER (\n         \tWHERE event_name IN ('Planned Order Completion')\n        \t)\n        )\n    )\nFROM \"defaultview-270\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n    AVG(\n        (\n         SELECT FIRST(\"Start%\") FILTER (\n         \tWHERE event_name IN ('Calculate Weekly Anticipated Output')\n        \t)\n        ) - \n        (\n         SELECT FIRST(\"Complete%\") FILTER (\n         \tWHERE event_name IN ('Planned Order Completion')\n        \t)\n        )\n    )\nFROM \"defaultview-270\""
    },
    {
        "filename": "160da29779",
        "split": "test",
        "name": "Average time issue to assign first reviewer",
        "query": "SELECT \nAVG(\n\t\t(SELECT FIRST(end_time) \n\t \tWHERE event_name IN ('Assign Validator'))\n    - \t(SELECT FIRST(end_time)\n       \tWHERE event_name IN ('Change Status to Ready For Review'))\n\t)\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to Ready For Review' ~> \n    \t\t\t\t\t\t 'Change Status to In Review')",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the first 'Assign Validator' event and the first 'Change Status to Ready For Review' event, for each process instance in the 'defaultview-217' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG( \n    \t(SELECT FIRST(end_time) \n        FILTER (WHERE event_name = 'Assign Validator')) -\n        (SELECT FIRST(end_time) \n        FILTER (WHERE event_name = 'Change Status to Ready For Review')) \n    ) \nFROM \"defaultview-217\"\n  ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG( \n    \t(SELECT FIRST(end_time) \n        FILTER (WHERE event_name = 'Assign Validator')) -\n        (SELECT FIRST(end_time) \n        FILTER (WHERE event_name = 'Change Status to Ready For Review')) \n    ) \nFROM \"defaultview-217\"\n  "
    },
    {
        "filename": "49e3ff16c8",
        "split": "test",
        "name": "Process orders overdue for release",
        "query": "SELECT COUNT(case_id) \n\tFILTER(WHERE \"Scheduled Release Date\" < NOW() \n\tAND \"Actual Release Date\" IS NULL)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Get the count of case_id where Scheduled Release Date is less than current date and Actual Release Date is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) \nFROM \"defaultview-258\"\nWHERE \n\"scheduled release date\" < CURRENT_DATE()\nAND \n\"Actual Release Date\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) \nFROM \"defaultview-258\"\nWHERE \n\"scheduled release date\" < CURRENT_DATE()\nAND \n\"Actual Release Date\" IS NULL"
    },
    {
        "filename": "b11414e427",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Released to Goods Receipt",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Goods Receipt'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last 'Create Goods Receipt' event and the first 'Release PO' event for each process instance in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG(\n\t(SELECT LAST(end_time) WHERE event_name = 'Create Goods Receipt')\n\t-(SELECT FIRST(end_time) WHERE event_name = 'Release PO')\n   )\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG(\n\t(SELECT LAST(end_time) WHERE event_name = 'Create Goods Receipt')\n\t-(SELECT FIRST(end_time) WHERE event_name = 'Release PO')\n   )\nFROM \"defaultview-124\""
    },
    {
        "filename": "d4dfe3fb4d",
        "split": "test",
        "name": "Overdue Receivables (15+ days overdue) by Value - Top 10  Customer ",
        "query": "SELECT \"Overdue Amount\" , \"Customer\"\nFROM\n(\nSELECT SUM( \"AmountInGlobalCurrency\" ) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingDate IS NULL AND (NOW() - NetDueDate) > DURATION '15day') \n--OVER ( PARTITION BY \"AR_Customer\")\nAS \"Overdue Amount\", \n\"AR_CustomerName\" as \"Customer\"\nFROM FLATTEN(\"defaultview-222\")\n) as selections\nWHERE  \"Overdue Amount\" IS NOT NULL\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Select the sum of 'AmountInGlobalCurrency' where 'Event_Name' is 'Create Accounts Receivable', 'ClearingDate' is null, and 'NetDueDate' is greater than 15 days from now, grouped by 'AR_Customer', and ordered by 'Overdue Amount' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM (\"AmountInGlobalCurrency\") FILTER (\n    WHERE\n      EVENT_NAME = 'Create Accounts Receivable'\n      AND (\n        \"ClearingDate\" IS NULL\n      )\n      AND \"NetDueDate\" - DURATION '15days' > NOW()\n  ) OVER(\n    ORDER BY\n      \"Overdue Amount\" DESC\n  ) AS \"Running Overdue Amount\",\n  AR_Customer,\n  \"Overdue Amount\"\nFROM\n  \"defaultview-77\"\nWHERE\n  (\n    SELECT\n      COUNT (EVENT_NAME) FILTER (\n        WHERE\n          (\n            EVENT_NAME = 'Clear Accounts Receivable'\n            OR EVENT_NAME = 'Clear Accounts Receivables (Automatic)'\n          )\n      )\n  ) = 0\n  AND TEMPORAL_MODE() = 'UNBOUNDED FOLLOWING'\nORDER BY\n  3 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM (\"AmountInGlobalCurrency\") FILTER (\n    WHERE\n      EVENT_NAME = 'Create Accounts Receivable'\n      AND (\n        \"ClearingDate\" IS NULL\n      )\n      AND \"NetDueDate\" - DURATION '15days' > NOW()\n  ) OVER(\n    ORDER BY\n      \"Overdue Amount\" DESC\n  ) AS \"Running Overdue Amount\",\n  AR_Customer,\n  \"Overdue Amount\"\nFROM\n  \"defaultview-77\"\nWHERE\n  (\n    SELECT\n      COUNT (EVENT_NAME) FILTER (\n        WHERE\n          (\n            EVENT_NAME = 'Clear Accounts Receivable'\n            OR EVENT_NAME = 'Clear Accounts Receivables (Automatic)'\n          )\n      )\n  ) = 0\n  AND TEMPORAL_MODE() = 'UNBOUNDED FOLLOWING'\nORDER BY\n  3 DESC"
    },
    {
        "filename": "44cae3c190",
        "split": "test",
        "name": "Avg. Cycle Time per Project (20 longest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n   \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 DESC\nLIMIT 20\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the average cycle time for each project. The cycle time is calculated by subtracting the start time from the end time of the project. The results are sorted in descending order by cycle time and limited to the top 20 projects.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Project\", AVG ((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME))))\nAS \"Average Cycle Time\"\nFROM \"defaultview-819\"\nORDER BY 2 DESC\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Project\", AVG ((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME))))\nAS \"Average Cycle Time\"\nFROM \"defaultview-819\"\nORDER BY 2 DESC\nLIMIT 20"
    },
    {
        "filename": "471ccd349c",
        "split": "test",
        "name": "Order confirmation lead time",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) FILTER(WHERE event_name = 'Confirmed'))\n    -\n    (SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n\t)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average of the differences between the first 'Confirmed' event's end time and the last 'Released' event's end time in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG(\n    (\n      SELECT\n        LAST(\"end_time\") FILTER (\n          WHERE\n            event_name IN ('Confirmed')\n        )\n    ) - (\n      SELECT\n        FIRST(\"end_time\") FILTER (\n          WHERE\n            event_name IN ('Released')\n        )\n    )\n  )\nFROM\n  \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG(\n    (\n      SELECT\n        LAST(\"end_time\") FILTER (\n          WHERE\n            event_name IN ('Confirmed')\n        )\n    ) - (\n      SELECT\n        FIRST(\"end_time\") FILTER (\n          WHERE\n            event_name IN ('Released')\n        )\n    )\n  )\nFROM\n  \"defaultview-183\""
    },
    {
        "filename": "f6d2878264",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Manufacturing Plant",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Manufacturing Plant\" \nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases (Cases) and the average cycle time (Cycle Time) for each manufacturing plant. The cycle time is calculated by subtracting the Basic Start Date from the Basic Finish Date. The results are sorted in descending order by the number of cases.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\t\"Manufacturing Plant\",\n    AVG(\"Basic Finish Date\" - \"Basic Start Date\") AS \"Cycle Time\",\n    COUNT(CASE_ID) AS \"Cases\"\nFROM\n\t\"QP1\".\"view_automation_manufacturing_shopfloor_activity\"\n--WHERE \"Characteristic Plant\" = '1050'\nGROUP BY 1\nORDER BY\n\t2 ASC\n-- \"Basic Start Date\" ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\t\"Manufacturing Plant\",\n    AVG(\"Basic Finish Date\" - \"Basic Start Date\") AS \"Cycle Time\",\n    COUNT(CASE_ID) AS \"Cases\"\nFROM\n\t\"QP1\".\"view_automation_manufacturing_shopfloor_activity\"\n--WHERE \"Characteristic Plant\" = '1050'\nGROUP BY 1\nORDER BY\n\t2 ASC\n-- \"Basic Start Date\" ASC"
    },
    {
        "filename": "dc64a9e81b",
        "split": "test",
        "name": "Manufacturing lead time",
        "query": "SELECT\nAVG(\n(SELECT FIRST(end_time) FILTER(WHERE event_name LIKE 'GR%'))\n-\n(SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the first 'GR%' event and the last 'Released' event in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG(\n\t\t(SELECT LAST(end_time) FILTER(\n\t\t\tWHERE event_name LIKE 'GR%'))\n\t\t- (SELECT FIRST(end_time) FILTER (\n\t\t\tWHERE event_name IN ('Released'))))\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG(\n\t\t(SELECT LAST(end_time) FILTER(\n\t\t\tWHERE event_name LIKE 'GR%'))\n\t\t- (SELECT FIRST(end_time) FILTER (\n\t\t\tWHERE event_name IN ('Released'))))\nFROM \"defaultview-183\""
    },
    {
        "filename": "eaabd9dd85",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT\nAVG (\n\t(SELECT LAST (END_TIME))\n     -\n    (SELECT FIRST (END_TIME))\n\t)\n    FROM \"defaultview-525\"\nWHERE event_name MATCHES \n\t('Create Inspection Lot' 'Create Usage Decision' ILIKE 'Material Movement%')\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last and first end time of events with names matching 'Create Inspection Lot', 'Create Usage Decision', or 'Material Movement%' in the 'defaultview-525' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG(\n    \t(\n\t\t\tSELECT LAST(END_TIME)\n\t\t\tWHERE EVENT_NAME IN (\n\t\t\t\t'Create Inspection Lot',\n\t\t\t\t'Create Usage Decision',\n\t\t\t\t'Material Movement%'\n\t\t\t\t)\n\t\t) - \n    \t(\n\t\t\tSELECT FIRST(END_TIME)\n\t\t)\n    )\n        \nFROM \"defaultview-525\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG(\n    \t(\n\t\t\tSELECT LAST(END_TIME)\n\t\t\tWHERE EVENT_NAME IN (\n\t\t\t\t'Create Inspection Lot',\n\t\t\t\t'Create Usage Decision',\n\t\t\t\t'Material Movement%'\n\t\t\t\t)\n\t\t) - \n    \t(\n\t\t\tSELECT FIRST(END_TIME)\n\t\t)\n    )\n        \nFROM \"defaultview-525\""
    },
    {
        "filename": "4906928657",
        "split": "test",
        "name": "Cancellation of goods receipts",
        "query": "SELECT COUNT(case_id) FILTER (\nWHERE (event_name MATCHES('Reverse Goods Receipt'))\nAND (event_name MATCHES('Create Goods Receipt'))\n)\n\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count the number of case_id in the 'defaultview-57' table where event_name matches 'Reverse Goods Receipt' and event_name also matches 'Create Goods Receipt'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(\n\t\t(SELECT BOOL_OR((event_name ILIKE 'Reverse Goods Receipt'))) AND \n\t\t(SELECT BOOL_OR((event_name ILIKE 'Create Goods Receipt')))\n\t))\nFROM \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(\n\t\t(SELECT BOOL_OR((event_name ILIKE 'Reverse Goods Receipt'))) AND \n\t\t(SELECT BOOL_OR((event_name ILIKE 'Create Goods Receipt')))\n\t))\nFROM \"defaultview-57\"\n                "
    },
    {
        "filename": "70fa42ce9c",
        "split": "test",
        "name": "On-time delivery rate",
        "query": "SELECT COUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL AND \"Actual Delivery Date\" - \"Scheduled Finish Date\" = DURATION '0days'\n    )\n/\nCOUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL) \n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Get the count of case IDs where the actual delivery date is not null, and the difference between the actual delivery date and scheduled finish date is zero days, and then multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) \nFILTER (WHERE \"Actual delivery date\" IS NOT NULL AND (\"Actual delivery date\" - \"Scheduled finish date\") = DURATION '0day') \n/ COUNT(case_id) \nFILTER (WHERE \"Actual delivery date\" IS NOT NULL) \n* 100\nFROM \"bupa-8224428854191365205\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) \nFILTER (WHERE \"Actual delivery date\" IS NOT NULL AND (\"Actual delivery date\" - \"Scheduled finish date\") = DURATION '0day') \n/ COUNT(case_id) \nFILTER (WHERE \"Actual delivery date\" IS NOT NULL) \n* 100\nFROM \"bupa-8224428854191365205\""
    },
    {
        "filename": "a24472f64b",
        "split": "test",
        "name": "Total overdue invoice amounts",
        "query": "\nSELECT\nSUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER(\n\t WHERE (\"AR_LastClearingDate\" IS NULL)\n\t\t AND \"AR_LastNetDueDate\" < DATE_TRUNC('day', NOW())\n\t)\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the sum of AR_InvoicedAmountInGlobalCurrency from the defaultview-222 table where AR_LastClearingDate is null and AR_LastNetDueDate is less than the current date truncated to the day level.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM (AR_InvoicedAmountInGlobalCurrency) FROM \"defaultview-222\"\nWhere AR_LastClearingDate is null\nAND AR_LastNetDueDate < DATE_TRUNC('day', NOW())\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM (AR_InvoicedAmountInGlobalCurrency) FROM \"defaultview-222\"\nWhere AR_LastClearingDate is null\nAND AR_LastNetDueDate < DATE_TRUNC('day', NOW())\n"
    },
    {
        "filename": "0c18038530",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Material Text",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Material Text\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of unique CASE_IDs for each distinct value of Material Text in the defaultview-183 table, group the results by Material Text, and sort the results in descending order by the number of CASE_IDs.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(DISTINCT CASE_ID)) AS \"# Cases\",\n  \"Material Text\"\n  FROM defaultview-183\n  GROUP BY 2\n  ORDER BY 1 DESC\n \n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(DISTINCT CASE_ID)) AS \"# Cases\",\n  \"Material Text\"\n  FROM defaultview-183\n  GROUP BY 2\n  ORDER BY 1 DESC\n \n"
    },
    {
        "filename": "9b703e674b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Delivered or Technically Completed",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Delivered', 'Technically Completed')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average time difference between the last 'Delivered' or 'Technically Completed' event and the first 'Create Process Order' event for the default view 'defaultview-183'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG(\n\t(SELECT LAST(end_time) FILTER (\n\t\tWHERE event_name IN ('Delivered','Technically Completed'))) \n\t\t\n\t-(SELECT FIRST(end_time) FILTER (\n\t\tWHERE event_name IN ('Create Process Order'))))\n        \nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG(\n\t(SELECT LAST(end_time) FILTER (\n\t\tWHERE event_name IN ('Delivered','Technically Completed'))) \n\t\t\n\t-(SELECT FIRST(end_time) FILTER (\n\t\tWHERE event_name IN ('Create Process Order'))))\n        \nFROM \"defaultview-183\""
    },
    {
        "filename": "afc16d1b66",
        "split": "test",
        "name": "Average number of rework on issues with rework",
        "query": "SELECT AVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1\nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average of the count of events with name 'Change Status to In Progress', minus 1, from the 'defaultview-217' table, where the count of events with name 'Change Status to In Review' is greater than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG((SELECT COUNT(EVENT_NAME))) - 1\nFROM \"defaultview-217\"\nWHERE\n(SELECT COUNT(EVENT_NAME) WHERE EVENT_NAME = 'Change Status to In Review') > 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG((SELECT COUNT(EVENT_NAME))) - 1\nFROM \"defaultview-217\"\nWHERE\n(SELECT COUNT(EVENT_NAME) WHERE EVENT_NAME = 'Change Status to In Review') > 1"
    },
    {
        "filename": "e454fa513b",
        "split": "test",
        "name": "Percentage of products with considerable forecast override",
        "query": "SELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE( \n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) > 20\n\tOR\n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) < -20\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"Statistical Fcst Qty\" > 0\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t) * 24.98\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Count of distinct Product IDs where the ratio of Consensus Demand Plan Quantity to Statistical Forecast Quantity is greater than 20% or less than -20% in the last 320 days, with a minimum monthly Statistical Forecast Quantity of 1, normalized by dividing by the count of distinct Product IDs with a non-zero Statistical Forecast Quantity in the same period.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(DISTINCT \"Product ID\") FILTER (\n    WHERE\n      (\n        \"Consensus Demand Plan Quantity\" / NULLIF(\"Statistical Forecast Quantity\" ,0) > 1.2\n        OR \"Consensus Demand Plan Quantity\" / NULLIF(\"Statistical Forecast Quantity\" ,0) < - 1.2\n      )\n  ) / COUNT(DISTINCT \"Product ID\") FILTER (\n    WHERE\n      (\n        \"Statistical Forecast Quantity\" != 0\n      )\n  ) * 100\n  AS \"Performance of Demand Planning\" \nFROM\n  \"defaultview-420\"\n-- FILL AREA BY\nWHERE\n  DATE_TRUNC(\n    'day',\n    NOW() - DURATION '320days'\n  ) <= \"Event End Date\"\n  AND (\"Statistical Forecast Quantity\" >= 1)\n  AND \"Event Name\" IN (\n    'Statistical Forecast Adjusted based on Actuals'\n  )",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(DISTINCT \"Product ID\") FILTER (\n    WHERE\n      (\n        \"Consensus Demand Plan Quantity\" / NULLIF(\"Statistical Forecast Quantity\" ,0) > 1.2\n        OR \"Consensus Demand Plan Quantity\" / NULLIF(\"Statistical Forecast Quantity\" ,0) < - 1.2\n      )\n  ) / COUNT(DISTINCT \"Product ID\") FILTER (\n    WHERE\n      (\n        \"Statistical Forecast Quantity\" != 0\n      )\n  ) * 100\n  AS \"Performance of Demand Planning\" \nFROM\n  \"defaultview-420\"\n-- FILL AREA BY\nWHERE\n  DATE_TRUNC(\n    'day',\n    NOW() - DURATION '320days'\n  ) <= \"Event End Date\"\n  AND (\"Statistical Forecast Quantity\" >= 1)\n  AND \"Event Name\" IN (\n    'Statistical Forecast Adjusted based on Actuals'\n  )"
    },
    {
        "filename": "8296553520",
        "split": "test",
        "name": "No. of Invoices with Multiple Payment Term Change Events",
        "query": "SELECT\nCOUNT(CASE_ID)\nFROM\n(\n SELECT\n  COUNT(CASE_ID) AS \"CASE_COUNT\", CASE_ID, EVENT_NAME\n FROM FLATTEN(\"defaultview-225\")\n WHERE\n  (\"Changed Table\" IN ('EKKO','BSEG'))\n  AND (\"Changed Field\" IN  ('ZTERM', 'ZTERM', 'ZBD1T','ZBD2T','ZBD3T', 'ZBD1P', 'ZBD2P'))\n GROUP BY 2,3\n) AS SUB1\nWHERE \"CASE_COUNT\" > 1",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of unique CASE_IDs from the 'defaultview-225' table where the 'Changed Table' column is either 'EKKO' or 'BSEG' and the 'Changed Field' column is one of 'ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', or 'ZBD2P'. Group the results by CASE_ID and EVENT_NAME, and filter out any groups with a count of less than or equal to 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tCOUNT(DISTINCT CASE_ID) AS \"No. of Activities\"\n\t,CASE_ID AS \"Latest Step\"\n\t,\"Last event\" AS \" Latest Event\"\n\t,CASE_ID AS \"Case_ID in 'Added' Flat\"\n\t,ACTIVITY_NAME AS \"  Activity\",  EVENT_NAME AS \"  Event\",  \"CI Event Name\" AS \"CI  Event Name\",  \"CI Event Step\" AS \"CI  Event Step\"\n\t,\"Activity Type\" AS \"Activity Type\"  FROM DEFAULTVIEW((\nSELECT\n\tCASE_ID\n\t,EVENT_NAME AS \"Last event\"\n\t,ACTIVITY_NAME AS \"Latest Step\"\n\n\t, \"CASE_ID\" as \"Case_ID in 'Added' Flat\"\n\t, \"EVENT_NAME\" \n\t, \"ACTIVITY_NAME\"\n\t, \"EVENT_NAME\" AS \"CI Event Name\"\n    , FIRST(\"EVENT_NAME\") OVER (PARTITION BY CASE_ID) AS \"CI Event Step\"\n\t, 'Activity' AS \"Activity Type\"\nFROM \"defaultview-225\"\nWHERE\n  (\"event_type\" IN ('Activity' , 'DataChange') AND ( CHANGED_TABLE IN ('EKKO' ,'BSEG') AND  (CHANGED_FIELD IN ('ZTERM' ,'ZBD1T' ,'ZBD2T' ,'ZBD3T' ,'ZBD1P' ,'ZBD2P')))))\n\tAND (SELECT COUNT(DISTINCT \"EVENT_NAME\") AS \"EventCount\") > 1\n))\nAS \"COUNT of Unique CASE_ID Stepwise Process Change\"\n--ORDER BY 1 ASC\n--\"\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tCOUNT(DISTINCT CASE_ID) AS \"No. of Activities\"\n\t,CASE_ID AS \"Latest Step\"\n\t,\"Last event\" AS \" Latest Event\"\n\t,CASE_ID AS \"Case_ID in 'Added' Flat\"\n\t,ACTIVITY_NAME AS \"  Activity\",  EVENT_NAME AS \"  Event\",  \"CI Event Name\" AS \"CI  Event Name\",  \"CI Event Step\" AS \"CI  Event Step\"\n\t,\"Activity Type\" AS \"Activity Type\"  FROM DEFAULTVIEW((\nSELECT\n\tCASE_ID\n\t,EVENT_NAME AS \"Last event\"\n\t,ACTIVITY_NAME AS \"Latest Step\"\n\n\t, \"CASE_ID\" as \"Case_ID in 'Added' Flat\"\n\t, \"EVENT_NAME\" \n\t, \"ACTIVITY_NAME\"\n\t, \"EVENT_NAME\" AS \"CI Event Name\"\n    , FIRST(\"EVENT_NAME\") OVER (PARTITION BY CASE_ID) AS \"CI Event Step\"\n\t, 'Activity' AS \"Activity Type\"\nFROM \"defaultview-225\"\nWHERE\n  (\"event_type\" IN ('Activity' , 'DataChange') AND ( CHANGED_TABLE IN ('EKKO' ,'BSEG') AND  (CHANGED_FIELD IN ('ZTERM' ,'ZBD1T' ,'ZBD2T' ,'ZBD3T' ,'ZBD1P' ,'ZBD2P')))))\n\tAND (SELECT COUNT(DISTINCT \"EVENT_NAME\") AS \"EventCount\") > 1\n))\nAS \"COUNT of Unique CASE_ID Stepwise Process Change\"\n--ORDER BY 1 ASC\n--\"\n\n"
    },
    {
        "filename": "a8599a428f",
        "split": "test",
        "name": "#\u00a0Process\u00a0Orders\u00a0without\u00a0business\u00a0complete\u00a0",
        "query": "SELECT count(case_id) \nFROM \"defaultview-183\"\nWHERE not event_name MATCHES ('Confirmed')",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct case IDs from the 'defaultview-183' table where the 'event_name' column does not contain the value 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tCOUNT (DISTINCT case_id) FILTER (\n    \tWHERE (\"event_name\" NOT LIKE '%Confirmed%'))\nFROM \"defaultview-183\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tCOUNT (DISTINCT case_id) FILTER (\n    \tWHERE (\"event_name\" NOT LIKE '%Confirmed%'))\nFROM \"defaultview-183\"\n"
    },
    {
        "filename": "a646885e92",
        "split": "test",
        "name": "Number of Completed SLAs",
        "query": "SELECT SUM(\"SLA Count Completed\") FROM \"defaultview-370\"",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Summarize the total number of completed SLA Counts from the defaultview-370 table.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(completed SLA count )\nFROM \"defaultview-370\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(completed SLA count )\nFROM \"defaultview-370\""
    },
    {
        "filename": "08f340e540",
        "split": "test",
        "name": "Count of Cases per Activity",
        "query": "SELECT case_id, \"Request Type\",\n\"EVENT_NAME\" AS \"Activities\",\n(SELECT COUNT (\"EVENT_NAME\")) AS \"Number of Cases per Event\"\nFROM \"defaultview-299\"\nORDER BY 4 DESC\nLIMIT 5",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the following information from the 'defaultview-299' table:\n* Case ID (case_id)\n* Request Type ( Request Type)\n* Event Name (EVENT_NAME)\n* Number of Cases per Event (Number of Cases per Event)\n\nSort the results by the Event Name column in descending order (ORDER BY 4 DESC) and limit the output to the top 5 rows (LIMIT 5).",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCASE_ID AS \"Case ID\"\n,\"Request Type\"\n,EVENT_NAME AS \"Event Name\"\n,COUNT(1) FILTER (WHERE EVENT_NAME IS NOT NULL) OVER (\n    \tORDER BY FIRST_OCCURRENCE) AS \"Number of Cases per Event\"\nFROM FLATTEN (\"defaultview-299\")\nORDER BY 4 DESC\nLIMIT 5",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCASE_ID AS \"Case ID\"\n,\"Request Type\"\n,EVENT_NAME AS \"Event Name\"\n,COUNT(1) FILTER (WHERE EVENT_NAME IS NOT NULL) OVER (\n    \tORDER BY FIRST_OCCURRENCE) AS \"Number of Cases per Event\"\nFROM FLATTEN (\"defaultview-299\")\nORDER BY 4 DESC\nLIMIT 5"
    },
    {
        "filename": "7dc7833543",
        "split": "test",
        "name": "Invoices waiting for Goods Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES('Receive PO item'))\n\tAND (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice')))\n\t)\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of distinct case IDs from the 'defaultview-545' table where the event name does not match 'Receive PO item' and matches either 'Receive Invoice' or 'Reconcile Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tCOUNT (DISTINCT \"CaseId\")\nFROM\n\tFLATTEN(\"defaultview-545\")\nWHERE\n\t(\"EventName\" NOT LIKE 'Receive PO item') AND \n    \"EventName\" \n    MATCHES ('Receive Invoice'| 'Reconcile Invoice')\n\n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tCOUNT (DISTINCT \"CaseId\")\nFROM\n\tFLATTEN(\"defaultview-545\")\nWHERE\n\t(\"EventName\" NOT LIKE 'Receive PO item') AND \n    \"EventName\" \n    MATCHES ('Receive Invoice'| 'Reconcile Invoice')\n\n\n\n\n"
    },
    {
        "filename": "d7aec6e338",
        "split": "test",
        "name": "\u2300 Time before scheduled release ",
        "query": "SELECT avg(\"Scheduled Release Date\" - \"Actual Release Date\")\nFROM \"defaultview-183\"\nWHERE \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds'",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the average difference between Scheduled Release Date and Actual Release Date for all rows in the defaultview-183 table where the difference is greater than 0 seconds.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG (\"Scheduled Release Date\" - \"Actual Release Date\") \nFILTER(WHERE(DATE_PART('second', \"Scheduled Release Date\" - \"Actual Release Date\") > 0 ))\n\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG (\"Scheduled Release Date\" - \"Actual Release Date\") \nFILTER(WHERE(DATE_PART('second', \"Scheduled Release Date\" - \"Actual Release Date\") > 0 ))\n\nFROM \"defaultview-183\""
    },
    {
        "filename": "6f5fbcc69b",
        "split": "test",
        "name": "Copy of Open POs without GRN ( > 45 Days)",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\"\nFROM \"defaultview-124\"\nWHERE\n(NOW() - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')) > DURATION '45DAYS'",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Get the number of cases where the time difference between the current date and the last release PO end time is greater than 45 days.",
        "llm_gpt-35-turbo-0613_query": "SELECT\ncount(case_id)\nFROM cases\nWHERE\nDATEDIFF (DAY,(SELECT LAST (EVENT_END)) \nFILTER (WHERE EVENT_NAME = 'Release PO' \n)),(SELECT LAST (EVENT_END)) > 45\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\ncount(case_id)\nFROM cases\nWHERE\nDATEDIFF (DAY,(SELECT LAST (EVENT_END)) \nFILTER (WHERE EVENT_NAME = 'Release PO' \n)),(SELECT LAST (EVENT_END)) > 45\n"
    },
    {
        "filename": "c77441d9cc",
        "split": "test",
        "name": "Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Calculate the percentage of case IDs that have at least two occurrences of any event name, by filtering the count of case IDs using a subquery that checks for occurrence > 1, and then dividing the result by the total count of case IDs and multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n        (count(case_id) FILTER (\n        \tWHERE (SELECT COUNT(occurrence) WHERE BEF.occurrence < 1) > 1)) \n        / (count(case_id)) \n        * 100\nFROM \"datasetName\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n        (count(case_id) FILTER (\n        \tWHERE (SELECT COUNT(occurrence) WHERE BEF.occurrence < 1) > 1)) \n        / (count(case_id)) \n        * 100\nFROM \"datasetName\"\n                "
    },
    {
        "filename": "f030043950",
        "split": "test",
        "name": "Early Release with System / Batch User & Planned Order Reference",
        "query": "SELECT count(case_id) Filter( \nWhere \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND \"Event Created By User Type\" NOT in ('Dialog') AND event_name = 'Released' )\n/\ncount(case_id) Filter(Where \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND event_name = 'Released') *100\nFROM FLATTEN(\"defaultview-183\")\nWHERE \"Planned Order Number\" IS NOT NULL\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "For the table 'defaultview-183', retrieve the count of distinct 'case_id' where the difference between 'Scheduled Release Date' and 'Actual Release Date' is greater than 0 seconds, 'Event Created By User Type' is not in ('Dialog'), and 'event_name' is equal to 'Released'. Then, divide the result by the count of distinct 'case_id' where the difference between 'Scheduled Release Date' and 'Actual Release Date' is greater than 0 seconds and 'event_name' is equal to 'Released', and multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n(COUNT(DISTINCT case_id) FILTER \n(WHERE (\"Scheduled Release Date\" - \"Actual Release Date\" > 0 SECONDS) \nAND \"Event Created By User Type\" NOT IN ('Dialog')\nAND \"event_name\" = 'Released')) / \n(COUNT(DISTINCT case_id) FILTER \n(WHERE (\"Scheduled Release Date\" - \"Actual Release Date\" > 0 SECONDS) \nAND \"event_name\" = 'Released')) *100\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n(COUNT(DISTINCT case_id) FILTER \n(WHERE (\"Scheduled Release Date\" - \"Actual Release Date\" > 0 SECONDS) \nAND \"Event Created By User Type\" NOT IN ('Dialog')\nAND \"event_name\" = 'Released')) / \n(COUNT(DISTINCT case_id) FILTER \n(WHERE (\"Scheduled Release Date\" - \"Actual Release Date\" > 0 SECONDS) \nAND \"event_name\" = 'Released')) *100\nFROM \"defaultview-183\""
    },
    {
        "filename": "4f5797f512",
        "split": "test",
        "name": "Return rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE event_name IN ('Create Return Sales Order Item','Create Returns Delivery')) > 0\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the percentage of cases where at least one return sales order item or delivery was created, from the 'defaultview-290' table. Filter the cases where the count of events with names 'Create Return Sales Order Item' or 'Create Returns Delivery' is greater than zero, and calculate the percentage by dividing the count of case IDs by the total count of case IDs and multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id)\nFILTER (\n\tWHERE (SELECT count(event_name))\n    \t> 0 AND \n    (SELECT bool_or(event_name IN (\n    \t'Create Return Sales Order Item',\n    \t'Create Returns Delivery'\n        )))\n    )\n/ count(case_id) * 100\nFROM \"defaultview-290\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id)\nFILTER (\n\tWHERE (SELECT count(event_name))\n    \t> 0 AND \n    (SELECT bool_or(event_name IN (\n    \t'Create Return Sales Order Item',\n    \t'Create Returns Delivery'\n        )))\n    )\n/ count(case_id) * 100\nFROM \"defaultview-290\""
    },
    {
        "filename": "f16c619f2a",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time (Receive to Approve Invoice) by PO Supplier (Top 25) - Without POs",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Approve Invoice') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive invoice')) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 25",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases, average cycle time, and PO Item Supplier ID from the 'defaultview-545' table. The average cycle time is calculated by subtracting the first END_TIME of events named 'Receive invoice' from the last END_TIME of events named 'Approve Invoice'. The results are sorted in descending order by the number of cases and limited to the top 25 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(CASE_ID) as \"No of Cases\", \nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Approve Invoice') \n- (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive invoice'))) as \"Avg Cycle Time\", \n\"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 1 desc\nLIMIT 25",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(CASE_ID) as \"No of Cases\", \nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Approve Invoice') \n- (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive invoice'))) as \"Avg Cycle Time\", \n\"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 1 desc\nLIMIT 25"
    },
    {
        "filename": "897f3b1354",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Item Plant",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\", \n\"PO Item Plant\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of cases, total PO value, and plant for PO items in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"CASE_ID\" ) AS \"No. of Cases\",\nSUM (\"PO_ITEM_NET_ORDER_VALUE\" ) AS \"Total PO Value\",\n\"PO_ITEM_PLANT\"\nFROM  \"default\".\"view_0000223802_3590404084731293876\" \nGROUP   BY 3\norder by 2 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"CASE_ID\" ) AS \"No. of Cases\",\nSUM (\"PO_ITEM_NET_ORDER_VALUE\" ) AS \"Total PO Value\",\n\"PO_ITEM_PLANT\"\nFROM  \"default\".\"view_0000223802_3590404084731293876\" \nGROUP   BY 3\norder by 2 desc"
    },
    {
        "filename": "2952d1e1d0",
        "split": "test",
        "name": "Open Overdue Receivables by Project Manager (Top 10)",
        "query": "SELECT COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day')\nas \"#Receivables\" , \n \"Project_Manager\"  as \"Project Manager\"\nFROM FLATTEN(\"defaultview-197\")\nGROUP BY 2\nORDER By 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the number of unique accounts receivable created in the last 15 days, grouped by project manager, and sorted in descending order by the number of receivables. The query filters out any entries with a clearing journal entry and uses the 'defaultview-197' flattened view.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Sales Originals AR Account ID\" AS \"Account\", \n\"Sales Originals AR Account ID\" AS \"Account\", \nCOUNT(AR_ID) FILTER (\n\tWHERE DATE_TRUNC('day', \"Receivables Creation Date\") > (SELECT DATE_TRUNC('day', NOW())) -  INTERVAL '15' DAY\n\t)\n, \"original.CB Partner Nr Name\" AS \"Project Manager (Sales Orig.)\"\n  FROM FLATTEN(\"defaultview-197\")\n  WHERE\n  (\n  SELECT\n   SUM (1)\n  WHERE\n  \tFUNCTION_NAME = 'ARClearingJournalCreate') = 0\nGROUP BY 4\nORDER BY 3 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Sales Originals AR Account ID\" AS \"Account\", \n\"Sales Originals AR Account ID\" AS \"Account\", \nCOUNT(AR_ID) FILTER (\n\tWHERE DATE_TRUNC('day', \"Receivables Creation Date\") > (SELECT DATE_TRUNC('day', NOW())) -  INTERVAL '15' DAY\n\t)\n, \"original.CB Partner Nr Name\" AS \"Project Manager (Sales Orig.)\"\n  FROM FLATTEN(\"defaultview-197\")\n  WHERE\n  (\n  SELECT\n   SUM (1)\n  WHERE\n  \tFUNCTION_NAME = 'ARClearingJournalCreate') = 0\nGROUP BY 4\nORDER BY 3 DESC"
    },
    {
        "filename": "e0ae4c7960",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of invoice item changes",
        "query": "SELECT COUNT (\"event_name\") FILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n 'Change Invoice%' OR event_name LIKE 'Create Invoice Item Cancellation%' OR event_name LIKE 'Update Invoice%') AS created_with_dialog MATCHES (created_with_dialog)),\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nGROUP BY 2\norder by 1 desc\nLimit 10",
        "llm_name": "signal_description_llama2-70b-chat-hf",
        "description_llm": "Retrieve the count of events with names containing 'Change Invoice', 'Create Invoice Item Cancellation', or 'Update Invoice%' where the event was created with a dialog, from the 'defaultview-290' table, group the results by the 'SalesDocCustomerCompany' column, order the results in descending order by the count column, and limit the results to 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(event) as \"# of Invoices\", \"Sold to Party Name\", \"Sold to Party Company\"\nFROM FLATTEN(\"defaultview-290\")\nWHERE EVENT CREATED WITH DIALOG \nAND (event_name LIKE '%Change Invoice%' OR event_name LIKE '%Create Invoice Item Cancellation%' OR event_name LIKE '%Update Invoice%')\nGROUP BY 2,3\nORDER BY 1 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(event) as \"# of Invoices\", \"Sold to Party Name\", \"Sold to Party Company\"\nFROM FLATTEN(\"defaultview-290\")\nWHERE EVENT CREATED WITH DIALOG \nAND (event_name LIKE '%Change Invoice%' OR event_name LIKE '%Create Invoice Item Cancellation%' OR event_name LIKE '%Update Invoice%')\nGROUP BY 2,3\nORDER BY 1 DESC\nLIMIT 10\n"
    },
    {
        "filename": "f5213b3ab3",
        "split": "test",
        "name": "Events by User Type and frequency of occurence",
        "query": "SELECT DISTINCT  event_name,\"Event Created by User Type\",count(event_name) AS A\nFROM FLATTEN (\"defaultview-59\")\nORDER BY 3  desc\nlimit 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve a distinct list of event names, along with the 'Event Created by User Type' and the count of each event. The data is obtained from the 'defaultview-59' table. The results are sorted in descending order based on the count of each event, and only the top 10 results are returned.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n    \"Event Name\"\n\t, 'Event Created by User Type'\n    , COUNT(1) as \"# Cases\"\n    \nFROM FLATTEN(\"defaultview-59\")\ngroup by 1, 2\norder by 3 desc\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n    \"Event Name\"\n\t, 'Event Created by User Type'\n    , COUNT(1) as \"# Cases\"\n    \nFROM FLATTEN(\"defaultview-59\")\ngroup by 1, 2\norder by 3 desc\nLIMIT 10"
    },
    {
        "filename": "bac85808e2",
        "split": "test",
        "name": "Conformance Level",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES (\n    \t'Create PO Item'\n\t\t~> 'Release PO'\n\t\t~> 'Create Goods Receipt'\n\t\t~> ('Record Invoice Receipt'|'Create FI Invoice')\n\t\t~> 'Clear Invoice')) \n\t/ COUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Clear Invoice')) \n    * 100 AS \"Conformance Rate\"\n\nFROM \"defaultview-124\" ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the conformance rate by dividing the count of case IDs where the event name matches 'Create PO Item' followed by 'Release PO' followed by 'Create Goods Receipt' followed by either 'Record Invoice Receipt' or 'Create FI Invoice' followed by 'Clear Invoice', by the count of case IDs where the event name matches 'Clear Invoice'. Multiply the result by 100 to get the conformance rate. The query is performed on the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (case_id) FILTER (\n\tWHERE event_name MATCHES ('Create PO Item' \n\t\t\t\t\t\t\t\t~> 'Release PO'\n                                ~> 'Create Goods Receipt'\n                                ~> ('Record Invoice Receipt' | 'Create FI Invoice')\n                                ~> 'Clear Invoice')\n                                \n    ) / COUNT (CASE_ID) FILTER (\n    \tWHERE event_name MATCHES ('Clear Invoice')) * 100\n     \n                    \t\n                    \nFROM \"defaultview-124\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (case_id) FILTER (\n\tWHERE event_name MATCHES ('Create PO Item' \n\t\t\t\t\t\t\t\t~> 'Release PO'\n                                ~> 'Create Goods Receipt'\n                                ~> ('Record Invoice Receipt' | 'Create FI Invoice')\n                                ~> 'Clear Invoice')\n                                \n    ) / COUNT (CASE_ID) FILTER (\n    \tWHERE event_name MATCHES ('Clear Invoice')) * 100\n     \n                    \t\n                    \nFROM \"defaultview-124\" "
    },
    {
        "filename": "d9c60165f1",
        "split": "test",
        "name": "PO Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"PO Confirmation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the distinct values of the column 'Last Invoice Id' from the table 'defaultview-431' where the value of the column 'PO Confirmation Status' is 'Rejected' and the value of the column 'PO Item Line Type' is 'Catalog'. Divide this count by the total count of distinct values of the column 'Last Invoice Id' from the table 'defaultview-431' and multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (DISTINCT \"Last Invoice Id\") \nFILTER (\n\tWHERE \"PO Confirmation Status\" = 'Rejected'\n    AND \"PO Item Line Type\" = 'Catalog'\n       )\n / \nCOUNT (DISTINCT \"Last Invoice Id\")\n* 100 \nFROM \"defaultview-431\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (DISTINCT \"Last Invoice Id\") \nFILTER (\n\tWHERE \"PO Confirmation Status\" = 'Rejected'\n    AND \"PO Item Line Type\" = 'Catalog'\n       )\n / \nCOUNT (DISTINCT \"Last Invoice Id\")\n* 100 \nFROM \"defaultview-431\"\n                "
    },
    {
        "filename": "1c43801ce6",
        "split": "test",
        "name": "TOP 10 Customers with most Invoice Changes ",
        "query": "SELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Invoice%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of distinct 'UniqueEventId' values where the 'EVENT_NAME' contains the word 'Invoice' and the 'ChangeType' is 'Update'. Group the results by the 'SalesDocCustomerCompany' column. Sort the results in descending order by the count of changes. Limit the output to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(\"UniqueEventId\") as \"Changes\", \"ChangeAttributeNewValueCaseInsensitive\" as \"Sales Doc Customer. Company\"\n FROM \"bupa.eventview\"\n WHERE ChangeType = 'Update' and\n   EVENT_NAME MATCHES('InvoiceCreditNote~>InvoiceRebill.*' \n                       ~'~>InvoiceComplaint.*' \n                       ~'~>InvoiceManualIntercompanyClearing.*' \n                       ~'~>InvoiceOrderBased.*'  ~'~>Invoice.*')\nGROUP BY 2\norder by 1 Desc\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(\"UniqueEventId\") as \"Changes\", \"ChangeAttributeNewValueCaseInsensitive\" as \"Sales Doc Customer. Company\"\n FROM \"bupa.eventview\"\n WHERE ChangeType = 'Update' and\n   EVENT_NAME MATCHES('InvoiceCreditNote~>InvoiceRebill.*' \n                       ~'~>InvoiceComplaint.*' \n                       ~'~>InvoiceManualIntercompanyClearing.*' \n                       ~'~>InvoiceOrderBased.*'  ~'~>Invoice.*')\nGROUP BY 2\norder by 1 Desc\nLIMIT 10\n"
    },
    {
        "filename": "aef7816f49",
        "split": "test",
        "name": "On time Delivery Rate",
        "query": "SELECT COUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE (\"DeliveryGoodsMovementOnTime\" = 'Yes')) > 0\n\t)\n/ COUNT(case_id)\n* 100 \nFROM \"defaultview-43\"\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case_ids where the event_name 'DeliveryGoodsMovementOnTime' is 'Yes' in the 'defaultview-43' table. To do this, count the number of case_ids where the event_name 'DeliveryGoodsMovementOnTime' is 'Yes' and divide it by the total count of case_ids in the 'defaultview-43' table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE \n\t(\n\t\tSELECT BOOL_OR(\"DeliveryGoodsMovementOnTime\" = 'Yes')\n\t)\n   )\n/ \nCOUNT (CASE_ID) * 100\nFROM \"defaultview-43\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE \n\t(\n\t\tSELECT BOOL_OR(\"DeliveryGoodsMovementOnTime\" = 'Yes')\n\t)\n   )\n/ \nCOUNT (CASE_ID) * 100\nFROM \"defaultview-43\""
    },
    {
        "filename": "2ea60d0c15",
        "split": "test",
        "name": "Orders with SFC Activities not started",
        "query": "SELECT\n  count(\"case_id\")\nFROM\n  (\n    SELECT\n      DISTINCT case_id,\n      COUNT(DISTINCT \"event_name\") AS cnt\n    FROM\n      FLATTEN(\"defaultview-545\")\n    GROUP BY\n      1\n  ) AS T\nWHERE\n  cnt = 2",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of distinct case_ids from the 'defaultview-545' table where the count of distinct event_names for each case_id is equal to 2.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(distinct case_id)\nFROM \"defaultview-545\"\nWHERE (SELECT count(DISTINCT event_name) ) = 2",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(distinct case_id)\nFROM \"defaultview-545\"\nWHERE (SELECT count(DISTINCT event_name) ) = 2"
    },
    {
        "filename": "8898300b76",
        "split": "test",
        "name": "Total Spend by PO Supplier (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the total purchase order amount, average cycle time, and purchase order supplier for the top 10 records in the 'defaultview-431' table. The total purchase order amount is obtained by summing the values in the 'PO Item Total Amount' column. The average cycle time is calculated by subtracting the first 'END_TIME' value from the last 'END_TIME' value and then taking the average. The purchase order supplier is represented by the 'PO Item Supplier ID' column. The results are ordered in descending order based on the total purchase order amount.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  TOP 10 \n  SUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \n  AVG (\n    (\n      SELECT \n        LAST (END_TIME) - FIRST (END_TIME)\n    )\n  ) AS \"Avg. Cycle Time\", \n  \"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \n  \"defaultview-431\"\nORDER BY \n  1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  TOP 10 \n  SUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \n  AVG (\n    (\n      SELECT \n        LAST (END_TIME) - FIRST (END_TIME)\n    )\n  ) AS \"Avg. Cycle Time\", \n  \"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \n  \"defaultview-431\"\nORDER BY \n  1 DESC"
    },
    {
        "filename": "adbdde6533",
        "split": "test",
        "name": "Average invoice customer process time",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) WHERE event_name IN ('Create Invoice'))\n\t-\n\t(SELECT FIRST(end_time) WHERE event_name IN ('Post Goods Issue'))\n)\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last occurrence of the 'Create Invoice' event and the first occurrence of the 'Post Goods Issue' event in the 'defaultview-290' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create Invoice')) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Post Goods Issue')))\nFROM \"defaultview-290\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create Invoice')) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Post Goods Issue')))\nFROM \"defaultview-290\" "
    },
    {
        "filename": "abc59e9a38",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time PO Creation to PO Release ( > 3 Days)  by PO Plant",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - \n(SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg Cycle Time PO Create to PO Release\",\n\"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 20",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The query retrieves the number of cases, the average cycle time from the creation of a purchase order (PO) item to the release of the PO, and the PO plant. The data is obtained from the 'defaultview-124' table. The query filters the data based on the condition that the time difference between the release of the PO and the creation of the PO item is greater than 3 days. The results are grouped by the 'PO Plant' column and sorted in descending order based on the number of cases. The query returns a maximum of 20 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(1) as \"Number of Cases\",\nAVG ((SELECT LAST (\"time\") FILTER (EVENT_NAME = 'PO Released')) - (SELECT LAST (\"time\") FILTER (EVENT_NAME = 'Create PO Item'))) as \"PO Release Time (CYCLE TIME)\" , \n\"PO Plant\"\nFROM \"defaultview-124\"\n \nWHERE \n(SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'PO Released') ) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create PO Item'))  > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(1) as \"Number of Cases\",\nAVG ((SELECT LAST (\"time\") FILTER (EVENT_NAME = 'PO Released')) - (SELECT LAST (\"time\") FILTER (EVENT_NAME = 'Create PO Item'))) as \"PO Release Time (CYCLE TIME)\" , \n\"PO Plant\"\nFROM \"defaultview-124\"\n \nWHERE \n(SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'PO Released') ) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create PO Item'))  > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 20"
    },
    {
        "filename": "73a2f1f5d3",
        "split": "test",
        "name": "Number of Invoice without PO",
        "query": "SELECT \nCOUNT(DISTINCT \"Last Invoice Id\")FILTER (WHERE \"PO ID\" IS NULL) AS \"# PO without Invoice\"\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of distinct 'Last Invoice Id' values where 'PO ID' is null in the 'defaultview-431' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n\tCOUNT(DISTINCT \"Last Invoice Id\") FILTER (\n    \tWHERE \"PO ID\" IS NULL\n\t)\n    \nFROM \"defaultview-431\"\n            ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n\tCOUNT(DISTINCT \"Last Invoice Id\") FILTER (\n    \tWHERE \"PO ID\" IS NULL\n\t)\n    \nFROM \"defaultview-431\"\n            "
    },
    {
        "filename": "e21acbeec8",
        "split": "test",
        "name": "_Total approved hours",
        "query": "\nSELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'TSR_HoursApproved' column from the 'defaultview-197' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "55cd82a6dd",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create FI Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-124\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Create FI Invoice')",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last 'Create FI Invoice' event and the first 'Create PO Item' event. The events are filtered based on their end time. The query is performed on the 'defaultview-124' table. Only events with the names 'Create PO Item' and 'Create FI Invoice' are considered.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create FI Invoice'))))\n    -\n    (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))\n    AS \"Lead Time Create FI Inv - Create PO Item\"\n     \nFROM \"defaultview-124\"\nWHERE (SELECT LAST(END_TIME)) - \n\t(SELECT FIRST(END_TIME)) >= DURATION '1 HOUR'\n    AND (SELECT LAST(END_TIME)) >= '2020-07-01' AND (SELECT LAST(END_TIME)) <= '2020-08-31'  AND EVENT_NAME IN ('Create PO Item' ,'Create FI Invoice' ) ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create FI Invoice'))))\n    -\n    (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))\n    AS \"Lead Time Create FI Inv - Create PO Item\"\n     \nFROM \"defaultview-124\"\nWHERE (SELECT LAST(END_TIME)) - \n\t(SELECT FIRST(END_TIME)) >= DURATION '1 HOUR'\n    AND (SELECT LAST(END_TIME)) >= '2020-07-01' AND (SELECT LAST(END_TIME)) <= '2020-08-31'  AND EVENT_NAME IN ('Create PO Item' ,'Create FI Invoice' ) "
    },
    {
        "filename": "0f63bf2cea",
        "split": "test",
        "name": "Planning Rate",
        "query": "SELECT \nCOUNT(case_id) \n\tFILTER(WHERE \"Planned Order Number\" IS NOT NULL)\n/ \nCOUNT(case_id)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs that have a non-null value in the 'Planned Order Number' column in the 'defaultview-183' table. To do this, count the number of case IDs where the 'Planned Order Number' is not null and divide it by the total count of case IDs in the table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE \"Planned Order Number\" IS NOT NULL\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE \"Planned Order Number\" IS NOT NULL\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "a8de636039",
        "split": "test",
        "name": "SOL-1709 No-Touch Invoice Processing Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES  (('Remove Dunning Block'\n    \t\t|'Set Dunning Block'|'Change Dunning Block'|'Send 1st Overdue Notice'\n    \t\t|'Update Baseline Date'|'Update Payment Term'|'Reverse Invoice'))) \n    \tAND (event_name MATCHES('Clear Invoice'))\n\t)\n/ (COUNT(case_id) FILTER (\n\tWHERE event_name MATCHES('Clear Invoice'))\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the event_name is 'Clear Invoice' and not any of the following: 'Remove Dunning Block', 'Set Dunning Block', 'Change Dunning Block', 'Send 1st Overdue Notice', 'Update Baseline Date', 'Update Payment Term', 'Reverse Invoice'. The calculation is done by dividing the count of cases where the event_name is 'Clear Invoice' and not any of the mentioned events by the count of cases where the event_name is 'Clear Invoice', and then multiplying the result by 100. The data is retrieved from the 'defaultview-59' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT (CASE_ID) FILTER (\n    WHERE\n      event_name = 'Clear Invoice'\n      AND (\n        NOT (\n          event_name IN ('Remove Dunning Block','Set Dunning Block') \n          OR event_name IN ('Change Dunning Block','Set Dunning Block') \n          OR event_name = 'Send 1st Overdue Notice'\n          OR event_name IN ('Update Baseline Date','Update Payment Term')\n          OR event_name = 'Reverse Invoice'\n        )\n      )\n  ) \n  / COUNT (CASE_ID) FILTER (\n    WHERE\n      event_name = 'Clear Invoice'\n  )\n  * 100 \nFROM\n  \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT (CASE_ID) FILTER (\n    WHERE\n      event_name = 'Clear Invoice'\n      AND (\n        NOT (\n          event_name IN ('Remove Dunning Block','Set Dunning Block') \n          OR event_name IN ('Change Dunning Block','Set Dunning Block') \n          OR event_name = 'Send 1st Overdue Notice'\n          OR event_name IN ('Update Baseline Date','Update Payment Term')\n          OR event_name = 'Reverse Invoice'\n        )\n      )\n  ) \n  / COUNT (CASE_ID) FILTER (\n    WHERE\n      event_name = 'Clear Invoice'\n  )\n  * 100 \nFROM\n  \"defaultview-59\""
    },
    {
        "filename": "cbc696ff54",
        "split": "test",
        "name": "Overdue Receivables",
        "query": "SELECT \n \"AR_CustomerName\" ,\n\"Overdue Category\", \ncount(\"ARUniqueKey\" ) as \"#Receivables\"\nFROM FLATTEN (\"defaultview-197\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate \n \n GROUP BY 1,2\n ORDER BY  3 DESC\nLIMIT 20",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the customer name, overdue category, and the count of unique accounts receivable for each customer from the 'defaultview-197' table. Filter the results to include only records where the NetDueDate is not null, the event_name is 'Create Accounts Receivable', the ClearingDate is null, and the current date and time is greater than or equal to the NetDueDate. Group the results by the customer name and overdue category, and order the results by the count of unique accounts receivable in descending order. Limit the results to the top 20 records.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"CustomerName\" AS \"Customer Name\", \nCASE\n\tWHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) > 0 THEN '1 - Not Due'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) <= 0 AND time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) >= -2592000 THEN '2 - Up to 30 Days Overdue'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) < -2592000 AND time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) >= -5184000 THEN '3 - 30-60 Days Overdue'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) < -5184000 AND time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) >= -7776000 THEN '4 - 60-90 Days Overdue'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) < -7776000 AND time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) >= -26784000 THEN '5 - 90-270 Days Overdue'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) < -26784000 THEN '6 - More than 270 Days Overdue'\n    ELSE '0 - Other'\n    END AS \"Overdue Category\",\ncount(DISTINCT \"Customer\") AS \"Unique Accounts Receivable\"\nFROM \"defaultview-197\"\nWHERE NetDueDate IS NOT NULL\nAND event_name = 'Create Accounts Receivable'\nAND ClearingDate IS NULL\nAND NOW() >= NetDueDate\nGROUP BY 1,2\nORDER BY 3 DESC\nLIMIT 20\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"CustomerName\" AS \"Customer Name\", \nCASE\n\tWHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) > 0 THEN '1 - Not Due'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) <= 0 AND time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) >= -2592000 THEN '2 - Up to 30 Days Overdue'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) < -2592000 AND time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) >= -5184000 THEN '3 - 30-60 Days Overdue'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) < -5184000 AND time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) >= -7776000 THEN '4 - 60-90 Days Overdue'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) < -7776000 AND time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) >= -26784000 THEN '5 - 90-270 Days Overdue'\n    WHEN time_to_sec(TIMESTAMP_DIFF(NOW(), \"NetDueDate\")) < -26784000 THEN '6 - More than 270 Days Overdue'\n    ELSE '0 - Other'\n    END AS \"Overdue Category\",\ncount(DISTINCT \"Customer\") AS \"Unique Accounts Receivable\"\nFROM \"defaultview-197\"\nWHERE NetDueDate IS NOT NULL\nAND event_name = 'Create Accounts Receivable'\nAND ClearingDate IS NULL\nAND NOW() >= NetDueDate\nGROUP BY 1,2\nORDER BY 3 DESC\nLIMIT 20\n"
    },
    {
        "filename": "c6d0126e8f",
        "split": "test",
        "name": "Monthly average number of reworks per case",
        "query": "SELECT \nDATE_TRUNC('month', \n                   (SELECT FIRST(end_time) \n                    WHERE event_name \n                    IN ('Change Status to Closed')\n                   )\n          ) AS \"Month\",\nAVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1 AS \"Rework ratio per case\" \nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1\n  AND \"ResolutionStatus\" IS NOT NULL\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The query is performed on the table 'defaultview-217'. It retrieves the month when the first 'Change Status to Closed' event occurred and truncates the date to the month level. It calculates the average count of 'Change Status to In Progress' events per case and subtracts 1 from the result. The query filters the data by checking if the count of 'Change Status to In Review' events is greater than 1. It also filters out rows where the 'ResolutionStatus' column is NULL. The results are grouped by the month and ordered by the month.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nDATE_TRUNC('month', (SELECT FIRST(end_time) \n\t\t\tWhere event_name IN ('Change Status to Closed')) ) AS \"Month Closed\",\n  AVG ((SELECT COUNT (event_name) \n  \tWHERE event_name IN ('Change Status to Closed' ))) - 1\n  \nFROM \"defaultview-217\"\nWHERE (SELECT COUNT (EVENT_NAME) WHERE EVENT_NAME IN ('Change Status to In Review')) > 1\n  AND \"ResolutionStatus\" != 'NULL'\nGROUP BY 1\nORDER BY 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nDATE_TRUNC('month', (SELECT FIRST(end_time) \n\t\t\tWhere event_name IN ('Change Status to Closed')) ) AS \"Month Closed\",\n  AVG ((SELECT COUNT (event_name) \n  \tWHERE event_name IN ('Change Status to Closed' ))) - 1\n  \nFROM \"defaultview-217\"\nWHERE (SELECT COUNT (EVENT_NAME) WHERE EVENT_NAME IN ('Change Status to In Review')) > 1\n  AND \"ResolutionStatus\" != 'NULL'\nGROUP BY 1\nORDER BY 1"
    },
    {
        "filename": "1f62e5a6ab",
        "split": "test",
        "name": "Average number of reworks per case",
        "query": "\nSELECT\nAVG((SELECT COUNT(event_name) - COUNT(DISTINCT event_name)))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average of the difference between the count of all event names and the count of distinct event names in the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG(\n    (\n      SELECT\n        COUNT(event_name)\n      WHERE\n        (\n          SELECT\n            BOOL_OR(is_new)\n          ) = TRUE\n    ) - COUNT(DISTINCT event_name)\n  ) AS \"# 13\"\nFROM\n  \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG(\n    (\n      SELECT\n        COUNT(event_name)\n      WHERE\n        (\n          SELECT\n            BOOL_OR(is_new)\n          ) = TRUE\n    ) - COUNT(DISTINCT event_name)\n  ) AS \"# 13\"\nFROM\n  \"defaultview-545\"\n                "
    },
    {
        "filename": "0d0de12fc7",
        "split": "test",
        "name": "Invoice Open Amount",
        "query": "SELECT SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\" ) \n+ SUM(\"AR_ClearedAmountInCompanyCodeCurrency\" )\nFROM \"defaultview-197\"\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'AR_InvoicedAmountInCompanyCodeCurrency' column and the sum of the 'AR_ClearedAmountInCompanyCodeCurrency' column from the 'defaultview-197' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n\tSUM(\"AR_InvoicedAmountInCompanyCodeCurrency\"),\n    SUM(\"AR_ClearedAmountInCompanyCodeCurrency\")\n    \nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n\tSUM(\"AR_InvoicedAmountInCompanyCodeCurrency\"),\n    SUM(\"AR_ClearedAmountInCompanyCodeCurrency\")\n    \nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "6777a222c9",
        "split": "test",
        "name": "Rate of Cases executed in a given timeframe",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (\n    \tWHERE (SELECT LAST (END_TIME) FILTER (\n        \tWHERE EVENT_NAME IN ('Clear Invoice')) \n\t- FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))) \n        \t< DURATION '14days') \n\t/ COUNT (CASE_ID) * 100\n    \nFROM \"defaultview-225\" ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the time difference between the last 'Clear Invoice' event and the first 'Post Invoice' event is less than 14 days. The result is obtained by dividing the count of such cases by the total count of cases and multiplying by 100. The query is performed on the 'defaultview-225' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE\n\t(\n\t\tSELECT\n\t\t\tFIRST (END_TIME) FILTER (\n\t\t\t\tWHERE\n\t\t\t\t\tACTIVITY_NAME IN ('Clear Invoice')\n\t\t\t)\n\t\t) - (\n\t\tSELECT\n\t\t\tFIRST (END_TIME) FILTER (\n\t\t\t\tWHERE\n\t\t\t\t\tACTIVITY_NAME IN ('Post Invoice')\n\t\t\t)\n\t\t) < DURATION '14days'\n\t)\n/\nCOUNT (CASE_ID)\n* 100\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE\n\t(\n\t\tSELECT\n\t\t\tFIRST (END_TIME) FILTER (\n\t\t\t\tWHERE\n\t\t\t\t\tACTIVITY_NAME IN ('Clear Invoice')\n\t\t\t)\n\t\t) - (\n\t\tSELECT\n\t\t\tFIRST (END_TIME) FILTER (\n\t\t\t\tWHERE\n\t\t\t\t\tACTIVITY_NAME IN ('Post Invoice')\n\t\t\t)\n\t\t) < DURATION '14days'\n\t)\n/\nCOUNT (CASE_ID)\n* 100\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "ec2c5da4a8",
        "split": "test",
        "name": "<<Placeholder>>",
        "query": "SELECT MIN(1) FROM \"defaultview-124\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Find the minimum value of the column '1' in the table 'defaultview-124'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nMIN(\"1\")\nFROM \"defaultview-124\"\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nMIN(\"1\")\nFROM \"defaultview-124\"\n"
    },
    {
        "filename": "a77c1ac911",
        "split": "test",
        "name": "SOL-1742 Cases at compliance risk",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (NOT event_name MATCHES('Create Invoice' \t~> 'Post Invoice' \t~> 'Clear Invoice' \t~> 'Due Date passed')\n\tAND (SELECT BOOL_OR( event_name IN ('Post Invoice')))\n\tAND (SELECT\n\t\tLAST(end_time) FILTER (WHERE event_name IN ('Clear Invoice'))\n\t\t-\n\t\tFIRST(end_time) FILTER (WHERE event_name IN ('Create Invoice'))\n\t) < DURATION '25days'\n\t)\n)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values in the 'defaultview-59' table where the following conditions are met: event_name is not 'Create Invoice', 'Post Invoice', 'Clear Invoice', or 'Due Date passed'; event_name is 'Post Invoice'; the time difference between the last 'Clear Invoice' event and the first 'Create Invoice' event is less than 25 days.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tCOUNT (CASE_ID) \nFROM \"defaultview-59\"\nWHERE\n\t((EVENT_NAME != 'Create Invoice'\n    AND EVENT_NAME != 'Post Invoice'\n    AND EVENT_NAME != 'Clear Invoice'\n    AND EVENT_NAME != 'Due Date passed')\n    OR (EVENT_NAME = 'Post Invoice'))\nAND (\n\t(SELECT LAST (END_TIME) \n\t\tWHERE EVENT_NAME IN ('Clear Invoice')) \n\t- (SELECT FIRST (END_TIME) \n\t\tWHERE EVENT_NAME IN ('Create Invoice'))) < \"Dauer Clear Post Inv\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tCOUNT (CASE_ID) \nFROM \"defaultview-59\"\nWHERE\n\t((EVENT_NAME != 'Create Invoice'\n    AND EVENT_NAME != 'Post Invoice'\n    AND EVENT_NAME != 'Clear Invoice'\n    AND EVENT_NAME != 'Due Date passed')\n    OR (EVENT_NAME = 'Post Invoice'))\nAND (\n\t(SELECT LAST (END_TIME) \n\t\tWHERE EVENT_NAME IN ('Clear Invoice')) \n\t- (SELECT FIRST (END_TIME) \n\t\tWHERE EVENT_NAME IN ('Create Invoice'))) < \"Dauer Clear Post Inv\""
    },
    {
        "filename": "27e7e22e07",
        "split": "test",
        "name": "Payment Terms Differences where PO is better",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n\t\t< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \n\tELSE \"PO Cash Discount Days 1\" END))\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-57' table where the value of the 'Last FI Invoice Item Cash Discount Days 1' column is less than the value of the 'PO Cash Discount Days 1' column. If the 'PO Cash Discount Days 1' column is NULL, consider its value as 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id)\nFROM\n  \"defaultview-57\"\nWHERE\n  (\n    \"Last FI Invoice Item Cash Discount Days 1\" < (\n      SELECT\n        IFNULL(\n          \"PO Cash Discount Days 1\",\n          0\n        )\n      WHERE\n        event_name = 'Item Created or Changed'\n    )\n  )",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id)\nFROM\n  \"defaultview-57\"\nWHERE\n  (\n    \"Last FI Invoice Item Cash Discount Days 1\" < (\n      SELECT\n        IFNULL(\n          \"PO Cash Discount Days 1\",\n          0\n        )\n      WHERE\n        event_name = 'Item Created or Changed'\n    )\n  )"
    },
    {
        "filename": "fd2419de53",
        "split": "test",
        "name": "Open Overdue Invoices by Company Code (Top-10)",
        "query": "SELECT \n\"Inv. Company Code Text\" AS \"Company Code Name\"\n,SUM (\"Inv. Converted USD Amount\") AS \"Invoice Amount in $\"\n,COUNT(case_id) AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n  AND \"Last Inv. Item Due Date\" < DATE_TRUNC('day', NOW()) \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the company code name, invoice amount in $, and the number of invoices from the 'defaultview-225' table. Filter the results to include only rows where the 'Last Inv. Item Clearing Date' is null and the 'Last Inv. Item Due Date' is less than the current date. Group the results by the 'Company Code Name' and order them in descending order based on the 'Invoice Amount in $'. Limit the output to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Company Code Name\",\n\"Inv # $\",\n\"Invoice Amount in $\",\n\"Inv. Item Base Amount in $\"\nFROM \"defaultview-225\"\nWHERE \n\"Last Inv. Item Clearing Date\" IS NULL\nAND \"Last Inv. Item Due Date\" < NOW()\nGROUP BY 1\nORDER BY 3 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Company Code Name\",\n\"Inv # $\",\n\"Invoice Amount in $\",\n\"Inv. Item Base Amount in $\"\nFROM \"defaultview-225\"\nWHERE \n\"Last Inv. Item Clearing Date\" IS NULL\nAND \"Last Inv. Item Due Date\" < NOW()\nGROUP BY 1\nORDER BY 3 DESC\nLIMIT 10\n"
    },
    {
        "filename": "05eb19e4de",
        "split": "test",
        "name": "Number of idle cases",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOW() - (SELECT LAST(end_time)) > DURATION '21days'\n\t\tAND (SELECT FIRST(event_name) FILTER (\n\t\t\tWHERE event_name IN ('Update Opportunity Stage to: Closed Won',\n'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n'Update Opportunity Stage to: Closed Lost',\n'Update Opportunity Stage to: Dead',\n'Update Opportunity Stage to: Dead - No Opportunity',\n'Update Opportunity Stage to: Dead - No Decision',\n'Update Opportunity Stage to: Dead - Duplicate',\n'Update Opportunity Stage to: 00 Dead - Lost',\n'Update Lead Status to: Archive',\n'Reject Quote'))) IS NULL\n   )\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-545' table where the following conditions are met: the difference between the current time and the last end_time is greater than 21 days, and there is no first event_name value that matches any of the specified values ('Update Opportunity Stage to: Closed Won', 'Update Opportunity Stage to: 06 Closed Won (Onboarding)', 'Update Opportunity Stage to: Closed Lost', 'Update Opportunity Stage to: Dead', 'Update Opportunity Stage to: Dead - No Opportunity', 'Update Opportunity Stage to: Dead - No Decision', 'Update Opportunity Stage to: Dead - Duplicate', 'Update Opportunity Stage to: 00 Dead - Lost', 'Update Lead Status to: Archive', 'Reject Quote').",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id)\nFROM \"defaultview-545\"\nWHERE\n(SELECT LAST(end_time)) - (SELECT FIRST(end_time)) > DURATION '21DAYS'\nAND NOT EXISTS (SELECT FIRST(event_name)\n      WHERE FIRST(event_name) IN ('Update Opportunity Stage to: Closed Won', 'Update Opportunity Stage to: 06 Closed Won (Onboarding)', 'Update Opportunity Stage to: Closed Lost', 'Update Opportunity Stage to: Dead', 'Update Opportunity Stage to: Dead - No Opportunity', 'Update Opportunity Stage to: Dead - No Decision', 'Update Opportunity Stage to: Dead - Duplicate', 'Update Opportunity Stage to: 00 Dead - Lost', 'Update Lead Status to: Archive', 'Reject Quote')))",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id)\nFROM \"defaultview-545\"\nWHERE\n(SELECT LAST(end_time)) - (SELECT FIRST(end_time)) > DURATION '21DAYS'\nAND NOT EXISTS (SELECT FIRST(event_name)\n      WHERE FIRST(event_name) IN ('Update Opportunity Stage to: Closed Won', 'Update Opportunity Stage to: 06 Closed Won (Onboarding)', 'Update Opportunity Stage to: Closed Lost', 'Update Opportunity Stage to: Dead', 'Update Opportunity Stage to: Dead - No Opportunity', 'Update Opportunity Stage to: Dead - No Decision', 'Update Opportunity Stage to: Dead - Duplicate', 'Update Opportunity Stage to: 00 Dead - Lost', 'Update Lead Status to: Archive', 'Reject Quote')))"
    },
    {
        "filename": "40f1d116ed",
        "split": "test",
        "name": "Invoice Open Overdue Amount",
        "query": "SELECT \nSUM(\"AmountInGlobalCurrency\" )  \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND NOW() >= NetDueDate )\nAS \"Amount\"\nFROM  FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'AmountInGlobalCurrency' column from the 'defaultview-222' table, where the 'EVENT_NAME' column is equal to 'Create Accounts Receivable', the 'ClearingJournalEntry' column is NULL, and the current date and time is greater than or equal to the 'NetDueDate' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM(\"AmountInGlobalCurrency\")\nFROM\n  \"defaultview-222\"\nWHERE\n  event_name = 'Create Accounts Receivable'\n  AND ClearingJournalEntry IS NULL\n  AND NOW() >= \"NetDueDate\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM(\"AmountInGlobalCurrency\")\nFROM\n  \"defaultview-222\"\nWHERE\n  event_name = 'Create Accounts Receivable'\n  AND ClearingJournalEntry IS NULL\n  AND NOW() >= \"NetDueDate\""
    },
    {
        "filename": "dbf5719713",
        "split": "test",
        "name": "Last PO Terms of Payment Key",
        "query": "SELECT \"Last PO Terms of Payment Key\" AS \"Last PO Terms of Payment Key\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of invoices for each value of the 'Last PO Terms of Payment Key' column in the 'defaultview-225' table. Sort the results in descending order based on the count of invoices.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(\"Invoice Number\") as \"No of Invoices\", \"Last PO Terms of Payment Key\" as \"Terms of Payment Key\"\nFROM \"defaultview-225\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(\"Invoice Number\") as \"No of Invoices\", \"Last PO Terms of Payment Key\" as \"Terms of Payment Key\"\nFROM \"defaultview-225\"\nORDER BY 1 DESC"
    },
    {
        "filename": "3ca9a3a9b0",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference grouped by Plant",
        "query": "SELECT COUNT (CASE_ID), \"Plant\"\nFROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL\nGROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases for each plant where the actual finish date is equal to the scheduled finish date and the planned order number is null. Group the results by the plant and order them in descending order based on the count. Limit the output to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT plant, count(case_id)\nFROM \"CASE_VIEW\"\n--WHERE \"ACT_FIN_DATE\" = \"SCHED_FIN_DATE\"\n--AND \"S_ORD_NUM\" IS NULL\n--AND \"FOLDER_NAME\" = 'Order Change Point 1'\n--AND ACT_FIN_DATE >= '2020-01-01'\n--AND PLANT IN ('6170','6110') \n--AND EVENT_FILTER_NAME = 'RESCHEDULED'\nWHERE EVENT_FILTER_NAME = 'TO_BE_RESCHEDULED'\nAND \"ACT_FIN_DATE\" >= DATE '2020-01-01'\nAND (PLANT IN ('6170', '6110')) -- '6100', '6120', '6150', '6441'\nORDER BY 2 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT plant, count(case_id)\nFROM \"CASE_VIEW\"\n--WHERE \"ACT_FIN_DATE\" = \"SCHED_FIN_DATE\"\n--AND \"S_ORD_NUM\" IS NULL\n--AND \"FOLDER_NAME\" = 'Order Change Point 1'\n--AND ACT_FIN_DATE >= '2020-01-01'\n--AND PLANT IN ('6170','6110') \n--AND EVENT_FILTER_NAME = 'RESCHEDULED'\nWHERE EVENT_FILTER_NAME = 'TO_BE_RESCHEDULED'\nAND \"ACT_FIN_DATE\" >= DATE '2020-01-01'\nAND (PLANT IN ('6170', '6110')) -- '6100', '6120', '6150', '6441'\nORDER BY 2 DESC\nLIMIT 10"
    },
    {
        "filename": "efb87ebe9e",
        "split": "test",
        "name": "Market forecast override rate",
        "query": "SELECT\nCOUNT(case_id) FILTER(\n\tWHERE(\n\t\t(SELECT FIRST(\"end_time\")\n\t\t\tWHERE event_name IN ('Review Marketing Forecast') \n\t\t)IS NOT NULL\n\t)\n)\n/\nCOUNT(case_id) FILTER(\n\tWHERE \"Marketing Forecast Qty\" <> 0\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values where the 'end_time' column is not null and the 'event_name' column is 'Review Marketing Forecast' in the 'defaultview-404' table. Divide this count by the number of case_id values where the 'Marketing Forecast Qty' column is not equal to 0 in the same table. Multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (CASE_ID) FILTER(\n\tWHERE \"end_time\" IS NOT NULL AND \"event_name\" = 'Review Marketing Forecast')\n\t/ COUNT (CASE_ID) FILTER(\n\tWHERE \"Marketing Forecast Qty\" <> 0)\n* 100\nFROM \"defaultview-404\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (CASE_ID) FILTER(\n\tWHERE \"end_time\" IS NOT NULL AND \"event_name\" = 'Review Marketing Forecast')\n\t/ COUNT (CASE_ID) FILTER(\n\tWHERE \"Marketing Forecast Qty\" <> 0)\n* 100\nFROM \"defaultview-404\""
    },
    {
        "filename": "bead32ea3f",
        "split": "test",
        "name": "$ of Invoices with its PT better than Vendor Master data",
        "query": "SELECT SUM(\"Inv. Converted USD Amount\") FILTER(\n\t\tWHERE (\"Last Inv. Item Cash Discount Days 1\") < \n    \t  (\"Last Inv. Item Vendor Master CD 1\") OR \n          (\"Last Inv. Item Cash Discount Days 2\") < \n    \t  (\"Last Inv. Item Vendor Master CD 2\") OR \n          (\"Last Inv. Item Net Payment Terms Period\") <\n          (\"Last Inv. Item Vendor Master NDD\"))\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'Inv. Converted USD Amount' column from the 'defaultview-225' table, but only include rows where the value in the 'Last Inv. Item Cash Discount Days 1' column is less than the value in the 'Last Inv. Item Vendor Master CD 1' column, or the value in the 'Last Inv. Item Cash Discount Days 2' column is less than the value in the 'Last Inv. Item Vendor Master CD 2' column, or the value in the 'Last Inv. Item Net Payment Terms Period' column is less than the value in the 'Last Inv. Item Vendor Master NDD' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"Inv. Converted USD Amount\") \nFILTER (WHERE \n(\"Last Inv. Item Cash Discount Days 1\" \n< \"Last Inv. Item Vendor Master CD 1\" )\nOR (\"Last Inv. Item Cash Discount Days 2\" \n< \"Last Inv. Item Vendor Master CD 2\" )\nOR (\"Last Inv. Item Net Payment Terms Period\" \n     < \"Last Inv. Item Vendor Master NDD\" )) \nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"Inv. Converted USD Amount\") \nFILTER (WHERE \n(\"Last Inv. Item Cash Discount Days 1\" \n< \"Last Inv. Item Vendor Master CD 1\" )\nOR (\"Last Inv. Item Cash Discount Days 2\" \n< \"Last Inv. Item Vendor Master CD 2\" )\nOR (\"Last Inv. Item Net Payment Terms Period\" \n     < \"Last Inv. Item Vendor Master NDD\" )) \nFROM \"defaultview-225\""
    },
    {
        "filename": "e9674c4a5e",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of delivery item changes ",
        "query": "SELECT COUNT (\"event_name\") \n\tFILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n\t\t'Change Delivery%' OR event_name LIKE 'Update Delivery%') \n        AS created_with_dialog MATCHES (created_with_dialog))\n    ,\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nWHERE SalesDocCustomerCompany IS NOT NULL\nGROUP BY 2\nORDER BY 1 DESC\nLimit 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of rows in the 'defaultview-290' table where the 'event_name' column matches the pattern 'Change Delivery%' or 'Update Delivery%', and the 'created_with_dialog' column matches its own value. Also include the 'SalesDocCustomerCompany' column. Filter out rows where the 'SalesDocCustomerCompany' column is null. Group the result by the second column and order it in descending order. Limit the result to 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(\"event_name\") FILTER (\n\tWHERE event_name MATCHES ('Change Delivery%' \n        OR 'Update Delivery%')\n    AND \"created_with_dialog\" = 'created_with_dialog'\n    )\n,\n\"SalesDocCustomerCompany\"\n\nFROM \"defaultview-290\"\nWHERE \"SalesDocCustomerCompany\" IS NOT NULL\n--.DAY_FILTER()\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(\"event_name\") FILTER (\n\tWHERE event_name MATCHES ('Change Delivery%' \n        OR 'Update Delivery%')\n    AND \"created_with_dialog\" = 'created_with_dialog'\n    )\n,\n\"SalesDocCustomerCompany\"\n\nFROM \"defaultview-290\"\nWHERE \"SalesDocCustomerCompany\" IS NOT NULL\n--.DAY_FILTER()\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10\n"
    },
    {
        "filename": "a9ef667704",
        "split": "test",
        "name": "Average Payment Time",
        "query": "SELECT \nAVG (\"ClearingDate\"   - \"CreationDate\"  ) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \nAs \"AVG Clearing Time\"\nFROM FLATTEN(\"defaultview-222\")\nWHERE \"ClearingDate\" IS NOT NULL AND \"NetDueDate\" IS NOT NULL",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average clearing time for events with names starting with 'Clear' from the 'defaultview-222' table. The clearing time is calculated by subtracting the 'CreationDate' from the 'ClearingDate' column. Only consider rows where both 'ClearingDate' and 'NetDueDate' are not null.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\n\t\t(CASE_ID EXTRACT(FINISH 'ClearingDate') - \"CreationDate\")\n        )\nFROM \"defaultview-222\"\nWhere event_name  ~ 'Clear'\nand \"ClearingDate\" is not null\nand \"NetDueDate\" is not null",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\n\t\t(CASE_ID EXTRACT(FINISH 'ClearingDate') - \"CreationDate\")\n        )\nFROM \"defaultview-222\"\nWhere event_name  ~ 'Clear'\nand \"ClearingDate\" is not null\nand \"NetDueDate\" is not null"
    },
    {
        "filename": "0f07aff629",
        "split": "test",
        "name": "_Percentage of projects in execution",
        "query": "\nSELECT\n(\nCOUNT(case_id) FILTER (WHERE Project_StageText = 'In Execution')\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case_ids in the 'defaultview-197' table where the Project_StageText is 'In Execution'. First, count the number of case_ids where the Project_StageText is 'In Execution' and divide it by the total count of case_ids in the table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(\nCOUNT(case_id) FILTER(WHERE \"Project_StageText\" = 'In Execution' )\n/\nCOUNT(case_id)\n)\n*100\n\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(\nCOUNT(case_id) FILTER(WHERE \"Project_StageText\" = 'In Execution' )\n/\nCOUNT(case_id)\n)\n*100\n\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "3f84ef5334",
        "split": "test",
        "name": "Early Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Due Date\" - \"Last Inv. Item Clearing Date\" > DURATION '5days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the difference between the 'Last Inv. Item Due Date' and 'Last Inv. Item Clearing Date' is greater than 5 days, out of the total number of cases with a non-null 'Last Inv. Item Clearing Date'. The result is multiplied by 100.\n\nThe query is performed on the table 'defaultview-225'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  count(\"case_id\") FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Due Date\" - \"Last Inv. Item Clearing Date\" > DURATION '5days'\n      )\n  ) / count(\"case_id\") FILTER (\n    WHERE\n      \"Last Inv. Item Clearing Date\" IS NOT NULL\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  count(\"case_id\") FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Due Date\" - \"Last Inv. Item Clearing Date\" > DURATION '5days'\n      )\n  ) / count(\"case_id\") FILTER (\n    WHERE\n      \"Last Inv. Item Clearing Date\" IS NOT NULL\n  ) * 100\nFROM\n  \"defaultview-225\""
    },
    {
        "filename": "cd37fa8683",
        "split": "test",
        "name": "Avg. Cycle Time (Create PO to Release PO)",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')\n- (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item'))\nAS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average cycle time by subtracting the first end time of events with the name 'Create PO Item' from the last end time of events with the name 'Release PO' in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "4cc4a0017e",
        "split": "test",
        "name": "SOL-1742 Average cycle time for cases affected by rework",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average duration of events in the 'defaultview-59' table. Filter the events where the occurrence of the event_name is greater than 1. The duration is calculated by subtracting the first end_time from the last end_time.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(AVG ((SELECT LAST (end_time)) - (SELECT FIRST (end_time)))) AS \"Avg. Event Duration\"\nFROM \"defaultview-59\"\nWHERE\n  (SELECT COUNT (event_name))\n```\n\nThe result is 1722.57",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(AVG ((SELECT LAST (end_time)) - (SELECT FIRST (end_time)))) AS \"Avg. Event Duration\"\nFROM \"defaultview-59\"\nWHERE\n  (SELECT COUNT (event_name))\n```\n\nThe result is 1722.57"
    },
    {
        "filename": "7003c60890",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Type",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Type\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases and calculate the total purchase order value for each purchase order type. Retrieve this information from the 'defaultview-124' table. Sort the results in descending order based on the count of cases. Limit the output to the top 50 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) AS \"No. of Cases\", \n       \"PO Document Type\",\n       SUM(\"PO Item NetAmountinPOCurrency\") AS \"Total PO Value\"\nFROM   \"defaultview-124\"\n-- WHERE  \"PO Document Type\" = 'standard order'\nGROUP BY 2\nORDER  BY 1 desc\nlimit 50 ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) AS \"No. of Cases\", \n       \"PO Document Type\",\n       SUM(\"PO Item NetAmountinPOCurrency\") AS \"Total PO Value\"\nFROM   \"defaultview-124\"\n-- WHERE  \"PO Document Type\" = 'standard order'\nGROUP BY 2\nORDER  BY 1 desc\nlimit 50 "
    },
    {
        "filename": "da7eeb3527",
        "split": "test",
        "name": "%Manually created Process orders grouped by Business Line",
        "query": "SELECT \ncount(Distinct case_id) as \"#Process Orders\",\n(COUNT (EVENT_NAME) FILTER \n(WHERE \"Event Created By User Type\" IN ('Dialog'))) / (COUNT (EVENT_NAME))* 100 \nas \"Manual rate\",\n\"Division\"\nFROM FLATTEN(\"defaultview-183\")\nWHERE EVENT_NAME = 'Create Process Order'\norder by 1 desc\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of distinct case IDs in the 'defaultview-183' table and label it as '#Process Orders'. Calculate the manual rate by dividing the count of 'EVENT_NAME' values filtered by 'Event Created By User Type' being 'Dialog' by the total count of 'EVENT_NAME' values, and multiply the result by 100. Retrieve the 'Division' column from the 'defaultview-183' table. Filter the rows where 'EVENT_NAME' is 'Create Process Order'. Sort the result in descending order based on the first column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"Case ID\") AS \"#Process Orders\",\n\nCOUNT(DISTINCT \"Case ID\") FILTER (\n\tWHERE (SELECT BOOL_OR(\"Event Created By User Type\" = 'Dialog'))\n        ) / COUNT(DISTINCT \"Case ID\") * 100 AS \"Manual Rate\"\n\n,\"Division\"\n\nFROM FLATTEN\n(\"defaultview-183\")\n\nWHERE EVENT_NAME ='Create Process Order'\n\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"Case ID\") AS \"#Process Orders\",\n\nCOUNT(DISTINCT \"Case ID\") FILTER (\n\tWHERE (SELECT BOOL_OR(\"Event Created By User Type\" = 'Dialog'))\n        ) / COUNT(DISTINCT \"Case ID\") * 100 AS \"Manual Rate\"\n\n,\"Division\"\n\nFROM FLATTEN\n(\"defaultview-183\")\n\nWHERE EVENT_NAME ='Create Process Order'\n\nORDER BY 1 DESC"
    },
    {
        "filename": "505cfbf1ae",
        "split": "test",
        "name": "Cleared Amount",
        "query": "SELECT SUM(\"AmountInGlobalCurrency\" )\nFROM FLATTEN(\"defaultview-222\")\nWHERE event_name LIKE 'Clear%'",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'AmountInGlobalCurrency' column from the 'defaultview-222' table. Filter the rows where the 'event_name' column starts with 'Clear'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n    SUM(\"AmountInGlobalCurrency\")\nFROM \"defaultview-222\"\nWHERE event_name LIKE 'Clear%'\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n    SUM(\"AmountInGlobalCurrency\")\nFROM \"defaultview-222\"\nWHERE event_name LIKE 'Clear%'\n                "
    },
    {
        "filename": "0761bcb1e5",
        "split": "test",
        "name": "Open Overdue Amount (15+ Days)",
        "query": "SELECT SUM(\"AmountInCompanyCodeCurrency\"  ) \nFROM FLATTEN(\"defaultview-197\")\nWHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day'",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'AmountInCompanyCodeCurrency' column from the 'defaultview-197' table. Filter the rows where the 'EVENT_NAME' column is equal to 'Create Accounts Receivable', the 'ClearingJournalEntry' column is null, and the difference between the current date and the 'NetDueDate' column is greater than 15 days.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM (\"AmountInCompanyCodeCurrency\") \nFROM \"defaultview-197\" \nWHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()- NetDueDate) >  DURATION '15DAYS'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM (\"AmountInCompanyCodeCurrency\") \nFROM \"defaultview-197\" \nWHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()- NetDueDate) >  DURATION '15DAYS'"
    },
    {
        "filename": "707fa40cc4",
        "split": "test",
        "name": "AVG Cycle Time for On-Time Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" > \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last occurrence of the 'Pay Invoice' event and the first occurrence of the 'Receive Invoice' event. The query is performed on the 'defaultview-431' table. The 'END_TIME' column is used to filter the events. The 'EVENT_NAME' column is used to specify the event names. Additionally, the query includes a condition where the 'Last Invoice Due Date' column should be greater than the 'Last Invoice Payment Date' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Pay Invoice') \n\t- (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Receive Invoice')) \n    FILTER (WHERE \"Last Invoice Due Date\" > \"Last Invoice Payment Date\") \nAS \"Avg. Time between Pay Inv. and Sc. Create Inv.\"\nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Receive Invoice' 'Pay Invoice') \n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Pay Invoice') \n\t- (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Receive Invoice')) \n    FILTER (WHERE \"Last Invoice Due Date\" > \"Last Invoice Payment Date\") \nAS \"Avg. Time between Pay Inv. and Sc. Create Inv.\"\nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Receive Invoice' 'Pay Invoice') \n\n"
    },
    {
        "filename": "d6c10482e1",
        "split": "test",
        "name": "Combinations with understocking",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Inventory Target\" > \"Stock on Hand\") \n\tAND DATE_TRUNC('month', NOW()) = \"MONTH\"\n)\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-404' table where the 'Inventory Target' is greater than the 'Stock on Hand' and the current month is equal to the value in the 'MONTH' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID)\nFROM \"defaultview-404\"\nWHERE\n\"Inventory Target\" > \"Stock on Hand\" \nAND DATE_TRUNC('month', NOW()) = \"MONTH\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID)\nFROM \"defaultview-404\"\nWHERE\n\"Inventory Target\" > \"Stock on Hand\" \nAND DATE_TRUNC('month', NOW()) = \"MONTH\""
    },
    {
        "filename": "6ec4e9c927",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Type",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Process Order Type\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of process orders for each process order type in the 'defaultview-183' table. Sort the results in descending order based on the count.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (\"Process_Order_Number\") AS \"# of PO\",  \"Process_Order_Type\" \nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (\"Process_Order_Number\") AS \"# of PO\",  \"Process_Order_Type\" \nFROM \"defaultview-183\"\norder by 1 desc"
    },
    {
        "filename": "cf2c703ad2",
        "split": "test",
        "name": "No. of Cases by PO Vendor & PO Plant City",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\", \n\"PO Vendor Name\" AS \"PO Vendor\", \n\"PO Item Plant City\" AS \"PO Plant City\"\nFROM \"defaultview-124\"\n--WHERE (EVENT_NAME MATCHES ('Clear Invoice') AND EVENT_NAME MATCHES ('Create PR Item'))\nORDER BY 1 DESC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases, and display the PO Vendor Name and PO Item Plant City from the 'defaultview-124' table. Sort the results in descending order based on the count of cases. No filters are applied to the query.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(\"CASE_ID\") AS \"Cases\", \n\"PO Vendor Name\", \n\"PO Item Plant City\"\nFROM \"defaultview-124\"\nORDER BY 1 Desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(\"CASE_ID\") AS \"Cases\", \n\"PO Vendor Name\", \n\"PO Item Plant City\"\nFROM \"defaultview-124\"\nORDER BY 1 Desc"
    },
    {
        "filename": "2b513712ff",
        "split": "test",
        "name": "Number of Billing Documents Cancelled",
        "query": "SELECT \nCOUNT(DISTINCT \"BillingDocument\") FILTER (\n\tWHERE event_name ='Cancel Billing Document')\n\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the distinct values in the 'BillingDocument' column from the 'defaultview-222' table, where the 'event_name' column is equal to 'Cancel Billing Document'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(DISTINCT \"BillingDocument\" ) \nFROM FLATTEN(\"defaultview-222\") \nWHERE event_name = 'Cancel Billing Document'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(DISTINCT \"BillingDocument\" ) \nFROM FLATTEN(\"defaultview-222\") \nWHERE event_name = 'Cancel Billing Document'"
    },
    {
        "filename": "b3e2ffc236",
        "split": "test",
        "name": "Production quantity accuracy ",
        "query": "SELECT \nAVG(\n\t\"Produced Delivered Quantity\"/\"Total Order Quantity\")\n\tFILTER(WHERE \"Delivery Completed\" IS NOT NULL)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average ratio of 'Produced Delivered Quantity' to 'Total Order Quantity' for all rows in the 'defaultview-183' table where the 'Delivery Completed' column is not null. Multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\navg(\n\t(\n\t\"Produced Delivered Quantity\"\n\t/\n\t\"Total Order Quantity\"\n\t)\n)\nfilter (\n\twhere \"Delivery Completed\" is not null\n   )\n*100\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\navg(\n\t(\n\t\"Produced Delivered Quantity\"\n\t/\n\t\"Total Order Quantity\"\n\t)\n)\nfilter (\n\twhere \"Delivery Completed\" is not null\n   )\n*100\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "d7a764fe04",
        "split": "test",
        "name": "AVG Cycle Time for Late Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last occurrence of the 'Pay Invoice' event and the first occurrence of the 'Receive Invoice' event. The query is performed on the 'defaultview-431' table. The 'END_TIME' column is used to filter the events. The 'EVENT_NAME' column is used to specify the event names. Additionally, the query includes a condition where the 'Last Invoice Due Date' column should be less than the 'Last Invoice Payment Date' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\n\t(SELECT LAST(END_TIME))\n    -(SELECT FIRST(END_TIME) \n    \t\tFILTER (WHERE EVENT_NAME IN ('Receive Invoice'))))\n  \nFROM \"defaultview-431\"\nWHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\n---\"Pay Invocie Date\" >= \"Invocie Status Date\"\n---\"Pay Invocie Date\" - \"Invocie Status Date\"\n---or \"Pay Invocie Date\" >= \"Date Commiment Flows into SAP\"\n---\"Pay Invocie Date\" - \"Date Commiment Flows into SAP\"\n---AND \"Last Flowed Invoiced Enditem\"+\"Last Invoice Check Postg\"<'Pay Invocie Date'\n---or \"Pay Invocie Date\" >= \"Last Confiramted PO Item Change Creation\"  \n---case 7: \"Pay Invocie Date\" - \"Last Flowed Invoiced Girno\"<'Pay Invocie Date'\n---case 8: \"Pay Invocie Date\" - \"Last FI Document Changed (Date)\"<'Pay Invocie Date'\n---case 9: \"Pay Invocie Date\" - \"Last Confiramted PO Item Change Deletion\"<'Pay Invocie Date'\n---case 13: \"Pay Invocie Date\" - \"Last Flowed Invoiced Girno\"<'Pay Invocie Date'\n---case 43: \"Pay Invocie Date\" - \"Last Confiramted PO Item Change Deletion\"<'Pay Invocie Date'\n---case 47: \"Pay Invocie Date\" - \"Last Invoice Check Postg\"<'Pay Invocie Date'\n---case 48: \"Pay Invocie Date\" - \"Last Invoice Check Postg\"<'Pay Invocie Date'\n---case 49: \"Pay Invocie Date\" - \"Last Invoice Check Postg\"<'Pay Invocie Date'\n---case 50: \"Pay Invocie Date\" - \"Last Invoice Check Postg\"<'Pay Invocie Date'\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\n\t(SELECT LAST(END_TIME))\n    -(SELECT FIRST(END_TIME) \n    \t\tFILTER (WHERE EVENT_NAME IN ('Receive Invoice'))))\n  \nFROM \"defaultview-431\"\nWHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\n---\"Pay Invocie Date\" >= \"Invocie Status Date\"\n---\"Pay Invocie Date\" - \"Invocie Status Date\"\n---or \"Pay Invocie Date\" >= \"Date Commiment Flows into SAP\"\n---\"Pay Invocie Date\" - \"Date Commiment Flows into SAP\"\n---AND \"Last Flowed Invoiced Enditem\"+\"Last Invoice Check Postg\"<'Pay Invocie Date'\n---or \"Pay Invocie Date\" >= \"Last Confiramted PO Item Change Creation\"  \n---case 7: \"Pay Invocie Date\" - \"Last Flowed Invoiced Girno\"<'Pay Invocie Date'\n---case 8: \"Pay Invocie Date\" - \"Last FI Document Changed (Date)\"<'Pay Invocie Date'\n---case 9: \"Pay Invocie Date\" - \"Last Confiramted PO Item Change Deletion\"<'Pay Invocie Date'\n---case 13: \"Pay Invocie Date\" - \"Last Flowed Invoiced Girno\"<'Pay Invocie Date'\n---case 43: \"Pay Invocie Date\" - \"Last Confiramted PO Item Change Deletion\"<'Pay Invocie Date'\n---case 47: \"Pay Invocie Date\" - \"Last Invoice Check Postg\"<'Pay Invocie Date'\n---case 48: \"Pay Invocie Date\" - \"Last Invoice Check Postg\"<'Pay Invocie Date'\n---case 49: \"Pay Invocie Date\" - \"Last Invoice Check Postg\"<'Pay Invocie Date'\n---case 50: \"Pay Invocie Date\" - \"Last Invoice Check Postg\"<'Pay Invocie Date'\n\n"
    },
    {
        "filename": "7cda2249c2",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the last invoice due date is earlier than the last invoice payment date. First, count the number of case IDs where the last invoice due date is earlier than the last invoice payment date. Then, divide this count by the number of case IDs where the last invoice payment date is not null. Finally, multiply the result by 100 to get the percentage. The data is retrieved from the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (SELECT LAST (\"INV.DUE_DATE\"))\n\t\t\t\t< (SELECT LAST (\"INV_PMT.PAYMENT_DATE\")))\n/ COUNT (CASE_ID) FILTER (\n\tWHERE (SELECT LAST (\"INV_PMT.PAYMENT_DATE\")) IS NOT NULL)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (SELECT LAST (\"INV.DUE_DATE\"))\n\t\t\t\t< (SELECT LAST (\"INV_PMT.PAYMENT_DATE\")))\n/ COUNT (CASE_ID) FILTER (\n\tWHERE (SELECT LAST (\"INV_PMT.PAYMENT_DATE\")) IS NOT NULL)\n* 100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "b1511789a0",
        "split": "test",
        "name": "Current status - what was the last activity",
        "query": "SELECT \nCOUNT(case_id) AS \"Affected Invoice Volume\"\n,LAST(event_name) AS \"Last Activity\"\n,\"Last FI Invoice Item Due Date\"- DATE_TRUNC('day', NOW()) AS \"Days until Due\"\n\nFROM FLATTEN(\"defaultview-57\")\nWHERE (\"Last FI Invoice Item Clearing Date\" IS NULL)\nAND \"Last FI Invoice ID\" IS NOT NULL\nORDER BY 1 desc",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values in the FLATTEN table 'defaultview-57' and label it as 'Affected Invoice Volume'. Get the last event_name value from the same table and label it as 'Last Activity'. Calculate the difference between the 'Last FI Invoice Item Due Date' column and the current date, rounded down to the nearest day, and label it as 'Days until Due'. Filter the rows where the 'Last FI Invoice Item Clearing Date' column is null and the 'Last FI Invoice ID' column is not null. Sort the result in descending order based on the first column.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) AS 'Affected Invoice Volume',\n      LAST(\"event_name\") AS \"Last Activity\",\n      \"Last FI Invoice Item Due Date\" - DATE_TRUNC('DAY', NOW()) AS 'Days until Due'\nFROM FLATTEN(\"defaultview-57\")\nWHERE (\"Last FI Invoice Item Clearing Date\" IS NULL)\nAND \"Last FI Invoice ID\" IS NOT NULL\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) AS 'Affected Invoice Volume',\n      LAST(\"event_name\") AS \"Last Activity\",\n      \"Last FI Invoice Item Due Date\" - DATE_TRUNC('DAY', NOW()) AS 'Days until Due'\nFROM FLATTEN(\"defaultview-57\")\nWHERE (\"Last FI Invoice Item Clearing Date\" IS NULL)\nAND \"Last FI Invoice ID\" IS NOT NULL\nORDER BY 1 DESC"
    },
    {
        "filename": "9667cec47a",
        "split": "test",
        "name": "AVG Cycle Time",
        "query": "SELECT AVG((SELECT LAST(end_time))\n\t\t- (SELECT FIRST(end_time)))\nAS \"AVG Cycle Time\"\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average cycle time by subtracting the first end time from the last end time for each row in the 'defaultview-545' table, and then taking the average of these differences. The column used in the calculation is 'end_time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG((SELECT last(end_time) - FIRST(end_time))) AS \"Average Case Cycle Time\"\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG((SELECT last(end_time) - FIRST(end_time))) AS \"Average Case Cycle Time\"\nFROM \"defaultview-545\""
    },
    {
        "filename": "a864b7d746",
        "split": "test",
        "name": "Number Created Receivables over Time",
        "query": "SELECT  \n\tDATE_TRUNC('Day', \"end_time\" )  AS \"Creation Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of distinct receivables created each day. Group the results by the creation date. The data is retrieved from the 'defaultview-222' table. Only events with the name 'Create Accounts Receivable' are considered. The results are sorted in ascending order based on the creation date.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nDATE_TRUNC('day', \"EvtCreatedDate\") AS \"Creation Date\"\n,count (DISTINCT (\"AccountId\")) \n                         AS \"No. of distinct Receivables\"\n FROM \"defaultview-222\"\nWHERE EVENT_NAME  = 'Create Accounts Receivable'\nORDER BY 1 ASC\n ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nDATE_TRUNC('day', \"EvtCreatedDate\") AS \"Creation Date\"\n,count (DISTINCT (\"AccountId\")) \n                         AS \"No. of distinct Receivables\"\n FROM \"defaultview-222\"\nWHERE EVENT_NAME  = 'Create Accounts Receivable'\nORDER BY 1 ASC\n "
    },
    {
        "filename": "ed8e83eb28",
        "split": "test",
        "name": "Number of changes in invoice items",
        "query": "SELECT COUNT(\"event_name\") \n\tFILTER(WHERE BEHAVIOR (\n           event_name LIKE 'Change Invoice%' \n           OR event_name LIKE 'Create Invoice Cancellation%' \n           OR event_name LIKE 'Update Invoice%'\n           ) AS created_with_dialog MATCHES (created_with_dialog))\nFROM FLATTEN(\"defaultview-290\")\n\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of events with the event_name column matching 'Change Invoice%', 'Create Invoice Cancellation%', or 'Update Invoice%' in the FLATTEN table 'defaultview-290'. Filter the events where the BEHAVIOR column matches the created_with_dialog column. Return the count as 'created_with_dialog'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (event_name) FILTER (\n\tWHERE event_name MATCHES ('Change Invoice%' \n    \tOR 'Create Invoice Cancellation%' \n        OR 'Update Invoice%'))\n    ) AS \"created_with_dialog\"\nFROM \"defaultview-290-218\"\nWHERE BEHAVIOR MATCHES ('created_with_dialog')\n                    \n    \n--\"created_with_dialog\"\n----COUNT (event_name) FILTER (\n----\tWHERE (event_name MATCHES ('Change Invoice%' \n----    \tOR 'Create Invoice Cancellation%' \n----        OR 'Update Invoice%'))))\n--    \n--FROM \"defaultview-290-218\"\n--WHERE BEHAVIOR MATCHES ('created_with_dialog')\n        \n---- COUNT(event_name) FILTER (\n----\tWHERE (event_name MATCHES ('Change Invoice%' \n----    \tOR 'Create Invoice Cancellation%' \n----        OR 'Update Invoice%') )\n----    )\n--\n--FROM \"defaultview-290-218\"\n--WHERE BEHAVIOR MATCHES ('created_with_dialog')\n\n\n\n\n--SELECT\n--COUNT (event_name) FILTER (\n--\tWHERE event_name MATCHES ('Change Invoice%' \n--    \tOR 'Create Invoice Cancellation%' \n--        OR 'Update Invoice%')\n----        AND \"created_with_dialog\"\n----        )\n--    ) AS \"created_with_dialog\"\n--FROM \"defaultview-290\"\n--WHERE BEHAVIOR MATCHES (created_with_dialog)\n-- WHERE count of the events MATCHES (created_with_dialog)\n--count of the events (created_with_dialog)\n\n\n\n-- AND event_name LIKE ('Change Invoice%' \n--                        OR 'Create Invoice Cancellation%' \n--                        OR 'Update Invoice%')\n                        \n-- AS \"Total Events\"\n\n\n--SELECT\n--COUNT (event_name) FILTER (\n--\tWHERE event_name LIKE ('Change Invoice%' \n--                        OR 'Create Invoice Cancellation%' \n--                        OR 'Update Invoice%'))\n--AS \"# created_with_dialog\"\n--FROM \"defaultview-290\"\n--WHERE BEHAVIOR MATCHES (created_with_dialog)\n\n--(event_name MATCHES 'Change Invoice%'\n--\t\t\tOR event_name LIKE 'Create Invoice Cancellation%'\n--\t\t\tOR event_name LIKE 'Update Invoice%')\n-- AS created_with_dialog_event \n--FROM defaultview-290\n-- WHERE created_with_dialog\n\n--COUNT (event_name) FILTER \n--    (WHERE event_name MATCHES (event_name LIKE 'Create%')) \n--    AS created_with_dialog_event\n--    FROM \"defaultview-290\"\n\n\n--SELECT\n--COUNT (event_name) FILTER (WHERE event_name MATCHES (event_name = 'Change Invoice%' OR event_name = 'Update Invoice%'))\n--As \"Results\"\n--FROM \"defaultview-290\"\n\n--SELECT count(event_name) AS created_with_dialog FROM \"defaultview-290\"\n--WHERE count(event_name) MATCHES \n--(created_with_dialog_event MATCHES (event_name LIKE 'Create Invoice No' \n--OR event_name LIKE 'Change Invoice%')) \n--AND created_with_dialog_event MATCHES \n--(event_name LIKE 'Invoice%')",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (event_name) FILTER (\n\tWHERE event_name MATCHES ('Change Invoice%' \n    \tOR 'Create Invoice Cancellation%' \n        OR 'Update Invoice%'))\n    ) AS \"created_with_dialog\"\nFROM \"defaultview-290-218\"\nWHERE BEHAVIOR MATCHES ('created_with_dialog')\n                    \n    \n--\"created_with_dialog\"\n----COUNT (event_name) FILTER (\n----\tWHERE (event_name MATCHES ('Change Invoice%' \n----    \tOR 'Create Invoice Cancellation%' \n----        OR 'Update Invoice%'))))\n--    \n--FROM \"defaultview-290-218\"\n--WHERE BEHAVIOR MATCHES ('created_with_dialog')\n        \n---- COUNT(event_name) FILTER (\n----\tWHERE (event_name MATCHES ('Change Invoice%' \n----    \tOR 'Create Invoice Cancellation%' \n----        OR 'Update Invoice%') )\n----    )\n--\n--FROM \"defaultview-290-218\"\n--WHERE BEHAVIOR MATCHES ('created_with_dialog')\n\n\n\n\n--SELECT\n--COUNT (event_name) FILTER (\n--\tWHERE event_name MATCHES ('Change Invoice%' \n--    \tOR 'Create Invoice Cancellation%' \n--        OR 'Update Invoice%')\n----        AND \"created_with_dialog\"\n----        )\n--    ) AS \"created_with_dialog\"\n--FROM \"defaultview-290\"\n--WHERE BEHAVIOR MATCHES (created_with_dialog)\n-- WHERE count of the events MATCHES (created_with_dialog)\n--count of the events (created_with_dialog)\n\n\n\n-- AND event_name LIKE ('Change Invoice%' \n--                        OR 'Create Invoice Cancellation%' \n--                        OR 'Update Invoice%')\n                        \n-- AS \"Total Events\"\n\n\n--SELECT\n--COUNT (event_name) FILTER (\n--\tWHERE event_name LIKE ('Change Invoice%' \n--                        OR 'Create Invoice Cancellation%' \n--                        OR 'Update Invoice%'))\n--AS \"# created_with_dialog\"\n--FROM \"defaultview-290\"\n--WHERE BEHAVIOR MATCHES (created_with_dialog)\n\n--(event_name MATCHES 'Change Invoice%'\n--\t\t\tOR event_name LIKE 'Create Invoice Cancellation%'\n--\t\t\tOR event_name LIKE 'Update Invoice%')\n-- AS created_with_dialog_event \n--FROM defaultview-290\n-- WHERE created_with_dialog\n\n--COUNT (event_name) FILTER \n--    (WHERE event_name MATCHES (event_name LIKE 'Create%')) \n--    AS created_with_dialog_event\n--    FROM \"defaultview-290\"\n\n\n--SELECT\n--COUNT (event_name) FILTER (WHERE event_name MATCHES (event_name = 'Change Invoice%' OR event_name = 'Update Invoice%'))\n--As \"Results\"\n--FROM \"defaultview-290\"\n\n--SELECT count(event_name) AS created_with_dialog FROM \"defaultview-290\"\n--WHERE count(event_name) MATCHES \n--(created_with_dialog_event MATCHES (event_name LIKE 'Create Invoice No' \n--OR event_name LIKE 'Change Invoice%')) \n--AND created_with_dialog_event MATCHES \n--(event_name LIKE 'Invoice%')"
    },
    {
        "filename": "33b740656c",
        "split": "test",
        "name": "% Cases Started Late WITHOUT planned order reference",
        "query": "SELECT (count(case_id)\nFILTER (WHERE \"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\n \n  FROM \"defaultview-183\"\n\nWHERE \"Planned Order Number\" IS NULL\n\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case_id where the difference between the 'Actual Start Date' and 'Scheduled Start Date' is greater than 0 seconds, in the 'defaultview-183' table. Exclude the cases where 'Planned Order Number' is not null. The result is multiplied by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(case_id) FILTER(\n\tWHERE (\"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds')\n\t  ) \n\t/ SUM(case_id) FILTER (WHERE \"Planned Order Number\" IS NULL)\n* 100\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(case_id) FILTER(\n\tWHERE (\"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds')\n\t  ) \n\t/ SUM(case_id) FILTER (WHERE \"Planned Order Number\" IS NULL)\n* 100\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "093ba34496",
        "split": "test",
        "name": "JSM Average Closing Time",
        "query": "\nSELECT\nAVG(\n\tIF(\"Issue Type\" = '[System] Change',\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Canceled','Issue status change: Completed','Issue status change: Failed'))\n\t\t-(\"Issue Created Date\" ),\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Closed','Issue status change: Done'))\n\t\t-(\"Issue Created Date\" ))\n   )\nFROM \"defaultview-370\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time taken to resolve an issue in the 'defaultview-370' table. If the issue type is '[System] Change', subtract the 'Issue Created Date' from the last end time where the event name is either 'Issue status change: Canceled', 'Issue status change: Completed', or 'Issue status change: Failed'. Otherwise, subtract the 'Issue Created Date' from the last end time where the event name is either 'Issue status change: Closed' or 'Issue status change: Done'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG (\"Issue Last Occurrence Completion Time\"\n    - \"Issue Created Date\" IF \"Issue Label Text (case insensitive)\" MATCHES ('[System] Change') THEN\n  (SELECT LAST (END_TIME) FILTER (\n      WHERE EVENT_NAME IN ('Issue status change: Canceled', 'Issue status change: Completed', 'Issue status change: Failed')\n  )) ELSE\n  (SELECT LAST (END_TIME) FILTER (\n      WHERE EVENT_NAME IN ('Issue status change: Closed', 'Issue status change: Done')\n  )))\n  AS \"#\"\nFROM \"defaultview-370\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG (\"Issue Last Occurrence Completion Time\"\n    - \"Issue Created Date\" IF \"Issue Label Text (case insensitive)\" MATCHES ('[System] Change') THEN\n  (SELECT LAST (END_TIME) FILTER (\n      WHERE EVENT_NAME IN ('Issue status change: Canceled', 'Issue status change: Completed', 'Issue status change: Failed')\n  )) ELSE\n  (SELECT LAST (END_TIME) FILTER (\n      WHERE EVENT_NAME IN ('Issue status change: Closed', 'Issue status change: Done')\n  )))\n  AS \"#\"\nFROM \"defaultview-370\" "
    },
    {
        "filename": "a9f69086c6",
        "split": "test",
        "name": "POs created after Invoice Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER\n\t(WHERE (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice') ~> 'Create PO Item')))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-545' table where the event_name matches either 'Receive Invoice' or 'Reconcile Invoice' and the event_name is followed by 'Create PO Item'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) FILTER(\n\tWHERE event_name MATCHES ('Receive Invoice' | 'Reconcile Invoice') ~> \n\t\t\t( 'Create PO Item')) \nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) FILTER(\n\tWHERE event_name MATCHES ('Receive Invoice' | 'Reconcile Invoice') ~> \n\t\t\t( 'Create PO Item')) \nFROM \"defaultview-545\""
    },
    {
        "filename": "4ed73943d3",
        "split": "test",
        "name": "Number of Invoices ",
        "query": "SELECT\n  COUNT( case_id)\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) FROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) FROM \"defaultview-545\""
    },
    {
        "filename": "88d017c4a6",
        "split": "test",
        "name": "Total PO discount Amount on Catalog item",
        "query": "SELECT -SUM(\"PO Amount Discount\") AS \"Total PO discount Amount\"\nFROM \"defaultview-431\"\nWHERE \"PO Item Line Type\" = 'Catalog'",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the total discount amount for purchase orders with a line type of 'Catalog' from the 'defaultview-431' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"POItemNetPrice\" - \"POItemNetValue\") FILTER (\n\tWHERE EVENT_NAME MATCHES ('POItemCatalogLanding'))\nFROM \"defaultview-431\"\nWHERE (\n\tPARSEDATETIME('2020-05-04T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-21T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-05T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-21T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-05T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-21T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-03T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-05T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-03T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-05T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-06T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-10T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-06T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-10T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-07T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-10T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-07T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-10T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-13T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-13T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-14T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-14T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-18T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-18T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-20T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-20T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"POItemNetPrice\" - \"POItemNetValue\") FILTER (\n\tWHERE EVENT_NAME MATCHES ('POItemCatalogLanding'))\nFROM \"defaultview-431\"\nWHERE (\n\tPARSEDATETIME('2020-05-04T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-21T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-05T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-21T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-05T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-21T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-03T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-05T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-03T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-05T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-06T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-10T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-06T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-10T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-07T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-10T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-07T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND POChangeCreatedAt < PARSEDATETIME('2020-05-10T23:59:59.999', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-13T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-13T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-14T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-14T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-18T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-18T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-20T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n   OR (\n\tPARSEDATETIME('2020-05-20T00:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS') < POChangeCreatedAt\n\tAND PARSEDATETIME(\"POChangeCreatedAt\",'yyyy-MM') IN ('2020-05'))\n\n"
    },
    {
        "filename": "7701541719",
        "split": "test",
        "name": "Average Cycle Time Over Time",
        "query": "SELECT\n    DATE_TRUNC('month', (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"PO Creation Date\",\n    \n    AVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Receive Invoice')))\n   \t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"Average cycle time\"\n    \nFROM \"defaultview-545\"\nWHERE event_name MATCHES ('Create PO Item' 'Receive Invoice')\nORDER BY 1 ASC NULLS FIRST\nFILL TIMESERIES('MONTH'), NULL",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The SIGNAL query is used to summarize data from the 'defaultview-545' table. It calculates the 'PO Creation Date' by finding the first 'end_time' value where the 'event_name' is 'Create PO Item' and truncating it to the month. It also calculates the 'Average cycle time' by finding the last 'end_time' value where the 'event_name' is 'Receive Invoice' and subtracting the first 'end_time' value where the 'event_name' is 'Create PO Item'. The results are ordered by the 'PO Creation Date' in ascending order and filled with null values for missing months.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nDATE_TRUNC('MONTH', (SELECT FIRST(end_time) \n\tFILTER (WHERE event_name = 'Create PO Item' )) \n    ) AS \"PO Creation Date\",\nAVG(\n\t(\n\tSELECT LAST(end_time) \n\t\tFILTER (WHERE event_name = 'Receive Invoice') \n\t) - (\n\tSELECT FIRST(end_time)\n\t\tFILTER (WHERE event_name = 'Create PO Item') \n    )\n   ) AS \"Average cycle time\"\n   \nFROM \"defaultview-545\"\nORDER BY 1 ASC NULLS FIRST\nFILL timeseries('MONTH')\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nDATE_TRUNC('MONTH', (SELECT FIRST(end_time) \n\tFILTER (WHERE event_name = 'Create PO Item' )) \n    ) AS \"PO Creation Date\",\nAVG(\n\t(\n\tSELECT LAST(end_time) \n\t\tFILTER (WHERE event_name = 'Receive Invoice') \n\t) - (\n\tSELECT FIRST(end_time)\n\t\tFILTER (WHERE event_name = 'Create PO Item') \n    )\n   ) AS \"Average cycle time\"\n   \nFROM \"defaultview-545\"\nORDER BY 1 ASC NULLS FIRST\nFILL timeseries('MONTH')\n"
    },
    {
        "filename": "ce0a335a7b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Set Deletion Flag WITHOUT planned order reference",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Deletion Flag')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last occurrence of the 'Deletion Flag' event and the first occurrence of the 'Create Process Order' event in the 'defaultview-183' table. Only consider rows where the 'Planned Order Number' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG((SELECT LAST(end_time) FILTER (\n      WHERE EVENT_NAME IN ('Deletion Flag'))) \n    - (SELECT FIRST(end_time) FILTER (\n        WHERE EVENT_NAME IN ('Create Process Order'))))\nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG((SELECT LAST(end_time) FILTER (\n      WHERE EVENT_NAME IN ('Deletion Flag'))) \n    - (SELECT FIRST(end_time) FILTER (\n        WHERE EVENT_NAME IN ('Create Process Order'))))\nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL"
    },
    {
        "filename": "7d57352489",
        "split": "test",
        "name": "Late Delivery after on-time release",
        "query": "SELECT (count(case_id)\nFILTER (\nWHERE \"Actual Delivery Date\" - \"Scheduled Finish Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\nFROM \"defaultview-183\"\nWhere \"Actual Release Date\" - \"Scheduled Release Date\" = DURATION '0seconds'\nAND \"Actual Finish Date\" is not null\nAND \"Scheduled Finish Date\" is not null\nAND \"Actual Start Date\" is not null\nAND \"Scheduled Start Date\" is not null\n\n\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case_ids where the difference between the 'Actual Delivery Date' and 'Scheduled Finish Date' is greater than 0 seconds, divided by the total number of case_ids in the 'defaultview-183' table. Multiply the result by 100.\n\nTo filter the data, only consider case_ids where the difference between the 'Actual Release Date' and 'Scheduled Release Date' is exactly 0 seconds. Additionally, exclude case_ids where the 'Actual Finish Date', 'Scheduled Finish Date', 'Actual Start Date', or 'Scheduled Start Date' is null.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Actual Delivery Date\" - \"Scheduled Finish Date\")  > DURATION '0seconds')\n/ COUNT(case_id) \n* 100\nFROM \"defaultview-183\"\nWhere (\"Actual Release Date\" - \"Scheduled Release Date\") = DURATION '0seconds'\n  AND \"Actual Finish Date\" IS NOT NULL\n  AND \"Scheduled Finish Date\" IS NOT NULL\n  AND \"Actual Start Date\" IS NOT NULL\n  AND \"Scheduled Start Date\" IS NOT NULL\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Actual Delivery Date\" - \"Scheduled Finish Date\")  > DURATION '0seconds')\n/ COUNT(case_id) \n* 100\nFROM \"defaultview-183\"\nWhere (\"Actual Release Date\" - \"Scheduled Release Date\") = DURATION '0seconds'\n  AND \"Actual Finish Date\" IS NOT NULL\n  AND \"Scheduled Finish Date\" IS NOT NULL\n  AND \"Actual Start Date\" IS NOT NULL\n  AND \"Scheduled Start Date\" IS NOT NULL\n"
    },
    {
        "filename": "7afbed3e6c",
        "split": "test",
        "name": "Avg. Cycle Time (GRN to Post Invoice) by PO Purchasing Group",
        "query": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\",\n\"PO Purchasing Group Text\" AS \"Purchasing Group\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The query is performed on the table 'defaultview-124'. It retrieves the count of cases and assigns it to the column 'No. of Cases'. It also calculates the average cycle time by subtracting the last end time of the event 'Create Goods Receipt' from the last end time of the event 'Create FI Invoice'. This average cycle time is assigned to the column 'Avg. Cycle Time'. The column 'PO Purchasing Group Text' is selected as 'Purchasing Group'. The results are grouped by the third column and ordered in descending order based on the first column. The query returns a maximum of 50 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT (CASE_ID) AS \"No. of Cases\",\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME)\n    ) - (\n      SELECT\n        FIRST (END_TIME)\n    )\n  ) FILTER (\n    WHERE\n      EVENT_NAME MATCHES ('Create FI Invoice'))\n  AS \"Avrg. Cycle Time\", \n  \"PO Purchasing Group Text\" AS \"Purchasing Group\"\nFROM\n  \"defaultview-124\"\nORDER BY\n  1 DESC\nLIMIT 50\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT (CASE_ID) AS \"No. of Cases\",\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME)\n    ) - (\n      SELECT\n        FIRST (END_TIME)\n    )\n  ) FILTER (\n    WHERE\n      EVENT_NAME MATCHES ('Create FI Invoice'))\n  AS \"Avrg. Cycle Time\", \n  \"PO Purchasing Group Text\" AS \"Purchasing Group\"\nFROM\n  \"defaultview-124\"\nORDER BY\n  1 DESC\nLIMIT 50\n"
    },
    {
        "filename": "ebfb4c5190",
        "split": "test",
        "name": "_Average timesheet approval time",
        "query": "\nSELECT\nSUM(\"TSR_AVGCreationTillApprovalTime\" * \"TSR_Count\")\n/\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average creation till approval time for TSRs in the 'defaultview-197' table. To do this, multiply the 'TSR_AVGCreationTillApprovalTime' column by the 'TSR_Count' column for each row, and then sum up the results. Divide this sum by the total sum of the 'TSR_Count' column to get the average.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(TSR_AVGCreationTillApprovalTime * TSR_Count) / \nSUM(TSR_Count) \nFROM \"defaultview-197\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(TSR_AVGCreationTillApprovalTime * TSR_Count) / \nSUM(TSR_Count) \nFROM \"defaultview-197\" "
    },
    {
        "filename": "d62720137d",
        "split": "test",
        "name": "Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs where the 'Last FI Invoice Item Due Date' is less than the 'Last FI Invoice Item Clearing Date' in the 'defaultview-57' table. First, count the number of case IDs where the 'Last FI Invoice Item Clearing Date' is not null. Then, count the number of case IDs where the 'Last FI Invoice Item Due Date' is less than the 'Last FI Invoice Item Clearing Date'. Divide the first count by the second count and multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(DISTINCT \"Case ID\") FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\")\n      )\n  ) / COUNT(DISTINCT \"Case ID\") FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\"Last FI Invoice Item Clearing Date\" IS NOT NULL)\n      )\n  ) * 100\nFROM\n  \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(DISTINCT \"Case ID\") FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\")\n      )\n  ) / COUNT(DISTINCT \"Case ID\") FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\"Last FI Invoice Item Clearing Date\" IS NOT NULL)\n      )\n  ) * 100\nFROM\n  \"defaultview-57\""
    },
    {
        "filename": "aa7861486e",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-133\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'Inv. Converted USD Amount' column from the 'defaultview-133' table, only for rows where the 'Last Inv. Item Clearing Date' column is NULL.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"Inv. Converted USD Amount\") \nFROM \"defaultview-133\"\nWhere \"Last Inv. Item Clearing Date\" is NULL\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"Inv. Converted USD Amount\") \nFROM \"defaultview-133\"\nWhere \"Last Inv. Item Clearing Date\" is NULL\n                "
    },
    {
        "filename": "935da015df",
        "split": "test",
        "name": "Percentage of not Approved Timesheets by Activity Type",
        "query": "SELECT\n(\nCount(distinct TimesheetRecord) \nFILTER \n(WHERE event_name = 'Create Timesheet Record')\n-\n Count(distinct TimesheetRecord) \nFILTER \n(WHERE event_name IN ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record'))\n)\n/ Count(distinct TimesheetRecord) * 100 AS \"% of not Approved Timesheets\",\n\n\"ActivityType\"  AS \"Activity Type\"\n\n\nFROM FLATTEN(\"defaultview-197\")\n\nORDER BY 1 DESC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of not approved timesheets and display the activity type. The query is performed on the 'defaultview-197' table. First, count the number of distinct timesheet records where the event name is 'Create Timesheet Record'. Then, subtract the count of distinct timesheet records where the event name is either 'Approve Timesheet Record', 'Auto-Approve Timesheet Record', or 'Cancel Timesheet Record'. Divide the result by the count of distinct timesheet records and multiply by 100 to get the percentage of not approved timesheets. Finally, display the activity type as 'ActivityType'. The results are ordered in descending order based on the percentage of not approved timesheets.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"TimesheetRecordId\") FILTER (\n    WHERE EVENT_NAME MATCHES ('Create Timesheet Record')\n    )\n-\nCOUNT(DISTINCT \"TimesheetRecordId\") FILTER (\n    WHERE EVENT_NAME IN (\n      'Approve Timesheet Record'\n      ,'Auto-Approve Timesheet Record'\n      ,'Cancel Timesheet Record'\n    )\n) \n/\nCOUNT(DISTINCT \"TimesheetRecordId\") FILTER (\n    WHERE EVENT_NAME MATCHES ('Create Timesheet Record')\n    )\n* 100\n, \"ActivityType\" \nFROM \"defaultview-197\"\nORDER BY 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"TimesheetRecordId\") FILTER (\n    WHERE EVENT_NAME MATCHES ('Create Timesheet Record')\n    )\n-\nCOUNT(DISTINCT \"TimesheetRecordId\") FILTER (\n    WHERE EVENT_NAME IN (\n      'Approve Timesheet Record'\n      ,'Auto-Approve Timesheet Record'\n      ,'Cancel Timesheet Record'\n    )\n) \n/\nCOUNT(DISTINCT \"TimesheetRecordId\") FILTER (\n    WHERE EVENT_NAME MATCHES ('Create Timesheet Record')\n    )\n* 100\n, \"ActivityType\" \nFROM \"defaultview-197\"\nORDER BY 1 desc"
    },
    {
        "filename": "fdbbf9f7fc",
        "split": "test",
        "name": "% of automatic delivery items changes",
        "query": "SELECT\n    COUNT(\"event_name\") FILTER (\n        WHERE BEHAVIOR (\n              \"EventCreatedByUserType\"  IN ('System','Service','Batch Job')\n            ) AS created_with_dialog MATCHES (created_with_dialog)\n    ) / COUNT(\"event_name\") * 100\nFROM FLATTEN(\"defaultview-290\")\nWHERE (event_name LIKE 'Change Delivery%' \n\tOR event_name LIKE 'Update Delivery%')",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of events with the event name starting with 'Change Delivery' or 'Update Delivery' that were created by users of type 'System', 'Service', or 'Batch Job'. The query is performed on the 'defaultview-290' table. The count of events with the event name matching the specified pattern and created by the specified user types is divided by the total count of events with the specified event name pattern, and then multiplied by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (event_name) FILTER(\n    WHERE \tevent_name like 'Change Delivery%'\n\t \tOR event_name like 'Update Delivery%'\n\t )\n/\nCOUNT(event_name) FILTER(\n    WHERE user_type IN ('System','Service', 'Batch Job')\t\n    )\n* 100\nFROM FLATTEN (\"defaultview-290\")\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (event_name) FILTER(\n    WHERE \tevent_name like 'Change Delivery%'\n\t \tOR event_name like 'Update Delivery%'\n\t )\n/\nCOUNT(event_name) FILTER(\n    WHERE user_type IN ('System','Service', 'Batch Job')\t\n    )\n* 100\nFROM FLATTEN (\"defaultview-290\")\n                "
    },
    {
        "filename": "d1bd2930bd",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average duration between the 'Basic Finish Date' and 'Basic Start Date' columns in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\"Basic Finish Date\" - \"Basic Start Date\")\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\"Basic Finish Date\" - \"Basic Start Date\")\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "005b27854f",
        "split": "test",
        "name": "Top 10 Customers with highest Open Receivables Amounts",
        "query": "SELECT\n     \"AR_CustomerName\"  AS \"Customer\",\n    SUM(\"AmountInCompanyCodeCurrency\" ) as \"Amount\"\nFROM FLATTEN(\"defaultview-197\")\nWHERE \"ClearingDate\"  IS NULL\nAND event_name =  'Create Accounts Receivable' \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the customer names and the total amount in company code currency for the top 10 accounts receivable records where the clearing date is null and the event name is 'Create Accounts Receivable'. The data is obtained from the 'defaultview-197' table. The results are grouped by customer name and ordered in descending order based on the total amount.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n \"AccountReceivableCreatedByPartyName\" as \"Customer Name\",\n SUM( \n  \"TotalAR2\")\n  \nFROM \"defaultview-197\" \n\nWHERE\n\t  \"ClearingDate\"  \n        IS NULL\n\t  AND \"ARCreateEventName\" = 'Create Accounts Receivable'    \n GROUP BY 1\n ORDER BY 2 DESC\n  LIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n \"AccountReceivableCreatedByPartyName\" as \"Customer Name\",\n SUM( \n  \"TotalAR2\")\n  \nFROM \"defaultview-197\" \n\nWHERE\n\t  \"ClearingDate\"  \n        IS NULL\n\t  AND \"ARCreateEventName\" = 'Create Accounts Receivable'    \n GROUP BY 1\n ORDER BY 2 DESC\n  LIMIT 10"
    },
    {
        "filename": "4f97b966fc",
        "split": "test",
        "name": "Top Vendors with worse Payments Terms on their invoice",
        "query": "SELECT \nSUM (\"Last FI Invoice Item Gross Amount in USD\") \nFILTER (WHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \nELSE \"PO Cash Discount Days 1\" END)) AS \"Payment Terms Differences where PO is better (Amount)\"\n,\"PO Vendor Name\"\nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'Last FI Invoice Item Gross Amount in USD' column for rows where the 'Last FI Invoice Item Cash Discount Days 1' column is less than the 'PO Cash Discount Days 1' column (if it is not null). The result is labeled as 'Payment Terms Differences where PO is better (Amount)'. Also include the 'PO Vendor Name' column. The data is retrieved from the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"Last FI Invoice Item Gross Amount in USD\" ) FILTER (\n\tWHERE(\"Last FI Invoice Item Cash Discount Days 1\"  <\n\t\t\"PO Cash Discount Days 1\"\n\t\tIFNULL(\"PO Cash Discount Days 1\",0) > 0\n\t)\n) AS \"Payment Terms Differences where PO is better (Amount)\", \n\"PO Vendor Name\"\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"Last FI Invoice Item Gross Amount in USD\" ) FILTER (\n\tWHERE(\"Last FI Invoice Item Cash Discount Days 1\"  <\n\t\t\"PO Cash Discount Days 1\"\n\t\tIFNULL(\"PO Cash Discount Days 1\",0) > 0\n\t)\n) AS \"Payment Terms Differences where PO is better (Amount)\", \n\"PO Vendor Name\"\nFROM \"defaultview-124\""
    },
    {
        "filename": "59a5b5c1d4",
        "split": "test",
        "name": "Projects by Project Profile",
        "query": "SELECT count(case_id) AS \"# Projects\", \nProject_ProfileCode AS \"Project Profile\"\nFROM \"defaultview-197\"\nORDER BY 1 DESC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of projects in the 'defaultview-197' table and display the result in descending order. The column 'case_id' is used to count the projects and the column 'Project_ProfileCode' is displayed as 'Project Profile'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) AS \"No.of Projects\", \"Project_ProfileCode\" AS \"Project Profile\"\nFROM \"defaultview-197\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) AS \"No.of Projects\", \"Project_ProfileCode\" AS \"Project Profile\"\nFROM \"defaultview-197\"\nORDER BY 1 DESC"
    },
    {
        "filename": "defa1f2d35",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Business Line",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Division\"\nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases in the 'defaultview-183' table and calculate the average cycle time by subtracting the 'Basic Start Date' from the 'Basic Finish Date' columns. Group the results by the 'Division' column. Finally, sort the results in descending order based on the count of cases.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (CASE_ID) as \"No of Cases\", AVG (\"Basic Finish Date\" - \"Basic Start Date\") as \"Avg Cycle Time\", \"Division\"\nFROM \"defaultview-183\"\ngroup by 3\norder by 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (CASE_ID) as \"No of Cases\", AVG (\"Basic Finish Date\" - \"Basic Start Date\") as \"Avg Cycle Time\", \"Division\"\nFROM \"defaultview-183\"\ngroup by 3\norder by 1 desc"
    },
    {
        "filename": "92022651c1",
        "split": "test",
        "name": "SOL-1682 Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n        WHERE (SELECT COUNT(event_name)\n                        WHERE (\"Last Inv. Item Clearing Date\" > \"Last Inv. Item Due Date\")) > 0\n        )\n/ COUNT (case_id) * 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs where the 'Last Inv. Item Clearing Date' is greater than the 'Last Inv. Item Due Date' in the 'defaultview-59' table. First, count the number of case IDs where the count of event names that satisfy the condition is greater than 0. Then, divide this count by the total count of case IDs in the table. Finally, multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (CASE_ID) FILTER (\n\tWHERE (\n\t\tBEHAVIOR ('Last Inv. Item Clearing Date' - 'Last Inv. Item Due Date') \n\t\tUSING (\n\t\tOUTPUT FIRST DATE WHERE (EVENT_NAME = 'Invoice Item Clearing'))  \n\t\t> OUTPUT LAST DATE WHERE (EVENT_NAME = 'Invoice Item Due Date')\n        )\n    )\n  ) \n/ COUNT (CASE_ID)\n* 100\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (CASE_ID) FILTER (\n\tWHERE (\n\t\tBEHAVIOR ('Last Inv. Item Clearing Date' - 'Last Inv. Item Due Date') \n\t\tUSING (\n\t\tOUTPUT FIRST DATE WHERE (EVENT_NAME = 'Invoice Item Clearing'))  \n\t\t> OUTPUT LAST DATE WHERE (EVENT_NAME = 'Invoice Item Due Date')\n        )\n    )\n  ) \n/ COUNT (CASE_ID)\n* 100\nFROM \"defaultview-59\""
    },
    {
        "filename": "ef3533bece",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Controlling Area",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Controlling Area\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of process orders for each controlling area in the 'defaultview-183' table. Sort the result in descending order based on the count.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(DISTINCT \"Process Order ID\") AS \"No of Process Orders\" , \"CA - Controlling Area\"\n\nFROM \"defaultview-183\"\nOrder by 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(DISTINCT \"Process Order ID\") AS \"No of Process Orders\" , \"CA - Controlling Area\"\n\nFROM \"defaultview-183\"\nOrder by 1 desc"
    },
    {
        "filename": "7a820c8c23",
        "split": "test",
        "name": "Ratio of tickets with rework",
        "query": "SELECT COUNT(case_id) \nFILTER (\n\tWHERE (SELECT count(event_name) WHERE event_name = 'Change Status to In Progress' ) > 1 )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-217\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values in the 'defaultview-217' table where the event_name is 'Change Status to In Progress' more than once. Divide this count by the total number of case_id values in the 'defaultview-217' table and multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name = 'Change Status to In Progress')\n    \tFROM defaultview-217.CONSTANTS.EVENT_NAME)\n\t\tAND (SELECT BOOL_AND(event_time > LAG(event_time)))\n    ))\n/\nCOUNT(case_id) * 100\nFROM defaultview-217\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name = 'Change Status to In Progress')\n    \tFROM defaultview-217.CONSTANTS.EVENT_NAME)\n\t\tAND (SELECT BOOL_AND(event_time > LAG(event_time)))\n    ))\n/\nCOUNT(case_id) * 100\nFROM defaultview-217\n                "
    },
    {
        "filename": "57824bbefa",
        "split": "test",
        "name": "First call resolution ratio",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT COUNT(DISTINCT event_name)) = (SELECT COUNT(event_name))\n\t)\n/ COUNT(case_id)\n*100\n\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case_ids where the count of distinct event_names is equal to the count of event_names. First, count the number of case_ids where the count of distinct event_names is equal to the count of event_names in the 'defaultview-545' table. Then, divide this count by the total count of case_ids in the 'defaultview-545' table. Finally, multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) FILTER ( WHERE (\n(SELECT\nCOUNT (distinct EVENT_NAME))\n=\n(SELECT\nCOUNT (EVENT_NAME)))\n)\n)\n/ COUNT (CASE_ID)\n* 100\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) FILTER ( WHERE (\n(SELECT\nCOUNT (distinct EVENT_NAME))\n=\n(SELECT\nCOUNT (EVENT_NAME)))\n)\n)\n/ COUNT (CASE_ID)\n* 100\nFROM \"defaultview-545\""
    },
    {
        "filename": "c428caeb29",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Plant",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Plant\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of process orders for each plant. Group the results by the 'Plant' column and order them in descending order based on the count. The table used in this query is 'defaultview-183' and the columns used are 'CASE_ID' and 'Plant'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(CASE_ID)  as \"No. of Orders\" , \"Plant\" \nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 desc\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(CASE_ID)  as \"No. of Orders\" , \"Plant\" \nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 desc\n\n\n"
    },
    {
        "filename": "1898593acc",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Receive Invoice')",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last 'Receive Invoice' event and the first 'Create PO Item' event in the 'defaultview-431' table. The 'END_TIME' column is used to determine the event times. Only events with the names 'Create PO Item' and 'Receive Invoice' are considered.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG(\n\t(WAIT \n    BETWEEN (SELECT LAST(END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item')\n        )\n  \t)) AND LAST(END_TIME))\n  )\n  \nFROM (SELECT\n    EVENT_NAME,\n    END_TIME,\n    LAG(END_TIME) OVER (ORDER BY END_TIME) AS WAIT\n    FROM FLATTEN(\"defaultview-431\")\n\n  ) AS sq\nWHERE EVENT_NAME IN ('Create PO Item', 'Receive Invoice')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG(\n\t(WAIT \n    BETWEEN (SELECT LAST(END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item')\n        )\n  \t)) AND LAST(END_TIME))\n  )\n  \nFROM (SELECT\n    EVENT_NAME,\n    END_TIME,\n    LAG(END_TIME) OVER (ORDER BY END_TIME) AS WAIT\n    FROM FLATTEN(\"defaultview-431\")\n\n  ) AS sq\nWHERE EVENT_NAME IN ('Create PO Item', 'Receive Invoice')"
    },
    {
        "filename": "ec1afff845",
        "split": "test",
        "name": "Number of invoices with \"Last Inv. Item Terms of Payment Key\" column is NULL",
        "query": "SELECT COUNT(case_id), \"Last Inv. Item Terms of Payment Key\"\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Terms of Payment Key\" IS NULL",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of rows in the 'defaultview-225' table where the value in the 'Last Inv. Item Terms of Payment Key' column is NULL.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(*) FILTER(\n        WHERE \"Last Inv. Item Terms of Payment Key\" IS NULL\n    )\n    as \"Result\"\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(*) FILTER(\n        WHERE \"Last Inv. Item Terms of Payment Key\" IS NULL\n    )\n    as \"Result\"\nFROM \"defaultview-225\""
    },
    {
        "filename": "717545c103",
        "split": "test",
        "name": "\u00d8 Automation Rate of Payment Events",
        "query": "SELECT\n  SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            (\n              \"Event Created By User Type\" IN ('System', 'Service')\n              AND (event_name LIKE '%Payment%')\n            )\n        )\n    )\n  ) / SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            event_name LIKE '%Payment%' AND \"Event Created By User Type\" IS NOT NULL\n        )\n    )\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the event name contains 'Payment' and the event was created by a user of type 'System' or 'Service', out of the total number of cases where the event name contains 'Payment' and the event created by user type is not null. The result is multiplied by 100 to get the percentage. The data is retrieved from the 'defaultview-225' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT (DISTINCT \"case\") FILTER (\n    WHERE\n      (\n        EVENT_NAME LIKE '%Payment' \n      )\n  AND (\n    EVENT_CREATED_BY_USER_TYPE IN ('system','service')\n  ))\n  / COUNT (DISTINCT \"case\") FILTER (\n      WHERE\n        (\n        EVENT_NAME LIKE '%Payment'\n        )\n      AND (\n        EVENT_CREATED_BY_USER_TYPE IS NOT NULL\n      )\n  ) * 100\nFROM\n  \"defaultview-225\"\nWhere event_name LIKE '%Payment'\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT (DISTINCT \"case\") FILTER (\n    WHERE\n      (\n        EVENT_NAME LIKE '%Payment' \n      )\n  AND (\n    EVENT_CREATED_BY_USER_TYPE IN ('system','service')\n  ))\n  / COUNT (DISTINCT \"case\") FILTER (\n      WHERE\n        (\n        EVENT_NAME LIKE '%Payment'\n        )\n      AND (\n        EVENT_CREATED_BY_USER_TYPE IS NOT NULL\n      )\n  ) * 100\nFROM\n  \"defaultview-225\"\nWhere event_name LIKE '%Payment'\n                "
    },
    {
        "filename": "aef1c8c1d7",
        "split": "test",
        "name": "Top 10 Customers with highest Invoiced Amounts",
        "query": "SELECT\n    AR_CustomerName AS \"Customer\",\n    SUM(\"AR_InvoicedAmountInGlobalCurrency\") AS \"Amount\"\nFROM \"defaultview-222\"\nWHERE AR_CustomerName IS NOT NULL\n\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the customer name and the total invoiced amount in global currency from the 'defaultview-222' table. Filter the results to only include rows where the customer name is not null. Group the results by the customer name and order them in descending order based on the total invoiced amount. Limit the output to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM(invoice_total_inc_glb) AS \"Total Invoiced Amount\",\n  \"Customer name\"\nFROM\n  \"defaultview-222\"\nWHERE\n  \"Customer name\" IS NOT NULL\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM(invoice_total_inc_glb) AS \"Total Invoiced Amount\",\n  \"Customer name\"\nFROM\n  \"defaultview-222\"\nWHERE\n  \"Customer name\" IS NOT NULL\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10"
    },
    {
        "filename": "8092de898c",
        "split": "test",
        "name": "Manual Change Rate by Top 10 Material",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocItemMaterial\" AS \"SD Material\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The query retrieves the number of distinct case IDs from the 'defaultview-383' table and assigns it to the alias '# of SDs'. It also calculates the change rate by dividing the count of distinct case IDs where the 'EventCreatedByUserType' is 'Dialog' and 'ChangeType' is 'Update' by the total count of distinct case IDs, and then multiplying it by 100. The result is assigned to the alias 'Change rate'. Additionally, it selects the 'SalesDocItemMaterial' column and assigns it to the alias 'SD Material'. The query is ordered in descending order based on the first column and limited to 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT (DISTINCT \"CaseId\") AS \"# of SDs\",\n  COUNT (DISTINCT IF (filter_0,\"CaseId\", NULL)) / COUNT (DISTINCT \"CaseId\") * 100 AS \"Change rate\",\n  \"SalesDocItemMaterial\" AS \"SD Material\"\nFROM FLATTEN(\"defaultview-383\")\nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT (DISTINCT \"CaseId\") AS \"# of SDs\",\n  COUNT (DISTINCT IF (filter_0,\"CaseId\", NULL)) / COUNT (DISTINCT \"CaseId\") * 100 AS \"Change rate\",\n  \"SalesDocItemMaterial\" AS \"SD Material\"\nFROM FLATTEN(\"defaultview-383\")\nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "487549492d",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term'))))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs where the event name is 'Update Payment Term' in the 'defaultview-59' table. To do this, count the number of case IDs where the event name is 'Update Payment Term' and divide it by the total count of case IDs in the table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE event_name \n    IN ('Update Payment Term')\n    )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE event_name \n    IN ('Update Payment Term')\n    )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                "
    },
    {
        "filename": "8deb242ea5",
        "split": "test",
        "name": "_Invoice cancellation rate",
        "query": "\nSELECT\n(\nSUM(\"BillingDoc_TotalCancelled\")\n/\nSUM(\"BillingDoc_TotalCount\")\n)\n* 100\n\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cancelled billing documents by dividing the sum of the 'BillingDoc_TotalCancelled' column by the sum of the 'BillingDoc_TotalCount' column in the 'defaultview-197' table, and then multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(SUM(\"BillingDoc_TotalCancelled\") / SUM(\"BillingDoc_TotalCount\")) * 100 AS \"Cancelled BillingDoc [%]\"\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(SUM(\"BillingDoc_TotalCancelled\") / SUM(\"BillingDoc_TotalCount\")) * 100 AS \"Cancelled BillingDoc [%]\"\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "df5561bb21",
        "split": "test",
        "name": "Confirmed process orders",
        "query": "SELECT COUNT(event_name)\n    FILTER(WHERE event_name MATCHES ('Confirmed'))\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of rows in the 'event_name' column of the 'defaultview-183' table where the value in the 'event_name' column matches the pattern 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (\"event_name\"  MATCHES ('Confirmed')) \nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (\"event_name\"  MATCHES ('Confirmed')) \nFROM \"defaultview-183\""
    },
    {
        "filename": "6ff4a8f764",
        "split": "test",
        "name": "Late deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-57' table where the 'Last GR Creation Date' is greater than the 'PO Item Last Requested Delivery Date' and the 'PO Item Delivery Completed' is 'Yes'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\ncount (case_id)\nFROM \"defaultview-57\"\nWHERE \n\"PO Item Delivery Completed\" MATCHES ('Yes')\nAND \"Last GR Creation Date\" > \"PO Item Last Requested Delivery Date\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\ncount (case_id)\nFROM \"defaultview-57\"\nWHERE \n\"PO Item Delivery Completed\" MATCHES ('Yes')\nAND \"Last GR Creation Date\" > \"PO Item Last Requested Delivery Date\""
    },
    {
        "filename": "6ad1f0922e",
        "split": "test",
        "name": "\u00d8 SFC Initial Quantity",
        "query": "SELECT AVG(\"SFC Initial Quantity\") FROM \"defaultview-270\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average value of the 'SFC Initial Quantity' column from the 'defaultview-270' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG (\"SFC Initial Quantity\" )\nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG (\"SFC Initial Quantity\" )\nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "b371622da1",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Requested Delivery Date\"\n\t\tAND \"PO Delivery Status\" = 'Received'\n\t)\n/\nCOUNT(case_id) FILTER (\n\tWHERE \"PO Delivery Status\" = 'Received'\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the 'Last GR Creation Date' is later than the 'PO Requested Delivery Date' and the 'PO Delivery Status' is 'Received' in the 'defaultview-545' table. Divide this count by the total count of cases where the 'PO Delivery Status' is 'Received' in the same table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n   COUNT(case_id) FILTER (\n      WHERE\n     (\n         \"Last GR Creation Date\" IS NOT NULL\n         AND \"PO Requested Delivery Date\" IS NOT NULL\n         AND \"Last GR Creation Date\" > \n(SELECT FIRO_FORMAT_DATE('Created on Date', 'YYYY-MM-DD') \nWHERE \t\"PO Line Item ID\" IS NOT NULL \nAND FIRO_EVENT_NAME IN ('PO Line Created'))\nAND FIRO_FIRST_EVENT_ON_CASE('PO Line Created') > \n(\"PO Requested Delivery Date\" \n- DURATION '1 day')  \n         \tAND \"PO Delivery Status\" = 'Received'\n       #\tUpdatedOrder# = 1\n     ))\n   )\n   /\n   COUNT(case_id) FILTER (\n      WHERE\n     (\n        \t\"PO Delivery Status\" = 'Received' \n       \t\t#UpdatedOrder# = 1\n     ))\n   * 100  AS \"Percentage of Late Deliveries\"\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n   COUNT(case_id) FILTER (\n      WHERE\n     (\n         \"Last GR Creation Date\" IS NOT NULL\n         AND \"PO Requested Delivery Date\" IS NOT NULL\n         AND \"Last GR Creation Date\" > \n(SELECT FIRO_FORMAT_DATE('Created on Date', 'YYYY-MM-DD') \nWHERE \t\"PO Line Item ID\" IS NOT NULL \nAND FIRO_EVENT_NAME IN ('PO Line Created'))\nAND FIRO_FIRST_EVENT_ON_CASE('PO Line Created') > \n(\"PO Requested Delivery Date\" \n- DURATION '1 day')  \n         \tAND \"PO Delivery Status\" = 'Received'\n       #\tUpdatedOrder# = 1\n     ))\n   )\n   /\n   COUNT(case_id) FILTER (\n      WHERE\n     (\n        \t\"PO Delivery Status\" = 'Received' \n       \t\t#UpdatedOrder# = 1\n     ))\n   * 100  AS \"Percentage of Late Deliveries\"\nFROM \"defaultview-545\""
    },
    {
        "filename": "8977266362",
        "split": "test",
        "name": "WC Impact of Invoices with immediate payment terms",
        "query": "\nSELECT\nSUM(\"Last FI Invoice Item Gross Amount in USD\") FILTER(\n\tWHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) *15*0.04/365\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'Last FI Invoice Item Gross Amount in USD' column from the 'defaultview-124' table, filtered by rows where the 'Last FI Invoice Item Cash Discount Days 1' column is either NULL or 0. Multiply the sum by 15, then multiply the result by 0.04, and finally divide by 365.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n SUM(\n  \"Last FI Invoice Item Gross Amount in USD\"\n )\nFROM\n \"defaultview-124\"\n\nWHERE\n(\n  \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\n  OR \"Last FI Invoice Item Cash Discount Days 1\" = 0\n )\n--# \"defaultview-1532798617761\"\nAVG_OVER (ORDER BY\n\"CASE_CREATED_AT\" ASC NULLS FIRST) CHARGE 15 MINS\nWHERE (\"Last FI Invoice Item Object Number\" = '42074765'\n AND \"Classic Claiming is False\" = 'False')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n SUM(\n  \"Last FI Invoice Item Gross Amount in USD\"\n )\nFROM\n \"defaultview-124\"\n\nWHERE\n(\n  \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\n  OR \"Last FI Invoice Item Cash Discount Days 1\" = 0\n )\n--# \"defaultview-1532798617761\"\nAVG_OVER (ORDER BY\n\"CASE_CREATED_AT\" ASC NULLS FIRST) CHARGE 15 MINS\nWHERE (\"Last FI Invoice Item Object Number\" = '42074765'\n AND \"Classic Claiming is False\" = 'False')"
    },
    {
        "filename": "b3b2c64a6b",
        "split": "test",
        "name": "Number of Billing Requests rejected",
        "query": "SELECT \nCOUNT(DISTINCT \"SalesDocument\") FILTER (\n\tWHERE event_name LIKE 'Reject Billing Request%')\nFROM FLATTEN(\"defaultview-197\")",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the distinct values of the 'SalesDocument' column from the 'defaultview-197' table, where the 'event_name' column is like 'Reject Billing Request%'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT SalesDocument) \nFROM \"defaultview-197\"\nWHERE\nevent_name MATCHES (ILIKE ( '%Reject Billing Request%' ))",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT SalesDocument) \nFROM \"defaultview-197\"\nWHERE\nevent_name MATCHES (ILIKE ( '%Reject Billing Request%' ))"
    },
    {
        "filename": "f8140fe8c4",
        "split": "test",
        "name": "Number of Tickets Completed/Rejected",
        "query": "SELECT \n\tDATE_TRUNC('month', \n    \t(SELECT FIRST(end_time) \n        WHERE event_name IN ('Change Status to Closed'))) AS \"Month when Issue Closed\",\n\tCOUNT(case_id) \n    FILTER (WHERE event_name MATCHES(('Change Status to Closed'))) AS \"# Cases\"\nFROM \"defaultview-217\"\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The query retrieves the month when an issue is closed and the number of cases that are closed in each month. It is performed on the 'defaultview-217' table. The 'DATE_TRUNC' function is used to truncate the timestamp to the month level. The 'FIRST' function is used to select the first 'end_time' value where the 'event_name' is 'Change Status to Closed'. The 'COUNT' function is used to count the number of 'case_id' values where the 'event_name' matches 'Change Status to Closed'. The results are grouped by the first column and ordered by the first column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nDATE_TRUNC('month', (SELECT FIRST(end_time) WHERE event_name = 'Change Status to Closed'))) AS \"Month closed\", \nCOUNT(CASE_ID) AS \"Closed Cases\"\n\nFROM \"defaultview-217\"\n\tORDER BY 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nDATE_TRUNC('month', (SELECT FIRST(end_time) WHERE event_name = 'Change Status to Closed'))) AS \"Month closed\", \nCOUNT(CASE_ID) AS \"Closed Cases\"\n\nFROM \"defaultview-217\"\n\tORDER BY 1"
    },
    {
        "filename": "a6cf9b8367",
        "split": "test",
        "name": "Immediate WC Impact grouped by PO Vendor Name",
        "query": "SELECT SUM (\"Last FI Invoice Item Gross Amount Document Curr.\") \nFILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL \nOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) * 15 * 0.04 / 365 \nAS \"WC Impact of Invoices with immediate payment terms\", \"PO Vendor Name\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the impact of invoices with immediate payment terms on working capital. Retrieve the sum of the 'Last FI Invoice Item Gross Amount Document Curr.' column from the 'defaultview-124' table. Filter the results to include only rows where the 'Last FI Invoice Item Cash Discount Days 1' column is either NULL or 0. Multiply the sum by 15, then by 0.04, and finally divide by 365. Rename the result column as 'WC Impact of Invoices with immediate payment terms'. Also retrieve the 'PO Vendor Name' column. Sort the results in descending order, with NULL values appearing last. Limit the output to 30 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"Last FI Invoice Item Gross Amount Document Curr.\") FILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL OR \"Last FI Invoice Item Cash Discount Days 1\" = 0) * 15 * 0.04 / 365 AS \"WC Impact of Invoices with immediate payment terms\"\n, \"PO Vendor Name\"\nFROM \"defaultview-124\"\nWHERE (\"PO Invoice Last FI Posting Date\" - \"PO Invoice Last Drawing Entry Date\" > DURATION '0days') \nORDER BY 1 DESC NULLS LAST \nLIMIT 30",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"Last FI Invoice Item Gross Amount Document Curr.\") FILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL OR \"Last FI Invoice Item Cash Discount Days 1\" = 0) * 15 * 0.04 / 365 AS \"WC Impact of Invoices with immediate payment terms\"\n, \"PO Vendor Name\"\nFROM \"defaultview-124\"\nWHERE (\"PO Invoice Last FI Posting Date\" - \"PO Invoice Last Drawing Entry Date\" > DURATION '0days') \nORDER BY 1 DESC NULLS LAST \nLIMIT 30"
    },
    {
        "filename": "8411df93d4",
        "split": "test",
        "name": "Automation Rate Technically completed",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Technically completed'\n\n\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of events with the name 'Technically completed' in the 'defaultview-183' table that were not created by users of type 'Dialog'. To do this, count the number of events with the name 'Technically completed' and the user type not equal to 'Dialog', and divide it by the total count of events with the name 'Technically completed' in the 'defaultview-183' table. Finally, multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  (COUNT (event_name) FILTER \n  (WHERE \"User Type\" NOT IN ('Dialog'))\n  / COUNT (event_name) * 100) \n  FROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Technically completed'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  (COUNT (event_name) FILTER \n  (WHERE \"User Type\" NOT IN ('Dialog'))\n  / COUNT (event_name) * 100) \n  FROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Technically completed'"
    },
    {
        "filename": "e9259d68f7",
        "split": "test",
        "name": "Olap Table",
        "query": "SELECT case_id, \n\"Planned Release Date\", \n\"Scheduled Release date\",\n\"Actual Release Date\", \n\"Scheduled Start Date\", \n\"Actual Start Date\",     \n\"Scheduled Finish Date\", \n\"Confirmed Finish Date\",\n\"Actual Finish Date\", \n\"Basic Start Date\",\n--\"Basic End Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",   \n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"\nFROM \"defaultview-183\"\nLimit 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the following columns from the 'defaultview-183' table: case_id, Planned Release Date, Scheduled Release date, Actual Release Date, Scheduled Start Date, Actual Start Date, Scheduled Finish Date, Confirmed Finish Date, Actual Finish Date, Basic Start Date, Planned Order Opening Date, Planned Order Start Date, Actual Delivery Date, Planned Order Actual Delivery Date, Basic Finish Date. Limit the result to 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT case_id,\n\n\"Planned Release Date\",\n\"Scheduled Release date\",\n\"Actual Release Date\",\n\"Scheduled Start Date\",\n\"Actual Start Date\",\n\"Scheduled Finish Date\",\n\"Confirmed Finish Date\",\n\"Actual Finish Date\",\n\"Basic Start Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",\n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"\n\nFROM \"defaultview-183-1\"\nlimit 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT case_id,\n\n\"Planned Release Date\",\n\"Scheduled Release date\",\n\"Actual Release Date\",\n\"Scheduled Start Date\",\n\"Actual Start Date\",\n\"Scheduled Finish Date\",\n\"Confirmed Finish Date\",\n\"Actual Finish Date\",\n\"Basic Start Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",\n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"\n\nFROM \"defaultview-183-1\"\nlimit 10"
    },
    {
        "filename": "88033c5325",
        "split": "test",
        "name": "Total Spend by PO Material (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Material Number\" \nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the total purchase order amount, average cycle time, and purchase order material number from the 'defaultview-431' table. Sort the results in descending order based on the total purchase order amount and limit the output to the top 10 records.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(po_item_net_order_value) AS \"PO NET ORDER VALUE\",\nCOUNT(\"CASE_ID\") AS \"No of P.O\",\nAVG (\"CYCLE_TIME\") AS \"AVG CYCLE TIME\"\n,\"PO_ITEM_MATERIALNUMBER\" AS \"PO MATERIAL\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(po_item_net_order_value) AS \"PO NET ORDER VALUE\",\nCOUNT(\"CASE_ID\") AS \"No of P.O\",\nAVG (\"CYCLE_TIME\") AS \"AVG CYCLE TIME\"\n,\"PO_ITEM_MATERIALNUMBER\" AS \"PO MATERIAL\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "125e48fc10",
        "split": "test",
        "name": "Avg. Cycle Time per Case ID (20 shortest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n    \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) \n              AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 ASC\nLIMIT 20\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average cycle time for each project in the 'defaultview-197' table. The cycle time is calculated by subtracting the start time of the project from the end time of the project. The result is ordered in ascending order of the average cycle time and limited to the top 20 projects.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG((SELECT LAST(END_TIME) FILTER (WHERE EVENT_NAME = 'Completing project')) \n- (SELECT FIRST(END_TIME) FILTER (WHERE EVENT_NAME = 'Creating project')))\nAS \"AVG Cycle Time\", \"Project\"\nFROM \"defaultview-197\" \nORDER BY 1\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG((SELECT LAST(END_TIME) FILTER (WHERE EVENT_NAME = 'Completing project')) \n- (SELECT FIRST(END_TIME) FILTER (WHERE EVENT_NAME = 'Creating project')))\nAS \"AVG Cycle Time\", \"Project\"\nFROM \"defaultview-197\" \nORDER BY 1\nLIMIT 20"
    },
    {
        "filename": "d1ef7aa5cf",
        "split": "test",
        "name": "Table",
        "query": "SELECT\nIF (bucket_id > 20, -1, (bucket_id * 50) + 0) AS bucket_end,\n\"ClientCount\"\nFROM (\nSELECT\nBUCKET(EventCount, 0, 50, 20) as bucket_id,\nCOUNT(CASE_ID) AS \"ClientCount\" FROM\n(\nSELECT CASE_ID, \nCOUNT(EVENT_NAME) as EventCount\nFROM FLATTEN(\"defaultview-124\")\n) AS sq1\n) AS sq2\nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The query retrieves the bucket end values and client count from the 'defaultview-124' table. It first calculates the bucket ID based on the event count, using the BUCKET function with parameters 0, 50, and 20. Then, it counts the number of distinct case IDs as the client count. The bucket ID is used to determine the bucket end value, which is either -1 if the bucket ID is greater than 20, or the bucket ID multiplied by 50 plus 0. The results are ordered in ascending order based on the bucket end values.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tIF (bucket_id > 20, -1, bucket_id * 50 + 0) as \"Bucket End\", \n    COUNT (DISTINCT case_id) as \"#Clients\"\nFROM (\n\tSELECT\n\t\tcase_id,\n    \t\"EVENT_COUNT\"(EV)\n        \t-FLOOR (\"EVENT_COUNT\"(EV) / 50) * 50\n            + CASE WHEN ROUNDED AS \"event_Bucket_Flag\" = TRUE \n            \tTHEN 0 ELSE 50 END\n            AS bucket_id\n    FROM (\n    \tSELECT \n        \tcase_id,\n        \tEV,\n        \t\"EVENT_COUNT\" (EV) AS \"rounded\",\n\t    \t\"EVENT_COUNT\" (EV)\n                - LAG (\"EVENT_COUNT\" (EV))\n                    OVER (PARTITION BY case_id\n                    \tORDER BY \"EVENT_COUNT\" (EV)) AS delta\n        FROM (\n    \t\tSELECT \n        \t\tcase_id,\n            \tEVENT AS EV\n    \t\tFROM FLATTEN(\"defaultview-124\")\n        )t\n    )t2\n) t3\nORDER BY 1\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tIF (bucket_id > 20, -1, bucket_id * 50 + 0) as \"Bucket End\", \n    COUNT (DISTINCT case_id) as \"#Clients\"\nFROM (\n\tSELECT\n\t\tcase_id,\n    \t\"EVENT_COUNT\"(EV)\n        \t-FLOOR (\"EVENT_COUNT\"(EV) / 50) * 50\n            + CASE WHEN ROUNDED AS \"event_Bucket_Flag\" = TRUE \n            \tTHEN 0 ELSE 50 END\n            AS bucket_id\n    FROM (\n    \tSELECT \n        \tcase_id,\n        \tEV,\n        \t\"EVENT_COUNT\" (EV) AS \"rounded\",\n\t    \t\"EVENT_COUNT\" (EV)\n                - LAG (\"EVENT_COUNT\" (EV))\n                    OVER (PARTITION BY case_id\n                    \tORDER BY \"EVENT_COUNT\" (EV)) AS delta\n        FROM (\n    \t\tSELECT \n        \t\tcase_id,\n            \tEVENT AS EV\n    \t\tFROM FLATTEN(\"defaultview-124\")\n        )t\n    )t2\n) t3\nORDER BY 1\n"
    },
    {
        "filename": "431e0f5dc2",
        "split": "test",
        "name": "Percent of Cases with Rework",
        "query": "SELECT COUNT (CASE_ID) \n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1) \n    \tFROM (SELECT OCCURRENCE(EVENT_NAME) AS occurrence) AS sub)) \n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the occurrence of an event is greater than 1. First, count the number of cases in the 'defaultview-545' table. Then, filter the cases where at least one event has occurred more than once. Finally, divide the count of these filtered cases by the total count of cases and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(CASE_ID) FILTER (\n\tWHERE (SELECT COUNT(*) FROM\n\tdefaultview-545.EventOne) > 1)\n/ COUNT(CASE_ID)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(CASE_ID) FILTER (\n\tWHERE (SELECT COUNT(*) FROM\n\tdefaultview-545.EventOne) > 1)\n/ COUNT(CASE_ID)\n* 100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "7524851a3d",
        "split": "test",
        "name": "Percentage of products touched by IO",
        "query": "\nSELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE (\n\t\tSELECT SUM(\"Recommended Safety Stock\") = 0\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n* 100\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of distinct 'Product ID' values where the sum of 'Recommended Safety Stock' is equal to 0, for the current month and the previous 320 days. Divide this count by the total count of distinct 'Product ID' values for the current month and the previous 320 days, and multiply the result by 100. The data is retrieved from the 'defaultview-404' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(DISTINCT \"Product ID\") FILTER (\n\tWHERE (SELECT SUM(\"Recommended Safety Stock\") = 0))\n/ COUNT(DISTINCT \"Product ID\")\nFILTER (WHERE DATE_TRUNC('MONTH', NOW()) - \"End of Period\" < DURATION '320days'\n   )\n* 100\nFROM \"defaultview-404\"\n--order by 1 desc\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(DISTINCT \"Product ID\") FILTER (\n\tWHERE (SELECT SUM(\"Recommended Safety Stock\") = 0))\n/ COUNT(DISTINCT \"Product ID\")\nFILTER (WHERE DATE_TRUNC('MONTH', NOW()) - \"End of Period\" < DURATION '320days'\n   )\n* 100\nFROM \"defaultview-404\"\n--order by 1 desc\n                "
    },
    {
        "filename": "28105fe921",
        "split": "test",
        "name": "First time fix rate",
        "query": "\nSELECT\n(COUNT (case_id) FILTER(WHERE ((SELECT COUNT (event_name) FILTER (WHERE event_name IN ('Technically Completed')) < 2) ))\n/ \nCOUNT (case_id) )*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case_ids in the 'defaultview-545' table where the count of event_names that are 'Technically Completed' is less than 2, divided by the total count of case_ids in the table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Technically Completed')\n          )\n      ) < 2\n  ) / COUNT (CASE_ID),\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Technically Completed')\n          )\n      ) >= 2\n  )\nFROM\n  \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Technically Completed')\n          )\n      ) < 2\n  ) / COUNT (CASE_ID),\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Technically Completed')\n          )\n      ) >= 2\n  )\nFROM\n  \"defaultview-545\"\n                "
    },
    {
        "filename": "a043407a7a",
        "split": "test",
        "name": "4. Percentage of Payments Manually processed (out of all clearly allocated payments ('SA','DZ'))",
        "query": "SELECT\n(count(DISTINCT \"ARUniqueKey\"  ) FILTER\n(WHERE event_name = 'Clear Accounts Receivable' and \"AutomationFlag\" is null)\n/ \ncount(DISTINCT \"ARUniqueKey\"  ) FILTER \n(WHERE event_name IN \n('Clear Accounts Receivable')\n)\n) \n* 100\n FROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of 'Clear Accounts Receivable' events that have a null value for the 'AutomationFlag' column in the 'defaultview-222' table. To do this, count the number of distinct 'ARUniqueKey' values where the event_name is 'Clear Accounts Receivable' and the 'AutomationFlag' is null, and divide it by the count of distinct 'ARUniqueKey' values where the event_name is 'Clear Accounts Receivable'. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (DISTINCT \"ARUniqueKey\") FILTER (\n    WHERE\n      event_name = 'Clear Accounts Receivable'\n      AND \"AutomationFlag\" IS NULL\n  )\n  / COUNT (DISTINCT \"ARUniqueKey\") FILTER (\n      WHERE event_name = 'Clear Accounts Receivable' )\n  * 100\nFROM\n  FLATTEN(\"defaultview-222\") ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (DISTINCT \"ARUniqueKey\") FILTER (\n    WHERE\n      event_name = 'Clear Accounts Receivable'\n      AND \"AutomationFlag\" IS NULL\n  )\n  / COUNT (DISTINCT \"ARUniqueKey\") FILTER (\n      WHERE event_name = 'Clear Accounts Receivable' )\n  * 100\nFROM\n  FLATTEN(\"defaultview-222\") "
    },
    {
        "filename": "aade6751ff",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Clear Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))))      \nFROM \"defaultview-133\" \nWHERE EVENT_NAME MATCHES ('Post Invoice' 'Clear Invoice')",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last 'Clear Invoice' event and the first 'Post Invoice' event in the 'defaultview-133' table. The 'END_TIME' column is used to determine the time of each event. Only events with the names 'Post Invoice' and 'Clear Invoice' are considered in the calculation.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG(\n\t\t(SELECT FIRST(end_time) \n\t\t\tWHERE event_name IN ('Clear Invoice'))\n    -\t(SELECT FIRST(end_time) \n        \tWHERE event_name IN ('Post Invoice'))\n       )\nFROM \"defaultview-133\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG(\n\t\t(SELECT FIRST(end_time) \n\t\t\tWHERE event_name IN ('Clear Invoice'))\n    -\t(SELECT FIRST(end_time) \n        \tWHERE event_name IN ('Post Invoice'))\n       )\nFROM \"defaultview-133\""
    },
    {
        "filename": "d39c3be180",
        "split": "test",
        "name": "Overdue payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL AND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL)\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases in the 'defaultview-545' table where the 'Last Invoice Payment Date' is NULL and the 'Last Invoice Due Date' is earlier than today. Divide this count by the total count of cases where the 'Last Invoice Payment Date' is NULL. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n COUNT(CASE_ID) FILTER(\n    \tWHERE \"Last Invoice Payment Date\" IS NULL\n        \tAND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))\n\t)\n/\nCOUNT(CASE_ID) FILTER(\n\tWHERE \"Last Invoice Payment Date\" IS NULL)\n* 100\n FROM \"defaultview-545\"\n--     WHERE BspName LIKE 'FB05%'\n--GROUP BY \"Case Cost Center\"\n--HAVING COUNT (EVENT_NAME) > 10\n--ORDER BY 2\n\n--\"defaultview-545\" WHERE \"Last Invoice Payment Date\" IS NULL AND BE \"Last Purchase Check Date\" not in (\"Last Purchase Order Date\")\n--\"defaultview-545\" WHERE BE \"Last Purchase Check Date\" IS NULL-- AND \"BE -- AP check\" != '1. Match Invoice-PO Item'\n--\"defaultview-545\" WHERE BE \"Last Purchase Check Date\" IS NULL-- AND \"BE -- AP check\" != '1. Match Invoice-PO Item'\n--\"defaultview-545\" WHERE \"Last Invoice Payment Date\" IS NULL\n  --\"defaultview-545\" WHERE \"Last Invoice Payment Date\" < DATE_TRUNC('day', NOW()) -- IsNullDate\n--\"defaultview-545\" WHERE \"Last Purchase Order Delivery Date\" IS NULL\n\n--\"defaultview-545\" WHERE BC MATCHDATE-INF ISNullDate AND BC MATCHDATE-SUP ISNullDate\n--\"defaultview-545\" WHERE (BC MATCHDATE-SUP - BC MATCHDATE-INF) ISNullDate",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n COUNT(CASE_ID) FILTER(\n    \tWHERE \"Last Invoice Payment Date\" IS NULL\n        \tAND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))\n\t)\n/\nCOUNT(CASE_ID) FILTER(\n\tWHERE \"Last Invoice Payment Date\" IS NULL)\n* 100\n FROM \"defaultview-545\"\n--     WHERE BspName LIKE 'FB05%'\n--GROUP BY \"Case Cost Center\"\n--HAVING COUNT (EVENT_NAME) > 10\n--ORDER BY 2\n\n--\"defaultview-545\" WHERE \"Last Invoice Payment Date\" IS NULL AND BE \"Last Purchase Check Date\" not in (\"Last Purchase Order Date\")\n--\"defaultview-545\" WHERE BE \"Last Purchase Check Date\" IS NULL-- AND \"BE -- AP check\" != '1. Match Invoice-PO Item'\n--\"defaultview-545\" WHERE BE \"Last Purchase Check Date\" IS NULL-- AND \"BE -- AP check\" != '1. Match Invoice-PO Item'\n--\"defaultview-545\" WHERE \"Last Invoice Payment Date\" IS NULL\n  --\"defaultview-545\" WHERE \"Last Invoice Payment Date\" < DATE_TRUNC('day', NOW()) -- IsNullDate\n--\"defaultview-545\" WHERE \"Last Purchase Order Delivery Date\" IS NULL\n\n--\"defaultview-545\" WHERE BC MATCHDATE-INF ISNullDate AND BC MATCHDATE-SUP ISNullDate\n--\"defaultview-545\" WHERE (BC MATCHDATE-SUP - BC MATCHDATE-INF) ISNullDate"
    },
    {
        "filename": "c6857d95da",
        "split": "test",
        "name": "% Process Orders Released Early  grouped by most relevant Business Lines",
        "query": "SELECT \ncount(case_id) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') AS \"# Process Orders released early\",\nCOUNT (CASE_ID) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') / COUNT (CASE_ID)* 100 AS \"% Released Early\",\n\"Division\"\nFROM \"defaultview-183\"\n-- GROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The query retrieves the count of process orders that were released early, as well as the percentage of process orders released early compared to the total count of process orders. The data is obtained from the 'defaultview-183' table. The 'Actual Release Date' column is subtracted from the 'Scheduled Release Date' column, and if the result is less than 0 seconds, it is considered as released early. The results are grouped by the 'Division' column and ordered in descending order based on the count of process orders released early. The top 10 results are returned.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE WHEN \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds' THEN po_released ELSE NULL end) \nAS \"Count of Process Orders Released Early\",\n(COUNT (CASE WHEN \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds' THEN po_released ELSE NULL end) / COUNT (\"PO Released\")) * 100\nAS \"% Process Orders Released Early\", \"Division\"\nFROM \"defaultview-183\"\nGROUP BY 3\nORDER BY  1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE WHEN \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds' THEN po_released ELSE NULL end) \nAS \"Count of Process Orders Released Early\",\n(COUNT (CASE WHEN \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds' THEN po_released ELSE NULL end) / COUNT (\"PO Released\")) * 100\nAS \"% Process Orders Released Early\", \"Division\"\nFROM \"defaultview-183\"\nGROUP BY 3\nORDER BY  1 DESC\nLIMIT 10"
    },
    {
        "filename": "5cc0dd8c2b",
        "split": "test",
        "name": "SOL-1742 Fraction of total average cycle time spent on rework",
        "query": "\nSELECT\n((AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM (SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t))\n-\n(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\n)\n/(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average duration of events in the 'defaultview-59' table. Subtract the average duration of events where the occurrence of the event name is greater than 1. Divide the result by the average duration of all events in the 'defaultview-59' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT AVG(duration_event) FILTER (\n\t\tWHERE (occurrence > 1) ))) \n /\n AVG(\n \t(SELECT AVG(duration_event) \n    \tFROM FLATTEN(\"defaultview-59\")))\n\nFROM \"defaultview-59\"\n                    \n    \n                    \n    \n                    \n    \n                    \n    \n                    \n\n\n                \n\n\n                    \n    \n    \n    \n    \n    \n    \n    \n    \n\n                    \n    \n    \n\n                \n                \n                \n                    \n\n                    \n    \n                \n\n                    \n    \n    \n    \n    \n    \n    \n    \n    \n\n                    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n\n\n                    \n    \n        \n\n    \n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT AVG(duration_event) FILTER (\n\t\tWHERE (occurrence > 1) ))) \n /\n AVG(\n \t(SELECT AVG(duration_event) \n    \tFROM FLATTEN(\"defaultview-59\")))\n\nFROM \"defaultview-59\"\n                    \n    \n                    \n    \n                    \n    \n                    \n    \n                    \n\n\n                \n\n\n                    \n    \n    \n    \n    \n    \n    \n    \n    \n\n                    \n    \n    \n\n                \n                \n                \n                    \n\n                    \n    \n                \n\n                    \n    \n    \n    \n    \n    \n    \n    \n    \n\n                    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n\n\n                    \n    \n        \n\n    \n"
    },
    {
        "filename": "df00ed7208",
        "split": "test",
        "name": "\u00d8 Cycle Time (Full Process)",
        "query": "SELECT AVG (\n\t(SELECT LAST (END_TIME)) \n  - (SELECT FIRST (END_TIME))) AS \"Average cycle time\"\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average cycle time by subtracting the first end time from the last end time in the 'defaultview-270' table and then taking the average. The result will be labeled as 'Average cycle time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME)))) AS \"Average cycle time\"\nFROM \"defaultview-270\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME)))) AS \"Average cycle time\"\nFROM \"defaultview-270\""
    },
    {
        "filename": "4d015ef6e5",
        "split": "test",
        "name": "No. of Invoices Paid Late",
        "query": "SELECT \nCOUNT(DISTINCT CASE_ID) AS \"Case Count\"\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of distinct case IDs from the 'defaultview-124' table where the value in the 'Last FI Invoice Item Due Date' column is less than the value in the 'Last FI Invoice Item Clearing Date' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (DISTINCT CASE_ID) \nFROM \"defaultview-124\"\nWhere \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (DISTINCT CASE_ID) \nFROM \"defaultview-124\"\nWhere \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\""
    },
    {
        "filename": "73e9b28d90",
        "split": "test",
        "name": "Number of Orders delayed in completion",
        "query": "\nSELECT\ncount(case_id) FILTER(\n\tWHERE \"Order Actual Start\" IS NOT NULL\n\tAND \"Order Actual Completion\" - \"Order Scheduled Completion\" > DURATION '0minutes') \nFROM \"defaultview-538\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-538' table where the 'Order Actual Start' column is not null and the difference between the 'Order Actual Completion' and 'Order Scheduled Completion' columns is greater than 0 minutes.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id)\nFROM \"defaultview-538\"\nWHERE\n\"Order Actual Start\" IS NOT NULL\nAND \n(\"Order Actual Completion\" - \"Order Scheduled Completion\") > DURATION '0minutes'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id)\nFROM \"defaultview-538\"\nWHERE\n\"Order Actual Start\" IS NOT NULL\nAND \n(\"Order Actual Completion\" - \"Order Scheduled Completion\") > DURATION '0minutes'"
    },
    {
        "filename": "7896255b68",
        "split": "test",
        "name": "Number Created Receivables over Time Posting",
        "query": "SELECT  \n\t\"PostingDate\"   AS \"Posting Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the 'Posting Date' and the count of distinct 'ARUniqueKey' from the 'defaultview-222' table. Filter the results to only include rows where the 'EVENT_NAME' column is 'Create Accounts Receivable'. Sort the results in ascending order based on the 'Posting Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  \"Posting Date\",\n  COUNT(DISTINCT \"ARUniqueKey\")\nFROM\n  (\n    SELECT\n      EVENT_NAME AS 'Create Accounts Receivable',\n      DATE_TRUNC('month', \"PostingDate\") AS \"Posting Date\",\n      \"ARUniqueKey\"\n    FROM\n      FLATTEN(\"defaultview-222\")\n    WHERE\n      EVENT_NAME IN ('Create Accounts Receivable'  )\n  ) AS SUB1\nORDER BY\n  1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  \"Posting Date\",\n  COUNT(DISTINCT \"ARUniqueKey\")\nFROM\n  (\n    SELECT\n      EVENT_NAME AS 'Create Accounts Receivable',\n      DATE_TRUNC('month', \"PostingDate\") AS \"Posting Date\",\n      \"ARUniqueKey\"\n    FROM\n      FLATTEN(\"defaultview-222\")\n    WHERE\n      EVENT_NAME IN ('Create Accounts Receivable'  )\n  ) AS SUB1\nORDER BY\n  1 ASC"
    },
    {
        "filename": "ae803079ca",
        "split": "test",
        "name": "Sources of Change (Table) - # Events",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\", \"Changed Table\"\nFROM FLATTEN((SELECT \"case_id\", \"event_name\", \"end_time\", \"Change New Value\", \"Change Old Value\", \"Change Type\", \"Changed Field\", \"Changed Object Id\", \"Changed Table\", \"Event Created By User Id\", \"Event Created By User Type\"\nFROM \"defaultview-124\") AS sub)\nWHERE \"Changed Table\" IS NOT NULL\norder by 1 desc\nLIMIT 500",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases and the corresponding changed table from the 'defaultview-124' table. Filter out any rows where the 'Changed Table' column is null. Sort the results in descending order by the count. Limit the output to 500 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) as \"# Cases\", \n\"Changed Table\" as \"Changed Tables\"\nFROM CHANGES OF TABLE defaultview-124\nWHERE \"Changed Table\" IS NOT NULL\nORDER BY 1 DESC\nLIMIT 500\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) as \"# Cases\", \n\"Changed Table\" as \"Changed Tables\"\nFROM CHANGES OF TABLE defaultview-124\nWHERE \"Changed Table\" IS NOT NULL\nORDER BY 1 DESC\nLIMIT 500\n"
    },
    {
        "filename": "812a094000",
        "split": "test",
        "name": "# PO confirmed",
        "query": "SELECT count(case_id) FILTER (WHERE event_name MATCHES ('Confirmed')) FROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-183' table where the event_name column matches the value 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT (CASE_ID)\nFROM\n  \"defaultview-183\"\nWHERE\n  EVENT_NAME = 'Confirmed'\n  AS \"case count\"\n  FILTER (\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT (CASE_ID)\nFROM\n  \"defaultview-183\"\nWHERE\n  EVENT_NAME = 'Confirmed'\n  AS \"case count\"\n  FILTER (\n"
    },
    {
        "filename": "427922cb53",
        "split": "test",
        "name": "Number of PRs",
        "query": "SELECT count(DISTINCT \"Last PR Id\") FROM \"defaultview-431\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of distinct values in the column 'Last PR Id' from the table 'defaultview-431'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (DISTINCT \"Last PR Id\")\nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (DISTINCT \"Last PR Id\")\nFROM \"defaultview-431\""
    },
    {
        "filename": "ba61aabb1a",
        "split": "test",
        "name": "Event: Update Payment Term (PO)",
        "query": "SELECT\n    count(event_name) / 1000\nFROM\n    FLATTEN(\"defaultview-225\")\nWHERE\n    event_name IN ('Update PO Payment Terms')",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of events with the event name 'Update PO Payment Terms' in the 'defaultview-225' table and divide the result by 1000.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(event_name) / 1000\nFROM\n  FLATTEN(\"defaultview-225\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(event_name) / 1000\nFROM\n  FLATTEN(\"defaultview-225\")"
    },
    {
        "filename": "f17c42daff",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'Inv. Converted USD Amount' column from the 'defaultview-225' table, filtering only the rows where the 'Last Inv. Item Clearing Date' column is NULL.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM (\"Inv. Converted USD Amount\") \nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Clearing Date\" IS NULL\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM (\"Inv. Converted USD Amount\") \nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Clearing Date\" IS NULL\n"
    },
    {
        "filename": "54c0f08366",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Production Scheduler Profile",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of process orders for each production scheduler profile in the 'defaultview-183' table. Sort the results in descending order of the count.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) as \"# Process Orders\",\n\"Production Scheduling Profile (Cusch)\"    \nFROM \"defaultview-183\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) as \"# Process Orders\",\n\"Production Scheduling Profile (Cusch)\"    \nFROM \"defaultview-183\"\nORDER BY 1 DESC"
    },
    {
        "filename": "9a9d898912",
        "split": "test",
        "name": "Invoice Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"Last Invoice Reconciliation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the distinct values of the column 'Last Invoice Id' from the table 'defaultview-431' where the value of the column 'Last Invoice Reconciliation Status' is 'Rejected' and the value of the column 'PO Item Line Type' is 'Catalog'. Divide this count by the total count of distinct values of the column 'Last Invoice Id' from the table 'defaultview-431' and multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(DISTINCT \"Last Invoice Id\")\nFILTER(\n\tWHERE \"Last Invoice Reconciliation Status\" = 'Rejected'\n    AND \"PO Item Line Type\" = 'Catalog'\n\t)\n/\nCOUNT(DISTINCT \"Last Invoice Id\")\n* 100\nFROM \"defaultview-431\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(DISTINCT \"Last Invoice Id\")\nFILTER(\n\tWHERE \"Last Invoice Reconciliation Status\" = 'Rejected'\n    AND \"PO Item Line Type\" = 'Catalog'\n\t)\n/\nCOUNT(DISTINCT \"Last Invoice Id\")\n* 100\nFROM \"defaultview-431\"\n                "
    },
    {
        "filename": "5f9ce977a7",
        "split": "test",
        "name": "Automation Rate Deletion Flag",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Deletion Flag'\n\n\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of events with the event name 'Deletion Flag' in the 'defaultview-183' table that were not created by users of type 'Dialog'. To do this, count the number of events with the event name 'Deletion Flag' and the user type not equal to 'Dialog', and divide it by the total count of events with the event name 'Deletion Flag'. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(event_name) FILTER (\n\tWHERE (SELECT COUNT(UserType) FILTER (\n    \tWHERE NOT UserType IN ('Dialog'))) > 0)\n/ COUNT(event_name) FILTER (\n\tWHERE event_name = 'Deletion Flag')\n* 100\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(event_name) FILTER (\n\tWHERE (SELECT COUNT(UserType) FILTER (\n    \tWHERE NOT UserType IN ('Dialog'))) > 0)\n/ COUNT(event_name) FILTER (\n\tWHERE event_name = 'Deletion Flag')\n* 100\nFROM \"defaultview-183\""
    },
    {
        "filename": "9676e5663d",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Creation to PO Release",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last 'Release PO' event and the first 'Create PO Item' event in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG(\n    \t(SELECT LAST(end_time) FILTER (\n        \t\tWHERE event_name IN ('Release PO')))\n    \t-\n    \t(SELECT FIRST(end_time) FILTER (\n        \t\tWHERE event_name IN ('Create PO Item')))\n    )\n    FILTER (WHERE\n    \t(event_name_matches\n        \t('Create PO Item~(Create PO Account Assignment~(Shopping Cart(?#~Process~(Delete~(Create~(Send~(PO~Item~to~Supplier')))))')\n\t\tOR\n        event_name_matches\n        \t('Create PO Item~(Create~PO~Delivery~Schedule)'))\n    )\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG(\n    \t(SELECT LAST(end_time) FILTER (\n        \t\tWHERE event_name IN ('Release PO')))\n    \t-\n    \t(SELECT FIRST(end_time) FILTER (\n        \t\tWHERE event_name IN ('Create PO Item')))\n    )\n    FILTER (WHERE\n    \t(event_name_matches\n        \t('Create PO Item~(Create PO Account Assignment~(Shopping Cart(?#~Process~(Delete~(Create~(Send~(PO~Item~to~Supplier')))))')\n\t\tOR\n        event_name_matches\n        \t('Create PO Item~(Create~PO~Delivery~Schedule)'))\n    )\nFROM \"defaultview-124\""
    },
    {
        "filename": "dfc90845e4",
        "split": "test",
        "name": "Average Invoice Clearing Time",
        "query": "SELECT\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Pay Invoice')\n        )\n    ) - (\n      SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Receive Invoice')\n        )\n    )\n  ) AS PaymentTime\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average payment time by subtracting the first end time of the 'Receive Invoice' event from the last end time of the 'Pay Invoice' event in the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Pay Invoice')\n- (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive Invoice'))\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Pay Invoice')\n- (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive Invoice'))\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "bfb506743e",
        "split": "test",
        "name": "% of ODO Items w/o WTs",
        "query": "\nSELECT\nCOUNT(\nCASE WHEN event_name MATCHES('Create Warehouse Task') THEN null\nELSE case_id\nEND)\n/\nCOUNT(case_id)\n*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs that do not have the event name 'Create Warehouse Task' in the 'defaultview-545' table. First, count the number of case IDs where the event name does not match 'Create Warehouse Task' and store it in a variable. Then, count the total number of case IDs and divide it by the previous count. Finally, multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE NOT EXISTS (\n\tSELECT 1 FROM \"defaultview-545\" \n    WHERE event_name = 'Create Warehouse Task' ))\n/\nCOUNT(case_id)\n* 100\nFROM \"defaultview-545\" \n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (WHERE NOT EXISTS (\n\tSELECT 1 FROM \"defaultview-545\" \n    WHERE event_name = 'Create Warehouse Task' ))\n/\nCOUNT(case_id)\n* 100\nFROM \"defaultview-545\" \n                "
    },
    {
        "filename": "bdf1b3383d",
        "split": "test",
        "name": "SOL-1742 Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs in the 'defaultview-59' table where the occurrence of event names is greater than 1. To do this, count the number of case IDs where the occurrence of event names is greater than 1 and divide it by the total count of case IDs in the table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n    \tFROM UNNEST (event_name_occurrence)\n    \t) > 1\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n    \tFROM UNNEST (event_name_occurrence)\n    \t) > 1\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                "
    },
    {
        "filename": "547ec2c903",
        "split": "test",
        "name": "No. of Mat. Invoices (Create to Clear Invoice Time > 18 Days) by Inv. Payment Term",
        "query": "SELECT \nCOUNT (CASE_ID) AS \"No. of Cases\", \nSUM(\"Last FI Invoice Item Gross Amount Local Curr.\") AS \"Total Inv. Amount\",\n\"Last FI Invoice Item Terms of Payment Key\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') > DURATION '18DAYS'\nGROUP BY 3\nORDER BY 1 DESC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases and calculate the total invoice amount for each unique value in the 'Last FI Invoice Item Terms of Payment Key' column from the 'defaultview-124' table. Only consider cases where the time difference between the latest 'Clear Invoice' event and the earliest 'Create FI Invoice' event is greater than 18 days. Sort the results in descending order based on the number of cases.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (CASE_ID) AS \"No. of Cases\",\n  SUM(\"Last FI Invoice Item Net Due Amount Currency\") AS \"Total Invoice Amount\",\n  \"Last FI Invoice Item Terms of Payment Key\" AS \"Terms of Payment Key\"\nFROM\n  \"defaultview-124\"\nWHERE\n  (\n    SELECT\n      LAST (END_TIME) - FIRST (END_TIME)\n    WHERE\n      EVENT_NAME = 'Create FI Invoice'\n  ) > DURATION '18DAYS'\nORDER BY\n  1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (CASE_ID) AS \"No. of Cases\",\n  SUM(\"Last FI Invoice Item Net Due Amount Currency\") AS \"Total Invoice Amount\",\n  \"Last FI Invoice Item Terms of Payment Key\" AS \"Terms of Payment Key\"\nFROM\n  \"defaultview-124\"\nWHERE\n  (\n    SELECT\n      LAST (END_TIME) - FIRST (END_TIME)\n    WHERE\n      EVENT_NAME = 'Create FI Invoice'\n  ) > DURATION '18DAYS'\nORDER BY\n  1 DESC"
    },
    {
        "filename": "82093ccee6",
        "split": "test",
        "name": "_Number of  timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the column 'TSR_Count' from the table 'defaultview-197'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\"TSR_Count\")\nFROM\n  \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\"TSR_Count\")\nFROM\n  \"defaultview-197\"\n                "
    },
    {
        "filename": "2dd9d9b679",
        "split": "test",
        "name": "Number of goods receipts",
        "query": "SELECT SUM((\n\tSELECT COUNT(event_name)\n\tFILTER(WHERE event_name LIKE 'GR%')))\nFROM \"defaultview-183\"\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the count of event_name values from the 'defaultview-183' table, where the event_name starts with 'GR'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"Event_count\") FILTER(\n\tWHERE event_name MATCHES (ILIKE 'GR%')\n)\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"Event_count\") FILTER(\n\tWHERE event_name MATCHES (ILIKE 'GR%')\n)\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "852ec656c8",
        "split": "test",
        "name": "Number of events",
        "query": "SELECT COUNT(event_name) FROM \"defaultview-124\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of rows in the 'event_name' column of the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCount(\"event_name\")\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCount(\"event_name\")\nFROM \"defaultview-124\""
    },
    {
        "filename": "496950a757",
        "split": "test",
        "name": "Average Payment Time Over Time and Company Codes",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\",\n    AR_CompanyCode\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The query retrieves data from the 'defaultview-222' table. It selects the 'end_time' column and truncates the date to the month level, which is labeled as 'Clearing Date'. It also calculates the average time difference between the 'ClearingDate' and 'CreationDate' columns for events with names starting with 'Clear'. This average time is labeled as 'AVG Clearing Time'. The query also includes the 'AR_CompanyCode' column. The results are filtered to include only events with names starting with 'Clear' and are sorted in ascending order based on the 'Clearing Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  date_trunc('month', \"ClearingDate\") AS \"Clearing Date\",\n  AVG (\"ClearingDate\"  - \"CreationDate\" ) FILTER (\n    WHERE EVENT_NAME ILIKE 'Clear%')  -- as avg_time_till_Clearing\n\t\tAS \"AVG Clearing Time\",\n  \"AR_CompanyCode\"\nFROM\n  FLATTEN(\"defaultview-222\")\nWHERE\n  EVENT_NAME ILIKE('Clear%')\nORDER BY\n  1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  date_trunc('month', \"ClearingDate\") AS \"Clearing Date\",\n  AVG (\"ClearingDate\"  - \"CreationDate\" ) FILTER (\n    WHERE EVENT_NAME ILIKE 'Clear%')  -- as avg_time_till_Clearing\n\t\tAS \"AVG Clearing Time\",\n  \"AR_CompanyCode\"\nFROM\n  FLATTEN(\"defaultview-222\")\nWHERE\n  EVENT_NAME ILIKE('Clear%')\nORDER BY\n  1 ASC"
    },
    {
        "filename": "c8419a5887",
        "split": "test",
        "name": "Number of accounts receivables documents paid late",
        "query": "\nSELECT\nSUM(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'AR_PaidLateCount' column from the 'defaultview-222' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"AR_PaidLateCount\") FROM \"defaultview-222\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"AR_PaidLateCount\") FROM \"defaultview-222\""
    },
    {
        "filename": "1049f58d89",
        "split": "test",
        "name": "Manual Change Rate by SD Customer Country ",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocCustomerCountry\" AS \"SD Customer Country\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "The query retrieves the number of distinct case IDs from the 'defaultview-383' table and assigns it to the alias '# of SDs'. It also calculates the change rate by dividing the count of distinct case IDs where the 'EventCreatedByUserType' is 'Dialog' and 'ChangeType' is 'Update' by the total count of distinct case IDs, and then multiplying it by 100. The result is assigned to the alias 'Change rate'. Additionally, it selects the 'SalesDocCustomerCountry' column from the table and assigns it to the alias 'SD Customer Country'. The results are ordered in descending order based on the first column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT (DISTINCT \"SalesDocProcessSalesDocument\") AS \"# of SDs\", \n  COUNT (DISTINCT \"SalesDocProcessSalesDocument\") FILTER (WHERE EventCreatedByUserType = 'Dialog' AND \"ChangeType\" = 'Update') / COUNT (DISTINCT \"SalesDocProcessSalesDocument\") * 100 AS \"Change rate\",  \n  \"SalesDocCustomerCountry\" AS \"SD Customer Country\"\nFROM \"defaultview-383\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT (DISTINCT \"SalesDocProcessSalesDocument\") AS \"# of SDs\", \n  COUNT (DISTINCT \"SalesDocProcessSalesDocument\") FILTER (WHERE EventCreatedByUserType = 'Dialog' AND \"ChangeType\" = 'Update') / COUNT (DISTINCT \"SalesDocProcessSalesDocument\") * 100 AS \"Change rate\",  \n  \"SalesDocCustomerCountry\" AS \"SD Customer Country\"\nFROM \"defaultview-383\"\nORDER BY 1 DESC"
    },
    {
        "filename": "d5bcc67962",
        "split": "test",
        "name": "Overdue deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', NOW()) > \"PO Item Last Requested Delivery Date\"\n    \tAND \"PO Item Delivery Completed\" IS NULL\n      ) \nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-57' table where the 'PO Item Last Requested Delivery Date' is earlier than the current day and the 'PO Item Delivery Completed' is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\"PO Item Last Requested Delivery Date\" < DATE_TRUNC('day', NOW())) AS \"No. of POs not delivered on time\"\nFROM \"defaultview-57\"\nWHERE \n\"PO Item Delivery Completed\" IS NULL\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\"PO Item Last Requested Delivery Date\" < DATE_TRUNC('day', NOW())) AS \"No. of POs not delivered on time\"\nFROM \"defaultview-57\"\nWHERE \n\"PO Item Delivery Completed\" IS NULL\n"
    },
    {
        "filename": "76aa55b92b",
        "split": "test",
        "name": "Table",
        "query": "SELECT title, case_id, \"IssueType\"  FROM \"defaultview-217\"\nWHERE title LIKE '%Support%'",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the 'title', 'case_id', and 'IssueType' columns from the 'defaultview-217' table. Filter the results to only include rows where the 'title' column contains the word 'Support'.",
        "llm_gpt-35-turbo-0613_query": "SELECT TITLE, case_id, \"IssueType\"\nFROM \"defaultview-217\" \nWhere title  Like '%Support%'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT TITLE, case_id, \"IssueType\"\nFROM \"defaultview-217\" \nWhere title  Like '%Support%'"
    },
    {
        "filename": "acf8aac40c",
        "split": "test",
        "name": "SOL-1709 Late Payment Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days')\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs where the difference between the 'Last Inv. Item Clearing Date' and 'Last Inv. Item Due Date' is greater than 1 day, out of the total number of case IDs where 'Last Inv. Item Clearing Date' is not null. The result is multiplied by 100. The query is performed on the 'defaultview-59' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT (CASE_ID) \n / \n  (SELECT COUNT (CASE_ID) \n  \tWHERE                 \n        \"Last Inv. Item Clearing Date\"  IS NOT NULL)\n  *\n 100 \nFROM \"defaultview-59\"\n--WHERE DATE_PART('days' ,\"Last Inv. Item Clearing Date\"  - \"Last Inv. Item Due Date\") > 1\n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT (CASE_ID) \n / \n  (SELECT COUNT (CASE_ID) \n  \tWHERE                 \n        \"Last Inv. Item Clearing Date\"  IS NOT NULL)\n  *\n 100 \nFROM \"defaultview-59\"\n--WHERE DATE_PART('days' ,\"Last Inv. Item Clearing Date\"  - \"Last Inv. Item Due Date\") > 1\n\n\n\n"
    },
    {
        "filename": "4688181a90",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Vendor Name",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Item Material Group Text\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases and calculate the total purchase order value for each material group. Retrieve the 'case_id' column from the 'defaultview-124' table and count the occurrences to get the number of cases. Sum the 'PO Item Net Order Value' column to calculate the total purchase order value. Also, include the 'PO Item Material Group Text' column in the result. Sort the result in descending order based on the count of cases. Limit the result to the top 50 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) AS \"No of POs\",\n\"PO Item Material Group Text\" AS \"Material Group\",\nSUM(\"PO Item Net Order Value\") AS \"PO Value\"\n\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) AS \"No of POs\",\n\"PO Item Material Group Text\" AS \"Material Group\",\nSUM(\"PO Item Net Order Value\") AS \"PO Value\"\n\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50"
    },
    {
        "filename": "baf597ad20",
        "split": "test",
        "name": "Percentage of products with at least one period (month) where demand is not fulfilled",
        "query": "SELECT\nCOUNT(\"case_id\") FILTER(\n\tWHERE(\n\t\"Consensus Demand Delivered\" <> \"Consensus Demand\"\n\t)\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n    AND \"Consensus Demand\" > 0 \n)\n/\nCOUNT(\"case_id\") FILTER(\n\tWHERE \"Consensus Demand\" > 0\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the 'Consensus Demand Delivered' is not equal to 'Consensus Demand' in the 'defaultview-404' table. The calculation is based on the count of cases where 'Consensus Demand' is greater than 0 and the 'MONTH' is greater than or equal to the current month and within the last 320 days, divided by the total count of cases where 'Consensus Demand' is greater than 0 and the 'MONTH' is greater than or equal to the current month and within the last 320 days, multiplied by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM (CASE WHEN \"Consensus Demand Delivered\" IS NOT NULL THEN 1 else 0 END)\n/   SUM (COUNT(case_id)) FILTER (\n\tWHERE (SELECT BOOL_OR(\"Consensus Demand\" > 0) \n\t\t FROM FLATTEN(\"defaultview-404\")\n         )\n\t\t AND DATE_TRUNC('month', NOW()) - \"MONTH\" <= DURATION '320days')\n*\n100\nFROM FLATTEN (\"defaultview-404\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM (CASE WHEN \"Consensus Demand Delivered\" IS NOT NULL THEN 1 else 0 END)\n/   SUM (COUNT(case_id)) FILTER (\n\tWHERE (SELECT BOOL_OR(\"Consensus Demand\" > 0) \n\t\t FROM FLATTEN(\"defaultview-404\")\n         )\n\t\t AND DATE_TRUNC('month', NOW()) - \"MONTH\" <= DURATION '320days')\n*\n100\nFROM FLATTEN (\"defaultview-404\")"
    },
    {
        "filename": "b4ef96ed37",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"\t",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average duration between the 'Basic Finish Date' and 'Basic Start Date' columns in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG(\"Basic Finish Date\" - \"Basic Start Date\")\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG(\"Basic Finish Date\" - \"Basic Start Date\")\nFROM \"defaultview-183\""
    },
    {
        "filename": "eb31f2d40f",
        "split": "test",
        "name": "_Average project start to end time",
        "query": "\nSELECT\nAVG(Project_StartToEndTime)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average value of the column 'Project_StartToEndTime' in the table 'defaultview-197'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\"Project_StartToEndTime\")\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\"Project_StartToEndTime\")\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "511c40d335",
        "split": "test",
        "name": "Last PO Vendor Name (too much null...not worthy)",
        "query": "SELECT \"Last PO Vendor Name\" AS \"Last PO Vendor Name\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the last purchase order vendor name and the number of invoices associated with each vendor from the 'defaultview-225' table. Group the results by the vendor name and order them in descending order based on the number of invoices.",
        "llm_gpt-35-turbo-0613_query": "SELECT LAST(\"Vendor Name Last PO Text\"), \nCOUNT(\"Invoice Item Text\" ) AS \"Number of Vendor Invoices\"\nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT LAST(\"Vendor Name Last PO Text\"), \nCOUNT(\"Invoice Item Text\" ) AS \"Number of Vendor Invoices\"\nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC"
    },
    {
        "filename": "11f85b95e3",
        "split": "test",
        "name": "Case Count & Cycle Time (PR Approval to Create PO) by PO Business Unit",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create PO Item')) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Approve PR item'))) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\", \n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 100",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases in the 'defaultview-545' table. Calculate the average cycle time from the last 'Create PO Item' event to the first 'Approve PR item' event. Retrieve the 'PO Business Unit' column. Sort the results in descending order and limit the output to 100 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id) AS \"No. of Cases\",\n  AVG ((SELECT LAST (END_TIME) \n       WHERE EVENT_NAME = 'Create PO Item') \n    - (SELECT FIRST (END_TIME)\n       WHERE EVENT_NAME = 'Approve PR item')) AS \"Order Cycle Time\",\n  \"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 100",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id) AS \"No. of Cases\",\n  AVG ((SELECT LAST (END_TIME) \n       WHERE EVENT_NAME = 'Create PO Item') \n    - (SELECT FIRST (END_TIME)\n       WHERE EVENT_NAME = 'Approve PR item')) AS \"Order Cycle Time\",\n  \"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 100"
    },
    {
        "filename": "1387d29cf3",
        "split": "test",
        "name": "\u00d8 WIP time Painting -> Assembly",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0020'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0010'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the first occurrence of an event with the name starting with 'Start' and the first occurrence of an event with the name starting with 'Complete' in the table 'defaultview-270', where the 'Routing Step' column has a value of '0020' for the 'Start' event and a value of '0010' for the 'Complete' event.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time) \n    WHERE \"Event Name\" LIKE 'Start%' AND \"Routing Step\" = '0020')\n    -\n    (SELECT FIRST(end_time) \n    WHERE \"Event Name\" LIKE 'Complete%' AND \"Routing Step\" = '0010')\n\t)\nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time) \n    WHERE \"Event Name\" LIKE 'Start%' AND \"Routing Step\" = '0020')\n    -\n    (SELECT FIRST(end_time) \n    WHERE \"Event Name\" LIKE 'Complete%' AND \"Routing Step\" = '0010')\n\t)\nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "ebc0a9dc87",
        "split": "test",
        "name": "Automation Rate Goods Issue",
        "query": "SELECT SUM(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE (\"Event Created By User Type\" IN ('System','Batch Job','Service') \n        AND event_name IN ('GI for order'))\n\t)\n   ))\n/ SUM((SELECT COUNT(event_name)\n\tFILTER (\n\t\tWHERE (event_name IN ('GI for order')))))\n* 100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of 'GI for order' events created by users of type 'System', 'Batch Job', or 'Service' out of all 'GI for order' events. The query is performed on the 'defaultview-183' table. The query first counts the number of 'GI for order' events created by users of type 'System', 'Batch Job', or 'Service', and then divides it by the total number of 'GI for order' events. The result is multiplied by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(\nSUM(\"Event Count\")\nFILTER (WHERE \"Responsible User Type\" IN ('System','Batch Job','Service'))\n)\n/\n(SUM(\"Event Count\") FILTER (WHERE \"Activity\" = 'GI for order' ))\n* 100\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(\nSUM(\"Event Count\")\nFILTER (WHERE \"Responsible User Type\" IN ('System','Batch Job','Service'))\n)\n/\n(SUM(\"Event Count\") FILTER (WHERE \"Activity\" = 'GI for order' ))\n* 100\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "4ac3ebb383",
        "split": "test",
        "name": "Invoices with immediate PT",
        "query": "SELECT COUNT(case_id) FILTER(\n\tWHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0) \nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of rows in the 'defaultview-225' table where the column 'case_id' is not null and the column 'Last Inv. Item Cash Discount Days 1' is either null or equal to 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tCOUNT(case_id)\nFROM\n\"defaultview-225\"\nWHERE\n\tcase_id IS NOT NULL\n    AND (\"Last Inv. Item Cash Discount Days 1\" IS NULL\n \t\t  OR \"Last Inv. Item Cash Discount Days 1\" = 0)",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tCOUNT(case_id)\nFROM\n\"defaultview-225\"\nWHERE\n\tcase_id IS NOT NULL\n    AND (\"Last Inv. Item Cash Discount Days 1\" IS NULL\n \t\t  OR \"Last Inv. Item Cash Discount Days 1\" = 0)"
    },
    {
        "filename": "67ee27564b",
        "split": "test",
        "name": "Number of Quotation Changes over time",
        "query": "SELECT\n  DATE_TRUNC('month', end_time) AS \"Change Date\",\n  COUNT (DISTINCT \"UniqueEventId\") AS \"# Changes\"\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  EVENT_NAME LIKE '%Quotation%'\n  AND ChangeType = 'Update'\nORDER BY\n  1 ASC NULLS FIRST FILL TIMESERIES('Month'),\n  NULL",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the count of distinct 'UniqueEventId' values for events with 'EVENT_NAME' containing the word 'Quotation' and 'ChangeType' equal to 'Update'. Group the results by the month of the 'end_time' column. Sort the results in ascending order of the 'Change Date' column. If there are any missing months, fill them with NULL values.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nDATE_TRUNC('month', (SELECT LAST (end_time) FILTER ( WHERE event_name LIKE 'Quotation' AND ChangeType = 'Update')) ) AS \"Change Date\",\nCOUNT(DISTINCT \"UniqueEventId\") AS \"# Changes\"\nFROM \"SAP_NEW\".\"EVENT\"\nWHERE event_name LIKE 'Quotation' AND ChangeType = 'Update'\nGROUP BY 1\nORDER BY 1 ASC NULLS FIRST FILL TIMESERIES('MONTH'), NULL\n-- FILL TIMESERIES('month'), NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nDATE_TRUNC('month', (SELECT LAST (end_time) FILTER ( WHERE event_name LIKE 'Quotation' AND ChangeType = 'Update')) ) AS \"Change Date\",\nCOUNT(DISTINCT \"UniqueEventId\") AS \"# Changes\"\nFROM \"SAP_NEW\".\"EVENT\"\nWHERE event_name LIKE 'Quotation' AND ChangeType = 'Update'\nGROUP BY 1\nORDER BY 1 ASC NULLS FIRST FILL TIMESERIES('MONTH'), NULL\n-- FILL TIMESERIES('month'), NULL"
    },
    {
        "filename": "835c24ddd6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case_id values in the 'defaultview-225' table where the column 'Last Inv. Item Cash Discount Days 1' is either NULL or 0. The result is obtained by dividing the count of case_id values meeting this condition by the total count of case_id values in the table, and then multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\ncount(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\" = 0\n    OR \"Last Inv. Item Cash Discount Days 1\" IS NULL)\n\t)\n/ count(case_id)\n* 100\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\ncount(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\" = 0\n    OR \"Last Inv. Item Cash Discount Days 1\" IS NULL)\n\t)\n/ count(case_id)\n* 100\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "900d4e70c5",
        "split": "test",
        "name": "Avg. Cycle Time of Cases with Late Payment",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME)))\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last 'END_TIME' value and the first 'END_TIME' value in the 'defaultview-124' table. Only consider rows where the 'Last FI Invoice Item Due Date' is less than the 'Last FI Invoice Item Clearing Date'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG(\n    (SELECT LAST(\"END_TIME\")) \n\t- (SELECT FIRST(\"END_TIME\"))\n  )\nFROM\n  \"defaultview-124\"\nWHERE\n  LAST(\"Last FI Invoice Item Due Date\") < LAST(\"Last FI Invoice Item Clearing Date\")\n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG(\n    (SELECT LAST(\"END_TIME\")) \n\t- (SELECT FIRST(\"END_TIME\"))\n  )\nFROM\n  \"defaultview-124\"\nWHERE\n  LAST(\"Last FI Invoice Item Due Date\") < LAST(\"Last FI Invoice Item Clearing Date\")\n\n\n\n"
    },
    {
        "filename": "5ac5c83f16",
        "split": "test",
        "name": "_Number of timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the column 'TSR_Count' from the table 'defaultview-197'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\"TSR_Count\")\nFROM\n  \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\"TSR_Count\")\nFROM\n  \"defaultview-197\"\n                "
    },
    {
        "filename": "202dcc39f3",
        "split": "test",
        "name": "AVG Payment Time",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\"\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average clearing time for events with names starting with 'Clear'. The clearing date is obtained by truncating the end time to the month. The table used in the query is 'defaultview-222'. The columns used in the query are 'end_time', 'ClearingDate', 'CreationDate', and 'EVENT_NAME'. The query filters the events with names starting with 'Clear' and orders the result by the clearing date in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG\n  (\n    ROUND\n    (\n      (\n        \t(\n            \tSELECT\n              \t\tEND_TIME\n              \tFROM\n                \tUNNEST(event) AS \"unnested_attribute\"\n           \t\t WHERE\n              \t\tEND_TIME IS NOT NULL\n         \t\tORDER BY\n            \t\tEND_TIME DESC\n                LIMIT 1\n        \t    )\n          \t- (\n            \tSELECT\n              \t\tEND_TIME\n             \t   FROM\n                \tUNNEST(event) AS \"unnested_attribute\"\n              \t \tWHERE\n                \tEND_TIME IS NOT NULL\n                \tORDER BY\n                \tEND_TIME\n             \t    LIMIT 1\n            \t)\n       \t    ) / (1000 * 60 * 60)\n    \t)\n\t)\n  \nAS AvgClearingTime, DATE_TRUNC ('month', clearingDate) AS ClearingDate\nFROM \"defaultview-222\"\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 2 ASC NULLS FIRST\nFILL timeseries('MONTH')\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG\n  (\n    ROUND\n    (\n      (\n        \t(\n            \tSELECT\n              \t\tEND_TIME\n              \tFROM\n                \tUNNEST(event) AS \"unnested_attribute\"\n           \t\t WHERE\n              \t\tEND_TIME IS NOT NULL\n         \t\tORDER BY\n            \t\tEND_TIME DESC\n                LIMIT 1\n        \t    )\n          \t- (\n            \tSELECT\n              \t\tEND_TIME\n             \t   FROM\n                \tUNNEST(event) AS \"unnested_attribute\"\n              \t \tWHERE\n                \tEND_TIME IS NOT NULL\n                \tORDER BY\n                \tEND_TIME\n             \t    LIMIT 1\n            \t)\n       \t    ) / (1000 * 60 * 60)\n    \t)\n\t)\n  \nAS AvgClearingTime, DATE_TRUNC ('month', clearingDate) AS ClearingDate\nFROM \"defaultview-222\"\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 2 ASC NULLS FIRST\nFILL timeseries('MONTH')\n\n"
    },
    {
        "filename": "4229e2c517",
        "split": "test",
        "name": "Table",
        "query": "SELECT count(case_id), event_name, \"Change Old Value\", \"Change New Value\"  \nFROM FLATTEN(\"defaultview-57\")\nWHERE Event_name ILIKE '%Update%'\nORDER BY 1 desc\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id occurrences, along with the event_name, \"Change Old Value\", and \"Change New Value\" columns, from the FLATTEN table named \"defaultview-57\". Filter the results to only include rows where the event_name column contains the word 'Update' (case-insensitive). Sort the results in descending order based on the first column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) AS \"No. of Changes\",\nevent_name AS \"Change Type\",\n\"Change Old Value\" AS \"Old Value\",\n\"Change New Value\" AS \"New Value\"\nFROM FLATTEN(\"defaultview-57\")\nWHERE event_name ILIKE '%Update%'\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) AS \"No. of Changes\",\nevent_name AS \"Change Type\",\n\"Change Old Value\" AS \"Old Value\",\n\"Change New Value\" AS \"New Value\"\nFROM FLATTEN(\"defaultview-57\")\nWHERE event_name ILIKE '%Update%'\nORDER BY 1 DESC"
    },
    {
        "filename": "0a048d6ae2",
        "split": "test",
        "name": "Avg. Cycle Time (Create to Clear Invoice)",
        "query": "SELECT\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice')) AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average cycle time between the 'Clear Invoice' and 'Create FI Invoice' events in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG ((SELECT LAST (END_TIME) FILTER (\n\tWHERE EVENT_NAME IN ('Create FI Invoice')))))\n- \n(AVG ((SELECT FIRST (END_TIME) FILTER (\n\tWHERE EVENT_NAME IN ('Clear Invoice')))))\n-- count(target_event) * avg\n-- ((select last(end_time)) \n-- filter (where event_name \n-- matches ('Create FI Invoice'))\n-- - (select first (end_time)) \n-- filter (where event_name \n-- matches ('Clearing')))\n-- \n-- BZ 09.03.2020\n-- SELECT\n-- count(target_event) * AVG ((SELECT LAST (END_TIME) FILTER (\n-- \tWHERE EVENT_NAME IN ('Create FI Invoice')))))\n--  - AVG ((SELECT FIRST (END_TIME) FILTER (\n-- \tWHERE EVENT_NAME IN ('Clear Invoice')))))\n-- FROM \"defaultview-124\" \n-- ORDER BY \"Device_information_Creation_Date\" ASC\n-- FILL TIMESERIES('monthend')\n\n-- Selecting all case where Clear Invoice occurs\n SELECT\nCOUNT(CASE WHEN (SELECT FIRST(event_name) FILTER (WHERE event_name IN ('Clear Invoice'))) IS NOT NULL THEN 1 ELSE NULL END) AS \"No of Clear Invoice\"\n,COUNT(CASE WHEN (SELECT LAST (event_name) FILTER (WHERE event_name IN ('Create FI Invoice'))) IS NOT NULL THEN 1 ELSE NULL END) AS \"No of FI Invoice Created\"\n-- Adding yet both steps have occurred \n,COUNT(CASE WHEN (SELECT FIRST(event_name) FILTER (WHERE event_name IN ('Clear Invoice'))) IS NOT NULL\n\t\t\t  AND \n                   (SELECT LAST (event_name) FILTER (WHERE event_name IN ('Create FI Invoice'))) IS NOT NULL\n\t\t\t\t  THEN 1 ELSE NULL END) AS \"No of Times Both Steps have occurred\"\n\nFROM \"defaultview-124\"\n\t                \n\n-- WHERE  (event_name LIKE ('Create FI Invoice') \n--AND (SELECT FIRST(event_name) FILTER (WHERE EVENT_NAME = 'Clear Invoice')) IS NOT NULL)\n\n--ORDER BY (\"Created on\" IS NULL) ASC, \"Created on\"\n-- FILL TIMESERIES('monthend', '2015-11-30T12:59:59Z')\n\n\n\n\n-- SELECT count(\"case_id\") Filter (WHERE event_name MATCHES (([Clear Invoice]\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t   ->> [Create FI Invoice])));\n\n-- SELECT count(\"case_id\") Filter (WHERE event_name MATCHES ([Clear Invoice]) \n-- \t\t\t\t\t\t\t\t\t\t\t\t   AND [Clear Invoice] ->> \"event_name\" = 'Clear Invoice' \n--                                                   AND \"event_name\" = 'Create FI Invoice');\n\n\n-- SELECT count(\"case_id\") Filter (WHERE event_name MATCHES ([Clear Invoice] \n--                                -> (SELECT COUNT (CASE_ID) FILTER (WHERE (EVENT_NAME = 'Clear Invoice' OR EVENT_NAME = 'Create FI Invoice'))) )) \n\n\n\n\n\n-- SELECT COUNT (CASE_ID) \n-- \t\t\t  FILTER(WHERE (SELECT FIRST(EVENT_NAME) FILTER (WHERE EVENT_NAME = 'Clear Invoice'))\n--                           AND EVENT_NAME MATCHES ('Create FI Invoice' \n--                               -> (SELECT COUNT (CASE_ID) FILTER (WHERE (EVENT_NAME = 'Clear Invoice' OR EVENT_NAME = 'Create FI Invoice')))  ->> ((SELECT COUNT (CASE_ID) FILTER (WHERE (EVENT_NAME = 'Clear Invoice' OR EVENT_NAME = 'Create FI Invoice'))) = 'Clear Invoice'))\n--                                )) \t\t\t\t\t\t\t  \n-- \t\t\t  \n\n--              FILTER( WHERE  EVENT_NAME MATCHES ( 'Create FI Invoice'\n--                                           -> CLEAR\n--                                            ))\n--              ) AS \"FI created from clear inv.\"\n\n\n\n--, COUNT (CASE_ID) FILTER(WHERE EVENT_NAME MATCHES ( (CLEAR \n--                                -> 'Create FI Invoice')) OR (CLEAR\n--                                -> 'Post PARK Document To Ledger'))) \n\n--, COUNT (CASE_ID) FILTER( WHERE EVENT_NAME MATCHES ( (CLEAR \n--                                -> 'Create FI Invoice')) OR (CLEAR\n--                                -> 'Park Document'))) \n\n-- , COUNT (CASE_ID) FILTER( WHERE EVENT_NAME MATCHES ( ([Either Clear Invoice Or Park Document]\n--                                                  -> Create FI Invoice) \n--                                                     OR (Clear Invoice\n--                                                  -> CREATE PARK document)))) AS \"Delete test\"\n                                                  \n                                                  \n--SELECT count(\"case_id\") Filter (WHERE event_name MATCHES (\n--                           'Create FI Invoice' \n--                            WITH (SELECT FIRST(event_name) FILTER (WHERE EVENT_NAME = 'Clear Invoice')) ->> event_name \n--                            )) \t\t\t\t\t\t  FROM \"defaultview-124\" ORDER by 1\n\n\n--SELECT count(\"case_id\") Filter (WHERE event_name MATCHES (\n--                           'Create FI Invoice' \n--                            WITH (event_name) ->> ((SELECT FIRST(event_name) FILTER (WHERE EVENT_NAME = 'Clear Invoice'))) \n--                            )) \t\t\t\t\t\t  FROM \"defaultview-124\" ORDER by 1\n\n-- FIlter?\n-- SELECT order1, event_name, FIRST(\"order\") as f, lag (event_name) OVER (PARTITION BY \"case_id\") as lag, FIRST(event_name)\n-- \t\t\t\t  OVER (PARTITION BY \"case_id\") as firstEvent\n-- \t\t\t\t  FROM (SELECT case_id, \n-- \t\t\t\t\t\t     (SELECT event_name FROM UNNEST (event_name) \n--                             \t\t\t\t\t\t\t as event_name) as event_name,  \n--                           ROW_NUMBER() OVER (PARTITION BY CASE_ID)\n-- \t\t\t\t\t\t     AS order1\n--                             FROM FLOW(\"defaultview-124\")) as subjoined\n--\t\t\t\t  Where event_name = (FIRST(event_name) as StartingEvent      \n\n-- SELECT event_name, (SELECT FIRST (event_name) FILTER (\n-- \tWHERE EVENT_NAME IN ('Clear Invoice')))) AS Ale FROM \"defaultview-124\" \n-- Where event_name MATCHES (event_name \n-- \t\t\t\t\t\t\tWITH (SELECT FIRST (event_name) FILTER (\n--                           MATCHES (('Create FI Invoice')))) ->> event_name)\n--SELECT EVENT_NAME, (SELECT FIRST (EVENT_NAME) FILTER (\n--\tWHERE EVENT_NAME IN ('Create FI Invoice')))\n\n--The 'Uri' Data type was introduced to avoid NULL values:\n\n-- SELECT LAST (\"User\") URI FROM FLOW(\"defaultview-124\")\n\n\n--SELECT event_name, 'Clear Invoice' as Clean_Inv, 'Create FI Invoice' as IPL, (SELECT FIRST (event_name) FILTER (WHERE EVENT_NAME IN ('Clear Invoice')))) as CC FROM \"defaultview-124\" --Test?\n--Where event_name MATCHES (event_name \n--\t\t\t\t\t\t\tWITH (SELECT FIRST (event_name) FILTER (\n--                           MATCHES (('Create FI Invoice')))) ->> event_name)",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG ((SELECT LAST (END_TIME) FILTER (\n\tWHERE EVENT_NAME IN ('Create FI Invoice')))))\n- \n(AVG ((SELECT FIRST (END_TIME) FILTER (\n\tWHERE EVENT_NAME IN ('Clear Invoice')))))\n-- count(target_event) * avg\n-- ((select last(end_time)) \n-- filter (where event_name \n-- matches ('Create FI Invoice'))\n-- - (select first (end_time)) \n-- filter (where event_name \n-- matches ('Clearing')))\n-- \n-- BZ 09.03.2020\n-- SELECT\n-- count(target_event) * AVG ((SELECT LAST (END_TIME) FILTER (\n-- \tWHERE EVENT_NAME IN ('Create FI Invoice')))))\n--  - AVG ((SELECT FIRST (END_TIME) FILTER (\n-- \tWHERE EVENT_NAME IN ('Clear Invoice')))))\n-- FROM \"defaultview-124\" \n-- ORDER BY \"Device_information_Creation_Date\" ASC\n-- FILL TIMESERIES('monthend')\n\n-- Selecting all case where Clear Invoice occurs\n SELECT\nCOUNT(CASE WHEN (SELECT FIRST(event_name) FILTER (WHERE event_name IN ('Clear Invoice'))) IS NOT NULL THEN 1 ELSE NULL END) AS \"No of Clear Invoice\"\n,COUNT(CASE WHEN (SELECT LAST (event_name) FILTER (WHERE event_name IN ('Create FI Invoice'))) IS NOT NULL THEN 1 ELSE NULL END) AS \"No of FI Invoice Created\"\n-- Adding yet both steps have occurred \n,COUNT(CASE WHEN (SELECT FIRST(event_name) FILTER (WHERE event_name IN ('Clear Invoice'))) IS NOT NULL\n\t\t\t  AND \n                   (SELECT LAST (event_name) FILTER (WHERE event_name IN ('Create FI Invoice'))) IS NOT NULL\n\t\t\t\t  THEN 1 ELSE NULL END) AS \"No of Times Both Steps have occurred\"\n\nFROM \"defaultview-124\"\n\t                \n\n-- WHERE  (event_name LIKE ('Create FI Invoice') \n--AND (SELECT FIRST(event_name) FILTER (WHERE EVENT_NAME = 'Clear Invoice')) IS NOT NULL)\n\n--ORDER BY (\"Created on\" IS NULL) ASC, \"Created on\"\n-- FILL TIMESERIES('monthend', '2015-11-30T12:59:59Z')\n\n\n\n\n-- SELECT count(\"case_id\") Filter (WHERE event_name MATCHES (([Clear Invoice]\n-- \t\t\t\t\t\t\t\t\t\t\t\t\t\t   ->> [Create FI Invoice])));\n\n-- SELECT count(\"case_id\") Filter (WHERE event_name MATCHES ([Clear Invoice]) \n-- \t\t\t\t\t\t\t\t\t\t\t\t   AND [Clear Invoice] ->> \"event_name\" = 'Clear Invoice' \n--                                                   AND \"event_name\" = 'Create FI Invoice');\n\n\n-- SELECT count(\"case_id\") Filter (WHERE event_name MATCHES ([Clear Invoice] \n--                                -> (SELECT COUNT (CASE_ID) FILTER (WHERE (EVENT_NAME = 'Clear Invoice' OR EVENT_NAME = 'Create FI Invoice'))) )) \n\n\n\n\n\n-- SELECT COUNT (CASE_ID) \n-- \t\t\t  FILTER(WHERE (SELECT FIRST(EVENT_NAME) FILTER (WHERE EVENT_NAME = 'Clear Invoice'))\n--                           AND EVENT_NAME MATCHES ('Create FI Invoice' \n--                               -> (SELECT COUNT (CASE_ID) FILTER (WHERE (EVENT_NAME = 'Clear Invoice' OR EVENT_NAME = 'Create FI Invoice')))  ->> ((SELECT COUNT (CASE_ID) FILTER (WHERE (EVENT_NAME = 'Clear Invoice' OR EVENT_NAME = 'Create FI Invoice'))) = 'Clear Invoice'))\n--                                )) \t\t\t\t\t\t\t  \n-- \t\t\t  \n\n--              FILTER( WHERE  EVENT_NAME MATCHES ( 'Create FI Invoice'\n--                                           -> CLEAR\n--                                            ))\n--              ) AS \"FI created from clear inv.\"\n\n\n\n--, COUNT (CASE_ID) FILTER(WHERE EVENT_NAME MATCHES ( (CLEAR \n--                                -> 'Create FI Invoice')) OR (CLEAR\n--                                -> 'Post PARK Document To Ledger'))) \n\n--, COUNT (CASE_ID) FILTER( WHERE EVENT_NAME MATCHES ( (CLEAR \n--                                -> 'Create FI Invoice')) OR (CLEAR\n--                                -> 'Park Document'))) \n\n-- , COUNT (CASE_ID) FILTER( WHERE EVENT_NAME MATCHES ( ([Either Clear Invoice Or Park Document]\n--                                                  -> Create FI Invoice) \n--                                                     OR (Clear Invoice\n--                                                  -> CREATE PARK document)))) AS \"Delete test\"\n                                                  \n                                                  \n--SELECT count(\"case_id\") Filter (WHERE event_name MATCHES (\n--                           'Create FI Invoice' \n--                            WITH (SELECT FIRST(event_name) FILTER (WHERE EVENT_NAME = 'Clear Invoice')) ->> event_name \n--                            )) \t\t\t\t\t\t  FROM \"defaultview-124\" ORDER by 1\n\n\n--SELECT count(\"case_id\") Filter (WHERE event_name MATCHES (\n--                           'Create FI Invoice' \n--                            WITH (event_name) ->> ((SELECT FIRST(event_name) FILTER (WHERE EVENT_NAME = 'Clear Invoice'))) \n--                            )) \t\t\t\t\t\t  FROM \"defaultview-124\" ORDER by 1\n\n-- FIlter?\n-- SELECT order1, event_name, FIRST(\"order\") as f, lag (event_name) OVER (PARTITION BY \"case_id\") as lag, FIRST(event_name)\n-- \t\t\t\t  OVER (PARTITION BY \"case_id\") as firstEvent\n-- \t\t\t\t  FROM (SELECT case_id, \n-- \t\t\t\t\t\t     (SELECT event_name FROM UNNEST (event_name) \n--                             \t\t\t\t\t\t\t as event_name) as event_name,  \n--                           ROW_NUMBER() OVER (PARTITION BY CASE_ID)\n-- \t\t\t\t\t\t     AS order1\n--                             FROM FLOW(\"defaultview-124\")) as subjoined\n--\t\t\t\t  Where event_name = (FIRST(event_name) as StartingEvent      \n\n-- SELECT event_name, (SELECT FIRST (event_name) FILTER (\n-- \tWHERE EVENT_NAME IN ('Clear Invoice')))) AS Ale FROM \"defaultview-124\" \n-- Where event_name MATCHES (event_name \n-- \t\t\t\t\t\t\tWITH (SELECT FIRST (event_name) FILTER (\n--                           MATCHES (('Create FI Invoice')))) ->> event_name)\n--SELECT EVENT_NAME, (SELECT FIRST (EVENT_NAME) FILTER (\n--\tWHERE EVENT_NAME IN ('Create FI Invoice')))\n\n--The 'Uri' Data type was introduced to avoid NULL values:\n\n-- SELECT LAST (\"User\") URI FROM FLOW(\"defaultview-124\")\n\n\n--SELECT event_name, 'Clear Invoice' as Clean_Inv, 'Create FI Invoice' as IPL, (SELECT FIRST (event_name) FILTER (WHERE EVENT_NAME IN ('Clear Invoice')))) as CC FROM \"defaultview-124\" --Test?\n--Where event_name MATCHES (event_name \n--\t\t\t\t\t\t\tWITH (SELECT FIRST (event_name) FILTER (\n--                           MATCHES (('Create FI Invoice')))) ->> event_name)"
    },
    {
        "filename": "d56a723b4e",
        "split": "test",
        "name": "_Number of completed projects",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE \"Project_StageText\" = 'Completed'\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-197' table where the 'Project_StageText' column is equal to 'Completed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \nCOUNT(case_id) FILTER(\n\tWHERE \"Project_StageText\" IN ('Completed') \n)\nFROM \"defaultview-197\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \nCOUNT(case_id) FILTER(\n\tWHERE \"Project_StageText\" IN ('Completed') \n)\nFROM \"defaultview-197\" "
    },
    {
        "filename": "1052a139b9",
        "split": "test",
        "name": "_Percentage of projects created after start date",
        "query": "\nSELECT\n(\nSUM(\"Project_CreationAfterStartFlag\" )\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of projects that were created after their start date. To do this, divide the sum of the 'Project_CreationAfterStartFlag' column by the count of 'case_id' column in the 'defaultview-197' table, and then multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(SUM(\"Project_CreationAfterStartFlag\"))/\n(COUNT(\"case_id\")) * 100\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(SUM(\"Project_CreationAfterStartFlag\"))/\n(COUNT(\"case_id\")) * 100\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "b20189ef80",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\n  /\n  COUNT(case_id) FILTER (\n      WHERE \"PO Item Delivery Completed\" = 'Yes'\n      )\n  * 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of completed purchase order items where the last goods receipt creation date is later than the last requested delivery date. The query is performed on the 'defaultview-57' table. The 'case_id' column is used to count the number of cases. The numerator of the calculation is the count of case_id values where the last goods receipt creation date is later than the last requested delivery date and the 'PO Item Delivery Completed' column is set to 'Yes'. The denominator is the count of case_id values where the 'PO Item Delivery Completed' column is set to 'Yes'. The result is multiplied by 100 to obtain the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT(case_id) FILTER (\n      WHERE (SELECT LAST (\"Goods Receipt Creation Date\")) > (SELECT LAST (\"Requested Delivery Date\")) \n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\n  / COUNT(case_id) FILTER (WHERE \"PO Item Delivery Completed\" = 'Yes')\n * 100\nFROM \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT(case_id) FILTER (\n      WHERE (SELECT LAST (\"Goods Receipt Creation Date\")) > (SELECT LAST (\"Requested Delivery Date\")) \n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\n  / COUNT(case_id) FILTER (WHERE \"PO Item Delivery Completed\" = 'Yes')\n * 100\nFROM \"defaultview-57\"\n                "
    },
    {
        "filename": "c0ee4f416c",
        "split": "test",
        "name": "PTP_DB_On-Time Delivery Rate",
        "query": "\nSELECT\n(1 - \n\tCOUNT(case_id) FILTER (\n\t\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n\t\t\tAND \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n\t/\n\tCOUNT(case_id) FILTER (\n\t\tWHERE \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n)\n* 100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of completed purchase order items that were delivered after the requested delivery date. The query is performed on the 'defaultview-124' table. The calculation is done by dividing the count of case_id where the 'Last GR Creation Date' is greater than the 'PO Item Last Requested Delivery Date' and 'PO Item Delivery Completed' is 'Yes', by the count of case_id where 'PO Item Delivery Completed' is 'Yes'. The result is then subtracted from 1 and multiplied by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT \nCOUNT(case_id) FILTER (\n\tWHERE ((SELECT LAST(\"Last GR Creation Date\"))) \n\tGREATER THAN \n\t\t((SELECT FIRST(\"PO Item Last Requested Delivery Date\")\n\t\tIF \"PO Item Last Requested Delivery Date\" IS NOT NULL \n\t\tELSE \"PO Item Last Delivery Date.\"))\n    AND \"PO Item Delivery Completed\" = 'Yes')\n)\n/\nCOUNT(case_id) FILTER (\n\tWHERE \"PO Item Delivery Completed\" = 'Yes'\n)\ntimes 100\n-100\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT \nCOUNT(case_id) FILTER (\n\tWHERE ((SELECT LAST(\"Last GR Creation Date\"))) \n\tGREATER THAN \n\t\t((SELECT FIRST(\"PO Item Last Requested Delivery Date\")\n\t\tIF \"PO Item Last Requested Delivery Date\" IS NOT NULL \n\t\tELSE \"PO Item Last Delivery Date.\"))\n    AND \"PO Item Delivery Completed\" = 'Yes')\n)\n/\nCOUNT(case_id) FILTER (\n\tWHERE \"PO Item Delivery Completed\" = 'Yes'\n)\ntimes 100\n-100\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "8f6fbc2031",
        "split": "test",
        "name": "Cancellation rate of purchase orders",
        "query": "SELECT COUNT(case_id) FILTER (\n    WHERE (SELECT FIRST(event_name) FILTER (\n            WHERE event_name IN ('Delete PO Item'))) IS NOT NULL\n    )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases in the 'defaultview-57' table where the event_name is 'Delete PO Item'. First, count the number of case_id values where the event_name is 'Delete PO Item'. Then, divide this count by the total number of case_id values in the table. Finally, multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  (\n    COUNT (CASE_ID) FILTER (\n      WHERE\n        event_name = 'Delete PO Item'\n    )\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  (\n    COUNT (CASE_ID) FILTER (\n      WHERE\n        event_name = 'Delete PO Item'\n    )\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-57\"\n                "
    },
    {
        "filename": "d2566dc5b5",
        "split": "test",
        "name": "Top 5 Variants ranked by 90th Percentile Cycle Time",
        "query": "SELECT event_name AS \"Variant\", \n\t  PERCENTILE_DISC(0.9) WITHIN GROUP(ORDER BY (SELECT LAST(end_time) - FIRST(end_time))) AS \"90th Percentile Cycle Time per Variant\"\n  FROM \"defaultview-9\"\n GROUP BY 1\n ORDER BY 2 DESC\n LIMIT 5",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the top 5 variants and their corresponding 90th percentile cycle time from the 'defaultview-9' table. The 'Variant' column represents the event name. The '90th Percentile Cycle Time per Variant' column is calculated using the PERCENTILE_DISC function, which orders the cycle times in ascending order and selects the value at the 90th percentile. The cycle times are calculated by subtracting the first end time from the last end time for each variant. The results are grouped by the 'Variant' column and sorted in descending order based on the '90th Percentile Cycle Time per Variant' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  \"VARIANT\", \"90th Percentile Cycle Time per Variant\"\nFROM\n  (\n    SELECT\n      \"EVENT_NAME\" AS \"Variant\",\n      PERCENTILE_DISC(0.9) WITHIN GROUP (\n        ORDER BY\n          (\n            SELECT\n              LAST (\"END_TIME\") - FIRST (\"END_TIME\")\n          )\n      ) AS \"90th Percentile Cycle Time per Variant\"\n    FROM\n      \"defaultview-9\"\n    WHERE\n      (\n        \"EVENT_NAME\" IN ('Po Released', 'Create Procurement Request', 'Po Line Item Created')\n      )\n  ) AS sub\nORDER BY\n  2 DESC\nLIMIT\n  5",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  \"VARIANT\", \"90th Percentile Cycle Time per Variant\"\nFROM\n  (\n    SELECT\n      \"EVENT_NAME\" AS \"Variant\",\n      PERCENTILE_DISC(0.9) WITHIN GROUP (\n        ORDER BY\n          (\n            SELECT\n              LAST (\"END_TIME\") - FIRST (\"END_TIME\")\n          )\n      ) AS \"90th Percentile Cycle Time per Variant\"\n    FROM\n      \"defaultview-9\"\n    WHERE\n      (\n        \"EVENT_NAME\" IN ('Po Released', 'Create Procurement Request', 'Po Line Item Created')\n      )\n  ) AS sub\nORDER BY\n  2 DESC\nLIMIT\n  5"
    },
    {
        "filename": "c2922a0092",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with manual changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term')) AND BOOL_OR(\"Event Created By User Type\" = 'Dialog')))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs where the event name is 'Update Payment Term' and the event created by user type is 'Dialog' in the 'defaultview-59' table. The count of case IDs meeting this condition is divided by the total count of case IDs in the table, and then multiplied by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n100*count(case_id) \nFILTER (\n    WHERE \"event_name\" = 'Update Payment Term'\n    AND (\n  \"Event created by UserType\" IN ('Dialog')\n      )\n    )\n/ count(case_id)\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n100*count(case_id) \nFILTER (\n    WHERE \"event_name\" = 'Update Payment Term'\n    AND (\n  \"Event created by UserType\" IN ('Dialog')\n      )\n    )\n/ count(case_id)\nFROM \"defaultview-59\""
    },
    {
        "filename": "9c5586849c",
        "split": "test",
        "name": "_Number of projects with costs after end date",
        "query": "\nSELECT\nCOUNT (case_id) FILTER (\n\tWHERE (\"CostDoc_EnterDocAfterProjectClosingCount\" > 0)\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-197' table where the 'CostDoc_EnterDocAfterProjectClosingCount' column is greater than 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (case_id)\n  FILTER (\n    WHERE\n      \"CostDoc_EnterDocAfterProjectClosingCount\" > 0\n  )\nFROM\n  \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (case_id)\n  FILTER (\n    WHERE\n      \"CostDoc_EnterDocAfterProjectClosingCount\" > 0\n  )\nFROM\n  \"defaultview-197\""
    },
    {
        "filename": "b412cf1c81",
        "split": "test",
        "name": "Number of Closed Projects",
        "query": "SELECT COUNT(DISTINCT case_id)\nFROM \"defaultview-197\"\nWHERE \"Project_Stage\"  IN ('P005')\n\n--SELECT COUNT(DISTINCT case_id)\n--FROM FLATTEN(\"defaultview-197\")\n--WHERE event_name = ('Close Project')\n--AND end_time < NOW()",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of distinct case IDs from the table 'defaultview-197' where the value of the 'Project_Stage' column is 'P005'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(DISTINCT \"Case ID\" )\n FROM \"defaultview-197\" where \"Project_Stage\" like 'P005'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(DISTINCT \"Case ID\" )\n FROM \"defaultview-197\" where \"Project_Stage\" like 'P005'"
    },
    {
        "filename": "1b5cdb573c",
        "split": "test",
        "name": "Value",
        "query": "SELECT\nSUM(\n\t(SELECT COUNT(CASE_ID) FILTER (\n \tWHERE (EVENT_NAME IN ('Personal Data Change WF Initiated'))))) \n/ COUNT (CASE_ID) \n*100\nFROM \"defaultview-299\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the event 'Personal Data Change WF Initiated' occurred, out of the total number of cases. The query is performed on the 'defaultview-299' table. The 'CASE_ID' column is used to count the number of cases and the 'EVENT_NAME' column is used to filter the cases where the event 'Personal Data Change WF Initiated' occurred. The result is multiplied by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) filter (\n\tWHERE EVENT_NAME ='Personal Data Change WF Initiated') \n\t/ count(case_id)\n\t*100\nFROM FLATTEN(\"defaultview-299\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) filter (\n\tWHERE EVENT_NAME ='Personal Data Change WF Initiated') \n\t/ count(case_id)\n\t*100\nFROM FLATTEN(\"defaultview-299\")"
    },
    {
        "filename": "208336c2e5",
        "split": "test",
        "name": "Automation Rate Material availability checked",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Check Material Availability'\n\n\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of events with the event name 'Check Material Availability' that were not created by users of type 'Dialog' in the 'defaultview-183' table. To do this, count the number of events with the event name 'Check Material Availability' and the user type not equal to 'Dialog', and divide it by the total count of events with the event name 'Check Material Availability'. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (EVENT_NAME) FILTER (\n\tWHERE event_name = 'Check Material Availability' AND \n\t\"User Type\" != 'Dialog')\n/ \nCOUNT (EVENT_NAME) FILTER (\n\tWHERE event_name = 'Check Material Availability')\n* 100\nFROM FLATTEN(\"defaultview-183\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (EVENT_NAME) FILTER (\n\tWHERE event_name = 'Check Material Availability' AND \n\t\"User Type\" != 'Dialog')\n/ \nCOUNT (EVENT_NAME) FILTER (\n\tWHERE event_name = 'Check Material Availability')\n* 100\nFROM FLATTEN(\"defaultview-183\")"
    },
    {
        "filename": "e048ff1b2f",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))\n        \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item'  'Receive Invoice')\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last 'Receive Invoice' event and the first 'Create PO Item' event. The query is performed on the 'defaultview-431' table. The 'EVENT_NAME' column is used to filter the events, with values matching 'Create PO Item' and 'Receive Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG (\n    \t(SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Receive Invoice') \n    \t- (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create PO Item')\n\t   )\nFROM \"defaultview-431\"\n    ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG (\n    \t(SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Receive Invoice') \n    \t- (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create PO Item')\n\t   )\nFROM \"defaultview-431\"\n    "
    },
    {
        "filename": "8dc7922da6",
        "split": "test",
        "name": "PO Item changes rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES(ILIKE '%Update%')))\n\t/\n\tCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES('Create PO Item'))\n\t)\n\t* 100\n    \n    -- ILIKE '%Update%'\n    \n    \nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values where the event_name matches the pattern '%Update%' in the 'defaultview-124' table. Divide this count by the number of case_id values where the event_name is 'Create PO Item' in the same table. Multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name LIKE '%Update%')))\n/\nCOUNT(case_id) FILTER (\n\tWHERE event_name\n    IN ('Create PO Item'))\n* 100\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name LIKE '%Update%')))\n/\nCOUNT(case_id) FILTER (\n\tWHERE event_name\n    IN ('Create PO Item'))\n* 100\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "4d107651fe",
        "split": "test",
        "name": "Volume of cancelled orders",
        "query": "SELECT SUM(\"PO Item Net Order Value in USD\") FILTER (\n\tWHERE event_name MATCHES('Delete PO Item')\n\t)\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'PO Item Net Order Value in USD' column from the 'defaultview-57' table, only including rows where the 'event_name' column matches the pattern 'Delete PO Item'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\"PO Item Net Order Value in USD\") \nFILTER (\n    \tWHERE event_name MATCHES ('Delete PO Item')  \n    )\nFROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\"PO Item Net Order Value in USD\") \nFILTER (\n    \tWHERE event_name MATCHES ('Delete PO Item')  \n    )\nFROM \"defaultview-57\""
    },
    {
        "filename": "e0aec295eb",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case_ids where the difference between the 'Last Inv. Item Clearing Date' and 'Last Inv. Item Due Date' is greater than 1 day, out of the total number of case_ids where 'Last Inv. Item Clearing Date' is not null. The result is multiplied by 100.\n\nTable: 'defaultview-225'\nColumns used: 'case_id', 'Last Inv. Item Clearing Date', 'Last Inv. Item Due Date'\n",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID)\nFILTER (\n(WHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1day'))\n)\n/\nCOUNT(CASE_ID)\nFILTER (\n(WHERE \"Last Inv. Item Clearing Date\" IS NOT NULL)\n)\n* 100\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID)\nFILTER (\n(WHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1day'))\n)\n/\nCOUNT(CASE_ID)\nFILTER (\n(WHERE \"Last Inv. Item Clearing Date\" IS NOT NULL)\n)\n* 100\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "488b42c7bc",
        "split": "test",
        "name": "Company code and its latest changes ",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the 'Inv. Company code', 'Most recent Inv.', 'Last Inv. Item Terms of Payment Key', and 'Last Inv. Item Vendor Master Payment Terms' from the 'defaultview-225' table. The query first flattens the 'defaultview-225' table and then selects the 'case_id', 'Inv. Company Code', 'Inv. Company Code Text', 'Inv. Accounting Document Date' (renamed as 'Most recent Inv.'), 'Last Inv. Item Terms of Payment Key', and 'Last Inv. Item Vendor Master Payment Terms'. The result is stored in a temporary table called 'Temp'. Finally, the outer query selects the desired columns from the 'Temp' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\"Inv. Company code\"\n, \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM (\n   SELECT \n      case_id\n      , FLATTEN((\n         SELECT 'Inv. Company Code' AS \"Inv. Company code\"\n         , \"Inv. Accounting Document Date\" AS \"Inv. Company Code Text\"\n         ,DATE_TRUNC('month', \"Inv. Accounting Document Date\") as \"MonthlyInvDate\"\n         , \"Inv. Accounting Document Date\" AS \"Inv. Accounting Document Date\"\n         , \"Inv. Company Code\"\n         , \"Inv. Terms of payment key\" AS \"Last Inv. Item Terms of Payment Key\"\n         , \"Inv. Vendor Master Payment Terms\" \n         AS \"Last Inv. Item Vendor Master Payment Terms\"     \n         FROM \"defaultview-225-lastInvoiceItem\"\n         ORDER BY 4 desc    \n      \n      ))\n   )\n-- FLATTEN some source data\n INTO Temp\n FROM \"defaultview-225\"\n -- source table\n) FlatInv\nORDER BY 3 desc\n        ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\"Inv. Company code\"\n, \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM (\n   SELECT \n      case_id\n      , FLATTEN((\n         SELECT 'Inv. Company Code' AS \"Inv. Company code\"\n         , \"Inv. Accounting Document Date\" AS \"Inv. Company Code Text\"\n         ,DATE_TRUNC('month', \"Inv. Accounting Document Date\") as \"MonthlyInvDate\"\n         , \"Inv. Accounting Document Date\" AS \"Inv. Accounting Document Date\"\n         , \"Inv. Company Code\"\n         , \"Inv. Terms of payment key\" AS \"Last Inv. Item Terms of Payment Key\"\n         , \"Inv. Vendor Master Payment Terms\" \n         AS \"Last Inv. Item Vendor Master Payment Terms\"     \n         FROM \"defaultview-225-lastInvoiceItem\"\n         ORDER BY 4 desc    \n      \n      ))\n   )\n-- FLATTEN some source data\n INTO Temp\n FROM \"defaultview-225\"\n -- source table\n) FlatInv\nORDER BY 3 desc\n        "
    },
    {
        "filename": "a58ec89c7f",
        "split": "test",
        "name": "Table",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the 'Inv. Company code', 'Most recent Inv.', 'Last Inv. Item Terms of Payment Key', and 'Last Inv. Item Vendor Master Payment Terms' from the 'defaultview-225' table. The query first flattens the 'defaultview-225' table and then selects the 'case_id', 'Inv. Company Code', 'Inv. Company Code Text', 'Inv. Accounting Document Date' (renamed as 'Most recent Inv.'), 'Last Inv. Item Terms of Payment Key', and 'Last Inv. Item Vendor Master Payment Terms'. The result is stored in a temporary table called 'Temp'. Finally, the outer query selects the desired columns from the 'Temp' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  \"Inv. Company code\",\n  \"Most recent Inv.\",\n  \"Last Inv. Item Terms of Payment Key\",\n  \"Last Inv. Item Vendor Master Payment Terms\"\nFROM (\n  SELECT  \n\tFLATTEN(\"Inv. Company code\") AS \"Inv. Company code\",\n --   FLATTEN(\"Inv. Accounting Document Date\") AS \"Last Accounting Inv. Document Date\",\n--\tFLATTEN(\"Inv. Accounting Document Date (Date)\") AS \"Inv. Date Period\",\n\t\"Inv. Date Period\" AS \"Inv. Accounting Document Date\",\n\t\"Inv. Accounting Document Date (Date)\" AS \"Inv. Posting Date\",\n    \"Inv. Recently Updated Date\" AS \"Most recent Inv.\",\n    \"Inv. Currency\" AS \"Inv. Currency\",\n    \"Last Inv. Item Terms of Payment Key\",\n    \"Last Inv. Item Vendor Master Payment Terms\",\n    \"Purchase Requisition Num Items Recentlt Item Net Order Value\" AS \"Most recent PR. Item Net Order Value\"\n  FROM \"defaultview-225\"\n  WHERE (\"Inv. Date Period\") IS NOT NULL\n    \tAND \"Last Inv. Item Terms of Payment Key\" IS NOT NULL\n     \tAND \"Last Inv. Item Vendor Master Payment Terms\" IS NOT NULL\n) AS Temp\nORDER BY \"Inv. Company code\" ASC NULLS FIRST\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  \"Inv. Company code\",\n  \"Most recent Inv.\",\n  \"Last Inv. Item Terms of Payment Key\",\n  \"Last Inv. Item Vendor Master Payment Terms\"\nFROM (\n  SELECT  \n\tFLATTEN(\"Inv. Company code\") AS \"Inv. Company code\",\n --   FLATTEN(\"Inv. Accounting Document Date\") AS \"Last Accounting Inv. Document Date\",\n--\tFLATTEN(\"Inv. Accounting Document Date (Date)\") AS \"Inv. Date Period\",\n\t\"Inv. Date Period\" AS \"Inv. Accounting Document Date\",\n\t\"Inv. Accounting Document Date (Date)\" AS \"Inv. Posting Date\",\n    \"Inv. Recently Updated Date\" AS \"Most recent Inv.\",\n    \"Inv. Currency\" AS \"Inv. Currency\",\n    \"Last Inv. Item Terms of Payment Key\",\n    \"Last Inv. Item Vendor Master Payment Terms\",\n    \"Purchase Requisition Num Items Recentlt Item Net Order Value\" AS \"Most recent PR. Item Net Order Value\"\n  FROM \"defaultview-225\"\n  WHERE (\"Inv. Date Period\") IS NOT NULL\n    \tAND \"Last Inv. Item Terms of Payment Key\" IS NOT NULL\n     \tAND \"Last Inv. Item Vendor Master Payment Terms\" IS NOT NULL\n) AS Temp\nORDER BY \"Inv. Company code\" ASC NULLS FIRST\n"
    },
    {
        "filename": "72e24c5831",
        "split": "test",
        "name": " Time difference planned vs actual end date without planned order",
        "query": "SELECT avg(\n\"Scheduled Finish Date\" - \"Actual Finish Date\" \n)\nFROM \"defaultview-183\"\nWhere \"Planned Order Number\" is null",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average difference between the 'Scheduled Finish Date' and 'Actual Finish Date' columns in the 'defaultview-183' table. Only consider rows where the 'Planned Order Number' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\"Scheduled Finish Date\" - \"Actual Finish Date\" ) FROM \"defaultview-183\"\nWHERE \"Planned Order Number\" is null",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\"Scheduled Finish Date\" - \"Actual Finish Date\" ) FROM \"defaultview-183\"\nWHERE \"Planned Order Number\" is null"
    },
    {
        "filename": "0df706fd5d",
        "split": "test",
        "name": "Work Order Backlog",
        "query": "SELECT count(case_id) \n\t\tFILTER( WHERE(\n        \tSELECT count(event_name)\n            WHERE event_name = 'Order: REL - Released') < 1)\n\nFROM \"defaultview-95\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-95' table where the count of event_name values equal to 'Order: REL - Released' is less than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) from \"defaultview-95\"\nwhere\ncount(event_name) FILTER (\n    WHERE event_name = 'Order: REL - Released'\n) < 1\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) from \"defaultview-95\"\nwhere\ncount(event_name) FILTER (\n    WHERE event_name = 'Order: REL - Released'\n) < 1\n"
    },
    {
        "filename": "e0ceb3aa5d",
        "split": "test",
        "name": "Total No. of Cases",
        "query": "SELECT COUNT(CASE_ID) \nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of records in the 'CASE_ID' column of the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(CASE_ID)\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(CASE_ID)\nFROM \"defaultview-124\""
    },
    {
        "filename": "0e70ef39a0",
        "split": "test",
        "name": "Late Payment Rate  (by Volume)",
        "query": "SELECT (\nCOUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' \nAND (ClearingDate   - NetDueDate)  > DURATION '1day')  \n/ COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n) * 100\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of ARUniqueKeys where the EVENT_NAME starts with 'Clear' and the difference between ClearingDate and NetDueDate is greater than 1 day, compared to the total count of ARUniqueKeys where the EVENT_NAME starts with 'Clear'. The result is multiplied by 100.\n\nThe query is performed on the table 'defaultview-222'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n( \n  COUNT (ARUniqueKey) FILTER (\n  \tWHERE EVENT_NAME LIKE 'Clear%'\n\tAND ((ClearingDate - NetDueDate)  > DURATION '1day')\n    ) \n  \tAND ~EVENT_NAME MATCHES('Finalizable AR: Clear Invoice')\n  ) \n/ \n( \n  COUNT (ARUniqueKey) FILTER (\n  \tWHERE EVENT_NAME LIKE 'Clear%'\n    \t) \n  \tAND ~EVENT_NAME MATCHES('Finalizable AR: Clear Invoice')\n  ) \n* 100\nFROM \"defaultview-222\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n( \n  COUNT (ARUniqueKey) FILTER (\n  \tWHERE EVENT_NAME LIKE 'Clear%'\n\tAND ((ClearingDate - NetDueDate)  > DURATION '1day')\n    ) \n  \tAND ~EVENT_NAME MATCHES('Finalizable AR: Clear Invoice')\n  ) \n/ \n( \n  COUNT (ARUniqueKey) FILTER (\n  \tWHERE EVENT_NAME LIKE 'Clear%'\n    \t) \n  \tAND ~EVENT_NAME MATCHES('Finalizable AR: Clear Invoice')\n  ) \n* 100\nFROM \"defaultview-222\""
    },
    {
        "filename": "3ffcebe83b",
        "split": "test",
        "name": "Late Payments by Company Code",
        "query": "SELECT\n  \"Accounting Company Code\"  AS \"Company Code\",\n  SUM (\"Last Invoice Item Amount\" ) AS \"Invoice Amount\",\n  COUNT(case_id) AS \"Number of Invoices\"\nFROM\n  \"defaultview-545\"\nWHERE\n  (\n    \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\n  )\nORDER BY\n  2 DESC\nNULLS LAST",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the company code, total invoice amount, and the number of invoices from the 'defaultview-545' table. Filter the results to only include rows where the 'Last Invoice Due Date' is less than the 'Last Invoice Payment Date'. Sort the results by the invoice amount in descending order, with null values appearing last.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Company code\" AS \"Company Code\",\nSUM(\"INVOICE_AMT\") AS \"Invoice Amount\",\nCOUNT(\"INVOICE_AMT\") AS \"No. of Invoices\"\nFROM \"defaultview-545\"\nWHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\n\nORDER BY 2 DESC NULLS LAST\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Company code\" AS \"Company Code\",\nSUM(\"INVOICE_AMT\") AS \"Invoice Amount\",\nCOUNT(\"INVOICE_AMT\") AS \"No. of Invoices\"\nFROM \"defaultview-545\"\nWHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\n\nORDER BY 2 DESC NULLS LAST\n"
    },
    {
        "filename": "a399be4a32",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference",
        "query": "SELECT count(case_id) FROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-183' table where the 'Actual Finish Date' column is equal to the 'Scheduled Finish Date' column and the 'Planned Order Number' column is NULL.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (case_id) \nFROM \"defaultview-183\"\nWHERE (\"Actual Finish Date\" = \"Scheduled Finish Date\")\nAND \"Planned Order Number\" IS NULL\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (case_id) \nFROM \"defaultview-183\"\nWHERE (\"Actual Finish Date\" = \"Scheduled Finish Date\")\nAND \"Planned Order Number\" IS NULL\n"
    },
    {
        "filename": "737c4d00c6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case_id values in the 'defaultview-225' table where the column 'Last Inv. Item Cash Discount Days 1' is either NULL or 0. The result is obtained by dividing the count of case_id values meeting this condition by the total count of case_id values in the table, and then multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (CASE_ID) FILTER (WHERE \"Last Inv. Item Cash Discount Days 1\"  IS NULL OR \"Last Inv. Item Cash Discount Days 1\" = 0) / COUNT (CASE_ID)\n * 100\nFROM \"defaultview-225\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (CASE_ID) FILTER (WHERE \"Last Inv. Item Cash Discount Days 1\"  IS NULL OR \"Last Inv. Item Cash Discount Days 1\" = 0) / COUNT (CASE_ID)\n * 100\nFROM \"defaultview-225\"\n"
    },
    {
        "filename": "2a5c42276f",
        "split": "test",
        "name": "\u00d8 WIP time Assembly -> Inspection",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0030'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0020'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the first occurrence of an event with the name starting with 'Start' and the first occurrence of an event with the name starting with 'Complete' in the table 'defaultview-270', where the 'Routing Step' column has a value of '0030' for the 'Start' event and a value of '0020' for the 'Complete' event.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG(\n\t(\n\t\tSELECT FIRST(end_time)\n        WHERE event_name LIKE 'Complete%'\n    ) \n    -\n    (\n        SELECT FIRST(end_time)\n        WHERE event_name LIKE 'Start%'\n    )\n    )\n    FILTER (WHERE BE (\"Routing Step\") = 'Starting (%0030%)\" AND \"Finishing(%0020%)' )\n  FROM \"defaultview-270\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG(\n\t(\n\t\tSELECT FIRST(end_time)\n        WHERE event_name LIKE 'Complete%'\n    ) \n    -\n    (\n        SELECT FIRST(end_time)\n        WHERE event_name LIKE 'Start%'\n    )\n    )\n    FILTER (WHERE BE (\"Routing Step\") = 'Starting (%0030%)\" AND \"Finishing(%0020%)' )\n  FROM \"defaultview-270\" "
    },
    {
        "filename": "160da29779",
        "split": "test",
        "name": "Average time issue to assign first reviewer",
        "query": "SELECT \nAVG(\n\t\t(SELECT FIRST(end_time) \n\t \tWHERE event_name IN ('Assign Validator'))\n    - \t(SELECT FIRST(end_time)\n       \tWHERE event_name IN ('Change Status to Ready For Review'))\n\t)\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to Ready For Review' ~> \n    \t\t\t\t\t\t 'Change Status to In Review')",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the first occurrence of the 'Assign Validator' event and the first occurrence of the 'Change Status to Ready For Review' event in the 'defaultview-217' table. Filter the events in the 'event_name' column to only include those that match the pattern 'Change Status to Ready For Review' followed by 'Change Status to In Review'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG (\n\t(\n\t\tSELECT \n\t\tFIRST(end_time) FILTER (\n\t\t\tWHERE \n\t\t\tEVENT_NAME IN ('Change Status to In Review')\n\t\t\t)\n\t\t)\n\t- \n\t\t(\n\t\tSELECT \n\t\tFIRST(end_time) FILTER (\n\t\t\tWHERE \n\t\t\tEVENT_NAME = 'Assign Validator'\n\t\t\t)\n\t\t)\n\t)\nFROM \"defaultview-217\"\nWHERE \"event_name\" MATCHES (\n\t\t'Change Status to Ready For Review' ~> \n        'Change Status to In Review' \n        )",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG (\n\t(\n\t\tSELECT \n\t\tFIRST(end_time) FILTER (\n\t\t\tWHERE \n\t\t\tEVENT_NAME IN ('Change Status to In Review')\n\t\t\t)\n\t\t)\n\t- \n\t\t(\n\t\tSELECT \n\t\tFIRST(end_time) FILTER (\n\t\t\tWHERE \n\t\t\tEVENT_NAME = 'Assign Validator'\n\t\t\t)\n\t\t)\n\t)\nFROM \"defaultview-217\"\nWHERE \"event_name\" MATCHES (\n\t\t'Change Status to Ready For Review' ~> \n        'Change Status to In Review' \n        )"
    },
    {
        "filename": "49e3ff16c8",
        "split": "test",
        "name": "Process orders overdue for release",
        "query": "SELECT COUNT(case_id) \n\tFILTER(WHERE \"Scheduled Release Date\" < NOW() \n\tAND \"Actual Release Date\" IS NULL)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-183' table where the 'Scheduled Release Date' is less than the current date and the 'Actual Release Date' is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id)\nFROM \"defaultview-183\"\nWHERE\n\"Scheduled Release Date\" < DATE_TRUNC('day', NOW()) AND \"Actual Release Date\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id)\nFROM \"defaultview-183\"\nWHERE\n\"Scheduled Release Date\" < DATE_TRUNC('day', NOW()) AND \"Actual Release Date\" IS NULL"
    },
    {
        "filename": "b11414e427",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Released to Goods Receipt",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Goods Receipt'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last 'Create Goods Receipt' event and the first 'Release PO' event in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT \n  AVG (\n    (SELECT \n       LAST (TIMESTAMP \"Event End Time\") FILTER (\n          WHERE \n             \"Activity Name\" IN ('Create Goods Receipt'))) \n    - (SELECT \n       FIRST (TIMESTAMP \"Event End Time\") FILTER (\n          WHERE \n             \"Activity Name\" IN ('Release PO'))) \n  )\nFROM\n  \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT \n  AVG (\n    (SELECT \n       LAST (TIMESTAMP \"Event End Time\") FILTER (\n          WHERE \n             \"Activity Name\" IN ('Create Goods Receipt'))) \n    - (SELECT \n       FIRST (TIMESTAMP \"Event End Time\") FILTER (\n          WHERE \n             \"Activity Name\" IN ('Release PO'))) \n  )\nFROM\n  \"defaultview-124\"\n                "
    },
    {
        "filename": "d4dfe3fb4d",
        "split": "test",
        "name": "Overdue Receivables (15+ days overdue) by Value - Top 10  Customer ",
        "query": "SELECT \"Overdue Amount\" , \"Customer\"\nFROM\n(\nSELECT SUM( \"AmountInGlobalCurrency\" ) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingDate IS NULL AND (NOW() - NetDueDate) > DURATION '15day') \n--OVER ( PARTITION BY \"AR_Customer\")\nAS \"Overdue Amount\", \n\"AR_CustomerName\" as \"Customer\"\nFROM FLATTEN(\"defaultview-222\")\n) as selections\nWHERE  \"Overdue Amount\" IS NOT NULL\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the sum of the 'AmountInGlobalCurrency' column from the 'defaultview-222' table, filtered by events where the 'EVENT_NAME' is 'Create Accounts Receivable', 'ClearingDate' is NULL, and the difference between the current date and 'NetDueDate' is greater than 15 days. Group the results by 'AR_CustomerName' and alias the sum as 'Overdue Amount'. Also retrieve the 'AR_CustomerName' column and alias it as 'Customer'. Exclude any rows where the 'Overdue Amount' is NULL. Sort the results in descending order based on the 'Overdue Amount'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM(\"AmountInGlobalCurrency\") FILTER (WHERE (BEHAVIOR OF EVENT_NAME\n          ()) \n        AND \"EVENT_NAME\" = 'Create Accounts Receivable' \n        AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n          AS \"Overdue Amount\"\n , AR_CustomerName AS \"Customer\"\nFROM \"defaultview-222\"\nWHERE\n  (\n    \"EVENT_NAME\" MATCHES ('Create Accounts Receivable' ~> (ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))))\n  )\n  AND\n  (\n    \"EVENT_NAME\" LIKE ('Create Accounts Receivable') \n    AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n  )\n  AND\n  (\n    \"EVENT_NAME\" LIKE ('Create Accounts Receivable' ~> ()) \n    AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n  )\n  AND\n  (\n    \"EVENT_NAME\" MATCHES ('Create Accounts Receivable'~> Clearing~> ()) \n    AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n  )\n  AND\n  (\n    \"EVENT_NAME\" MATCHES (Clearing ~> (ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY')))) \n    AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n  )\nGROUP BY 2\nHAVING \"Overdue Amount\" IS NOT NULL\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM(\"AmountInGlobalCurrency\") FILTER (WHERE (BEHAVIOR OF EVENT_NAME\n          ()) \n        AND \"EVENT_NAME\" = 'Create Accounts Receivable' \n        AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n          AS \"Overdue Amount\"\n , AR_CustomerName AS \"Customer\"\nFROM \"defaultview-222\"\nWHERE\n  (\n    \"EVENT_NAME\" MATCHES ('Create Accounts Receivable' ~> (ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))))\n  )\n  AND\n  (\n    \"EVENT_NAME\" LIKE ('Create Accounts Receivable') \n    AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n  )\n  AND\n  (\n    \"EVENT_NAME\" LIKE ('Create Accounts Receivable' ~> ()) \n    AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n  )\n  AND\n  (\n    \"EVENT_NAME\" MATCHES ('Create Accounts Receivable'~> Clearing~> ()) \n    AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n  )\n  AND\n  (\n    \"EVENT_NAME\" MATCHES (Clearing ~> (ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY')))) \n    AND ClearingDate IS NULL  AND ((DATE_TRUNC('day', NOW()) - \"NetDueDate\") > DURATION '15DAY'))\n  )\nGROUP BY 2\nHAVING \"Overdue Amount\" IS NOT NULL\nORDER BY 1 DESC"
    },
    {
        "filename": "44cae3c190",
        "split": "test",
        "name": "Avg. Cycle Time per Project (20 longest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n   \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 DESC\nLIMIT 20\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average cycle time for each project in the 'defaultview-197' table. The cycle time is calculated by subtracting the start time of the project from the end time of the project. The result is ordered in descending order of the average cycle time and limited to the top 20 projects.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\"Project end time\" - \"Project start time\")  AS \"Average Cycle Time\", Project\nFROM \"defaultview-197\" \nORDER BY 1 desc\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\"Project end time\" - \"Project start time\")  AS \"Average Cycle Time\", Project\nFROM \"defaultview-197\" \nORDER BY 1 desc\nLIMIT 20"
    },
    {
        "filename": "471ccd349c",
        "split": "test",
        "name": "Order confirmation lead time",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) FILTER(WHERE event_name = 'Confirmed'))\n    -\n    (SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n\t)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the first occurrence of the 'Confirmed' event and the last occurrence of the 'Released' event in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG ((SELECT FIRST(end_time) WHERE event_name = 'Confirmed') \n- \n(SELECT LAST(end_time) WHERE event_name =     'Released')))\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG ((SELECT FIRST(end_time) WHERE event_name = 'Confirmed') \n- \n(SELECT LAST(end_time) WHERE event_name =     'Released')))\nFROM \"defaultview-183\""
    },
    {
        "filename": "f6d2878264",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Manufacturing Plant",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Manufacturing Plant\" \nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases in the 'defaultview-183' table and name the result as 'Cases'. Calculate the average cycle time by subtracting the 'Basic Start Date' from the 'Basic Finish Date' columns in the 'defaultview-183' table and name the result as 'Cycle Time'. Also include the 'Manufacturing Plant' column from the 'defaultview-183' table. Sort the results in descending order based on the 'Cases' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID)  AS \"Cases\",\nAVG(\"Basic Finish Date\" - \"Basic Start Date\") AS \"Cycle Time\"\n,\"Manufacturing Plant\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC NULLS LAST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID)  AS \"Cases\",\nAVG(\"Basic Finish Date\" - \"Basic Start Date\") AS \"Cycle Time\"\n,\"Manufacturing Plant\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC NULLS LAST"
    },
    {
        "filename": "dc64a9e81b",
        "split": "test",
        "name": "Manufacturing lead time",
        "query": "SELECT\nAVG(\n(SELECT FIRST(end_time) FILTER(WHERE event_name LIKE 'GR%'))\n-\n(SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the first occurrence of an event with a name starting with 'GR' and the last occurrence of an event with the name 'Released' in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG((SELECT LAST(end_time) WHERE event_name LIKE 'GR%') \n    - (SELECT FIRST(end_time) \n       \tWHERE EVENT_NAME = 'Released' )) AS \"Lead Time\"\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG((SELECT LAST(end_time) WHERE event_name LIKE 'GR%') \n    - (SELECT FIRST(end_time) \n       \tWHERE EVENT_NAME = 'Released' )) AS \"Lead Time\"\nFROM \"defaultview-183\""
    },
    {
        "filename": "eaabd9dd85",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT\nAVG (\n\t(SELECT LAST (END_TIME))\n     -\n    (SELECT FIRST (END_TIME))\n\t)\n    FROM \"defaultview-525\"\nWHERE event_name MATCHES \n\t('Create Inspection Lot' 'Create Usage Decision' ILIKE 'Material Movement%')\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average duration between the last and first end time for events in the 'defaultview-525' table where the event name matches 'Create Inspection Lot', 'Create Usage Decision', or starts with 'Material Movement'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG (\n    (\n      SELECT\n        LAST (\"end_time\") - FIRST (\"end_time\")\n      WHERE\n        EVENT_NAME IN (\n          'Create Inspection Lot'\n        ) OR EVENT_NAME IN (\n          'Create Usage Decision'\n        ) OR EVENT_NAME ILIKE 'Material Movement%'\n    )\n  ) \n  AS \"Average\"\nFROM\n  \"defaultview-525\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG (\n    (\n      SELECT\n        LAST (\"end_time\") - FIRST (\"end_time\")\n      WHERE\n        EVENT_NAME IN (\n          'Create Inspection Lot'\n        ) OR EVENT_NAME IN (\n          'Create Usage Decision'\n        ) OR EVENT_NAME ILIKE 'Material Movement%'\n    )\n  ) \n  AS \"Average\"\nFROM\n  \"defaultview-525\"\n                "
    },
    {
        "filename": "4906928657",
        "split": "test",
        "name": "Cancellation of goods receipts",
        "query": "SELECT COUNT(case_id) FILTER (\nWHERE (event_name MATCHES('Reverse Goods Receipt'))\nAND (event_name MATCHES('Create Goods Receipt'))\n)\n\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-57' table where the event_name matches both 'Reverse Goods Receipt' and 'Create Goods Receipt'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) Filter(\n    \tWHERE event_name\n        \tMATCHES('Reverse Goods Receipt'\n        ,'Create Goods Receipt'))) AS \"Count of goods receipts\"\nFROM \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) Filter(\n    \tWHERE event_name\n        \tMATCHES('Reverse Goods Receipt'\n        ,'Create Goods Receipt'))) AS \"Count of goods receipts\"\nFROM \"defaultview-57\"\n                "
    },
    {
        "filename": "70fa42ce9c",
        "split": "test",
        "name": "On-time delivery rate",
        "query": "SELECT COUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL AND \"Actual Delivery Date\" - \"Scheduled Finish Date\" = DURATION '0days'\n    )\n/\nCOUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL) \n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the actual delivery date is not null and the actual delivery date minus the scheduled finish date is equal to 0 days, out of the total number of cases where the actual delivery date is not null. The result is multiplied by 100 to get the percentage. The data is retrieved from the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (\"case_id\") FILTER (\n\tWHERE \"Actual Finish Date\" IS NOT NULL\n    ) /\n    COUNT (\"case_id\") FILTER (\n\tWHERE \"Actual Finish Date\" IS NOT NULL\n\t-- AND (\"Actual Finish Date\" - \"Scheduled Finish Date\") = DURATION '0days'\n\n\t)\n    * 100\n    \nFROM \"defaultview-183\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (\"case_id\") FILTER (\n\tWHERE \"Actual Finish Date\" IS NOT NULL\n    ) /\n    COUNT (\"case_id\") FILTER (\n\tWHERE \"Actual Finish Date\" IS NOT NULL\n\t-- AND (\"Actual Finish Date\" - \"Scheduled Finish Date\") = DURATION '0days'\n\n\t)\n    * 100\n    \nFROM \"defaultview-183\" "
    },
    {
        "filename": "a24472f64b",
        "split": "test",
        "name": "Total overdue invoice amounts",
        "query": "\nSELECT\nSUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER(\n\t WHERE (\"AR_LastClearingDate\" IS NULL)\n\t\t AND \"AR_LastNetDueDate\" < DATE_TRUNC('day', NOW())\n\t)\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'AR_InvoicedAmountInGlobalCurrency' column from the 'defaultview-222' table, filtered by the following conditions: 'AR_LastClearingDate' is NULL and 'AR_LastNetDueDate' is less than the current date truncated to the day.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"AR_InvoicedAmountInGlobalCurrency\") \nFROM \"defaultview-222\"\nWHERE AR_LastClearingDate IS NULL\nAND (\"AR_LastNetDueDate\" - DATE_TRUNC('day', NOW())) < 0 \n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"AR_InvoicedAmountInGlobalCurrency\") \nFROM \"defaultview-222\"\nWHERE AR_LastClearingDate IS NULL\nAND (\"AR_LastNetDueDate\" - DATE_TRUNC('day', NOW())) < 0 \n"
    },
    {
        "filename": "0c18038530",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Material Text",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Material Text\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of process orders for each material text in the 'defaultview-183' table. Sort the results in descending order based on the count.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT (\"CASE_ID\") AS \"# Cases\",  \n  \"Material_Text\"\nFROM \"defaultview-183\"\n-- WHERE \"CASE_STATUS\" LIKE 'Closed'\nGRoup by 2\nORDER BY 1 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT (\"CASE_ID\") AS \"# Cases\",  \n  \"Material_Text\"\nFROM \"defaultview-183\"\n-- WHERE \"CASE_STATUS\" LIKE 'Closed'\nGRoup by 2\nORDER BY 1 DESC\n"
    },
    {
        "filename": "9b703e674b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Delivered or Technically Completed",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Delivered', 'Technically Completed')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average time difference between the last occurrence of the 'Delivered' or 'Technically Completed' event and the first occurrence of the 'Create Process Order' event in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\nAVG(case_id_latest_end_time - (\"Create Process Order\" )\n\nFILTER (WHERE event_name IN ('Delivered', 'Technically Completed')))\n\nFROM \"defaultview-183\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\nAVG(case_id_latest_end_time - (\"Create Process Order\" )\n\nFILTER (WHERE event_name IN ('Delivered', 'Technically Completed')))\n\nFROM \"defaultview-183\"\n"
    },
    {
        "filename": "afc16d1b66",
        "split": "test",
        "name": "Average number of rework on issues with rework",
        "query": "SELECT AVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1\nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average count of event_name where event_name is 'Change Status to In Progress' in the 'defaultview-217' table. Then subtract 1 from the average count. Filter the rows in the 'defaultview-217' table where the count of event_name is greater than 1 and event_name is 'Change Status to In Review'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG ((SELECT\n      AVG (\"event_name\" ) FILTER (\n        WHERE\n          BEHAVIOR (\n            event_name = 'Change Status to In Review'\n          \tAND count(event_name) > 1\n       \t    ) AS flagged))\n\n    -1 )) AS \"AVG. Lead Time of Canceled in Days\"\n      \nFROM\n  \"defaultview-217\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG ((SELECT\n      AVG (\"event_name\" ) FILTER (\n        WHERE\n          BEHAVIOR (\n            event_name = 'Change Status to In Review'\n          \tAND count(event_name) > 1\n       \t    ) AS flagged))\n\n    -1 )) AS \"AVG. Lead Time of Canceled in Days\"\n      \nFROM\n  \"defaultview-217\""
    },
    {
        "filename": "e454fa513b",
        "split": "test",
        "name": "Percentage of products with considerable forecast override",
        "query": "SELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE( \n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) > 20\n\tOR\n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) < -20\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"Statistical Fcst Qty\" > 0\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t) * 24.98\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the distinct 'Product ID' values from the 'defaultview-404' table where the following conditions are met: the result of the expression (('Consensus Demand Plan Qty' - 'Statistical Fcst Qty') / 'Statistical Fcst Qty') multiplied by 100 is greater than 20 or less than -20, the 'MONTH' value is greater than or equal to the current month, and the difference between the 'MONTH' value and the current month is less than 320 days. Divide the count by the count of distinct 'Product ID' values from the 'defaultview-404' table where the 'Statistical Fcst Qty' is greater than 0, the 'MONTH' value is greater than or equal to the current month, and the difference between the 'MONTH' value and the current month is less than 320 days. Multiply the result by 24.98.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (DISTINCT \"Product ID\") FILTER (\n\tWHERE (((\"Consensus Demand Plan Qty\"  -  \"Statistical Fcst Qty\")  /  \"Statistical Fcst Qty\")  \n      * 100)  > 20  OR (((\"Consensus Demand Plan Qty\"  -  \"Statistical Fcst Qty\")  \n      /  \"Statistical Fcst Qty\") *  100) < -20\n\n      AND \"MONTH\" > DATE_TRUNC('MONTH', NOW()) \n      AND \"MONTH\" - DATE_TRUNC('MONTH', NOW()) < DURATION '320days'\n    )\n/ (COUNT (DISTINCT \"Product ID\") FILTER (  \n    WHERE (\"Statistical Fcst Qty\" > 0))\n     AND \"MONTH\" > DATE_TRUNC('MONTH', NOW()) \n     AND \"MONTH\" - DATE_TRUNC('MONTH', NOW()) < DURATION '320days'\n    )\n* 24.98\nFROM \"defaultview-404\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (DISTINCT \"Product ID\") FILTER (\n\tWHERE (((\"Consensus Demand Plan Qty\"  -  \"Statistical Fcst Qty\")  /  \"Statistical Fcst Qty\")  \n      * 100)  > 20  OR (((\"Consensus Demand Plan Qty\"  -  \"Statistical Fcst Qty\")  \n      /  \"Statistical Fcst Qty\") *  100) < -20\n\n      AND \"MONTH\" > DATE_TRUNC('MONTH', NOW()) \n      AND \"MONTH\" - DATE_TRUNC('MONTH', NOW()) < DURATION '320days'\n    )\n/ (COUNT (DISTINCT \"Product ID\") FILTER (  \n    WHERE (\"Statistical Fcst Qty\" > 0))\n     AND \"MONTH\" > DATE_TRUNC('MONTH', NOW()) \n     AND \"MONTH\" - DATE_TRUNC('MONTH', NOW()) < DURATION '320days'\n    )\n* 24.98\nFROM \"defaultview-404\""
    },
    {
        "filename": "8296553520",
        "split": "test",
        "name": "No. of Invoices with Multiple Payment Term Change Events",
        "query": "SELECT\nCOUNT(CASE_ID)\nFROM\n(\n SELECT\n  COUNT(CASE_ID) AS \"CASE_COUNT\", CASE_ID, EVENT_NAME\n FROM FLATTEN(\"defaultview-225\")\n WHERE\n  (\"Changed Table\" IN ('EKKO','BSEG'))\n  AND (\"Changed Field\" IN  ('ZTERM', 'ZTERM', 'ZBD1T','ZBD2T','ZBD3T', 'ZBD1P', 'ZBD2P'))\n GROUP BY 2,3\n) AS SUB1\nWHERE \"CASE_COUNT\" > 1",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases where the 'Changed Table' is either 'EKKO' or 'BSEG' and the 'Changed Field' is either 'ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', or 'ZBD2P'. Group the results by 'CASE_ID' and 'EVENT_NAME'. Then, count the number of cases where the count of 'CASE_ID' is greater than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(CASE_ID) FILTER(\n\tWHERE EventName MATCHES('Changed Table')~>'EKKO|BSEG'\n    AND ChangedField IN('ZTERM', 'ZBD1T' ,'ZBD2T' ,'ZBD3T' ,'ZBD1P' ,'ZBD2P' ))\n      \nFROM \"defaultview-344\"\nWHERE   COUNT(case_id) \n(   ) > 1\n ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(CASE_ID) FILTER(\n\tWHERE EventName MATCHES('Changed Table')~>'EKKO|BSEG'\n    AND ChangedField IN('ZTERM', 'ZBD1T' ,'ZBD2T' ,'ZBD3T' ,'ZBD1P' ,'ZBD2P' ))\n      \nFROM \"defaultview-344\"\nWHERE   COUNT(case_id) \n(   ) > 1\n "
    },
    {
        "filename": "a8599a428f",
        "split": "test",
        "name": "#\u00a0Process\u00a0Orders\u00a0without\u00a0business\u00a0complete\u00a0",
        "query": "SELECT count(case_id) \nFROM \"defaultview-183\"\nWHERE not event_name MATCHES ('Confirmed')",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-183' table where the event_name does not match the value 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID)\nFROM \"defaultview-183\"\nWHERE not event_name MATCHES ('Confirmed')\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID)\nFROM \"defaultview-183\"\nWHERE not event_name MATCHES ('Confirmed')\n                "
    },
    {
        "filename": "a646885e92",
        "split": "test",
        "name": "Number of Completed SLAs",
        "query": "SELECT SUM(\"SLA Count Completed\") FROM \"defaultview-370\"",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the sum of the 'SLA Count Completed' column from the 'defaultview-370' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM(\"SLA Count Completed\")\nFROM\n  \"defaultview-1608\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM(\"SLA Count Completed\")\nFROM\n  \"defaultview-1608\""
    },
    {
        "filename": "08f340e540",
        "split": "test",
        "name": "Count of Cases per Activity",
        "query": "SELECT case_id, \"Request Type\",\n\"EVENT_NAME\" AS \"Activities\",\n(SELECT COUNT (\"EVENT_NAME\")) AS \"Number of Cases per Event\"\nFROM \"defaultview-299\"\nORDER BY 4 DESC\nLIMIT 5",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Retrieve the case ID, request type, and event name from the 'defaultview-299' table. Calculate the number of cases per event by counting the occurrences of each event name. Sort the results in descending order based on the number of cases per event. Limit the output to the top 5 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT(event_name) AS \"No. Cases\", \n  EVENT_NAME AS \"Event Name\"\nFROM FLATTEN(\"defaultview-299\")\nORDER BY 1 DESC\nLIMIT 5\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT(event_name) AS \"No. Cases\", \n  EVENT_NAME AS \"Event Name\"\nFROM FLATTEN(\"defaultview-299\")\nORDER BY 1 DESC\nLIMIT 5\n"
    },
    {
        "filename": "7dc7833543",
        "split": "test",
        "name": "Invoices waiting for Goods Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES('Receive PO item'))\n\tAND (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice')))\n\t)\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of case_id values from the 'defaultview-545' table where the event_name is not 'Receive PO item' and is either 'Receive Invoice' or 'Reconcile Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) \nFROM \"defaultview-545\" \nFLATTEN(event_name != 'Receive PO item' AND event_name IN ('Receive Invoice', 'Reconcile Invoice'))",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) \nFROM \"defaultview-545\" \nFLATTEN(event_name != 'Receive PO item' AND event_name IN ('Receive Invoice', 'Reconcile Invoice'))"
    },
    {
        "filename": "d7aec6e338",
        "split": "test",
        "name": "\u2300 Time before scheduled release ",
        "query": "SELECT avg(\"Scheduled Release Date\" - \"Actual Release Date\")\nFROM \"defaultview-183\"\nWHERE \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds'",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the average difference between the 'Scheduled Release Date' and the 'Actual Release Date' in the 'defaultview-183' table. Only consider rows where the difference between the two dates is greater than 0 seconds.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\"Scheduled Release Date\" - \"Actual Release Date\")\nFROM \"defaultview-183\"\nWHERE \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0s'\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\"Scheduled Release Date\" - \"Actual Release Date\")\nFROM \"defaultview-183\"\nWHERE \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0s'\n                "
    },
    {
        "filename": "6f5fbcc69b",
        "split": "test",
        "name": "Copy of Open POs without GRN ( > 45 Days)",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\"\nFROM \"defaultview-124\"\nWHERE\n(NOW() - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')) > DURATION '45DAYS'",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases in the 'defaultview-124' table where the difference between the current time and the last 'END_TIME' value with 'EVENT_NAME' equal to 'Release PO' is greater than 45 days.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID ) FILTER(\n    WHERE (NOW() - (SELECT LAST (END_TIME)\n                     WHERE EVENT_NAME = 'Release PO')))\n   AS \"Number of Late Cases\"\n\nFROM \"defaultview-124\"\nWHERE\nEVENT_NAME MATCHES ('Release PO' ~> \"Send PO\" ) AND\n(NOW() - (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO')\n) > DURATION '45DAYS'\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID ) FILTER(\n    WHERE (NOW() - (SELECT LAST (END_TIME)\n                     WHERE EVENT_NAME = 'Release PO')))\n   AS \"Number of Late Cases\"\n\nFROM \"defaultview-124\"\nWHERE\nEVENT_NAME MATCHES ('Release PO' ~> \"Send PO\" ) AND\n(NOW() - (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO')\n) > DURATION '45DAYS'\n\n\n"
    },
    {
        "filename": "c77441d9cc",
        "split": "test",
        "name": "Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs where the occurrence of event_name is greater than 1, in the 'defaultview-124' table. To do this, count the number of case IDs where the occurrence of event_name is greater than 1 and divide it by the total count of case IDs in the table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (WHERE (\n    SELECT BOOL_OR(event_name > 1)\n  )) / COUNT (CASE_ID) * 100\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (WHERE (\n    SELECT BOOL_OR(event_name > 1)\n  )) / COUNT (CASE_ID) * 100\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "f030043950",
        "split": "test",
        "name": "Early Release with System / Batch User & Planned Order Reference",
        "query": "SELECT count(case_id) Filter( \nWhere \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND \"Event Created By User Type\" NOT in ('Dialog') AND event_name = 'Released' )\n/\ncount(case_id) Filter(Where \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND event_name = 'Released') *100\nFROM FLATTEN(\"defaultview-183\")\nWHERE \"Planned Order Number\" IS NOT NULL\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of cases where the scheduled release date minus the actual release date is greater than 0 seconds and the event created by user type is not 'Dialog' and the event name is 'Released', compared to the total number of cases where the scheduled release date minus the actual release date is greater than 0 seconds and the event name is 'Released'. The calculation is done for the 'defaultview-183' table, filtering out rows where the planned order number is null.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  (COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        \"Scheduled Release Date\" - \"Actual Release Date\" > DATE '2013-01-01 00:00:01')\n        AND (\n          (\n            \"Created by User Type\" <> 'Dialog'\n          )\n          AND \"Event Name\" = 'Released'\n        )\n    )\n    / COUNT (CASE_ID) FILTER (\n        WHERE\n          (\n            \"Scheduled Release Date\" - \"Actual Release Date\" > DATE '2013-01-01 00:00:01')\n          AND \"Event Name\" = 'Released'\n      )) * 100\n  \nFROM\n  \"defaultview-183\"\nWHERE\n  \"Planned Order Number\" IS NOT NULL\n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  (COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        \"Scheduled Release Date\" - \"Actual Release Date\" > DATE '2013-01-01 00:00:01')\n        AND (\n          (\n            \"Created by User Type\" <> 'Dialog'\n          )\n          AND \"Event Name\" = 'Released'\n        )\n    )\n    / COUNT (CASE_ID) FILTER (\n        WHERE\n          (\n            \"Scheduled Release Date\" - \"Actual Release Date\" > DATE '2013-01-01 00:00:01')\n          AND \"Event Name\" = 'Released'\n      )) * 100\n  \nFROM\n  \"defaultview-183\"\nWHERE\n  \"Planned Order Number\" IS NOT NULL\n\n                "
    },
    {
        "filename": "4f5797f512",
        "split": "test",
        "name": "Return rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE event_name IN ('Create Return Sales Order Item','Create Returns Delivery')) > 0\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Calculate the percentage of case IDs where the event names 'Create Return Sales Order Item' or 'Create Returns Delivery' occur, out of the total number of case IDs in the 'defaultview-290' table. The calculation is done by counting the number of case IDs where the event names occur and dividing it by the total number of case IDs, then multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\n(\nSELECT\nCOUNT(case_id) FILTER (WHERE event_name IN ('Create Return Sales Order Item', 'Create Returns Delivery'))\n)\n/\n(\nSELECT\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-290\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\n(\nSELECT\nCOUNT(case_id) FILTER (WHERE event_name IN ('Create Return Sales Order Item', 'Create Returns Delivery'))\n)\n/\n(\nSELECT\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-290\"\n                "
    },
    {
        "filename": "f16c619f2a",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time (Receive to Approve Invoice) by PO Supplier (Top 25) - Without POs",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Approve Invoice') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive invoice')) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 25",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases in the 'defaultview-545' table. Calculate the average cycle time by subtracting the first end time where the event name is 'Receive invoice' from the last end time where the event name is 'Approve Invoice'. Also, include the 'PO Item Supplier ID' column. Sort the results in descending order and limit the output to 25 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) AS \"No of Cases\",\nAVG(\n\t(SELECT LAST(end_time) \n     WHERE event_name IN ('Approve Invoice')) \n    - (SELECT FIRST(end_time) \n    WHERE event_name IN ('Receive invoice')))\n\"AVG Cycle Time (Receive Invoice to Final Approval)\",\n\"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 2 DESC\nLIMIT 25",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) AS \"No of Cases\",\nAVG(\n\t(SELECT LAST(end_time) \n     WHERE event_name IN ('Approve Invoice')) \n    - (SELECT FIRST(end_time) \n    WHERE event_name IN ('Receive invoice')))\n\"AVG Cycle Time (Receive Invoice to Final Approval)\",\n\"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 2 DESC\nLIMIT 25"
    },
    {
        "filename": "897f3b1354",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Item Plant",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\", \n\"PO Item Plant\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of cases and calculate the total purchase order value for each plant. Sort the results in descending order.\n\nTo do this, use the 'defaultview-124' table. The 'case_id' column is used to count the number of cases. The 'PO Item Net Order Value' column is used to calculate the total purchase order value. The 'PO Item Plant' column is used to group the results by plant.\n\nThe resulting table will have three columns: 'No. of Cases', 'Total PO Value', and 'PO Item Plant'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\", \n\"PO Item Plant\"\nFROM \"defaultview-124\" \ngroup by 3\nOrder by 1 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\", \n\"PO Item Plant\"\nFROM \"defaultview-124\" \ngroup by 3\nOrder by 1 DESC\n"
    },
    {
        "filename": "2952d1e1d0",
        "split": "test",
        "name": "Open Overdue Receivables by Project Manager (Top 10)",
        "query": "SELECT COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day')\nas \"#Receivables\" , \n \"Project_Manager\"  as \"Project Manager\"\nFROM FLATTEN(\"defaultview-197\")\nGROUP BY 2\nORDER By 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of distinct ARUniqueKey values from the FLATTEN table 'defaultview-197' where the EVENT_NAME is 'Create Accounts Receivable', ClearingJournalEntry is NULL, and the difference between the current date and the NetDueDate is greater than 15 days. The result is labeled as '#Receivables'. Additionally, select the 'Project_Manager' column and label it as 'Project Manager'. Group the results by the 'Project Manager' column and order them in descending order based on the count. Finally, limit the output to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (DISTINCT ARUniqueKey) AS \"#Receivables\", \n\"Project_Manager\" AS \"Project Manager\"\nFROM FLATTEN(\"defaultview-197\")\nWHERE EVENT_NAME = 'Create Accounts Receivable'\nAND ClearingJournalEntry IS NULL\nAND (DATE_TRUNC('DAY', NOW()) - NetDueDate) > DURATION '15DAYS'\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (DISTINCT ARUniqueKey) AS \"#Receivables\", \n\"Project_Manager\" AS \"Project Manager\"\nFROM FLATTEN(\"defaultview-197\")\nWHERE EVENT_NAME = 'Create Accounts Receivable'\nAND ClearingJournalEntry IS NULL\nAND (DATE_TRUNC('DAY', NOW()) - NetDueDate) > DURATION '15DAYS'\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10\n"
    },
    {
        "filename": "e0ae4c7960",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of invoice item changes",
        "query": "SELECT COUNT (\"event_name\") FILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n 'Change Invoice%' OR event_name LIKE 'Create Invoice Item Cancellation%' OR event_name LIKE 'Update Invoice%') AS created_with_dialog MATCHES (created_with_dialog)),\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nGROUP BY 2\norder by 1 desc\nLimit 10",
        "llm_name": "signal_description_gpt-35-turbo",
        "description_llm": "Count the number of events where the event name is 'Change Invoice%', 'Create Invoice Item Cancellation%', or 'Update Invoice%', and filter them based on the value of the 'created_with_dialog' column. Match the filtered events with the value of the 'created_with_dialog' column. Retrieve the 'SalesDocCustomerCompany' column from the 'defaultview-290' table. Group the results by the second column and order them in descending order. Limit the output to 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(event) FILTER (\n\tWHERE (event_name LIKE 'Change Invoice%' )\n    OR event_name LIKE 'Create Invoice Item Cancellation%'\n\tOR event_name LIKE 'Update Invoice%') AS \"All Invoice Change Events\",\nCOUNT(event) FILTER (\n\tWHERE (created_with_dialog = 'No' OR created_with_dialog = 'Yes')) AS \"Non Dialog Events\",\nCOUNT(event) FILTER (\n\tWHERE (created_with_dialog = 'No' OR created_with_dialog = 'Yes'))/\nCOUNT(event) FILTER (\n\tWHERE (event_name LIKE 'Change Invoice%' )\n    OR event_name LIKE 'Create Invoice Item Cancellation%'\n\tOR event_name LIKE 'Update Invoice%') * 100 AS \"Non-Dialog Events in %\"\nFROM \"defaultview-290\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(event) FILTER (\n\tWHERE (event_name LIKE 'Change Invoice%' )\n    OR event_name LIKE 'Create Invoice Item Cancellation%'\n\tOR event_name LIKE 'Update Invoice%') AS \"All Invoice Change Events\",\nCOUNT(event) FILTER (\n\tWHERE (created_with_dialog = 'No' OR created_with_dialog = 'Yes')) AS \"Non Dialog Events\",\nCOUNT(event) FILTER (\n\tWHERE (created_with_dialog = 'No' OR created_with_dialog = 'Yes'))/\nCOUNT(event) FILTER (\n\tWHERE (event_name LIKE 'Change Invoice%' )\n    OR event_name LIKE 'Create Invoice Item Cancellation%'\n\tOR event_name LIKE 'Update Invoice%') * 100 AS \"Non-Dialog Events in %\"\nFROM \"defaultview-290\""
    },
    {
        "filename": "f5213b3ab3",
        "split": "test",
        "name": "Events by User Type and frequency of occurence",
        "query": "SELECT DISTINCT  event_name,\"Event Created by User Type\",count(event_name) AS A\nFROM FLATTEN (\"defaultview-59\")\nORDER BY 3  desc\nlimit 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting unique values from the 'event_name' and 'Event Created by User Type' columns in the 'defaultview-59' table. It is also counting the number of occurrences of each unique 'event_name'. The results are then ordered in descending order based on the count of 'event_name'. Finally, the query limits the output to the top 10 results. The output will be a list of unique event names, the type of user who created the event, and the count of each event name, sorted in descending order of count.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n    DISTINCT event_name AS \"Event Name\", \n   \"Event Created by User Type\" AS \"User Type\",\n    COUNT (event_name) AS \"No. of Occurrences\"\nFROM \"defaultview-59\"\nORDER BY 3 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n    DISTINCT event_name AS \"Event Name\", \n   \"Event Created by User Type\" AS \"User Type\",\n    COUNT (event_name) AS \"No. of Occurrences\"\nFROM \"defaultview-59\"\nORDER BY 3 DESC\nLIMIT 10"
    },
    {
        "filename": "bac85808e2",
        "split": "test",
        "name": "Conformance Level",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES (\n    \t'Create PO Item'\n\t\t~> 'Release PO'\n\t\t~> 'Create Goods Receipt'\n\t\t~> ('Record Invoice Receipt'|'Create FI Invoice')\n\t\t~> 'Clear Invoice')) \n\t/ COUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Clear Invoice')) \n    * 100 AS \"Conformance Rate\"\n\nFROM \"defaultview-124\" ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the 'Conformance Rate' from the table named 'defaultview-124'. It does this by first counting the number of case IDs where the event name follows a specific sequence: 'Create PO Item', then 'Release PO', then 'Create Goods Receipt', and then either 'Record Invoice Receipt' or 'Create FI Invoice', and finally 'Clear Invoice'. This count is then divided by the total number of case IDs where the event name is 'Clear Invoice'. The result is multiplied by 100 to get the 'Conformance Rate' in percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (WHERE\n\t\t(SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Create PO Item') AS step1 \n\tAND (SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Release PO') AS step2\n    AND (SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Create Goods Receipt') AS step3\n    AND ((SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Record Invoice Receipt') IS NOT NULL \n\t\tOR (SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Create FI Invoice') IS NOT NULL) AS step4\n    AND (SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Clear Invoice') AS step5\n\t/ COUNT(case_id) FILTER (WHERE\n\t\t(SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Clear Invoice')) \n    * 100 AS \"Conformance Rate\"\nFROM \"defaultview-124\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (WHERE\n\t\t(SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Create PO Item') AS step1 \n\tAND (SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Release PO') AS step2\n    AND (SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Create Goods Receipt') AS step3\n    AND ((SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Record Invoice Receipt') IS NOT NULL \n\t\tOR (SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Create FI Invoice') IS NOT NULL) AS step4\n    AND (SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Clear Invoice') AS step5\n\t/ COUNT(case_id) FILTER (WHERE\n\t\t(SELECT event_name\n        FROM FLATTEN(\"defaultview-124\") \n        WHERE event_name = 'Clear Invoice')) \n    * 100 AS \"Conformance Rate\"\nFROM \"defaultview-124\"\n"
    },
    {
        "filename": "d9c60165f1",
        "split": "test",
        "name": "PO Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"PO Confirmation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of unique 'Last Invoice Id' from the table 'defaultview-431' where the 'PO Confirmation Status' is 'Rejected' and the 'PO Item Line Type' is 'Catalog'. It does this by first counting the distinct 'Last Invoice Id' that meet these conditions, then dividing this by the total count of distinct 'Last Invoice Id' in the table, and finally multiplying the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n100 * COUNT(DISTINCT \"Last Invoice Id\" )\nFILTER (\n\tWHERE (\"PO Confirmation Status\" = 'Rejected' )\n\tAND (\"PO Item Line Type\" = 'Catalog' ))\n/ COUNT( DISTINCT \"Last Invoice Id\" )\nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n100 * COUNT(DISTINCT \"Last Invoice Id\" )\nFILTER (\n\tWHERE (\"PO Confirmation Status\" = 'Rejected' )\n\tAND (\"PO Item Line Type\" = 'Catalog' ))\n/ COUNT( DISTINCT \"Last Invoice Id\" )\nFROM \"defaultview-431\""
    },
    {
        "filename": "1c43801ce6",
        "split": "test",
        "name": "TOP 10 Customers with most Invoice Changes ",
        "query": "SELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Invoice%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the distinct 'UniqueEventId' from the 'defaultview-383' table where the 'EVENT_NAME' contains the word 'Invoice' and the 'ChangeType' is 'Update'. This count is labeled as '# Changes'. The query also selects the 'SalesDocCustomerCompany' column. The results are grouped by the 'SalesDocCustomerCompany' and ordered in descending order by the count of distinct 'UniqueEventId'. The query limits the output to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \ncount(DISTINCT \"UniqueEventId\" ) Filter (Where ChangeType = 'Update') as \"# Changes\"\n,\"#New\"\n,\"SalesDocEndCustomerDescription\"\n--, \"ProcessName\"\nFROM FLATTEN(\"defaultview-383\")\n--WHERE EVENT_NAME MATCHES ('.*Changes.BoxPackers'.*)\n--AND ChangeType = 'Update' \nWHERE EVENT_NAME MATCHES ('Updates.InvoiceCreating,TheInvoiceIsSimulated,Updates.BillingType')  AND ChangeType = 'Update' \n--AND (\"ChargebackType\" LIKE '%\"Account\"' OR \"ChargebackType\" LIKE '%\"Discount\"') \nAND ChangeType MATCHES ('Update')\n\nAND EVENT_NAME NOT MATCHES ('Joinery_Mandrel' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MandrelAdditionalProduct' )\n--AND EVENT_NAME NOT MATCHES ('Joinery_MeasurementSheetDetail' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Tolerance' )\nAND EVENT_NAME NOT MATCHES ('Joinery_ButtHinges' )\nAND EVENT_NAME NOT MATCHES ('Joinery_CutOut' )\nAND EVENT_NAME NOT MATCHES ('Joinery_FlushBolt' )\nAND EVENT_NAME NOT MATCHES ('Joinery_GlazingBead' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Handle' )\nAND EVENT_NAME NOT MATCHES ('Joinery_InsideSG' )\nAND EVENT_NAME NOT MATCHES ('Joinery_KickPlate' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MullionPost' )\nAND EVENT_NAME NOT MATCHES ('Joinery_OutsideSG' )\nAND EVENT_NAME NOT MATCHES ('Joinery_PullPlate' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_ButtHinges_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_DoorLeafProfile_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_DoorPreparation_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_FlushBolt_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_GlazingBead_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_Handle_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_KickPlate_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_MullionPost_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_PullPlate_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarInnerCircle_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarInnerConnector_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarInnerRectangular_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarInnerSaveDetail_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterCircle_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterConnector_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterRainType_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterRectangular_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterSaveDetails_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterSaveDetail_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_WireFlyScreen_save' )\n--Add New Condition\nAND EVENT_NAME NOT MATCHES ('Joinery_TransomMullionInfill_SaveDetail' )\nAND EVENT_NAME NOT MATCHES ('Joinery_TransomRebate_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_LeaveComponents' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MakeScreen' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MakeScreenI' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MultiFoldingDoorAdd' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MultiFoldingDoorAddGetDefaultValue' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MultiFoldingDoorEdit' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MultiFoldingDoorEditGetDefaultValue' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithDefault' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithFrames' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithPanels' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithStyle' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithSubFrame' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithThresholds' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorMandrelChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorStyleChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorSubFrameChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorSubFrameDetailChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorThresholdChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorCreateNewHinge' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorInsertAPanel' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorPanelCopyFrom' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorPanelFitToOpening' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorPanelGetCADSettings' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorPanelInsertANewDetail' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorProductRefChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyCreateNewHinge' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyFitToPanel' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyHingeRefChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyProductRefChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyReinforcement2Changes' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyReinforcement3Changes' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolySubFrameChange' )\n\n--AND (ChangeType = 'Update')\n--WHERE (ChangeType = 'Update') \nORDER BY 1 DESC \n\n--\"SELECT DISTINCT \"MatchId\", \"EVENT_NAME\", (SELECT EVENT_NAME WHERE EVENT_NAME NOT MATCHES ('calls=Ping'.*?)) AS Event_Name_with_Waiting_Attempts, (SELECT FIRST (OccurrenceDuration) AS \"# AHT if Waiting\" WHERE (EVENT_NAME MATCHES ('Exit Waiting')) GROUP BY EVENT_NAME) AS \"AHT wait\", (SELECT FIRST (OccurrenceDuration) AS \"# AHT if Ping failed\" WHERE (EVENT_NAME MATCHES ('Exit Ping Failed')) GROUP BY EVENT_NAME) AS \"AHT Ping Failed\", FROM \"defaultview-383\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \ncount(DISTINCT \"UniqueEventId\" ) Filter (Where ChangeType = 'Update') as \"# Changes\"\n,\"#New\"\n,\"SalesDocEndCustomerDescription\"\n--, \"ProcessName\"\nFROM FLATTEN(\"defaultview-383\")\n--WHERE EVENT_NAME MATCHES ('.*Changes.BoxPackers'.*)\n--AND ChangeType = 'Update' \nWHERE EVENT_NAME MATCHES ('Updates.InvoiceCreating,TheInvoiceIsSimulated,Updates.BillingType')  AND ChangeType = 'Update' \n--AND (\"ChargebackType\" LIKE '%\"Account\"' OR \"ChargebackType\" LIKE '%\"Discount\"') \nAND ChangeType MATCHES ('Update')\n\nAND EVENT_NAME NOT MATCHES ('Joinery_Mandrel' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MandrelAdditionalProduct' )\n--AND EVENT_NAME NOT MATCHES ('Joinery_MeasurementSheetDetail' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Tolerance' )\nAND EVENT_NAME NOT MATCHES ('Joinery_ButtHinges' )\nAND EVENT_NAME NOT MATCHES ('Joinery_CutOut' )\nAND EVENT_NAME NOT MATCHES ('Joinery_FlushBolt' )\nAND EVENT_NAME NOT MATCHES ('Joinery_GlazingBead' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Handle' )\nAND EVENT_NAME NOT MATCHES ('Joinery_InsideSG' )\nAND EVENT_NAME NOT MATCHES ('Joinery_KickPlate' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MullionPost' )\nAND EVENT_NAME NOT MATCHES ('Joinery_OutsideSG' )\nAND EVENT_NAME NOT MATCHES ('Joinery_PullPlate' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_ButtHinges_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_DoorLeafProfile_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_DoorPreparation_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_FlushBolt_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_GlazingBead_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_Handle_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_KickPlate_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_MullionPost_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_PullPlate_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarInnerCircle_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarInnerConnector_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarInnerRectangular_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarInnerSaveDetail_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterCircle_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterConnector_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterRainType_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterRectangular_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterSaveDetails_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_SashBarOuterSaveDetail_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_Revit_WireFlyScreen_save' )\n--Add New Condition\nAND EVENT_NAME NOT MATCHES ('Joinery_TransomMullionInfill_SaveDetail' )\nAND EVENT_NAME NOT MATCHES ('Joinery_TransomRebate_save' )\nAND EVENT_NAME NOT MATCHES ('Joinery_LeaveComponents' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MakeScreen' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MakeScreenI' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MultiFoldingDoorAdd' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MultiFoldingDoorAddGetDefaultValue' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MultiFoldingDoorEdit' )\nAND EVENT_NAME NOT MATCHES ('Joinery_MultiFoldingDoorEditGetDefaultValue' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithDefault' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithFrames' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithPanels' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithStyle' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithSubFrame' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorAddWithThresholds' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorMandrelChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorStyleChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorSubFrameChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorSubFrameDetailChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashDoorThresholdChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorCreateNewHinge' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorInsertAPanel' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorPanelCopyFrom' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorPanelFitToOpening' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorPanelGetCADSettings' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorPanelInsertANewDetail' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashdoorProductRefChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyCreateNewHinge' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyFitToPanel' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyHingeRefChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyProductRefChange' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyReinforcement2Changes' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolyReinforcement3Changes' )\nAND EVENT_NAME NOT MATCHES ('Joinery_SashPolySubFrameChange' )\n\n--AND (ChangeType = 'Update')\n--WHERE (ChangeType = 'Update') \nORDER BY 1 DESC \n\n--\"SELECT DISTINCT \"MatchId\", \"EVENT_NAME\", (SELECT EVENT_NAME WHERE EVENT_NAME NOT MATCHES ('calls=Ping'.*?)) AS Event_Name_with_Waiting_Attempts, (SELECT FIRST (OccurrenceDuration) AS \"# AHT if Waiting\" WHERE (EVENT_NAME MATCHES ('Exit Waiting')) GROUP BY EVENT_NAME) AS \"AHT wait\", (SELECT FIRST (OccurrenceDuration) AS \"# AHT if Ping failed\" WHERE (EVENT_NAME MATCHES ('Exit Ping Failed')) GROUP BY EVENT_NAME) AS \"AHT Ping Failed\", FROM \"defaultview-383\"\n"
    },
    {
        "filename": "aef7816f49",
        "split": "test",
        "name": "On time Delivery Rate",
        "query": "SELECT COUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE (\"DeliveryGoodsMovementOnTime\" = 'Yes')) > 0\n\t)\n/ COUNT(case_id)\n* 100 \nFROM \"defaultview-43\"\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is calculating the percentage of cases where the event 'DeliveryGoodsMovementOnTime' is marked as 'Yes' in the table 'defaultview-43'. It does this by first counting the number of cases where 'DeliveryGoodsMovementOnTime' is 'Yes', then dividing this by the total number of cases, and finally multiplying the result by 100 to get the percentage. The result will give us the proportion of on-time delivery goods movements in all cases.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  (\n   COUNT (CASE_ID) FILTER (\n      WHERE \"DeliveryGoodsMovementOnTime\" \n  \t\t\t  = 'Yes' \n  \t)\n  /COUNT (CASE_ID))\n* 100 AS \"Proportion of on-time Delivery Goods Movement\"\nFROM \"defaultview-43\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  (\n   COUNT (CASE_ID) FILTER (\n      WHERE \"DeliveryGoodsMovementOnTime\" \n  \t\t\t  = 'Yes' \n  \t)\n  /COUNT (CASE_ID))\n* 100 AS \"Proportion of on-time Delivery Goods Movement\"\nFROM \"defaultview-43\""
    },
    {
        "filename": "2ea60d0c15",
        "split": "test",
        "name": "Orders with SFC Activities not started",
        "query": "SELECT\n  count(\"case_id\")\nFROM\n  (\n    SELECT\n      DISTINCT case_id,\n      COUNT(DISTINCT \"event_name\") AS cnt\n    FROM\n      FLATTEN(\"defaultview-545\")\n    GROUP BY\n      1\n  ) AS T\nWHERE\n  cnt = 2",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the number of unique case IDs from the table 'defaultview-545' where the count of distinct event names associated with each case ID is exactly 2. The query first creates a subquery where it selects distinct case IDs and counts the number of distinct event names associated with each case ID. This is done by grouping by the case ID. The result of this subquery is then used in the main query where it filters out the rows where the count of distinct event names is not equal to 2. Finally, it counts the number of remaining case IDs.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(DISTINCT CASE_ID)\nFROM\n(\nSELECT\nDISTINCT CASE_ID,\nCOUNT(DISTINCT EVENT_NAME) \nOVER (PARTITION BY CASE_ID) AS EVENT_COUNT\nFROM \"defaultview-545\"\n)\nAS SUB\nWHERE EVENT_COUNT = 2\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(DISTINCT CASE_ID)\nFROM\n(\nSELECT\nDISTINCT CASE_ID,\nCOUNT(DISTINCT EVENT_NAME) \nOVER (PARTITION BY CASE_ID) AS EVENT_COUNT\nFROM \"defaultview-545\"\n)\nAS SUB\nWHERE EVENT_COUNT = 2\n                "
    },
    {
        "filename": "8898300b76",
        "split": "test",
        "name": "Total Spend by PO Supplier (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to retrieve data from the table named 'defaultview-431'. It calculates the sum of the values in the column 'PO Item Total Amount' and labels this as 'Total PO Amount'. It also calculates the average difference between the last and first 'END_TIME' values, labeling this as 'Avg. Cycle Time'. Additionally, it retrieves the values from the 'PO Item Supplier ID' column and labels this as 'PO Supplier'. The results are then sorted in descending order based on the 'Total PO Amount'. Finally, the query limits the output to the top 10 records.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\"PO Item Total Amount\") AS \"Total PO Amount\",\nAVG((SELECT LAST (\"END_TIME\")) - (SELECT FIRST (\"END_TIME\"))) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\"PO Item Total Amount\") AS \"Total PO Amount\",\nAVG((SELECT LAST (\"END_TIME\")) - (SELECT FIRST (\"END_TIME\"))) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "adbdde6533",
        "split": "test",
        "name": "Average invoice customer process time",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) WHERE event_name IN ('Create Invoice'))\n\t-\n\t(SELECT FIRST(end_time) WHERE event_name IN ('Post Goods Issue'))\n)\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between the last 'Create Invoice' event and the first 'Post Goods Issue' event in the 'defaultview-290' table. Specifically, it first selects the last 'end_time' where the 'event_name' is 'Create Invoice'. Then, it selects the first 'end_time' where the 'event_name' is 'Post Goods Issue'. The difference between these two times is calculated for each row, and then the average of these differences is taken. The result will give an idea of the average time taken between the creation of an invoice and the posting of goods issue.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG ((SELECT LAST (end_time) \n\t\t\tWHERE event_name ='Create Invoice'))\n\t - (SELECT FIRST (end_time) \n     \tWHERE event_name ='Post Goods Issue')\n        \nFROM \"defaultview-290\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG ((SELECT LAST (end_time) \n\t\t\tWHERE event_name ='Create Invoice'))\n\t - (SELECT FIRST (end_time) \n     \tWHERE event_name ='Post Goods Issue')\n        \nFROM \"defaultview-290\" "
    },
    {
        "filename": "abc59e9a38",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time PO Creation to PO Release ( > 3 Days)  by PO Plant",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - \n(SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg Cycle Time PO Create to PO Release\",\n\"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 20",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is performing operations on the table named 'defaultview-124'. It starts by selecting and counting the number of 'CASE_ID' and labels it as 'No. of Cases'. Then, it calculates the average time difference between the last 'END_TIME' where 'EVENT_NAME' is 'Release PO' and the last 'END_TIME' where 'EVENT_NAME' is 'Create PO Item'. This average time difference is labeled as 'Avg Cycle Time PO Create to PO Release'. Additionally, it selects the 'PO Item Plant' column and labels it as 'PO Plant'. The query only considers the records where the time difference between the last 'END_TIME' where 'EVENT_NAME' is 'Release PO' and the last 'END_TIME' where 'EVENT_NAME' is 'Create PO Item' is greater than 3 days. The results are then grouped by the third selected column, which is 'PO Plant'. Finally, the results are ordered in descending order by the first selected column, which is 'No. of Cases', and only the top 20 records are returned.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\", \nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg Cycle Time PO Create to PO Release\",\n\"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\n WHERE \n (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') > DURATION '3DAYS'\nORDER BY 1 DESC NULLS LAST\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\", \nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg Cycle Time PO Create to PO Release\",\n\"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\n WHERE \n (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') > DURATION '3DAYS'\nORDER BY 1 DESC NULLS LAST\nLIMIT 20"
    },
    {
        "filename": "73a2f1f5d3",
        "split": "test",
        "name": "Number of Invoice without PO",
        "query": "SELECT \nCOUNT(DISTINCT \"Last Invoice Id\")FILTER (WHERE \"PO ID\" IS NULL) AS \"# PO without Invoice\"\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the distinct 'Last Invoice Id' from the table 'defaultview-431' where the 'PO ID' is null. The result is labeled as '# PO without Invoice'. This means it is calculating the number of purchase orders that do not have an associated invoice.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT (DISTINCT \"Last Invoice Id\") FILTER (\n      WHERE \"PO ID\" IS NULL \n   \t  )\n   \t  AS \"# PO without Invoice\"\n      \t\nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT (DISTINCT \"Last Invoice Id\") FILTER (\n      WHERE \"PO ID\" IS NULL \n   \t  )\n   \t  AS \"# PO without Invoice\"\n      \t\nFROM \"defaultview-431\""
    },
    {
        "filename": "e21acbeec8",
        "split": "test",
        "name": "_Total approved hours",
        "query": "\nSELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to calculate the total sum of the 'TSR_HoursApproved' column values from the table named 'defaultview-197'. The 'SUM' function is used to add up all the values in the 'TSR_HoursApproved' column.",
        "llm_gpt-35-turbo-0613_query": "\n-- 2. SUM CASE\nSELECT\n SUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\n-- 2. SUM CASE\nSELECT\n SUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "55cd82a6dd",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create FI Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-124\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Create FI Invoice')",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting the average difference in end times between two events from the table named 'defaultview-124'. The two events are 'Create FI Invoice' and 'Create PO Item'. Specifically, it first selects the last end time where the event name is 'Create FI Invoice'. Then, it selects the first end time where the event name is 'Create PO Item'. The difference between these two times is calculated and the average of these differences is taken. The query only considers rows where the event name matches either 'Create PO Item' or 'Create FI Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\n\t(SELECT LAST(end_time) \n     WHERE event_name IN ('Create FI Invoice'))\n    -(SELECT FIRST(end_time) \n     WHERE event_name IN ('Create PO Item'))\n    ) \n\nFROM \"defaultview-124\"\n\nWHERE EVENT_NAME matches ('Create PO Item'|'Create FI Invoice' )",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\n\t(SELECT LAST(end_time) \n     WHERE event_name IN ('Create FI Invoice'))\n    -(SELECT FIRST(end_time) \n     WHERE event_name IN ('Create PO Item'))\n    ) \n\nFROM \"defaultview-124\"\n\nWHERE EVENT_NAME matches ('Create PO Item'|'Create FI Invoice' )"
    },
    {
        "filename": "0f63bf2cea",
        "split": "test",
        "name": "Planning Rate",
        "query": "SELECT \nCOUNT(case_id) \n\tFILTER(WHERE \"Planned Order Number\" IS NOT NULL)\n/ \nCOUNT(case_id)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of non-null values in the 'Planned Order Number' column from the 'defaultview-183' table. It does this by first counting the number of rows where 'Planned Order Number' is not null, then dividing this by the total number of rows (represented by the count of 'case_id'), and finally multiplying by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT \ncount(\"case_id\") WHERE  \"Planned Order Number\"  IS NOT NULL\n / count(\"case_id\") \n* 100\n FROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \ncount(\"case_id\") WHERE  \"Planned Order Number\"  IS NOT NULL\n / count(\"case_id\") \n* 100\n FROM \"defaultview-183\""
    },
    {
        "filename": "a8de636039",
        "split": "test",
        "name": "SOL-1709 No-Touch Invoice Processing Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES  (('Remove Dunning Block'\n    \t\t|'Set Dunning Block'|'Change Dunning Block'|'Send 1st Overdue Notice'\n    \t\t|'Update Baseline Date'|'Update Payment Term'|'Reverse Invoice'))) \n    \tAND (event_name MATCHES('Clear Invoice'))\n\t)\n/ (COUNT(case_id) FILTER (\n\tWHERE event_name MATCHES('Clear Invoice'))\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of 'Clear Invoice' events that are not associated with any of the following events: 'Remove Dunning Block', 'Set Dunning Block', 'Change Dunning Block', 'Send 1st Overdue Notice', 'Update Baseline Date', 'Update Payment Term', 'Reverse Invoice'. This is done by first counting the number of 'case_id' where the 'event_name' is 'Clear Invoice' and does not match any of the listed events. This count is then divided by the total number of 'case_id' where the 'event_name' is 'Clear Invoice'. The result is then multiplied by 100 to get the percentage. The data is being retrieved from the table named 'defaultview-59'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (DISTINCT case_id) FILTER (\n    WHERE\n      event_name = 'Clear Invoice' AND (\n        NOT (\"event_name\" MATCHES (\n\"Remove Dunning Block\"\n          | \"Set Dunning Block\"\n          | \"Change Dunning Block\"\n          | \"Send 1st Overdue Notice\"\n          | \"Update Baseline Date\"\n          | \"Update Payment Term\"\n          | \"Reverse Invoice\"\n        ))\n      )\n  ) / COUNT (DISTINCT case_id) FILTER (\n          WHERE\n    event_name = 'Clear Invoice'\n  )\n  * 100\nFROM\n  \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (DISTINCT case_id) FILTER (\n    WHERE\n      event_name = 'Clear Invoice' AND (\n        NOT (\"event_name\" MATCHES (\n\"Remove Dunning Block\"\n          | \"Set Dunning Block\"\n          | \"Change Dunning Block\"\n          | \"Send 1st Overdue Notice\"\n          | \"Update Baseline Date\"\n          | \"Update Payment Term\"\n          | \"Reverse Invoice\"\n        ))\n      )\n  ) / COUNT (DISTINCT case_id) FILTER (\n          WHERE\n    event_name = 'Clear Invoice'\n  )\n  * 100\nFROM\n  \"defaultview-59\""
    },
    {
        "filename": "cbc696ff54",
        "split": "test",
        "name": "Overdue Receivables",
        "query": "SELECT \n \"AR_CustomerName\" ,\n\"Overdue Category\", \ncount(\"ARUniqueKey\" ) as \"#Receivables\"\nFROM FLATTEN (\"defaultview-197\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate \n \n GROUP BY 1,2\n ORDER BY  3 DESC\nLIMIT 20",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting the 'AR_CustomerName' and 'Overdue Category' columns from the 'defaultview-197' table. It also counts the number of unique keys in the 'ARUniqueKey' column and labels this count as '#Receivables'. The query only considers rows where 'NetDueDate' is not null, the 'event_name' is 'Create Accounts Receivable', 'ClearingDate' is null, and the current date and time is greater than or equal to 'NetDueDate'. The results are grouped by 'AR_CustomerName' and 'Overdue Category', and ordered in descending order by the count of '#Receivables'. The query returns the top 20 results based on this ordering.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  \"AR_CustomerName\",\n  \"Overdue Category\",\n  COUNT (ARUniqueKey) AS \"#Receivables\"\nFROM\n  FLATTEN(\"defaultview-197\")\nWHERE\n  NetDueDate IS NOT NULL\n  AND event_name = 'Create Accounts Receivable'\n  AND ClearingDate IS NULL\n  AND NOW() >= NetDueDate\nGROUP BY 1,2\nORDER BY 3 DESC\nLIMIT 20\n    ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  \"AR_CustomerName\",\n  \"Overdue Category\",\n  COUNT (ARUniqueKey) AS \"#Receivables\"\nFROM\n  FLATTEN(\"defaultview-197\")\nWHERE\n  NetDueDate IS NOT NULL\n  AND event_name = 'Create Accounts Receivable'\n  AND ClearingDate IS NULL\n  AND NOW() >= NetDueDate\nGROUP BY 1,2\nORDER BY 3 DESC\nLIMIT 20\n    "
    },
    {
        "filename": "c6d0126e8f",
        "split": "test",
        "name": "Monthly average number of reworks per case",
        "query": "SELECT \nDATE_TRUNC('month', \n                   (SELECT FIRST(end_time) \n                    WHERE event_name \n                    IN ('Change Status to Closed')\n                   )\n          ) AS \"Month\",\nAVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1 AS \"Rework ratio per case\" \nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1\n  AND \"ResolutionStatus\" IS NOT NULL\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to extract data from the table named 'defaultview-217'. It first truncates the date to the month of the first occurrence of the event 'Change Status to Closed' and labels this column as 'Month'. Then, it calculates the average count of the event 'Change Status to In Progress' per case, subtracts one from this average, and labels this column as 'Rework ratio per case'. The query only considers rows where the count of the event 'Change Status to In Review' is more than one and where the 'ResolutionStatus' is not null. The results are grouped by the 'Month' and ordered by the 'Month'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  DATE_TRUNC('month', (SELECT FIRST (END_TIME) FILTER (\n      WHERE EVENT_NAME IN ('Change Status to Closed'))\n  ))) AS \"Month\",\n  AVG (\n    (\n      SELECT \n        COUNT (EVENT_NAME) FILTER (\n          WHERE \n            EVENT_NAME IN ('Change Status to In Progress')\n        )\n    ) OVER (\n      ORDER BY \n        FIRST_OCCURRENCE(RES_NAME) NULLS FIRST\n    )\n  ) - 1 AS \"Rework ratio per case\"\nFROM\n  \"defaultview-217\"\nWHERE\n  (\n    SELECT\n      BOOL_OR (\n\t\t(EVENT_NAME IN ('Assign Reviewer') AND START_DATE IS NULL)\n\t\tOR (EVENT_NAME IN ('Reopen') AND START_DATE IS NOT NULL)\n      )\n  ) AND 1 < (\n      SELECT FIRST(case_id) FILTER (WHERE event_name = 'Close Review'))\n  AND \"ResolutionStatus\" IS NOT NULL\nORDER BY\n  1 ASC NULLS FIRST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  DATE_TRUNC('month', (SELECT FIRST (END_TIME) FILTER (\n      WHERE EVENT_NAME IN ('Change Status to Closed'))\n  ))) AS \"Month\",\n  AVG (\n    (\n      SELECT \n        COUNT (EVENT_NAME) FILTER (\n          WHERE \n            EVENT_NAME IN ('Change Status to In Progress')\n        )\n    ) OVER (\n      ORDER BY \n        FIRST_OCCURRENCE(RES_NAME) NULLS FIRST\n    )\n  ) - 1 AS \"Rework ratio per case\"\nFROM\n  \"defaultview-217\"\nWHERE\n  (\n    SELECT\n      BOOL_OR (\n\t\t(EVENT_NAME IN ('Assign Reviewer') AND START_DATE IS NULL)\n\t\tOR (EVENT_NAME IN ('Reopen') AND START_DATE IS NOT NULL)\n      )\n  ) AND 1 < (\n      SELECT FIRST(case_id) FILTER (WHERE event_name = 'Close Review'))\n  AND \"ResolutionStatus\" IS NOT NULL\nORDER BY\n  1 ASC NULLS FIRST"
    },
    {
        "filename": "1f62e5a6ab",
        "split": "test",
        "name": "Average number of reworks per case",
        "query": "\nSELECT\nAVG((SELECT COUNT(event_name) - COUNT(DISTINCT event_name)))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is performing an operation on the table named 'defaultview-545'. It is calculating the average of the difference between the total count of 'event_name' and the count of distinct 'event_name'. In other words, it is finding out how many 'event_name' entries are repeated on average in the table 'defaultview-545'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG(\"CountRepeatedEventNames\")\n  FILTER (WHERE \"event_name\" IS NOT NULL)\n  FILTER (WHERE \"CountRepeatedEventNames\" > 0)\nFROM (\n  SELECT\n    (COUNT(\"event_name\") - COUNT(DISTINCT \"event_name\")) AS \"CountRepeatedEventNames\",\n    \"event_name\"\n  FROM\n    FLATTEN(\"defaultview-545\")\n  ) AS sub\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG(\"CountRepeatedEventNames\")\n  FILTER (WHERE \"event_name\" IS NOT NULL)\n  FILTER (WHERE \"CountRepeatedEventNames\" > 0)\nFROM (\n  SELECT\n    (COUNT(\"event_name\") - COUNT(DISTINCT \"event_name\")) AS \"CountRepeatedEventNames\",\n    \"event_name\"\n  FROM\n    FLATTEN(\"defaultview-545\")\n  ) AS sub\n                "
    },
    {
        "filename": "0d0de12fc7",
        "split": "test",
        "name": "Invoice Open Amount",
        "query": "SELECT SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\" ) \n+ SUM(\"AR_ClearedAmountInCompanyCodeCurrency\" )\nFROM \"defaultview-197\"\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to calculate the total sum of two columns from the table named 'defaultview-197'. The two columns are 'AR_InvoicedAmountInCompanyCodeCurrency' and 'AR_ClearedAmountInCompanyCodeCurrency'. The query will add up all the values in each of these columns separately and then add those two sums together to get the final result.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\") + SUM(\"AR_ClearedAmountInCompanyCodeCurrency\") \nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\") + SUM(\"AR_ClearedAmountInCompanyCodeCurrency\") \nFROM \"defaultview-197\""
    },
    {
        "filename": "6777a222c9",
        "split": "test",
        "name": "Rate of Cases executed in a given timeframe",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (\n    \tWHERE (SELECT LAST (END_TIME) FILTER (\n        \tWHERE EVENT_NAME IN ('Clear Invoice')) \n\t- FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))) \n        \t< DURATION '14days') \n\t/ COUNT (CASE_ID) * 100\n    \nFROM \"defaultview-225\" ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-225' where the time difference between the last 'Clear Invoice' event and the first 'Post Invoice' event is less than 14 days. It does this by first counting the number of such cases using a filter on the 'EVENT_NAME' column and the 'END_TIME' column. Then it divides this count by the total number of cases in the table, and multiplies the result by 100 to get the percentage. The result of this query will be a single number representing this percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          LAST (END_TIME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Clear Invoice')\n          )\n      ) - (\n        SELECT\n          FIRST (END_TIME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Post Invoice')\n          )\n      ) < DURATION '14day'\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          LAST (END_TIME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Clear Invoice')\n          )\n      ) - (\n        SELECT\n          FIRST (END_TIME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Post Invoice')\n          )\n      ) < DURATION '14day'\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-225\"\n                "
    },
    {
        "filename": "ec2c5da4a8",
        "split": "test",
        "name": "<<Placeholder>>",
        "query": "SELECT MIN(1) FROM \"defaultview-124\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting the minimum value of 1 from the table named 'defaultview-124'. However, since the minimum value of 1 is always 1, this query essentially returns 1. The table 'defaultview-124' is not actually being used to derive any data in this query.",
        "llm_gpt-35-turbo-0613_query": "SELECT 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT 1"
    },
    {
        "filename": "a77c1ac911",
        "split": "test",
        "name": "SOL-1742 Cases at compliance risk",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (NOT event_name MATCHES('Create Invoice' \t~> 'Post Invoice' \t~> 'Clear Invoice' \t~> 'Due Date passed')\n\tAND (SELECT BOOL_OR( event_name IN ('Post Invoice')))\n\tAND (SELECT\n\t\tLAST(end_time) FILTER (WHERE event_name IN ('Clear Invoice'))\n\t\t-\n\t\tFIRST(end_time) FILTER (WHERE event_name IN ('Create Invoice'))\n\t) < DURATION '25days'\n\t)\n)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of case_ids from the table 'defaultview-59' that meet certain conditions. The conditions are as follows: the event_name does not match the sequence 'Create Invoice' followed by 'Post Invoice', then 'Clear Invoice', and finally 'Due Date passed'. Additionally, the event_name must include 'Post Invoice'. Furthermore, the difference between the last end_time where the event_name is 'Clear Invoice' and the first end_time where the event_name is 'Create Invoice' must be less than 25 days. If all these conditions are met, the case_id is counted.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id)\n\nFROM FlattenedEvent AS Flatten\n\nWHERE\n    event_name \n      MATCHES('Post Invoice') \n\tAND NOT (event_name \n      MATCHES('Create Invoice' \n      \t~> 'Post Invoice' \n        ~> 'Clear Invoice' \n        ~> 'Due Date passed'))\n\tAND event_name LIKE 'Post Invoice%'\n    AND (SELECT LAST (end_time) WHERE event_name = 'Clear Invoice') - (SELECT FIRST(end_time) FILTER(event_name = 'Create Invoice')) < DURATION '25days'\n        \n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id)\n\nFROM FlattenedEvent AS Flatten\n\nWHERE\n    event_name \n      MATCHES('Post Invoice') \n\tAND NOT (event_name \n      MATCHES('Create Invoice' \n      \t~> 'Post Invoice' \n        ~> 'Clear Invoice' \n        ~> 'Due Date passed'))\n\tAND event_name LIKE 'Post Invoice%'\n    AND (SELECT LAST (end_time) WHERE event_name = 'Clear Invoice') - (SELECT FIRST(end_time) FILTER(event_name = 'Create Invoice')) < DURATION '25days'\n        \n"
    },
    {
        "filename": "27e7e22e07",
        "split": "test",
        "name": "Payment Terms Differences where PO is better",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n\t\t< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \n\tELSE \"PO Cash Discount Days 1\" END))\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of case_id from the table named 'defaultview-57'. It applies a filter to this count. The filter checks if the value in the column 'Last FI Invoice Item Cash Discount Days 1' is less than the value in the column 'PO Cash Discount Days 1'. If the value in 'PO Cash Discount Days 1' is NULL, it is treated as 0 for this comparison. So, in essence, the query is counting the number of cases where the 'Last FI Invoice Item Cash Discount Days 1' is less than the 'PO Cash Discount Days 1' or 0 if 'PO Cash Discount Days 1' is NULL.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n COUNT(case_id) FILTER(\n    \tWHERE \n            ((\"Last FI Invoice Item Cash Discount Days 1\" ))\n          \t<\n\t\t\t(CASE \n            \tWHEN (\"PO Cash Discount Days 1\" IS NULL) \n            \t\tTHEN 0 \n                \tELSE \"PO Cash Discount Days 1\"\n            END)\n        ))\n  FROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n COUNT(case_id) FILTER(\n    \tWHERE \n            ((\"Last FI Invoice Item Cash Discount Days 1\" ))\n          \t<\n\t\t\t(CASE \n            \tWHEN (\"PO Cash Discount Days 1\" IS NULL) \n            \t\tTHEN 0 \n                \tELSE \"PO Cash Discount Days 1\"\n            END)\n        ))\n  FROM \"defaultview-57\""
    },
    {
        "filename": "fd2419de53",
        "split": "test",
        "name": "Open Overdue Invoices by Company Code (Top-10)",
        "query": "SELECT \n\"Inv. Company Code Text\" AS \"Company Code Name\"\n,SUM (\"Inv. Converted USD Amount\") AS \"Invoice Amount in $\"\n,COUNT(case_id) AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n  AND \"Last Inv. Item Due Date\" < DATE_TRUNC('day', NOW()) \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The query is selecting data from the table named 'defaultview-225'. It is renaming the column 'Inv. Company Code Text' to 'Company Code Name'. It is also calculating the sum of the 'Inv. Converted USD Amount' column and renaming it to 'Invoice Amount in $'. Additionally, it is counting the number of case_id's and renaming this count to 'No. of Invoices'. The query is only considering the rows where 'Last Inv. Item Clearing Date' is null and 'Last Inv. Item Due Date' is earlier than the current date. The results are grouped by the 'Company Code Name' and ordered in descending order by the 'Invoice Amount in $'. The query is limiting the output to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  \"Inv. Company Code Text\" AS \"Company Code Name\" ,\n  SUM (\"Inv. Converted USD Amount\") AS \"Invoice Amount in $\",\n  COUNT(case_id) AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nWHERE\n  (\"Last Inv. Item Clearing Date\" IS NULL)\n  AND (\"US-Last Inv. Item Due Date\" < DATE_TRUNC('day', NOW()))\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  \"Inv. Company Code Text\" AS \"Company Code Name\" ,\n  SUM (\"Inv. Converted USD Amount\") AS \"Invoice Amount in $\",\n  COUNT(case_id) AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nWHERE\n  (\"Last Inv. Item Clearing Date\" IS NULL)\n  AND (\"US-Last Inv. Item Due Date\" < DATE_TRUNC('day', NOW()))\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10"
    },
    {
        "filename": "05eb19e4de",
        "split": "test",
        "name": "Number of idle cases",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOW() - (SELECT LAST(end_time)) > DURATION '21days'\n\t\tAND (SELECT FIRST(event_name) FILTER (\n\t\t\tWHERE event_name IN ('Update Opportunity Stage to: Closed Won',\n'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n'Update Opportunity Stage to: Closed Lost',\n'Update Opportunity Stage to: Dead',\n'Update Opportunity Stage to: Dead - No Opportunity',\n'Update Opportunity Stage to: Dead - No Decision',\n'Update Opportunity Stage to: Dead - Duplicate',\n'Update Opportunity Stage to: 00 Dead - Lost',\n'Update Lead Status to: Archive',\n'Reject Quote'))) IS NULL\n   )\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of case_id from the table named 'defaultview-545'. It applies a filter to this count. The filter checks if the current time minus the last end_time is greater than 21 days. Additionally, it checks if the first event_name that matches any of the listed event names ('Update Opportunity Stage to: Closed Won', 'Update Opportunity Stage to: 06 Closed Won (Onboarding)', 'Update Opportunity Stage to: Closed Lost', 'Update Opportunity Stage to: Dead', 'Update Opportunity Stage to: Dead - No Opportunity', 'Update Opportunity Stage to: Dead - No Decision', 'Update Opportunity Stage to: Dead - Duplicate', 'Update Opportunity Stage to: 00 Dead - Lost', 'Update Lead Status to: Archive', 'Reject Quote') is null. In other words, it counts the case_id where the last end_time is more than 21 days ago and none of the listed event names were the first event for that case.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) FILTER (\n\tWHERE BEHAVIOR OF LAST (END_TIME)\n\t\tWHERE event_name IN ('Update Opportunity Stage to: Closed Won', \n\t'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n\t'Update Opportunity Stage to: Closed Lost', \n\t'Update Opportunity Stage to: Dead',\n\t'Update Opportunity Stage to: Dead - No Opportunity',\n\t'Update Opportunity Stage to: Dead - No Decision',\n\t'Update Opportunity Stage to: Dead - Duplicate',\n\t'Update Opportunity Stage to: 00 Dead - Lost',\n\t'Update Lead Status to: Archive',\n\t'Reject Quote')) AS \"No Reason\"\nFROM \"defaultview-545\"\n--\tWHERE COUNT(case_id) FILTER (\n--  WHERE (NOW() - LAST(end_time))) > DURATION '21days')\n--  AND FIRST(event_name) NOT IN('Create Opportunity', 'Reject Quote') IS TRUE\n--GROUP BY 1\n --\"Filter End Event Timestamp Last\" IS NOT NULL\n--GROUP BY 1\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) FILTER (\n\tWHERE BEHAVIOR OF LAST (END_TIME)\n\t\tWHERE event_name IN ('Update Opportunity Stage to: Closed Won', \n\t'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n\t'Update Opportunity Stage to: Closed Lost', \n\t'Update Opportunity Stage to: Dead',\n\t'Update Opportunity Stage to: Dead - No Opportunity',\n\t'Update Opportunity Stage to: Dead - No Decision',\n\t'Update Opportunity Stage to: Dead - Duplicate',\n\t'Update Opportunity Stage to: 00 Dead - Lost',\n\t'Update Lead Status to: Archive',\n\t'Reject Quote')) AS \"No Reason\"\nFROM \"defaultview-545\"\n--\tWHERE COUNT(case_id) FILTER (\n--  WHERE (NOW() - LAST(end_time))) > DURATION '21days')\n--  AND FIRST(event_name) NOT IN('Create Opportunity', 'Reject Quote') IS TRUE\n--GROUP BY 1\n --\"Filter End Event Timestamp Last\" IS NOT NULL\n--GROUP BY 1\n"
    },
    {
        "filename": "40f1d116ed",
        "split": "test",
        "name": "Invoice Open Overdue Amount",
        "query": "SELECT \nSUM(\"AmountInGlobalCurrency\" )  \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND NOW() >= NetDueDate )\nAS \"Amount\"\nFROM  FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to calculate the total sum of the 'AmountInGlobalCurrency' column from the 'defaultview-222' table. However, this calculation is only performed for the rows where the 'EVENT_NAME' column is equal to 'Create Accounts Receivable', the 'ClearingJournalEntry' column is null, and the current date and time is greater than or equal to the value in the 'NetDueDate' column. The result of this calculation is then labeled as 'Amount'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM (\"AmountInGlobalCurrency\")  FILTER (\n\t\tWHERE EVENT_NAME ='Create Accounts Receivable'\n\t\t\tAND ClearingJournalEntry IS NULL\n\t\t\tAND (DATE_TRUNC('DAY', NOW()) >= \"NetDueDate\" ))\n\t\t\tAS \"Amount\"\nFROM \"defaultview-222\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM (\"AmountInGlobalCurrency\")  FILTER (\n\t\tWHERE EVENT_NAME ='Create Accounts Receivable'\n\t\t\tAND ClearingJournalEntry IS NULL\n\t\t\tAND (DATE_TRUNC('DAY', NOW()) >= \"NetDueDate\" ))\n\t\t\tAS \"Amount\"\nFROM \"defaultview-222\""
    },
    {
        "filename": "dbf5719713",
        "split": "test",
        "name": "Last PO Terms of Payment Key",
        "query": "SELECT \"Last PO Terms of Payment Key\" AS \"Last PO Terms of Payment Key\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting two columns from the 'defaultview-225' table. The first column is 'Last PO Terms of Payment Key', which is kept as is. The second column is 'Inv. Accounting Document Number', but instead of selecting the values, it is counting the number of entries in this column and labeling this count as 'No. of Invoices'. The query then groups the results by the first column, which is 'Last PO Terms of Payment Key'. Finally, it orders the results in descending order based on the second column, which is the count of 'No. of Invoices'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Last PO Terms of Payment Key\"\n,COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Last PO Terms of Payment Key\"\n,COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 desc"
    },
    {
        "filename": "3ca9a3a9b0",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference grouped by Plant",
        "query": "SELECT COUNT (CASE_ID), \"Plant\"\nFROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL\nGROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the number of cases from the table named 'defaultview-183' where the 'Actual Finish Date' is the same as the 'Scheduled Finish Date' and the 'Planned Order Number' is not specified (is NULL). The query then groups these results by the 'Plant' column (which is the second column in the SELECT statement, hence 'GROUP BY 2'). The results are then ordered in descending order based on the count of case IDs. Finally, the query limits the output to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) AS \"# Case\", \"Plant\" \nFROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\"\nAND \"Planned Order Number\" IS NULL \nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) AS \"# Case\", \"Plant\" \nFROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\"\nAND \"Planned Order Number\" IS NULL \nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "efb87ebe9e",
        "split": "test",
        "name": "Market forecast override rate",
        "query": "SELECT\nCOUNT(case_id) FILTER(\n\tWHERE(\n\t\t(SELECT FIRST(\"end_time\")\n\t\t\tWHERE event_name IN ('Review Marketing Forecast') \n\t\t)IS NOT NULL\n\t)\n)\n/\nCOUNT(case_id) FILTER(\n\tWHERE \"Marketing Forecast Qty\" <> 0\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases where the event 'Review Marketing Forecast' has occurred at least once, out of all the cases where the 'Marketing Forecast Qty' is not zero. This is done in the 'defaultview-404' table. The query first counts the number of case_ids where the 'end_time' of the 'Review Marketing Forecast' event is not null, indicating that the event has occurred. This count is then divided by the total number of case_ids where the 'Marketing Forecast Qty' is not zero. The result is multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT (case_id) FILTER (\n    WHERE\n        (SELECT COUNT (EVENT_NAME)\n\n          WHERE EVENT_NAME = 'Review Marketing Forecast'\n          AND END_TIME IS NOT NULL\n         ) > 0\n          )\n  / COUNT (case_id) FILTER (WHERE \"Marketing Forecast Qty\" != 0) * 100\nFROM\n  \"defaultview-404\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT (case_id) FILTER (\n    WHERE\n        (SELECT COUNT (EVENT_NAME)\n\n          WHERE EVENT_NAME = 'Review Marketing Forecast'\n          AND END_TIME IS NOT NULL\n         ) > 0\n          )\n  / COUNT (case_id) FILTER (WHERE \"Marketing Forecast Qty\" != 0) * 100\nFROM\n  \"defaultview-404\"\n                "
    },
    {
        "filename": "bead32ea3f",
        "split": "test",
        "name": "$ of Invoices with its PT better than Vendor Master data",
        "query": "SELECT SUM(\"Inv. Converted USD Amount\") FILTER(\n\t\tWHERE (\"Last Inv. Item Cash Discount Days 1\") < \n    \t  (\"Last Inv. Item Vendor Master CD 1\") OR \n          (\"Last Inv. Item Cash Discount Days 2\") < \n    \t  (\"Last Inv. Item Vendor Master CD 2\") OR \n          (\"Last Inv. Item Net Payment Terms Period\") <\n          (\"Last Inv. Item Vendor Master NDD\"))\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The query is calculating the sum of the 'Inv. Converted USD Amount' column from the 'defaultview-225' table. However, it only includes the rows where either the value in the 'Last Inv. Item Cash Discount Days 1' column is less than the value in the 'Last Inv. Item Vendor Master CD 1' column, or the value in the 'Last Inv. Item Cash Discount Days 2' column is less than the value in the 'Last Inv. Item Vendor Master CD 2' column, or the value in the 'Last Inv. Item Net Payment Terms Period' column is less than the value in the 'Last Inv. Item Vendor Master NDD' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"Inv. Converted USD Amount\") \nFilter (WHERE (\"Last Inv. Item Cash Discount Days 1\" < \"Last Inv. Item Vendor Master CD 1\"))\n+ SUM(\"Inv. Converted USD Amount\") \nFilter (WHERE (\"Last Inv. Item Cash Discount Days 2\" < \"Last Inv. Item Vendor Master CD 2\"))\n+ SUM(\"Inv. Converted USD Amount\") \nFilter (WHERE (\"Last Inv. Item Net Payment Terms Period\" < \"Last Inv. Item Vendor Master NDD\"))\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"Inv. Converted USD Amount\") \nFilter (WHERE (\"Last Inv. Item Cash Discount Days 1\" < \"Last Inv. Item Vendor Master CD 1\"))\n+ SUM(\"Inv. Converted USD Amount\") \nFilter (WHERE (\"Last Inv. Item Cash Discount Days 2\" < \"Last Inv. Item Vendor Master CD 2\"))\n+ SUM(\"Inv. Converted USD Amount\") \nFilter (WHERE (\"Last Inv. Item Net Payment Terms Period\" < \"Last Inv. Item Vendor Master NDD\"))\nFROM \"defaultview-225\""
    },
    {
        "filename": "e9674c4a5e",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of delivery item changes ",
        "query": "SELECT COUNT (\"event_name\") \n\tFILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n\t\t'Change Delivery%' OR event_name LIKE 'Update Delivery%') \n        AS created_with_dialog MATCHES (created_with_dialog))\n    ,\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nWHERE SalesDocCustomerCompany IS NOT NULL\nGROUP BY 2\nORDER BY 1 DESC\nLimit 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the number of 'event_name' from the table 'defaultview-290'. However, it only counts those events where the event name starts with either 'Change Delivery' or 'Update Delivery'. This is specified in the FILTER clause using the BEHAVIOUR function and the LIKE operator. The query also considers only those records where the 'SalesDocCustomerCompany' is not null. The results are then grouped by the second selected column, which is 'SalesDocCustomerCompany'. Finally, the query sorts the results in descending order based on the count of 'event_name' and limits the output to the top 10 records.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (event_name)\nfilter (WHERE BEHAVIOR (\n\t1 = 1 AND event_name LIKE 'Change Delivery%'\n\tOR event_name LIKE 'Update Delivery%' ) \nAS event_name IS NOT NULL ) \nAS \"No of Change and Update Delivery Events\" ,\n\"SalesDocCustomerCompany\"\nFROM \"defaultview-290\" \nWHERE \"SalesDocCustomerCompany\" IS NOT NULL\nGROUP BY 2\nORDER by 1 desc \nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (event_name)\nfilter (WHERE BEHAVIOR (\n\t1 = 1 AND event_name LIKE 'Change Delivery%'\n\tOR event_name LIKE 'Update Delivery%' ) \nAS event_name IS NOT NULL ) \nAS \"No of Change and Update Delivery Events\" ,\n\"SalesDocCustomerCompany\"\nFROM \"defaultview-290\" \nWHERE \"SalesDocCustomerCompany\" IS NOT NULL\nGROUP BY 2\nORDER by 1 desc \nLIMIT 10"
    },
    {
        "filename": "a9ef667704",
        "split": "test",
        "name": "Average Payment Time",
        "query": "SELECT \nAVG (\"ClearingDate\"   - \"CreationDate\"  ) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \nAs \"AVG Clearing Time\"\nFROM FLATTEN(\"defaultview-222\")\nWHERE \"ClearingDate\" IS NOT NULL AND \"NetDueDate\" IS NOT NULL",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to calculate the average time between the 'ClearingDate' and 'CreationDate' from the table named 'defaultview-222'. This calculation is only performed for rows where the 'EVENT_NAME' starts with 'Clear'. The result of this calculation is labeled as 'AVG Clearing Time'. Additionally, the query only considers rows where both 'ClearingDate' and 'NetDueDate' are not null, meaning they must have some value.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG(ClearingDate - CreationDate) FILTER (\n       \tWHERE EVENT_NAME LIKE 'Clear%' )\n        \tAS \"AVG Clearing Time\"\nFROM \"defaultview-222\"\nWHERE \t\"CLEARINGDATE\" IS NOT NULL\n\tAND \"CLEARINGDATE\" != \"NETDUEDATE\" \n\tAND \"NETDUEDATE\" IS NOT NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG(ClearingDate - CreationDate) FILTER (\n       \tWHERE EVENT_NAME LIKE 'Clear%' )\n        \tAS \"AVG Clearing Time\"\nFROM \"defaultview-222\"\nWHERE \t\"CLEARINGDATE\" IS NOT NULL\n\tAND \"CLEARINGDATE\" != \"NETDUEDATE\" \n\tAND \"NETDUEDATE\" IS NOT NULL"
    },
    {
        "filename": "0f07aff629",
        "split": "test",
        "name": "_Percentage of projects in execution",
        "query": "\nSELECT\n(\nCOUNT(case_id) FILTER (WHERE Project_StageText = 'In Execution')\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases where the project is in the 'In Execution' stage. It does this by first counting the number of cases in the 'defaultview-197' table where the 'Project_StageText' column has the value 'In Execution'. This count is then divided by the total number of cases in the 'defaultview-197' table. The result of this division is multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n( \nCOUNT(CASE_ID) FILTER (WHERE \"Project_StageText\" IN ('In Execution')) \n/ COUNT(CASE_ID)\n) * 100 \nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n( \nCOUNT(CASE_ID) FILTER (WHERE \"Project_StageText\" IN ('In Execution')) \n/ COUNT(CASE_ID)\n) * 100 \nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "3f84ef5334",
        "split": "test",
        "name": "Early Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Due Date\" - \"Last Inv. Item Clearing Date\" > DURATION '5days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-225' where the difference between the 'Last Inv. Item Due Date' and the 'Last Inv. Item Clearing Date' is more than 5 days. The denominator for this percentage calculation is the total number of cases where the 'Last Inv. Item Clearing Date' is not null. The result is multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(CASE_ID) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Due Date\" - \"Last Inv. Item Clearing Date\" > DURATION '5days'\n      )\n  ) / COUNT(CASE_ID) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(CASE_ID) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Due Date\" - \"Last Inv. Item Clearing Date\" > DURATION '5days'\n      )\n  ) / COUNT(CASE_ID) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\""
    },
    {
        "filename": "cd37fa8683",
        "split": "test",
        "name": "Avg. Cycle Time (Create PO to Release PO)",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')\n- (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item'))\nAS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average cycle time between the 'Release PO' event and the 'Create PO Item' event from the table named 'defaultview-124'. It does this by first selecting the last end time where the event name is 'Release PO' and then subtracting the first end time where the event name is 'Create PO Item'. The result of this calculation is then averaged to give the 'Avg. Cycle Time'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) \n\t WHERE event_name IN ('Release PO'))\n\t-(SELECT FIRST(end_time) \n\t WHERE event_name IN ('Create PO Item'))\n   )\n   AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) \n\t WHERE event_name IN ('Release PO'))\n\t-(SELECT FIRST(end_time) \n\t WHERE event_name IN ('Create PO Item'))\n   )\n   AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "4cc4a0017e",
        "split": "test",
        "name": "SOL-1742 Average cycle time for cases affected by rework",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is performing an operation on the table named 'defaultview-59'. It is calculating the average difference between the last and first 'end_time' values. However, this operation is filtered by a condition. This condition checks if there is any 'event_name' that occurs more than once. This is done by creating a subquery that counts the occurrence of each 'event_name' and returns a boolean value indicating whether any 'event_name' has occurred more than once. If such an 'event_name' exists, the average difference in 'end_time' is calculated, otherwise, it is not.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG(last_end_time-first_end_time)\n  FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(event_count > 1)\n        FROM\n          (\n            SELECT\n              event_name,\n              COUNT(event_name) AS event_count\n            FROM\n              FLATTEN (\"defaultview-59\")\n            GROUP BY\n              1\n          ) sub\n      )\n  )\nFROM\n  (\n    SELECT\n      LAST (end_time) AS last_end_time,\n      FIRST (end_time) AS first_end_time,\n      event_name\n    FROM\n      FLATTEN (\"defaultview-59\")\n    GROUP BY\n      3\n  ) AS SUB2\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG(last_end_time-first_end_time)\n  FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(event_count > 1)\n        FROM\n          (\n            SELECT\n              event_name,\n              COUNT(event_name) AS event_count\n            FROM\n              FLATTEN (\"defaultview-59\")\n            GROUP BY\n              1\n          ) sub\n      )\n  )\nFROM\n  (\n    SELECT\n      LAST (end_time) AS last_end_time,\n      FIRST (end_time) AS first_end_time,\n      event_name\n    FROM\n      FLATTEN (\"defaultview-59\")\n    GROUP BY\n      3\n  ) AS SUB2\n                "
    },
    {
        "filename": "7003c60890",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Type",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Type\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to retrieve specific information from the table named 'defaultview-124'. It starts by counting the number of 'case_id' entries, which is then labeled as 'No. of Cases'. Next, it calculates the sum of the 'PO Item Net Order Value' column, which is then labeled as 'Total PO Value'. Additionally, it retrieves the data from the 'PO Type' column. The results are then sorted in descending order based on the first column of the result set, which is 'No. of Cases'. Finally, the query limits the output to the top 50 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) AS \"No. of Cases\",\nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Type\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) AS \"No. of Cases\",\nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Type\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n"
    },
    {
        "filename": "da7eeb3527",
        "split": "test",
        "name": "%Manually created Process orders grouped by Business Line",
        "query": "SELECT \ncount(Distinct case_id) as \"#Process Orders\",\n(COUNT (EVENT_NAME) FILTER \n(WHERE \"Event Created By User Type\" IN ('Dialog'))) / (COUNT (EVENT_NAME))* 100 \nas \"Manual rate\",\n\"Division\"\nFROM FLATTEN(\"defaultview-183\")\nWHERE EVENT_NAME = 'Create Process Order'\norder by 1 desc\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to perform operations on the table named 'defaultview-183'. Firstly, it counts the distinct 'case_id' values, which is then labeled as '#Process Orders'. Secondly, it calculates the percentage of 'EVENT_NAME' values that were created by a user type 'Dialog', and this percentage is labeled as 'Manual rate'. The 'EVENT_NAME' values considered for this calculation are only those that are equal to 'Create Process Order'. Lastly, it selects the 'Division' column values. The results are then ordered in descending order based on the first column, which is the count of distinct 'case_id' values.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT case_id) AS \"# Process Orders\",\nCOUNT (DISTINCT \"case_id\") FILTER (\n\t\tWHERE (SELECT BOOL_OR(\"UserEventType\"  IN ('Dialog')))\n\t\t) / COUNT (DISTINCT \"case_id\") FILTER (\n\tWHERE (SELECT BOOL_OR (\"UserEventType\"  NOT IN ('Dialog')))\n) * 100  AS \"Manual rate\", \"Division\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT case_id) AS \"# Process Orders\",\nCOUNT (DISTINCT \"case_id\") FILTER (\n\t\tWHERE (SELECT BOOL_OR(\"UserEventType\"  IN ('Dialog')))\n\t\t) / COUNT (DISTINCT \"case_id\") FILTER (\n\tWHERE (SELECT BOOL_OR (\"UserEventType\"  NOT IN ('Dialog')))\n) * 100  AS \"Manual rate\", \"Division\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC"
    },
    {
        "filename": "505cfbf1ae",
        "split": "test",
        "name": "Cleared Amount",
        "query": "SELECT SUM(\"AmountInGlobalCurrency\" )\nFROM FLATTEN(\"defaultview-222\")\nWHERE event_name LIKE 'Clear%'",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is performing a calculation on the 'defaultview-222' table. Specifically, it is summing up the values in the 'AmountInGlobalCurrency' column. However, it's not doing this for all rows in the table. It's only considering the rows where the 'event_name' starts with 'Clear'. The 'LIKE' keyword is used to match text string patterns. In this case, it's used to select all the rows where the 'event_name' begins with 'Clear'. The '%' sign is used to define wildcards (missing letters) both before and after the pattern. Here it is used after 'Clear' which means it will select any event_name that starts with 'Clear'. The 'FLATTEN' function is used to transform the semi-structured data into a flat table structure.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tSUM(\"AmountInGlobalCurrency\")\nFROM\n\t\"defaultview-222\" \nWHERE\n\tevent_name LIKE 'Clear%'\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tSUM(\"AmountInGlobalCurrency\")\nFROM\n\t\"defaultview-222\" \nWHERE\n\tevent_name LIKE 'Clear%'\n\n"
    },
    {
        "filename": "0761bcb1e5",
        "split": "test",
        "name": "Open Overdue Amount (15+ Days)",
        "query": "SELECT SUM(\"AmountInCompanyCodeCurrency\"  ) \nFROM FLATTEN(\"defaultview-197\")\nWHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day'",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the sum of the 'AmountInCompanyCodeCurrency' column from the 'defaultview-197' table. It is only considering the rows where the 'EVENT_NAME' column is equal to 'Create Accounts Receivable', the 'ClearingJournalEntry' column is null, and the difference between the current date and the 'NetDueDate' column is more than 15 days.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  SUM (\"AmountInCompanyCodeCurrency\") FILTER (\n    WHERE\n      EVENT_NAME MATCHES ('Create Accounts Receivable') \n      AND ClearingJournalEntry MATCHES (NULL) \n      AND (DATE_TRUNC('day', NOW()) - NetDueDate) > DURATION '15day'\n  ) \nFROM\n  \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  SUM (\"AmountInCompanyCodeCurrency\") FILTER (\n    WHERE\n      EVENT_NAME MATCHES ('Create Accounts Receivable') \n      AND ClearingJournalEntry MATCHES (NULL) \n      AND (DATE_TRUNC('day', NOW()) - NetDueDate) > DURATION '15day'\n  ) \nFROM\n  \"defaultview-197\""
    },
    {
        "filename": "707fa40cc4",
        "split": "test",
        "name": "AVG Cycle Time for On-Time Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" > \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between the last 'Pay Invoice' event and the first 'Receive Invoice' event from the table named 'defaultview-431'. It only considers the rows where the event sequence is 'Receive Invoice' followed by 'Pay Invoice' and where the 'Last Invoice Due Date' is later than the 'Last Invoice Payment Date'. The time difference is calculated using the 'END_TIME' column of these events.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG(\"Pay Invoice\" - \"Receive Invoice\")\n    \n\nFROM \"defaultview-431\"\nWHERE \n\t(\"event\" = 'Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" > \"Last Invoice Payment Date\")\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG(\"Pay Invoice\" - \"Receive Invoice\")\n    \n\nFROM \"defaultview-431\"\nWHERE \n\t(\"event\" = 'Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" > \"Last Invoice Payment Date\")\n"
    },
    {
        "filename": "d6c10482e1",
        "split": "test",
        "name": "Combinations with understocking",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Inventory Target\" > \"Stock on Hand\") \n\tAND DATE_TRUNC('month', NOW()) = \"MONTH\"\n)\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is counting the number of case_ids from the table named 'defaultview-404'. However, it is not counting all the case_ids. It is only counting those case_ids where the 'Inventory Target' is greater than the 'Stock on Hand' and the 'MONTH' is equal to the current month. The current month is obtained by truncating the current date to the month. This means that the day and time are removed from the current date, leaving only the year and month. The FILTER function is used to apply these conditions.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (case_id) FILTER (\n\tWHERE \"Inventory Target\" > \"Stock on Hand\"\n\tAND \"MONTH\" = (DATE_TRUNC('month',NOW())) \n)\nFROM \"defaultview-404\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (case_id) FILTER (\n\tWHERE \"Inventory Target\" > \"Stock on Hand\"\n\tAND \"MONTH\" = (DATE_TRUNC('month',NOW())) \n)\nFROM \"defaultview-404\""
    },
    {
        "filename": "6ec4e9c927",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Type",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Process Order Type\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the number of process orders and categorize them by their type. It operates on the table named 'defaultview-183'. The query first selects the 'CASE_ID' column and counts the number of unique entries, which represents the number of process orders. This count is then labeled as '# Process Orders'. The query also selects the 'Process Order Type' column. The 'GROUP BY 2' clause groups the results by the second selected column, which is 'Process Order Type'. Finally, the 'order by 1 desc' clause sorts the results in descending order based on the first selected column, which is the count of process orders. The output of this query will provide a summary of the number of process orders for each type, sorted from the highest to the lowest count.",
        "llm_gpt-35-turbo-0613_query": "SELECT count (\"CASE_ID\") AS \"# Process Orders\", \"Process Order Type\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count (\"CASE_ID\") AS \"# Process Orders\", \"Process Order Type\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc"
    },
    {
        "filename": "cf2c703ad2",
        "split": "test",
        "name": "No. of Cases by PO Vendor & PO Plant City",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\", \n\"PO Vendor Name\" AS \"PO Vendor\", \n\"PO Item Plant City\" AS \"PO Plant City\"\nFROM \"defaultview-124\"\n--WHERE (EVENT_NAME MATCHES ('Clear Invoice') AND EVENT_NAME MATCHES ('Create PR Item'))\nORDER BY 1 DESC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to retrieve data from the table named 'defaultview-124'. It is counting the number of cases, represented by the 'CASE_ID' column, and renaming this count as 'No. of Cases'. It is also selecting the data from the 'PO Vendor Name' column and renaming it as 'PO Vendor', and selecting the data from the 'PO Item Plant City' column and renaming it as 'PO Plant City'. The query is then ordering the results in descending order based on the count of cases. Note that there is a commented out WHERE clause that would filter the results to only include rows where the 'EVENT_NAME' matches both 'Clear Invoice' and 'Create PR Item' if it were uncommented.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\",\n\"PO Vendor Name\" as \"PO Vendor\", \n\"PO Item Plant City\"as \"PO Plant City\"\nFROM \"defaultview-124\"\n\n---WHERE EVENT_NAME MATCHES('Clear Invoice' AND 'Create PR Item')\n\n\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\",\n\"PO Vendor Name\" as \"PO Vendor\", \n\"PO Item Plant City\"as \"PO Plant City\"\nFROM \"defaultview-124\"\n\n---WHERE EVENT_NAME MATCHES('Clear Invoice' AND 'Create PR Item')\n\n\nORDER BY 1 DESC"
    },
    {
        "filename": "2b513712ff",
        "split": "test",
        "name": "Number of Billing Documents Cancelled",
        "query": "SELECT \nCOUNT(DISTINCT \"BillingDocument\") FILTER (\n\tWHERE event_name ='Cancel Billing Document')\n\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the unique 'BillingDocument' entries from the table named 'defaultview-222'. However, it doesn't count all entries. It only counts those entries where the 'event_name' is specifically 'Cancel Billing Document'. The result of this query will be the total number of unique 'BillingDocument' entries that have been cancelled. The output of this query will be presented in a JSON format.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (DISTINCT \"BillingDocument\") FILTER (WHERE event_name ='Cancel Billing Document')\nAS \"No of Cancelled Billing Documents\"\nFROM FLATTEN(\"defaultview-222\")\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (DISTINCT \"BillingDocument\") FILTER (WHERE event_name ='Cancel Billing Document')\nAS \"No of Cancelled Billing Documents\"\nFROM FLATTEN(\"defaultview-222\")\n                "
    },
    {
        "filename": "b3e2ffc236",
        "split": "test",
        "name": "Production quantity accuracy ",
        "query": "SELECT \nAVG(\n\t\"Produced Delivered Quantity\"/\"Total Order Quantity\")\n\tFILTER(WHERE \"Delivery Completed\" IS NOT NULL)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average ratio of 'Produced Delivered Quantity' to 'Total Order Quantity' from the table 'defaultview-183'. This average is then multiplied by 100 to convert it into a percentage. However, this calculation is only performed for rows where the 'Delivery Completed' column is not null. In other words, it is finding the average percentage of the total order quantity that has been produced and delivered, but only for orders where the delivery has been completed.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n avg (\"Produced Delivered Quantity\"/\"Total Order Quantity\") * 100\nFROM \"defaultview-183\" \nwhere \"Delivery Completed\" is not null\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n avg (\"Produced Delivered Quantity\"/\"Total Order Quantity\") * 100\nFROM \"defaultview-183\" \nwhere \"Delivery Completed\" is not null\n"
    },
    {
        "filename": "d7a764fe04",
        "split": "test",
        "name": "AVG Cycle Time for Late Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between the last 'Pay Invoice' event and the first 'Receive Invoice' event from the table named 'defaultview-431'. It only considers those records where the sequence of events matches the pattern 'Receive Invoice' followed by 'Pay Invoice'. Additionally, it filters out those records where the 'Last Invoice Due Date' is earlier than the 'Last Invoice Payment Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG (\"Last Invoice Payment Date\" - \"Last Invoice Date\")\n\n FROM \"defaultview-431\"\n WHERE\nevent_name MATCHES('Receive Invoice'->'Pay Invoice')\n\nAND (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG (\"Last Invoice Payment Date\" - \"Last Invoice Date\")\n\n FROM \"defaultview-431\"\n WHERE\nevent_name MATCHES('Receive Invoice'->'Pay Invoice')\n\nAND (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\n"
    },
    {
        "filename": "7cda2249c2",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-545' where the 'Last Invoice Due Date' is earlier than the 'Last Invoice Payment Date'. This is done by first counting the number of cases where the 'Last Invoice Due Date' is earlier than the 'Last Invoice Payment Date'. Then, it counts the total number of cases where the 'Last Invoice Payment Date' is not null, meaning there is a recorded payment date. The first count is divided by the second count and then multiplied by 100 to get the percentage. The result will give us the percentage of cases where the payment was made after the due date.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n    WHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\" \n        ) \n\n/ \n\nCOUNT (CASE_ID) FILTER (\n    WHERE \"Last Invoice Payment Date\" IS NOT NULL)\n\n* 100\n\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n    WHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\" \n        ) \n\n/ \n\nCOUNT (CASE_ID) FILTER (\n    WHERE \"Last Invoice Payment Date\" IS NOT NULL)\n\n* 100\n\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "b1511789a0",
        "split": "test",
        "name": "Current status - what was the last activity",
        "query": "SELECT \nCOUNT(case_id) AS \"Affected Invoice Volume\"\n,LAST(event_name) AS \"Last Activity\"\n,\"Last FI Invoice Item Due Date\"- DATE_TRUNC('day', NOW()) AS \"Days until Due\"\n\nFROM FLATTEN(\"defaultview-57\")\nWHERE (\"Last FI Invoice Item Clearing Date\" IS NULL)\nAND \"Last FI Invoice ID\" IS NOT NULL\nORDER BY 1 desc",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to extract specific information from the table named 'defaultview-57'. It starts by counting the number of case IDs, which is then labeled as 'Affected Invoice Volume'. It then retrieves the last event name and labels it as 'Last Activity'. The query also calculates the difference between the 'Last FI Invoice Item Due Date' and the current date, and labels this as 'Days until Due'. The query only considers the rows where the 'Last FI Invoice Item Clearing Date' is null and the 'Last FI Invoice ID' is not null. Finally, the results are ordered in descending order based on the 'Affected Invoice Volume'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) AS \"Affected Invoice Volume\",\nLAST(\"event\") AS \"Last Activity\",\n\"Last FI Invoice Item Due Date\" - CURRENT_DATE AS \"Days until Due\"\n--\"Last FI Invoice Cleared on\"\n\n\n\n\nFROM FLATTEN(\"defaultview-57\") \n\n\tWHERE (\"Last FI Invoice Item Clearing Date\" IS NULL) \n    AND \"Last FI Invoice ID\" IS NOT NULL\n    \n    \n    \nORDER BY 1 DESCERENCE",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) AS \"Affected Invoice Volume\",\nLAST(\"event\") AS \"Last Activity\",\n\"Last FI Invoice Item Due Date\" - CURRENT_DATE AS \"Days until Due\"\n--\"Last FI Invoice Cleared on\"\n\n\n\n\nFROM FLATTEN(\"defaultview-57\") \n\n\tWHERE (\"Last FI Invoice Item Clearing Date\" IS NULL) \n    AND \"Last FI Invoice ID\" IS NOT NULL\n    \n    \n    \nORDER BY 1 DESCERENCE"
    },
    {
        "filename": "9667cec47a",
        "split": "test",
        "name": "AVG Cycle Time",
        "query": "SELECT AVG((SELECT LAST(end_time))\n\t\t- (SELECT FIRST(end_time)))\nAS \"AVG Cycle Time\"\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average cycle time from the table named 'defaultview-545'. It does this by subtracting the first 'end_time' value from the last 'end_time' value. The result of this subtraction is then averaged over all the rows in the table. The result is returned as 'AVG Cycle Time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG( SELECT\n    LAST (end_time)) - AVG( SELECT\n    FIRST (end_time))  AS \"AVG Cycle Time\"\nFROM\n  \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG( SELECT\n    LAST (end_time)) - AVG( SELECT\n    FIRST (end_time))  AS \"AVG Cycle Time\"\nFROM\n  \"defaultview-545\""
    },
    {
        "filename": "a864b7d746",
        "split": "test",
        "name": "Number Created Receivables over Time",
        "query": "SELECT  \n\tDATE_TRUNC('Day', \"end_time\" )  AS \"Creation Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting and summarizing data from the table named 'defaultview-222'. It is truncating the 'end_time' column to the day and renaming it as 'Creation Date'. It is also counting the distinct values in the 'ARUniqueKey' column and labeling this count as '# Receivables'. The query is filtering the data to only include rows where the 'EVENT_NAME' is like 'Create Accounts Receivable'. The results are then ordered in ascending order by the first column, which is the 'Creation Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT DATE_TRUNC('day', end_time) AS \"Creation Date\", COUNT(DISTINCT \"ARUniqueKey\") AS \"# Receivables\"\nFROM \"defaultview-222\"\n--WHERE EVENT_NAME = 'Create Accounts Receivable'\nWHERE EVENT_NAME like ('Create Accounts Receivable')\nORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT DATE_TRUNC('day', end_time) AS \"Creation Date\", COUNT(DISTINCT \"ARUniqueKey\") AS \"# Receivables\"\nFROM \"defaultview-222\"\n--WHERE EVENT_NAME = 'Create Accounts Receivable'\nWHERE EVENT_NAME like ('Create Accounts Receivable')\nORDER BY 1 ASC"
    },
    {
        "filename": "ed8e83eb28",
        "split": "test",
        "name": "Number of changes in invoice items",
        "query": "SELECT COUNT(\"event_name\") \n\tFILTER(WHERE BEHAVIOR (\n           event_name LIKE 'Change Invoice%' \n           OR event_name LIKE 'Create Invoice Cancellation%' \n           OR event_name LIKE 'Update Invoice%'\n           ) AS created_with_dialog MATCHES (created_with_dialog))\nFROM FLATTEN(\"defaultview-290\")\n\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of 'event_name' from the table 'defaultview-290'. It specifically filters and counts those events where the 'event_name' starts with either 'Change Invoice', 'Create Invoice Cancellation', or 'Update Invoice'. This is done using the BEHAVIOR function and the LIKE operator. The BEHAVIOR function is used to match the pattern 'created_with_dialog' in the 'event_name' column. The result of this query will be the count of such specific events.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(event_name)\nFILTER (WHERE \nBEHAVIOR event_name LIKE 'created_with_dialog'\nAnd event_name ILIKE  'Change Invoice%'\nOR event_name ILIKE 'Create Invoice Cancellation%'\nOR event_name ILIKE 'Update Invoice%')\nFROM FLATTEN(\"defaultview-290\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(event_name)\nFILTER (WHERE \nBEHAVIOR event_name LIKE 'created_with_dialog'\nAnd event_name ILIKE  'Change Invoice%'\nOR event_name ILIKE 'Create Invoice Cancellation%'\nOR event_name ILIKE 'Update Invoice%')\nFROM FLATTEN(\"defaultview-290\")"
    },
    {
        "filename": "33b740656c",
        "split": "test",
        "name": "% Cases Started Late WITHOUT planned order reference",
        "query": "SELECT (count(case_id)\nFILTER (WHERE \"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\n \n  FROM \"defaultview-183\"\n\nWHERE \"Planned Order Number\" IS NULL\n\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to calculate the percentage of cases from the table 'defaultview-183' where the 'Actual Start Date' is later than the 'Scheduled Start Date'. It does this by first counting the number of cases where the difference between 'Actual Start Date' and 'Scheduled Start Date' is greater than 0 seconds. This count is then divided by the total number of cases, and the result is multiplied by 100 to convert it into a percentage. The query only considers cases where the 'Planned Order Number' is null.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER(\n\tWHERE (\"Actual Start Date\")> \"Scheduled Start Date\" )\n)\n/\nCOUNT (CASE_ID)\n* 100\nFROM\n\"defaultview-183\"\nWHERE \"Planned Order Number\" is NULL\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER(\n\tWHERE (\"Actual Start Date\")> \"Scheduled Start Date\" )\n)\n/\nCOUNT (CASE_ID)\n* 100\nFROM\n\"defaultview-183\"\nWHERE \"Planned Order Number\" is NULL\n\n\n"
    },
    {
        "filename": "093ba34496",
        "split": "test",
        "name": "JSM Average Closing Time",
        "query": "\nSELECT\nAVG(\n\tIF(\"Issue Type\" = '[System] Change',\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Canceled','Issue status change: Completed','Issue status change: Failed'))\n\t\t-(\"Issue Created Date\" ),\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Closed','Issue status change: Done'))\n\t\t-(\"Issue Created Date\" ))\n   )\nFROM \"defaultview-370\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between the 'Issue Created Date' and the last 'end_time' of specific events from the 'defaultview-370' table. If the 'Issue Type' is '[System] Change', it considers the last 'end_time' of events 'Issue status change: Canceled', 'Issue status change: Completed', or 'Issue status change: Failed'. If the 'Issue Type' is not '[System] Change', it considers the last 'end_time' of events 'Issue status change: Closed' or 'Issue status change: Done'. The result is the average of these time differences.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n      \n      AVG(\n      \t(\n        \t(SELECT LAST(END_TIME) \n            \tWHERE EVENT_NAME IN('Issue status change: Canceled','Issue status change: Completed','Issue status change: Failed')\n                )\n                -(SELECT LAST(END_TIME) \n            \tWHERE EVENT_NAME IN('Issue status change: Opened'))\n             )\n          +(\n        \t  (SELECT LAST(END_TIME) \n            \tWHERE EVENT_NAME IN('Issue status change: Closed','Issue status change: Done'))\n            \t-(SELECT LAST(END_TIME) \n            \tWHERE EVENT_NAME IN('Issue status change: Opened'))\n             )\n       \t   )\n         ) AS \"AVG Issue Closed and Last Failure Created\",\n           (SELECT LAST(END_TIME)\n           WHERE EVENT_NAME IN ('Issue status change: (All Failure & Casestatus & Progress -->Closed)'))  - (SELECT LAST(END_TIME)\n              WHERE EVENT_NAME IN ('Issue status change: Closed-->(All Failure & Casestatus & Progress)')) \"AVG First Fixed to FTR\"\n    \n\n\n     FROM \"defaultview-370\"\n     \n    WHERE \n    \t\"AVG First Fixed to FTR\" > DURATION '0 seconds'\n\n    \tAND\n    \t(case \n\t\twhen \"Issue Type\" IN('Feature') THEN 'implemented'--changed to implemented\n        end) = 'implemented'\n        \n        -- Issue Closed and Last Failure Created\n\n       \tAND ( (SELECT LAST(END_TIME) WHERE EVENT_NAME IN ('Issue status change: Closed-->(All Failure & Casestatus & Progress)'))) IS NOT NULL\n        \n\n-- Issue Closed and Last Failure Created\n\n--\tSystem Generated Issues. Created --> Closed.\n        AND ( (SELECT BOOL_AND((EVENT_NAME IN ('Issue status change: Opened-->Closed-->(All Failure & Casestatus & Progress)'))) )) -- Last Closed Event\n        AND ( (SELECT BOOL_AND((EVENT_NAME IN ('Issue Opened (System Generated)')))) ) -- First Opened Event\n        \n\n    --  AND \"Hold Date\" IS NULL\n       -- AND \"System Date\" IS NOT NULL\n    --\tAND (\"Issue Changed To Failure Date\") IS NOT NULL\n       -- AND (\"FLG Case Creation\" = 1)\n       \n\n    -- Find Average Between First Time Failure and First Time Repaired\n\n    \tAND ( (SELECT AVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME IN ('Issue status change: (All Failure & Casestatus & Progress)'))) \n            \t- (SELECT LAST (END_TIME) \n                \tWHERE EVENT_NAME IN ('Issue Opened (System Generated)')) \n            \t) \n            ) > DURATION '0 seconds'\n            \n            \n\n  \n          -- Only Issues where System Added Failure Objects\n\n\n\n\n         AND  \"Issue First Failure Object Name\" IS NOT NULL --System Added Failure Objects\n\n\n         \t\t\t      \t\n         --  Last Failure of specific Type must exists\n                  \n\n         AND (\n         \t\t((SELECT LAST (\"CDS IF failure object name A\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST (\"CDS IF failure object name B\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST (\"CDS IF failure object name C\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST (\"CDS IF failure object name D\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST ( \"CDS IF failure object name E\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST (\"CDS IF failure object name F\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             ) \n AND  (\n         \t\t((SELECT LAST (\"CDS IF failure object name A\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component A-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST (\"CDS IF failure object name B\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component B-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST (\"CDS IF failure object name C\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component C-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST (\"CDS IF failure object name D\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component D-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST ( \"CDS IF failure object name E\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component E-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST (\"CDS IF failure object name F\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component F-Dynamic Created\" )) = 1)\n            )\n           \n\n         -- First Failure of specific Type must exists\n\n\n         AND (\n         \t\t((SELECT FIRST (\"CDS IF failure object name A\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST (\"CDS IF failure object name B\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST (\"CDS IF failure object name C\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST (\"CDS IF failure object name D\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST ( \"CDS IF failure object name E\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST (\"CDS IF failure object name F\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n         ) \n         AND  (\n         \t\t((SELECT FIRST (\"CDS IF failure object name A\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component A-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST (\"CDS IF failure object name B\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component B-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST (\"CDS IF failure object name C\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component C-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST (\"CDS IF failure object name D\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component D-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST ( \"CDS IF failure object name E\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component E-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST (\"CDS IF failure object name F\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component F-Dynamic Created\" )) = 1)\n            )\n                   \n\n\n  --end of Default View 370\n                \n\n\n                \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n\n        \n\n\n\n        \n        \n\n        \n\n        \n\n        \n\n        \n        \n\n        \n\n\n\n\n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        -- AND (\"FLG Component B-Dynamic Created\" ) = 1\n        \n        \n      \n        \n       -- Only specific activities (Activities 1 to 2)\n\n\n     \n       -- AND (\n       --      (CASE WHEN (SELECT LAST(\"Activity\")) = '' THEN '<EMPTY>' ELSE (SELECT LAST(\"Activity\")) END) REGEXP 'Activity 1.*-->.*Activity 2'\n       --     )\n    \t--   AND (\"Activity Type\") = 'Failure'   \n        \n    \n-- Only with events --\n  --  AND (SELECT COUNT(FIX_EVENT(activity_id,END_TIME, )) FILTER (\n  --\t\tWHERE EVENT_NAME IN ('Issue status change: (CC) Create Dim Date')\n   --    \t)\n   --       \t)\n   --    \t> 1\n    \n    \n      --FLG Status First --> Current Date Exceeds 60 Days --> Only Opened FLGs where Status was not changed to deleted\n             \n        -- AND (NOW() - (SELECT FIRST (END_TIME) WHERE EVENT_NAME MATCHES \n        -- '(\"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Pre\" \n       \t  --\t\t(After IF Accepted Now Not Any Approval Activity And Its not an Open item.~>\n          --      (IF The Approval  For defined the Item Is Accepted Now(Class) AND (Has not been completed on workdays) AND (Now~> (IF Defined as Object due date)))))'\n        \n         \n         --\"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\")\n\n         -- OR (\"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\")\n\n\n            \n       --- AND DATEDIFF(CURRENT_DATE, \"FLG Status First --> Current Date\") > DATE '1900-01-01' \n       \n        \n   --      \"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\"\n   --OR \"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\")\n            \n\n\n --AND \"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\"\n        --)\n\n       \n       -- ;\n\n\n\n\n--CLEAN 'Issues Last rejection Approval Activtiy'\n\n--FLG Status First --> Current Date Exceeds 60 Days --> Only Opened FLGs where Status was not changed to deleted\n\n--SELECT NOW() - \"FLG Status First --> Current Date\",\n--DURATION '60 days',\n--\"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\"\n\n        \n    \n\n\n \n  --(SELECT FIRST(END_TIME) WHERE EVENT_NAME ILIKE 'issue status change%') IS NOT NULL\n        \n        \n        \n        \n          -- Issue Closed and Last Failure Created\n\n       \tAND (\n        \t(\n           (SELECT LAST(END_TIME) WHERE EVENT_NAME IN ('Issue Opened (System Generated)'))\n           >\n           (SELECT LAST(END_TIME) WHERE EVENT_NAME IN ('Issue status change: Closed-->(All Failure & Casestatus & Progress)'))  \n           )\n        \n         )\n        \n        -- Issue Closed and Last Quality Alert Created\n\n        --AND (\n        --\t(\n        --\t(SELECT FIRST(end_time) WHERE event_name IN ('Issue status change: Closed-->Quality Alert Opened (User Driven)')) \n        --\t>\n        --\t(SELECT FIRST(end_time) WHERE event_name IN ('Quality Alert Openenend (System Generated)')))\n        --\t)\n        \n        -- Issue Closed and Last Repaired Date Created\n\n        \t--AND (\n        \t--(\n        \t--(SELECT FIRST(end_time) WHERE event_name IN ('Issue status change: Closed-->Ends Process Phase 10')))\n        -->\n        \t--(SELECT FIRST(end_time) WHERE event_name IN ('Issue status change: Ends Process Phase 20')) \n        \t--)\n        \n                    -- Last QC Opened Date\n\n       -- AND (\n        --\t(SELECT FIRST(end_time) WHERE event_name IN ('Issue status change: QC Openened (System Generated)'))\n        --    >\n        --    (SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Closed')))\n        \n        --  ASSIGNMENT CHANGES OF QC SCHEDULING ----------------------------------- Issue AQL Values Not referred, yet\n\n\n\t\t--ASTM WORKBOOK HISTORY --------------------------------------------\n\n\t\t--AND ((SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST2 - Receive Ungraded Kick-Off Task))')) IS NOT NULL\n\t\t--     OR (SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST3 - Receive Ungraded Batch Quality Approval))')) IS NOT NULL\n\t\t--     OR (SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST4 - Receive Ungraded OK Task))')) IS NOT NULL\n\t\t--     )\n\n\t\t--AND (SELECT LAST (\"ASTM Ungraded Issue Count\") - FIRST (\"ASTM Ungraded Issue Count\")) > 10\n\n\n\t\t\t-- LFD SCHEDULING ------------------------------------------------------------\n\n\t\t--AND ((SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST4 - Receive Ungraded Ungraded OK Task))')) IS NOT NULL\n\t\t--     OR (SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST3 - Receive Ungraded Ungraded Batch Quality Approval))')) IS NOT NULL\n\t\t--     OR (SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST2 - Receive Ungraded Ungraded Kick-Off Task))')) IS NOT NULL\n\t\t--     )\n\n\n       -- END OF FILTERS: CLEAN ISSUES\n\n         -- FLG Only Opened Clean Issues\n\n\n        --ISSUE STATUS for QC: Open\n\n       --\"Issue 1134 Check - KA02-5317 (ISSUE STATUS for QC: Open)\"\n\n         -- FLG Status Change First Occured --> Issue Creation Date Difference\n       --AND  (FLG Status Change First Occured) - (Issue Created Date) > DURATION '3DAYS'\n        \n        \n       -- FLG Only Closed Clean Issues\n   \n        -- ISSUE STATUS for QC: Closed\n \n      -- \"Issue 1134 Check - KA02-5318 (ISSUE STATUS for QC: Closed)\"\n        \n -- FLG Status Change First Occured --> Last Issue Flg Closed",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n      \n      AVG(\n      \t(\n        \t(SELECT LAST(END_TIME) \n            \tWHERE EVENT_NAME IN('Issue status change: Canceled','Issue status change: Completed','Issue status change: Failed')\n                )\n                -(SELECT LAST(END_TIME) \n            \tWHERE EVENT_NAME IN('Issue status change: Opened'))\n             )\n          +(\n        \t  (SELECT LAST(END_TIME) \n            \tWHERE EVENT_NAME IN('Issue status change: Closed','Issue status change: Done'))\n            \t-(SELECT LAST(END_TIME) \n            \tWHERE EVENT_NAME IN('Issue status change: Opened'))\n             )\n       \t   )\n         ) AS \"AVG Issue Closed and Last Failure Created\",\n           (SELECT LAST(END_TIME)\n           WHERE EVENT_NAME IN ('Issue status change: (All Failure & Casestatus & Progress -->Closed)'))  - (SELECT LAST(END_TIME)\n              WHERE EVENT_NAME IN ('Issue status change: Closed-->(All Failure & Casestatus & Progress)')) \"AVG First Fixed to FTR\"\n    \n\n\n     FROM \"defaultview-370\"\n     \n    WHERE \n    \t\"AVG First Fixed to FTR\" > DURATION '0 seconds'\n\n    \tAND\n    \t(case \n\t\twhen \"Issue Type\" IN('Feature') THEN 'implemented'--changed to implemented\n        end) = 'implemented'\n        \n        -- Issue Closed and Last Failure Created\n\n       \tAND ( (SELECT LAST(END_TIME) WHERE EVENT_NAME IN ('Issue status change: Closed-->(All Failure & Casestatus & Progress)'))) IS NOT NULL\n        \n\n-- Issue Closed and Last Failure Created\n\n--\tSystem Generated Issues. Created --> Closed.\n        AND ( (SELECT BOOL_AND((EVENT_NAME IN ('Issue status change: Opened-->Closed-->(All Failure & Casestatus & Progress)'))) )) -- Last Closed Event\n        AND ( (SELECT BOOL_AND((EVENT_NAME IN ('Issue Opened (System Generated)')))) ) -- First Opened Event\n        \n\n    --  AND \"Hold Date\" IS NULL\n       -- AND \"System Date\" IS NOT NULL\n    --\tAND (\"Issue Changed To Failure Date\") IS NOT NULL\n       -- AND (\"FLG Case Creation\" = 1)\n       \n\n    -- Find Average Between First Time Failure and First Time Repaired\n\n    \tAND ( (SELECT AVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME IN ('Issue status change: (All Failure & Casestatus & Progress)'))) \n            \t- (SELECT LAST (END_TIME) \n                \tWHERE EVENT_NAME IN ('Issue Opened (System Generated)')) \n            \t) \n            ) > DURATION '0 seconds'\n            \n            \n\n  \n          -- Only Issues where System Added Failure Objects\n\n\n\n\n         AND  \"Issue First Failure Object Name\" IS NOT NULL --System Added Failure Objects\n\n\n         \t\t\t      \t\n         --  Last Failure of specific Type must exists\n                  \n\n         AND (\n         \t\t((SELECT LAST (\"CDS IF failure object name A\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST (\"CDS IF failure object name B\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST (\"CDS IF failure object name C\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST (\"CDS IF failure object name D\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST ( \"CDS IF failure object name E\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             OR ((SELECT LAST (\"CDS IF failure object name F\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL)\n             ) \n AND  (\n         \t\t((SELECT LAST (\"CDS IF failure object name A\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component A-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST (\"CDS IF failure object name B\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component B-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST (\"CDS IF failure object name C\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component C-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST (\"CDS IF failure object name D\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component D-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST ( \"CDS IF failure object name E\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component E-Dynamic Created\" )) = 1)\n             OR ((SELECT LAST (\"CDS IF failure object name F\")) WHERE (SELECT LAST (\"Activity Type\" )) = 'Failure') IS NOT NULL\n          \tAND  (SELECT LAST (\"FLG Component F-Dynamic Created\" )) = 1)\n            )\n           \n\n         -- First Failure of specific Type must exists\n\n\n         AND (\n         \t\t((SELECT FIRST (\"CDS IF failure object name A\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST (\"CDS IF failure object name B\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST (\"CDS IF failure object name C\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST (\"CDS IF failure object name D\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST ( \"CDS IF failure object name E\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n             OR ((SELECT FIRST (\"CDS IF failure object name F\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL)\n         ) \n         AND  (\n         \t\t((SELECT FIRST (\"CDS IF failure object name A\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component A-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST (\"CDS IF failure object name B\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component B-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST (\"CDS IF failure object name C\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component C-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST (\"CDS IF failure object name D\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component D-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST ( \"CDS IF failure object name E\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component E-Dynamic Created\" )) = 1)\n             OR ((SELECT FIRST (\"CDS IF failure object name F\")) WHERE (SELECT FIRST (\"Activity Type\")) = 'Failure') IS NOT NULL\n          \tAND  (SELECT FIRST (\"FLG Component F-Dynamic Created\" )) = 1)\n            )\n                   \n\n\n  --end of Default View 370\n                \n\n\n                \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n\n        \n\n\n\n        \n        \n\n        \n\n        \n\n        \n\n        \n        \n\n        \n\n\n\n\n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        -- AND (\"FLG Component B-Dynamic Created\" ) = 1\n        \n        \n      \n        \n       -- Only specific activities (Activities 1 to 2)\n\n\n     \n       -- AND (\n       --      (CASE WHEN (SELECT LAST(\"Activity\")) = '' THEN '<EMPTY>' ELSE (SELECT LAST(\"Activity\")) END) REGEXP 'Activity 1.*-->.*Activity 2'\n       --     )\n    \t--   AND (\"Activity Type\") = 'Failure'   \n        \n    \n-- Only with events --\n  --  AND (SELECT COUNT(FIX_EVENT(activity_id,END_TIME, )) FILTER (\n  --\t\tWHERE EVENT_NAME IN ('Issue status change: (CC) Create Dim Date')\n   --    \t)\n   --       \t)\n   --    \t> 1\n    \n    \n      --FLG Status First --> Current Date Exceeds 60 Days --> Only Opened FLGs where Status was not changed to deleted\n             \n        -- AND (NOW() - (SELECT FIRST (END_TIME) WHERE EVENT_NAME MATCHES \n        -- '(\"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Pre\" \n       \t  --\t\t(After IF Accepted Now Not Any Approval Activity And Its not an Open item.~>\n          --      (IF The Approval  For defined the Item Is Accepted Now(Class) AND (Has not been completed on workdays) AND (Now~> (IF Defined as Object due date)))))'\n        \n         \n         --\"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\")\n\n         -- OR (\"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\")\n\n\n            \n       --- AND DATEDIFF(CURRENT_DATE, \"FLG Status First --> Current Date\") > DATE '1900-01-01' \n       \n        \n   --      \"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\"\n   --OR \"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\")\n            \n\n\n --AND \"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\"\n        --)\n\n       \n       -- ;\n\n\n\n\n--CLEAN 'Issues Last rejection Approval Activtiy'\n\n--FLG Status First --> Current Date Exceeds 60 Days --> Only Opened FLGs where Status was not changed to deleted\n\n--SELECT NOW() - \"FLG Status First --> Current Date\",\n--DURATION '60 days',\n--\"Issue status change: Last Approval Recjeted\"~> \"Issue status change: Preapproval Completed ~ Task\"\n\n        \n    \n\n\n \n  --(SELECT FIRST(END_TIME) WHERE EVENT_NAME ILIKE 'issue status change%') IS NOT NULL\n        \n        \n        \n        \n          -- Issue Closed and Last Failure Created\n\n       \tAND (\n        \t(\n           (SELECT LAST(END_TIME) WHERE EVENT_NAME IN ('Issue Opened (System Generated)'))\n           >\n           (SELECT LAST(END_TIME) WHERE EVENT_NAME IN ('Issue status change: Closed-->(All Failure & Casestatus & Progress)'))  \n           )\n        \n         )\n        \n        -- Issue Closed and Last Quality Alert Created\n\n        --AND (\n        --\t(\n        --\t(SELECT FIRST(end_time) WHERE event_name IN ('Issue status change: Closed-->Quality Alert Opened (User Driven)')) \n        --\t>\n        --\t(SELECT FIRST(end_time) WHERE event_name IN ('Quality Alert Openenend (System Generated)')))\n        --\t)\n        \n        -- Issue Closed and Last Repaired Date Created\n\n        \t--AND (\n        \t--(\n        \t--(SELECT FIRST(end_time) WHERE event_name IN ('Issue status change: Closed-->Ends Process Phase 10')))\n        -->\n        \t--(SELECT FIRST(end_time) WHERE event_name IN ('Issue status change: Ends Process Phase 20')) \n        \t--)\n        \n                    -- Last QC Opened Date\n\n       -- AND (\n        --\t(SELECT FIRST(end_time) WHERE event_name IN ('Issue status change: QC Openened (System Generated)'))\n        --    >\n        --    (SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Closed')))\n        \n        --  ASSIGNMENT CHANGES OF QC SCHEDULING ----------------------------------- Issue AQL Values Not referred, yet\n\n\n\t\t--ASTM WORKBOOK HISTORY --------------------------------------------\n\n\t\t--AND ((SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST2 - Receive Ungraded Kick-Off Task))')) IS NOT NULL\n\t\t--     OR (SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST3 - Receive Ungraded Batch Quality Approval))')) IS NOT NULL\n\t\t--     OR (SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST4 - Receive Ungraded OK Task))')) IS NOT NULL\n\t\t--     )\n\n\t\t--AND (SELECT LAST (\"ASTM Ungraded Issue Count\") - FIRST (\"ASTM Ungraded Issue Count\")) > 10\n\n\n\t\t\t-- LFD SCHEDULING ------------------------------------------------------------\n\n\t\t--AND ((SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST4 - Receive Ungraded Ungraded OK Task))')) IS NOT NULL\n\t\t--     OR (SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST3 - Receive Ungraded Ungraded Batch Quality Approval))')) IS NOT NULL\n\t\t--     OR (SELECT FIRST (EVENT_NAME) WHERE EVENT_NAME MATCHES ('(Issue Created-->(ST2 - Receive Ungraded Ungraded Kick-Off Task))')) IS NOT NULL\n\t\t--     )\n\n\n       -- END OF FILTERS: CLEAN ISSUES\n\n         -- FLG Only Opened Clean Issues\n\n\n        --ISSUE STATUS for QC: Open\n\n       --\"Issue 1134 Check - KA02-5317 (ISSUE STATUS for QC: Open)\"\n\n         -- FLG Status Change First Occured --> Issue Creation Date Difference\n       --AND  (FLG Status Change First Occured) - (Issue Created Date) > DURATION '3DAYS'\n        \n        \n       -- FLG Only Closed Clean Issues\n   \n        -- ISSUE STATUS for QC: Closed\n \n      -- \"Issue 1134 Check - KA02-5318 (ISSUE STATUS for QC: Closed)\"\n        \n -- FLG Status Change First Occured --> Last Issue Flg Closed"
    },
    {
        "filename": "a9f69086c6",
        "split": "test",
        "name": "POs created after Invoice Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER\n\t(WHERE (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice') ~> 'Create PO Item')))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the number of case IDs from the table named 'defaultview-545'. However, it doesn't count all the case IDs. It only counts those where the event name matches a specific pattern. The pattern is a sequence of events: 'Receive Invoice' or 'Reconcile Invoice' followed by 'Create PO Item'. In other words, the query is looking for cases where either a 'Receive Invoice' event or a 'Reconcile Invoice' event was followed by a 'Create PO Item' event.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(CASE_ID) FILTER (\n\tWHERE (EVENT_NAME MATCHES(\n  'Receive Invoice' >> 'Reconcile Invoice' >> 'Create PO Item'))\n\t\n\tOR (EVENT_NAME MATCHES(\n  'Reconcile Invoice' >> 'Create PO Item')))\n)\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(CASE_ID) FILTER (\n\tWHERE (EVENT_NAME MATCHES(\n  'Receive Invoice' >> 'Reconcile Invoice' >> 'Create PO Item'))\n\t\n\tOR (EVENT_NAME MATCHES(\n  'Reconcile Invoice' >> 'Create PO Item')))\n)\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "4ed73943d3",
        "split": "test",
        "name": "Number of Invoices ",
        "query": "SELECT\n  COUNT( case_id)\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the total number of 'case_id' from the table named 'defaultview-545'. The COUNT function is used to calculate the total number of 'case_id' present in the table. The result of this query will be the total count of 'case_id' in the 'defaultview-545' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id)\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id)\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "88d017c4a6",
        "split": "test",
        "name": "Total PO discount Amount on Catalog item",
        "query": "SELECT -SUM(\"PO Amount Discount\") AS \"Total PO discount Amount\"\nFROM \"defaultview-431\"\nWHERE \"PO Item Line Type\" = 'Catalog'",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting the negative sum of the 'PO Amount Discount' from the table named 'defaultview-431'. This sum is then being renamed as 'Total PO discount Amount'. The query is only considering the rows where the 'PO Item Line Type' is equal to 'Catalog'. In other words, it is calculating the total discount amount for all catalog items.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n-sum(\"PO Amount Discount\") AS \"Total PO discount Amount\"\nFROM \"defaultview-431\"\nWHERE \"PO Item Line Type\" = 'Catalog'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n-sum(\"PO Amount Discount\") AS \"Total PO discount Amount\"\nFROM \"defaultview-431\"\nWHERE \"PO Item Line Type\" = 'Catalog'"
    },
    {
        "filename": "7701541719",
        "split": "test",
        "name": "Average Cycle Time Over Time",
        "query": "SELECT\n    DATE_TRUNC('month', (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"PO Creation Date\",\n    \n    AVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Receive Invoice')))\n   \t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"Average cycle time\"\n    \nFROM \"defaultview-545\"\nWHERE event_name MATCHES ('Create PO Item' 'Receive Invoice')\nORDER BY 1 ASC NULLS FIRST\nFILL TIMESERIES('MONTH'), NULL",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting two pieces of information from the 'defaultview-545' table. The first piece of information is the month of the first 'Create PO Item' event, which is being labeled as 'PO Creation Date'. The second piece of information is the average cycle time, which is calculated by subtracting the time of the first 'Create PO Item' event from the time of the last 'Receive Invoice' event. The query is only considering rows where the event_name is either 'Create PO Item' or 'Receive Invoice'. The results are then ordered in ascending order by the 'PO Creation Date', with any null values appearing first. If there are any missing months in the data, the query will fill in these gaps with null values.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nDATE_TRUNC('month', \n\t(SELECT FIRST(end_time) \n    \tWHERE event_name IN ('Create PO Item'))\n    ) \n    AS \"PO Creation Date\",\n    AVG((SELECT LAST(end_time) WHERE event_name = 'Receive Invoice')-(SELECT FIRST(end_time) WHERE event_name = 'Create PO Item'))) \n                                 AS \"Avg. Cycle Time\"\nFROM \"defaultview-545\"\nWHERE (event_name IN ('Create PO Item','Receive Invoice'))\nORDER BY 1 ASC NULLS FIRST\nFILL timeseries('MONTH'), NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nDATE_TRUNC('month', \n\t(SELECT FIRST(end_time) \n    \tWHERE event_name IN ('Create PO Item'))\n    ) \n    AS \"PO Creation Date\",\n    AVG((SELECT LAST(end_time) WHERE event_name = 'Receive Invoice')-(SELECT FIRST(end_time) WHERE event_name = 'Create PO Item'))) \n                                 AS \"Avg. Cycle Time\"\nFROM \"defaultview-545\"\nWHERE (event_name IN ('Create PO Item','Receive Invoice'))\nORDER BY 1 ASC NULLS FIRST\nFILL timeseries('MONTH'), NULL"
    },
    {
        "filename": "ce0a335a7b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Set Deletion Flag WITHOUT planned order reference",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Deletion Flag')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between the last 'Deletion Flag' event and the first 'Create Process Order' event from the table named 'defaultview-183'. It does this by first selecting the last 'end_time' where the 'event_name' is 'Deletion Flag', and then subtracting the first 'end_time' where the 'event_name' is 'Create Process Order'. The average of these time differences is then calculated. This is done only for the rows where the 'Planned Order Number' is NULL.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG\n\t(\n  \t(\n\t\tSELECT LAST (end_time) FILTER (WHERE event_name = 'Deletion Flag')\n\t\t)\n\t-\n  \t(\n\t\tSELECT FIRST (end_time) FILTER (WHERE event_name = 'Create Process Order')\n\t\t)\n  \t)\nFILTER (WHERE \"Planned Order Number\" IS NULL)\nFROM\n\"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG\n\t(\n  \t(\n\t\tSELECT LAST (end_time) FILTER (WHERE event_name = 'Deletion Flag')\n\t\t)\n\t-\n  \t(\n\t\tSELECT FIRST (end_time) FILTER (WHERE event_name = 'Create Process Order')\n\t\t)\n  \t)\nFILTER (WHERE \"Planned Order Number\" IS NULL)\nFROM\n\"defaultview-183\"\n                "
    },
    {
        "filename": "7d57352489",
        "split": "test",
        "name": "Late Delivery after on-time release",
        "query": "SELECT (count(case_id)\nFILTER (\nWHERE \"Actual Delivery Date\" - \"Scheduled Finish Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\nFROM \"defaultview-183\"\nWhere \"Actual Release Date\" - \"Scheduled Release Date\" = DURATION '0seconds'\nAND \"Actual Finish Date\" is not null\nAND \"Scheduled Finish Date\" is not null\nAND \"Actual Start Date\" is not null\nAND \"Scheduled Start Date\" is not null\n\n\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The query is selecting from the table named 'defaultview-183'. It is calculating the percentage of cases where the 'Actual Delivery Date' is later than the 'Scheduled Finish Date'. This is done by counting the number of case_ids where this condition is true and dividing it by the total number of case_ids, then multiplying by 100. The query also has several conditions in the WHERE clause. It only includes rows where the difference between the 'Actual Release Date' and the 'Scheduled Release Date' is exactly 0 seconds, indicating that the release was on schedule. It also only includes rows where the 'Actual Finish Date', 'Scheduled Finish Date', 'Actual Start Date', and 'Scheduled Start Date' are not null, meaning these dates must be known or recorded.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n100 * COUNT (CASE_ID) FILTER \n(WHERE \"Actual Release Date\" - \"Scheduled Release Date\" = DURATION '0seconds'\nAND \"Actual Start Date\" - \"Scheduled Start Date\" = DURATION '0seconds' \nAND \"Actual Finish Date\" - \"Scheduled Finish Date\" = DURATION '0seconds'\nAND \"Actual Delivery Date\" > \"Scheduled Finish Date\"\nAND \"Actual Finish Date\" IS NOT NULL\nAND \"Scheduled Finish Date\" IS NOT NULL\nAND \"Actual Start Date\" IS NOT NULL\nAND \"Scheduled Start Date\" IS NOT NULL\n) \n/ COUNT (CASE_ID) FILTER(WHERE \"Scheduled Finish Date\" IS NOT NULL\n    AND \"Actual Delivery Date\" IS NOT NULL\n\tAND \"Actual Finish Date\" IS NOT NULL\n    AND \"Scheduled Start Date\" IS NOT NULL\n    AND \"Scheduled Release Date\" IS NOT NULL) \n\nFROM \"defaultview-183\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n100 * COUNT (CASE_ID) FILTER \n(WHERE \"Actual Release Date\" - \"Scheduled Release Date\" = DURATION '0seconds'\nAND \"Actual Start Date\" - \"Scheduled Start Date\" = DURATION '0seconds' \nAND \"Actual Finish Date\" - \"Scheduled Finish Date\" = DURATION '0seconds'\nAND \"Actual Delivery Date\" > \"Scheduled Finish Date\"\nAND \"Actual Finish Date\" IS NOT NULL\nAND \"Scheduled Finish Date\" IS NOT NULL\nAND \"Actual Start Date\" IS NOT NULL\nAND \"Scheduled Start Date\" IS NOT NULL\n) \n/ COUNT (CASE_ID) FILTER(WHERE \"Scheduled Finish Date\" IS NOT NULL\n    AND \"Actual Delivery Date\" IS NOT NULL\n\tAND \"Actual Finish Date\" IS NOT NULL\n    AND \"Scheduled Start Date\" IS NOT NULL\n    AND \"Scheduled Release Date\" IS NOT NULL) \n\nFROM \"defaultview-183\"\n"
    },
    {
        "filename": "7afbed3e6c",
        "split": "test",
        "name": "Avg. Cycle Time (GRN to Post Invoice) by PO Purchasing Group",
        "query": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\",\n\"PO Purchasing Group Text\" AS \"Purchasing Group\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to retrieve data from the table named 'defaultview-124'. It calculates the count of 'CASE_ID' and renames it as 'No. of Cases'. It also calculates the average cycle time by subtracting the last 'END_TIME' where 'EVENT_NAME' is 'Create Goods Receipt' from the last 'END_TIME' where 'EVENT_NAME' is 'Create FI Invoice'. This average cycle time is then renamed as 'Avg. Cycle Time'. The query also retrieves the column 'PO Purchasing Group Text' and renames it as 'Purchasing Group'. The results are grouped by the third column in the SELECT statement, which is 'Purchasing Group'. The results are then ordered in descending order by the first column in the SELECT statement, which is 'No. of Cases'. Finally, the query limits the output to the top 50 records.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (CASE_ID) AS \"No. of Cases\", \navg ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\", \n\"PO Purchasing Group Text\" AS \"Purchasing Group\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (CASE_ID) AS \"No. of Cases\", \navg ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\", \n\"PO Purchasing Group Text\" AS \"Purchasing Group\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50"
    },
    {
        "filename": "ebfb4c5190",
        "split": "test",
        "name": "_Average timesheet approval time",
        "query": "\nSELECT\nSUM(\"TSR_AVGCreationTillApprovalTime\" * \"TSR_Count\")\n/\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is performing a calculation on the 'defaultview-197' table. It is multiplying the values in the 'TSR_AVGCreationTillApprovalTime' column by the values in the 'TSR_Count' column for each row, then summing up all these products. This sum is then divided by the total sum of the values in the 'TSR_Count' column. Essentially, this query is calculating the weighted average of the 'TSR_AVGCreationTillApprovalTime' column, using 'TSR_Count' as the weight.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM(\n    \"TSR_AVGCreationTillApprovalTime\"\n      * \"TSR_Count\"\n  ) / SUM(\"TSR_Count\") \nFROM\n  \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM(\n    \"TSR_AVGCreationTillApprovalTime\"\n      * \"TSR_Count\"\n  ) / SUM(\"TSR_Count\") \nFROM\n  \"defaultview-197\""
    },
    {
        "filename": "d62720137d",
        "split": "test",
        "name": "Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-57' where the 'Last FI Invoice Item Due Date' is earlier than the 'Last FI Invoice Item Clearing Date'. It does this by first counting the number of cases where this condition is true, then dividing it by the total number of cases where the 'Last FI Invoice Item Clearing Date' is not null. The result is then multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(COUNT(CASE_ID) FILTER\n  (WHERE\n     (SELECT\n        DATE_TRUNC('day', \"Last FI Invoice Item Due Date\")\n       ) < (SELECT\n        DATE_TRUNC('day', \"Last FI Invoice Item Clearing Date\")\n       ))) / (COUNT(CASE_ID) FILTER\n  (WHERE  (\"Last FI Invoice Item Clearing Date\" IS NOT NULL)))\n* 100\n  FROM \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(COUNT(CASE_ID) FILTER\n  (WHERE\n     (SELECT\n        DATE_TRUNC('day', \"Last FI Invoice Item Due Date\")\n       ) < (SELECT\n        DATE_TRUNC('day', \"Last FI Invoice Item Clearing Date\")\n       ))) / (COUNT(CASE_ID) FILTER\n  (WHERE  (\"Last FI Invoice Item Clearing Date\" IS NOT NULL)))\n* 100\n  FROM \"defaultview-57\"\n                "
    },
    {
        "filename": "aa7861486e",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-133\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to calculate the sum of the 'Inv. Converted USD Amount' from the table named 'defaultview-133'. However, it only includes the rows where the 'Last Inv. Item Clearing Date' is null. In other words, it adds up the 'Inv. Converted USD Amount' for all the entries that do not have a clearing date.",
        "llm_gpt-35-turbo-0613_query": "SELECT  SUM(\"Inv. Converted USD Amount\") FILTER (\n\tWHERE \"Last Inv. Item Clearing Date\" IS NULL) \nFROM \"defaultview-133\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  SUM(\"Inv. Converted USD Amount\") FILTER (\n\tWHERE \"Last Inv. Item Clearing Date\" IS NULL) \nFROM \"defaultview-133\""
    },
    {
        "filename": "935da015df",
        "split": "test",
        "name": "Percentage of not Approved Timesheets by Activity Type",
        "query": "SELECT\n(\nCount(distinct TimesheetRecord) \nFILTER \n(WHERE event_name = 'Create Timesheet Record')\n-\n Count(distinct TimesheetRecord) \nFILTER \n(WHERE event_name IN ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record'))\n)\n/ Count(distinct TimesheetRecord) * 100 AS \"% of not Approved Timesheets\",\n\n\"ActivityType\"  AS \"Activity Type\"\n\n\nFROM FLATTEN(\"defaultview-197\")\n\nORDER BY 1 DESC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to calculate the percentage of not approved timesheets from the 'defaultview-197' table. It first counts the distinct 'TimesheetRecord' where the 'event_name' is 'Create Timesheet Record'. Then, it subtracts the count of distinct 'TimesheetRecord' where the 'event_name' is either 'Approve Timesheet Record', 'Auto-Approve Timesheet Record', or 'Cancel Timesheet Record'. The result of this subtraction is then divided by the total count of distinct 'TimesheetRecord' and multiplied by 100 to get the percentage. This percentage is labeled as '% of not Approved Timesheets'. Additionally, the query selects the 'ActivityType' column and labels it as 'Activity Type'. The final result is ordered in descending order based on the first column, which is the calculated percentage of not approved timesheets.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n(COUNT(DISTINCT \"TimesheetRecord\") \nFILTER (WHERE (EVENT_NAME IN ('Create Timesheet Record')))) \n- (COUNT(DISTINCT \"TimesheetRecord\") \nFILTER (WHERE (EVENT_NAME IN ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record')))))\n/ COUNT(DISTINCT \"TimesheetRecord\")\n* 100 AS \"% of not Approved Timesheets\" ,\n\"ActivityType\" as \"Activity Type\"\nFROM \"defaultview-197\"\nORDER BY 1 desc\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n(COUNT(DISTINCT \"TimesheetRecord\") \nFILTER (WHERE (EVENT_NAME IN ('Create Timesheet Record')))) \n- (COUNT(DISTINCT \"TimesheetRecord\") \nFILTER (WHERE (EVENT_NAME IN ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record')))))\n/ COUNT(DISTINCT \"TimesheetRecord\")\n* 100 AS \"% of not Approved Timesheets\" ,\n\"ActivityType\" as \"Activity Type\"\nFROM \"defaultview-197\"\nORDER BY 1 desc\n"
    },
    {
        "filename": "fdbbf9f7fc",
        "split": "test",
        "name": "% of automatic delivery items changes",
        "query": "SELECT\n    COUNT(\"event_name\") FILTER (\n        WHERE BEHAVIOR (\n              \"EventCreatedByUserType\"  IN ('System','Service','Batch Job')\n            ) AS created_with_dialog MATCHES (created_with_dialog)\n    ) / COUNT(\"event_name\") * 100\nFROM FLATTEN(\"defaultview-290\")\nWHERE (event_name LIKE 'Change Delivery%' \n\tOR event_name LIKE 'Update Delivery%')",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is performing an operation on the table named 'defaultview-290'. It is calculating the percentage of 'event_name' that were created by either 'System', 'Service', or 'Batch Job' as indicated by the 'EventCreatedByUserType' column. This is done by counting the number of 'event_name' that match these criteria and dividing it by the total count of 'event_name'. The result is then multiplied by 100 to convert it into a percentage. The query is specifically looking for 'event_name' that either start with 'Change Delivery' or 'Update Delivery'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (EVENT_NAME) FILTER (\n    WHERE\n      (\n        \"EventCreatedByUserType\" IN ('System', 'Service', 'Batch Job')\n      )\n  ) / COUNT (EVENT_NAME) FILTER (\n      WHERE \"EventManuallyCreatedByUserType\" IN ('System', 'Service', 'Batch Job')\n  ) * 100\nFROM\n  FLATTEN (\"defaultview-290\")\nWHERE\n  \"event_name\" ILIKE 'Change Delivery%' OR \"event_name\" ILIKE 'Update Delivery%'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (EVENT_NAME) FILTER (\n    WHERE\n      (\n        \"EventCreatedByUserType\" IN ('System', 'Service', 'Batch Job')\n      )\n  ) / COUNT (EVENT_NAME) FILTER (\n      WHERE \"EventManuallyCreatedByUserType\" IN ('System', 'Service', 'Batch Job')\n  ) * 100\nFROM\n  FLATTEN (\"defaultview-290\")\nWHERE\n  \"event_name\" ILIKE 'Change Delivery%' OR \"event_name\" ILIKE 'Update Delivery%'"
    },
    {
        "filename": "d1bd2930bd",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is calculating the average difference between the 'Basic Finish Date' and the 'Basic Start Date' from the table named 'defaultview-183'. This is done by subtracting the 'Basic Start Date' from the 'Basic Finish Date' for each record, and then taking the average of all these differences. The result will give us the average duration of a certain process or event represented in the table 'defaultview-183'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG (\n    \"Basic Finish Date\" - \"Basic Start Date\"\n  )\nFROM\n  \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG (\n    \"Basic Finish Date\" - \"Basic Start Date\"\n  )\nFROM\n  \"defaultview-183\"\n                "
    },
    {
        "filename": "005b27854f",
        "split": "test",
        "name": "Top 10 Customers with highest Open Receivables Amounts",
        "query": "SELECT\n     \"AR_CustomerName\"  AS \"Customer\",\n    SUM(\"AmountInCompanyCodeCurrency\" ) as \"Amount\"\nFROM FLATTEN(\"defaultview-197\")\nWHERE \"ClearingDate\"  IS NULL\nAND event_name =  'Create Accounts Receivable' \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is selecting data from the table named 'defaultview-197'. It is specifically looking for the 'AR_CustomerName' column, which it renames as 'Customer'. It also calculates the sum of the values in the 'AmountInCompanyCodeCurrency' column and labels this as 'Amount'. The query only considers rows where the 'ClearingDate' is null and the 'event_name' is equal to 'Create Accounts Receivable'. The results are then grouped by the first selected column, which is 'Customer'. The final output is ordered in descending order based on the 'Amount' and is limited to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n \"AR_CustomerName\" AS \"Customer\",\n SUM(\"AmountInCompanyCodeCurrency\") AS \"Amount\" \nFROM \"defaultview-197\"\nWHERE ClearingDate IS NULL \nAND \"event_name\" = 'Create Accounts Receivable'\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n \"AR_CustomerName\" AS \"Customer\",\n SUM(\"AmountInCompanyCodeCurrency\") AS \"Amount\" \nFROM \"defaultview-197\"\nWHERE ClearingDate IS NULL \nAND \"event_name\" = 'Create Accounts Receivable'\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n\n"
    },
    {
        "filename": "4f97b966fc",
        "split": "test",
        "name": "Top Vendors with worse Payments Terms on their invoice",
        "query": "SELECT \nSUM (\"Last FI Invoice Item Gross Amount in USD\") \nFILTER (WHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \nELSE \"PO Cash Discount Days 1\" END)) AS \"Payment Terms Differences where PO is better (Amount)\"\n,\"PO Vendor Name\"\nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting and summing up the values from the column 'Last FI Invoice Item Gross Amount in USD' from the table 'defaultview-124'. However, this summation is filtered by a condition. The condition is that the values in the column 'Last FI Invoice Item Cash Discount Days 1' should be less than the values in the column 'PO Cash Discount Days 1'. If the value in 'PO Cash Discount Days 1' is NULL, it is considered as 0 for this comparison. The result of this summation, after applying the filter, is given an alias name 'Payment Terms Differences where PO is better (Amount)'. Additionally, the query is also selecting the column 'PO Vendor Name'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nsum(\"Last FI Invoice Item Gross Amount in USD\") FILTER (\n\tWHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n< COALESCE(\"PO Cash Discount Days 1\",DATE '1990-06-01') )\n\nAS \"Payment Terms Differences where PO is better (Amount)\" ,\n\"PO Vendor Name\"\n\nFROM \"defaultview-124\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nsum(\"Last FI Invoice Item Gross Amount in USD\") FILTER (\n\tWHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n< COALESCE(\"PO Cash Discount Days 1\",DATE '1990-06-01') )\n\nAS \"Payment Terms Differences where PO is better (Amount)\" ,\n\"PO Vendor Name\"\n\nFROM \"defaultview-124\"\n"
    },
    {
        "filename": "59a5b5c1d4",
        "split": "test",
        "name": "Projects by Project Profile",
        "query": "SELECT count(case_id) AS \"# Projects\", \nProject_ProfileCode AS \"Project Profile\"\nFROM \"defaultview-197\"\nORDER BY 1 DESC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the number of projects and display the project profile code from the table named 'defaultview-197'. Specifically, it counts the number of unique 'case_id' entries, which are then labeled as '# Projects'. It also selects the 'Project_ProfileCode' column and labels it as 'Project Profile'. The results are then ordered in descending order based on the count of projects.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n    COUNT(DISTINCT case_id) AS \"# Projects\",\n\t\"Project_ProfileCode\" AS \"Project Profile\"\nFROM \"defaultview-197\"\nORDER BY 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n    COUNT(DISTINCT case_id) AS \"# Projects\",\n\t\"Project_ProfileCode\" AS \"Project Profile\"\nFROM \"defaultview-197\"\nORDER BY 1 desc"
    },
    {
        "filename": "defa1f2d35",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Business Line",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Division\"\nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to perform operations on the table named 'defaultview-183'. It starts by selecting and counting the number of 'case_id' instances, which are then labeled as 'Cases'. Following this, it calculates the average difference between the 'Basic Finish Date' and the 'Basic Start Date', which is then labeled as 'Cycle Time'. Additionally, the query also selects the 'Division' column from the table. After performing these operations, the query then orders the resulting data in descending order based on the first column of the result, which is the count of 'case_id' instances.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\nCOUNT (CASE_ID) AS \"Cases\",\nAVG(\"Basic Finish Date\" - \"Basic Start Date\") AS \"OTC_CycleTime\",\n\"Division\" \nFROM \"defaultview-183\" \nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\nCOUNT (CASE_ID) AS \"Cases\",\nAVG(\"Basic Finish Date\" - \"Basic Start Date\") AS \"OTC_CycleTime\",\n\"Division\" \nFROM \"defaultview-183\" \nORDER BY 1 DESC"
    },
    {
        "filename": "92022651c1",
        "split": "test",
        "name": "SOL-1682 Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n        WHERE (SELECT COUNT(event_name)\n                        WHERE (\"Last Inv. Item Clearing Date\" > \"Last Inv. Item Due Date\")) > 0\n        )\n/ COUNT (case_id) * 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-59' where the 'Last Inv. Item Clearing Date' is greater than the 'Last Inv. Item Due Date'. It does this by first counting the number of such cases, then dividing by the total number of cases, and finally multiplying by 100 to get the percentage. The result will be the percentage of cases where the clearing date of the last inventory item is later than its due date.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n    COUNT(CASE_ID) FILTER (\n    \tWHERE\n        (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\") > DURATION '0seconds'\n    \t)\n        )\n        /\n        COUNT(CASE_ID)\n        * 100\n        \n\nFROM \"defaultview-59\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n    COUNT(CASE_ID) FILTER (\n    \tWHERE\n        (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\") > DURATION '0seconds'\n    \t)\n        )\n        /\n        COUNT(CASE_ID)\n        * 100\n        \n\nFROM \"defaultview-59\"\n                "
    },
    {
        "filename": "ef3533bece",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Controlling Area",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Controlling Area\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the number of process orders and group them by the controlling area in the table named 'defaultview-183'. Specifically, it counts the number of unique 'CASE_ID' and labels this count as '# Process Orders'. It then groups these counts by the 'Controlling Area' (as indicated by 'GROUP BY 2', where 2 refers to the second column selected, which is 'Controlling Area'). Finally, the query sorts the results in descending order based on the count of process orders.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) as \"# Process Orders\", \"Controlling Area\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) as \"# Process Orders\", \"Controlling Area\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 desc"
    },
    {
        "filename": "7a820c8c23",
        "split": "test",
        "name": "Ratio of tickets with rework",
        "query": "SELECT COUNT(case_id) \nFILTER (\n\tWHERE (SELECT count(event_name) WHERE event_name = 'Change Status to In Progress' ) > 1 )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-217\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases in the table 'defaultview-217' where the event 'Change Status to In Progress' occurs more than once. It does this by first counting the total number of cases (case_id). Then, it filters out the cases where the event 'Change Status to In Progress' (event_name) occurs more than once. The count of these filtered cases is then divided by the total number of cases and multiplied by 100 to get the percentage. The result will be the percentage of cases where the event 'Change Status to In Progress' happens more than once.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT COUNT(event_name) FILTER (\n    \tWHERE event_name = 'Change Status to In Progress' )) > 1)\n)\n/\nCOUNT(case_id)\n* 100\nFROM \"defaultview-217\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT COUNT(event_name) FILTER (\n    \tWHERE event_name = 'Change Status to In Progress' )) > 1)\n)\n/\nCOUNT(case_id)\n* 100\nFROM \"defaultview-217\"\n                "
    },
    {
        "filename": "57824bbefa",
        "split": "test",
        "name": "First call resolution ratio",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT COUNT(DISTINCT event_name)) = (SELECT COUNT(event_name))\n\t)\n/ COUNT(case_id)\n*100\n\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases in the table 'defaultview-545' where the number of distinct event names is equal to the total number of event names. It does this by first counting the number of case IDs where this condition is met, then dividing this count by the total number of case IDs in the table, and finally multiplying the result by 100 to get the percentage. The result will give us the proportion of cases where all events have unique names.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) \nFILTER (WHERE (\n\tSELECT COUNT (DISTINCT EVENT_NAME)\n\t)  = (\n\tSELECT COUNT (DISTINCT EVENT_NAME)\n\t)\n\t)\n)\n/\nCOUNT (CASE_ID)\n* 100\nFROM \"defaultview-545\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) \nFILTER (WHERE (\n\tSELECT COUNT (DISTINCT EVENT_NAME)\n\t)  = (\n\tSELECT COUNT (DISTINCT EVENT_NAME)\n\t)\n\t)\n)\n/\nCOUNT (CASE_ID)\n* 100\nFROM \"defaultview-545\"\n"
    },
    {
        "filename": "c428caeb29",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Plant",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Plant\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the number of process orders from the table named 'defaultview-183'. It does this by counting the number of unique 'CASE_ID' entries. The result of this count is labeled as '# Process Orders'. Additionally, the query also selects the 'Plant' column from the same table. The results are then grouped by the second column selected, which is 'Plant'. Finally, the results are ordered in descending order based on the count of process orders.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(distinct \"CASE_ID\") AS \"# Process Orders\", \"Plant\"\nFROM \"defaultview-183\"\n--WHERE DURATION > DURATION '1 days'\nGROUP BY 2\nORDER BY 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(distinct \"CASE_ID\") AS \"# Process Orders\", \"Plant\"\nFROM \"defaultview-183\"\n--WHERE DURATION > DURATION '1 days'\nGROUP BY 2\nORDER BY 1 desc"
    },
    {
        "filename": "1898593acc",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Receive Invoice')",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between the 'Receive Invoice' event and the 'Create PO Item' event from the table named 'defaultview-431'. It first selects the last occurrence of the 'END_TIME' for the 'Receive Invoice' event and then subtracts from it the first occurrence of the 'END_TIME' for the 'Create PO Item' event. The query is only considering rows where the 'EVENT_NAME' matches either 'Create PO Item' or 'Receive Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG (\n    (SELECT\n       LAST (END_TIME) FILTER (\n          WHERE  (\n             EVENT_NAME IN ('Receive Invoice')\n          ))\n       ) - (SELECT\n             FIRST (END_TIME) FILTER (\n                WHERE  (\n                   EVENT_NAME IN ('Create PO Item')\n                ))\n          ))\n\nFROM\n  \"defaultview-431\"\nWHERE\n  EVENT_NAME MATCHES ('Create PO Item' OR 'Receive Invoice')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG (\n    (SELECT\n       LAST (END_TIME) FILTER (\n          WHERE  (\n             EVENT_NAME IN ('Receive Invoice')\n          ))\n       ) - (SELECT\n             FIRST (END_TIME) FILTER (\n                WHERE  (\n                   EVENT_NAME IN ('Create PO Item')\n                ))\n          ))\n\nFROM\n  \"defaultview-431\"\nWHERE\n  EVENT_NAME MATCHES ('Create PO Item' OR 'Receive Invoice')"
    },
    {
        "filename": "ec1afff845",
        "split": "test",
        "name": "Number of invoices with \"Last Inv. Item Terms of Payment Key\" column is NULL",
        "query": "SELECT COUNT(case_id), \"Last Inv. Item Terms of Payment Key\"\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Terms of Payment Key\" IS NULL",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the number of rows in the table named 'defaultview-225' where the column 'Last Inv. Item Terms of Payment Key' has a null value. The result of this query will be the count of these rows and the name of the column 'Last Inv. Item Terms of Payment Key'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(LAST INV. ITEM TERMS OF PAYMENT KEY) AS \"No. of Invoice\"\nFROM \"defaultview-225\" \nWHERE\n\"LAST INV. ITEM TERMS OF PAYMENT KEY\" IS NULL\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(LAST INV. ITEM TERMS OF PAYMENT KEY) AS \"No. of Invoice\"\nFROM \"defaultview-225\" \nWHERE\n\"LAST INV. ITEM TERMS OF PAYMENT KEY\" IS NULL\n\n\n"
    },
    {
        "filename": "717545c103",
        "split": "test",
        "name": "\u00d8 Automation Rate of Payment Events",
        "query": "SELECT\n  SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            (\n              \"Event Created By User Type\" IN ('System', 'Service')\n              AND (event_name LIKE '%Payment%')\n            )\n        )\n    )\n  ) / SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            event_name LIKE '%Payment%' AND \"Event Created By User Type\" IS NOT NULL\n        )\n    )\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of 'Payment' events created by 'System' or 'Service' users. It does this by first counting the number of cases in the 'defaultview-225' table where the 'Event Created By User Type' is either 'System' or 'Service' and the event name contains 'Payment'. This count is then divided by the total number of cases where the event name contains 'Payment' and the 'Event Created By User Type' is not null. The result is multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n(COUNT (CASE_ID) FILTER (\n WHERE (\"Event Created By User Type\"\n                 IN ('System', 'Service'))\n   AND EVENT_NAME MATCHES ('~(Payment)~>')))\n\n/ \n\n(COUNT (CASE_ID) FILTER (\n   WHERE EVENT_NAME MATCHES ('~(Payment)~>'))\n    AND \"Event Created By User Type\" IS NOT NULL) * 100\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n(COUNT (CASE_ID) FILTER (\n WHERE (\"Event Created By User Type\"\n                 IN ('System', 'Service'))\n   AND EVENT_NAME MATCHES ('~(Payment)~>')))\n\n/ \n\n(COUNT (CASE_ID) FILTER (\n   WHERE EVENT_NAME MATCHES ('~(Payment)~>'))\n    AND \"Event Created By User Type\" IS NOT NULL) * 100\nFROM \"defaultview-225\""
    },
    {
        "filename": "aef1c8c1d7",
        "split": "test",
        "name": "Top 10 Customers with highest Invoiced Amounts",
        "query": "SELECT\n    AR_CustomerName AS \"Customer\",\n    SUM(\"AR_InvoicedAmountInGlobalCurrency\") AS \"Amount\"\nFROM \"defaultview-222\"\nWHERE AR_CustomerName IS NOT NULL\n\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is selecting data from the table named 'defaultview-222'. It is specifically looking at the 'AR_CustomerName' column and the 'AR_InvoicedAmountInGlobalCurrency' column. The 'AR_CustomerName' column is being renamed to 'Customer' and the 'AR_InvoicedAmountInGlobalCurrency' column is being summed up and renamed to 'Amount'. The query is only considering the rows where the 'AR_CustomerName' is not null. The results are then grouped by the 'Customer' column (as indicated by 'GROUP BY 1', where 1 refers to the first column in the selection list). The results are then ordered in descending order by the 'Amount' column (as indicated by 'ORDER BY 2 DESC', where 2 refers to the second column in the selection list). Finally, the query limits the output to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \n  \"Customer\",\n  SUM(\"Amount\") AS \"Amount\"\nFROM\n  (\n    SELECT\n\t  CASE\n        WHEN \"AR_CustomerName\" IS NULL THEN 'Unknown'\n        ELSE \"AR_CustomerName\"\n      END AS \"Customer\",\n\n      \"AR_InvoicedAmountInGlobalCurrency\"\n         \n    FROM\n      FLATTEN(\"defaultview-222\")\n  ) AS sub\nWHERE\n  \"Customer\" IS NOT NULL\nGROUP BY\n  1\nORDER BY\n  2 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \n  \"Customer\",\n  SUM(\"Amount\") AS \"Amount\"\nFROM\n  (\n    SELECT\n\t  CASE\n        WHEN \"AR_CustomerName\" IS NULL THEN 'Unknown'\n        ELSE \"AR_CustomerName\"\n      END AS \"Customer\",\n\n      \"AR_InvoicedAmountInGlobalCurrency\"\n         \n    FROM\n      FLATTEN(\"defaultview-222\")\n  ) AS sub\nWHERE\n  \"Customer\" IS NOT NULL\nGROUP BY\n  1\nORDER BY\n  2 DESC\nLIMIT 10\n"
    },
    {
        "filename": "8092de898c",
        "split": "test",
        "name": "Manual Change Rate by Top 10 Material",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocItemMaterial\" AS \"SD Material\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to retrieve data from the table named 'defaultview-383'. It calculates the count of unique 'case_id' values and labels this as '# of SDs'. It also calculates the percentage of unique 'case_id' values where the 'EventCreatedByUserType' is 'Dialog' and 'ChangeType' is 'Update', and labels this as 'Change rate'. The 'SalesDocItemMaterial' column is also selected and labeled as 'SD Material'. The results are then ordered in descending order based on the first column, which is the count of unique 'case_id' values. The query limits the output to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(CASE_ID) AS \"# of SDs\",\n  COUNT(CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\"EventCreatedByUserType\" = 'Dialog'\n            AND \"ChangeType\" = 'Update')\n        FROM\n          \"defaultview-383_flattened_events\"\n        WHERE\n          (\"ChangeType\" = 'Update')\n      )\n  ) / COUNT(CASE_ID) * 100 AS \"Change rate\",\n  \"SalesDocItemMaterial\" AS \"SD Material\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(CASE_ID) AS \"# of SDs\",\n  COUNT(CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\"EventCreatedByUserType\" = 'Dialog'\n            AND \"ChangeType\" = 'Update')\n        FROM\n          \"defaultview-383_flattened_events\"\n        WHERE\n          (\"ChangeType\" = 'Update')\n      )\n  ) / COUNT(CASE_ID) * 100 AS \"Change rate\",\n  \"SalesDocItemMaterial\" AS \"SD Material\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10"
    },
    {
        "filename": "487549492d",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term'))))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases in the 'defaultview-59' table where the event name is 'Update Payment Term'. It does this by first counting the number of cases where the event name is 'Update Payment Term', then dividing this by the total number of cases, and finally multiplying by 100 to get the percentage. The 'case_id' column is used to count the total number of cases, and the 'event_name' column is used to filter the cases where the event name is 'Update Payment Term'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (event_name) FILTER (\n\tWHERE event_name IN ('Update Payment Term') \n\t)\n/ COUNT (CASE_ID)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (event_name) FILTER (\n\tWHERE event_name IN ('Update Payment Term') \n\t)\n/ COUNT (CASE_ID)\n* 100\nFROM \"defaultview-59\"\n                "
    },
    {
        "filename": "8deb242ea5",
        "split": "test",
        "name": "_Invoice cancellation rate",
        "query": "\nSELECT\n(\nSUM(\"BillingDoc_TotalCancelled\")\n/\nSUM(\"BillingDoc_TotalCount\")\n)\n* 100\n\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of total cancelled billing documents from the table named 'defaultview-197'. It does this by summing up all the values in the 'BillingDoc_TotalCancelled' column, dividing it by the sum of all the values in the 'BillingDoc_TotalCount' column, and then multiplying the result by 100 to get the percentage. The result will give an overall idea of the proportion of billing documents that were cancelled.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  (\n    SUM(\"BillingDoc_TotalCancelled\")\n    / SUM(\"BillingDoc_TotalCount\")\n  )\n  * 100\nFROM\n  \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  (\n    SUM(\"BillingDoc_TotalCancelled\")\n    / SUM(\"BillingDoc_TotalCount\")\n  )\n  * 100\nFROM\n  \"defaultview-197\"\n                "
    },
    {
        "filename": "df5561bb21",
        "split": "test",
        "name": "Confirmed process orders",
        "query": "SELECT COUNT(event_name)\n    FILTER(WHERE event_name MATCHES ('Confirmed'))\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of occurrences of the event named 'Confirmed' in the table named 'defaultview-183'. Specifically, it is looking at the 'event_name' column and applying a filter to only count the rows where the 'event_name' matches the value 'Confirmed'. The result of this query will be the total count of 'Confirmed' events in the 'defaultview-183' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(event_name) FILTER(\n\tWHERE event_name MATCHES('Confirmed')) AS \"Confirmed\"\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(event_name) FILTER(\n\tWHERE event_name MATCHES('Confirmed')) AS \"Confirmed\"\nFROM \"defaultview-183\""
    },
    {
        "filename": "6ff4a8f764",
        "split": "test",
        "name": "Late deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of case_id from the table named 'defaultview-57'. It only includes those cases where the 'Last GR Creation Date', when truncated to the day, is later than the 'PO Item Last Requested Delivery Date' and where the 'PO Item Delivery Completed' is marked as 'Yes'. In simpler terms, it is counting the number of completed delivery cases where the creation date of the last Goods Receipt (GR) is later than the last requested delivery date of the Purchase Order (PO) item.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (DATE_TRUNC('day', \"Last\n\tGR Creation Date\")) > \"PO\n\tItem Last Requested Delivery Date\"\n\tAND \"PO Item Delivery Completed\"\n\t= 'Yes')\nFROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (DATE_TRUNC('day', \"Last\n\tGR Creation Date\")) > \"PO\n\tItem Last Requested Delivery Date\"\n\tAND \"PO Item Delivery Completed\"\n\t= 'Yes')\nFROM \"defaultview-57\""
    },
    {
        "filename": "6ad1f0922e",
        "split": "test",
        "name": "\u00d8 SFC Initial Quantity",
        "query": "SELECT AVG(\"SFC Initial Quantity\") FROM \"defaultview-270\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is calculating the average of the 'SFC Initial Quantity' from the table named 'defaultview-270'. The 'AVG' function is used to calculate the average of the specified column. In this case, it is applied to the 'SFC Initial Quantity' column. The 'FROM' keyword indicates the table from which the data is being retrieved, which is 'defaultview-270' in this case.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT AVG (\"SFC Initial Quantity\" )\nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT AVG (\"SFC Initial Quantity\" )\nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "b371622da1",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Requested Delivery Date\"\n\t\tAND \"PO Delivery Status\" = 'Received'\n\t)\n/\nCOUNT(case_id) FILTER (\n\tWHERE \"PO Delivery Status\" = 'Received'\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-545' where the 'Last GR Creation Date', when truncated to the day, is later than the 'PO Requested Delivery Date' and the 'PO Delivery Status' is 'Received'. This percentage is calculated as the number of such cases divided by the total number of cases where the 'PO Delivery Status' is 'Received', multiplied by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n COUNT(\n  DISTINCT \"CASE_ID\"\n ) FILTER (\n  WHERE\n   DATE_TRUNC('day', \"Last GR Creation Date\") \n    > \"PO Requested Delivery Date\" \n   AND \"PO Delivery Status\" = 'Received'\n )  / COUNT(DISTINCT \"CASE_ID\") FILTER (\n  WHERE\n   \"PO Delivery Status\" = 'Received'\n ) \n  * 100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n COUNT(\n  DISTINCT \"CASE_ID\"\n ) FILTER (\n  WHERE\n   DATE_TRUNC('day', \"Last GR Creation Date\") \n    > \"PO Requested Delivery Date\" \n   AND \"PO Delivery Status\" = 'Received'\n )  / COUNT(DISTINCT \"CASE_ID\") FILTER (\n  WHERE\n   \"PO Delivery Status\" = 'Received'\n ) \n  * 100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "8977266362",
        "split": "test",
        "name": "WC Impact of Invoices with immediate payment terms",
        "query": "\nSELECT\nSUM(\"Last FI Invoice Item Gross Amount in USD\") FILTER(\n\tWHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) *15*0.04/365\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating a sum from the 'defaultview-124' table. Specifically, it is summing up the values in the 'Last FI Invoice Item Gross Amount in USD' column, but only for the rows where the 'Last FI Invoice Item Cash Discount Days 1' column is either NULL or equal to 0. This sum is then multiplied by 15, then by 0.04, and finally divided by 365. The result of these operations is what the query returns.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n/*1*/\nSUM(\"Last FI Invoice Item Gross Amount in USD\") \n FILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\"  IS NULL \n    OR \"Last FI Invoice Item Cash Discount Days 1\"  =0)\n \n*11000.3\n*0.04\n/365\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n/*1*/\nSUM(\"Last FI Invoice Item Gross Amount in USD\") \n FILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\"  IS NULL \n    OR \"Last FI Invoice Item Cash Discount Days 1\"  =0)\n \n*11000.3\n*0.04\n/365\nFROM \"defaultview-124\""
    },
    {
        "filename": "b3b2c64a6b",
        "split": "test",
        "name": "Number of Billing Requests rejected",
        "query": "SELECT \nCOUNT(DISTINCT \"SalesDocument\") FILTER (\n\tWHERE event_name LIKE 'Reject Billing Request%')\nFROM FLATTEN(\"defaultview-197\")",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the unique 'SalesDocument' entries from the table named 'defaultview-197'. However, it doesn't count all entries. It only counts those entries where the 'event_name' starts with 'Reject Billing Request'. The result of this query will be the total number of unique 'SalesDocument' that have been associated with a 'Reject Billing Request' event.",
        "llm_gpt-35-turbo-0613_query": "SELECT count( DISTINCT SalesDocument) \nFROM \"defaultview-197\"\nWHERE  \nevent_name matches ('Reject Billing Request.*')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count( DISTINCT SalesDocument) \nFROM \"defaultview-197\"\nWHERE  \nevent_name matches ('Reject Billing Request.*')"
    },
    {
        "filename": "f8140fe8c4",
        "split": "test",
        "name": "Number of Tickets Completed/Rejected",
        "query": "SELECT \n\tDATE_TRUNC('month', \n    \t(SELECT FIRST(end_time) \n        WHERE event_name IN ('Change Status to Closed'))) AS \"Month when Issue Closed\",\n\tCOUNT(case_id) \n    FILTER (WHERE event_name MATCHES(('Change Status to Closed'))) AS \"# Cases\"\nFROM \"defaultview-217\"\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to extract data from the table named 'defaultview-217'. It first selects the earliest 'end_time' where the 'event_name' is 'Change Status to Closed' and truncates this date to the month, labeling it as 'Month when Issue Closed'. It then counts the number of 'case_id' where the 'event_name' matches 'Change Status to Closed', labeling this count as '# Cases'. The results are grouped by the 'Month when Issue Closed' and ordered by the same column. In essence, this query provides a monthly summary of the number of cases that were closed.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  DATE_TRUNC('month', (SELECT FIRST (end_time) WHERE event_name = 'Change Status to Closed')) AS \"Month when Issue Closed\",\n  COUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Change Status to Closed')) AS \"# Cases\"\nFROM \"defaultview-217\"\n--WHERE \"Issue category\" <> 'Incident'\nORDER BY 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  DATE_TRUNC('month', (SELECT FIRST (end_time) WHERE event_name = 'Change Status to Closed')) AS \"Month when Issue Closed\",\n  COUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Change Status to Closed')) AS \"# Cases\"\nFROM \"defaultview-217\"\n--WHERE \"Issue category\" <> 'Incident'\nORDER BY 1"
    },
    {
        "filename": "a6cf9b8367",
        "split": "test",
        "name": "Immediate WC Impact grouped by PO Vendor Name",
        "query": "SELECT SUM (\"Last FI Invoice Item Gross Amount Document Curr.\") \nFILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL \nOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) * 15 * 0.04 / 365 \nAS \"WC Impact of Invoices with immediate payment terms\", \"PO Vendor Name\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting the sum of the 'Last FI Invoice Item Gross Amount Document Curr.' column from the 'defaultview-124' table. However, this sum is only calculated for rows where the 'Last FI Invoice Item Cash Discount Days 1' column is either NULL or equal to 0. This sum is then multiplied by 15, then by 0.04, and then divided by 365. The result of this calculation is given the alias 'WC Impact of Invoices with immediate payment terms'. Additionally, the 'PO Vendor Name' column is also selected. The query then orders the results in descending order based on the first selected column, placing any NULL values last. Finally, the query limits the output to the top 30 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n   SUM (\"Last FI Invoice Item Gross Amount (Document Curr.)\") FILTER (\n    WHERE \"Payment Date - FI\" - \"Invoice Creation Date\" <= DURATION '10days' \n    AND (\"Last FI Invoice Item Cash Discount Days 1\" IS NULL \n    \tOR \"Last FI Invoice Item Cash Discount Days 1\" = DURATION '0days')\n    ) * 15 * 0.04 / 365 AS \"WC Impact of Invoices with immediate payment terms\",\n   \"PO Vendor Name\"\n   \nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n   SUM (\"Last FI Invoice Item Gross Amount (Document Curr.)\") FILTER (\n    WHERE \"Payment Date - FI\" - \"Invoice Creation Date\" <= DURATION '10days' \n    AND (\"Last FI Invoice Item Cash Discount Days 1\" IS NULL \n    \tOR \"Last FI Invoice Item Cash Discount Days 1\" = DURATION '0days')\n    ) * 15 * 0.04 / 365 AS \"WC Impact of Invoices with immediate payment terms\",\n   \"PO Vendor Name\"\n   \nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30\n\n\n"
    },
    {
        "filename": "8411df93d4",
        "split": "test",
        "name": "Automation Rate Technically completed",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Technically completed'\n\n\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of events that are not created by the 'Dialog' user type and are technically completed. It does this by dividing the count of 'Technically completed' events not created by 'Dialog' by the total count of 'Technically completed' events. The result is then multiplied by 100 to get the percentage. The data for this calculation is being pulled from the 'defaultview-183' table. Specifically, it is looking at the 'event_name' and 'Event Created By User Type' columns.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n(\nCOUNT(event_name) FILTER (\n\tWHERE \n    \t(\"Event Created By User Type\" NOT IN ('Dialog'))\n  \tAND \"Is Technically Completed\" = TRUE\n    )\n /\n COUNT(event_name) FILTER (\n \tWHERE \"Is Technically Completed\" = TRUE\n    \t)\n) * 100\nFROM \"defaultview-183\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n(\nCOUNT(event_name) FILTER (\n\tWHERE \n    \t(\"Event Created By User Type\" NOT IN ('Dialog'))\n  \tAND \"Is Technically Completed\" = TRUE\n    )\n /\n COUNT(event_name) FILTER (\n \tWHERE \"Is Technically Completed\" = TRUE\n    \t)\n) * 100\nFROM \"defaultview-183\" "
    },
    {
        "filename": "e9259d68f7",
        "split": "test",
        "name": "Olap Table",
        "query": "SELECT case_id, \n\"Planned Release Date\", \n\"Scheduled Release date\",\n\"Actual Release Date\", \n\"Scheduled Start Date\", \n\"Actual Start Date\",     \n\"Scheduled Finish Date\", \n\"Confirmed Finish Date\",\n\"Actual Finish Date\", \n\"Basic Start Date\",\n--\"Basic End Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",   \n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"\nFROM \"defaultview-183\"\nLimit 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting specific columns from the table named 'defaultview-183'. The columns selected are 'case_id', 'Planned Release Date', 'Scheduled Release date', 'Actual Release Date', 'Scheduled Start Date', 'Actual Start Date', 'Scheduled Finish Date', 'Confirmed Finish Date', 'Actual Finish Date', 'Basic Start Date', 'Planned Order Opening Date', 'Planned Order Start Date', 'Actual Delivery Date', 'Planned Order Actual Delivery Date', and 'Basic Finish Date'. The query is limiting the output to the first 10 records from the table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  case_id, \n  \"Planned Release Date\", \n  \"Scheduled Release date\", \n  \"Actual Release Date\", \n  \"Scheduled Start Date\", \n  \"Actual Start Date\", \n  \"Scheduled Finish Date\", \n  \"Confirmed Finish Date\", \n  \"Actual Finish Date\", \n  \"Basic Start Date\", \n  \"Planned Order Opening Date\", \n  \"Planned Order Start Date\", \n  \"Actual Delivery Date\", \n  \"Planned Order Actual Delivery Date\", \n  \"Basic Finish Date\"\nFROM \n  \"defaultview-183\"\nLIMIT\n  10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  case_id, \n  \"Planned Release Date\", \n  \"Scheduled Release date\", \n  \"Actual Release Date\", \n  \"Scheduled Start Date\", \n  \"Actual Start Date\", \n  \"Scheduled Finish Date\", \n  \"Confirmed Finish Date\", \n  \"Actual Finish Date\", \n  \"Basic Start Date\", \n  \"Planned Order Opening Date\", \n  \"Planned Order Start Date\", \n  \"Actual Delivery Date\", \n  \"Planned Order Actual Delivery Date\", \n  \"Basic Finish Date\"\nFROM \n  \"defaultview-183\"\nLIMIT\n  10"
    },
    {
        "filename": "88033c5325",
        "split": "test",
        "name": "Total Spend by PO Material (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Material Number\" \nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is performing operations on the table named 'defaultview-431'. It is calculating the sum of the column 'PO Item Total Amount' and renaming it as 'Total PO Amount'. It is also calculating the average difference between the last and first 'END_TIME' and renaming it as 'Avg. Cycle Time'. Additionally, it is selecting the column 'PO Material Number'. The results are then ordered in descending order based on the first column of the result set, which is 'Total PO Amount'. Finally, the query limits the output to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"PO Item Total Amount\") AS \"Total PO Amount\",\nAVG (CYCLE_TIME(LAST (END_TIME)), FIRST (END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Material Number\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"PO Item Total Amount\") AS \"Total PO Amount\",\nAVG (CYCLE_TIME(LAST (END_TIME)), FIRST (END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Material Number\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "125e48fc10",
        "split": "test",
        "name": "Avg. Cycle Time per Case ID (20 shortest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n    \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) \n              AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 ASC\nLIMIT 20\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to select the 'Project' and the average cycle time, labeled as 'Avg Cycle Time', from a subquery. The subquery is constructed from the table 'defaultview-197'. In this subquery, the 'case_id' and 'Project_Description' (renamed as 'Project') are selected. Additionally, a calculation is performed to determine the cycle time (labeled as 'C'). This calculation involves subtracting the first 'end_time' where the 'event_name' is 'Start Project' from the last 'end_time' where the 'event_name' is 'Close Project'. The results from this subquery are then ordered in ascending order by the second column, which is the 'Avg Cycle Time'. Finally, the query limits the output to the top 20 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Project\", AVG(\"C\") AS \"Avg Cycle Time\"\nFROM (\n SELECT\n  case_id,\n  \"Project_Description\" AS \"Project\",\n  (SELECT LAST(end_time) WHERE event_name = 'Close Project') - (SELECT FIRST(end_time) WHERE event_name = 'Start Project') AS \"C\"\n FROM \"defaultview-197\"\n) AS subquery_8\nORDER BY 2 ASC\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Project\", AVG(\"C\") AS \"Avg Cycle Time\"\nFROM (\n SELECT\n  case_id,\n  \"Project_Description\" AS \"Project\",\n  (SELECT LAST(end_time) WHERE event_name = 'Close Project') - (SELECT FIRST(end_time) WHERE event_name = 'Start Project') AS \"C\"\n FROM \"defaultview-197\"\n) AS subquery_8\nORDER BY 2 ASC\nLIMIT 20"
    },
    {
        "filename": "d1ef7aa5cf",
        "split": "test",
        "name": "Table",
        "query": "SELECT\nIF (bucket_id > 20, -1, (bucket_id * 50) + 0) AS bucket_end,\n\"ClientCount\"\nFROM (\nSELECT\nBUCKET(EventCount, 0, 50, 20) as bucket_id,\nCOUNT(CASE_ID) AS \"ClientCount\" FROM\n(\nSELECT CASE_ID, \nCOUNT(EVENT_NAME) as EventCount\nFROM FLATTEN(\"defaultview-124\")\n) AS sq1\n) AS sq2\nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is performing operations on a table named 'defaultview-124'. Firstly, it is counting the number of occurrences of each 'CASE_ID' in the 'EVENT_NAME' column and storing this count as 'EventCount'. Then, it is creating a new column 'bucket_id' by dividing the 'EventCount' into buckets of size 50, starting from 0 and up to 20. After that, it is counting the number of 'CASE_ID' for each 'bucket_id' and storing this count as 'ClientCount'. In the final step, it is creating a new column 'bucket_end'. If the 'bucket_id' is greater than 20, it assigns -1 to 'bucket_end', otherwise, it multiplies the 'bucket_id' by 50 and adds 0. The result is ordered by the first column in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\"EventCount\",\nCASE\n\tWHEN (\"EventCount\")/50 > 20 THEN -1\n\tELSE (\"EventCount\") DIV 50 * 50\nEND AS \"bucket_end\",\nCOUNT(CASE_ID) AS \"ClientCount\"\nFROM\n(\n\tSELECT\n\t\tCOUNT(EVENT_NAME) AS \"EventCount\",\n\t\tCASE_ID,\n\t\tROW_NUMBER() OVER () AS \"bucket_id\"\n\tFROM \"defaultview-124\"\n)\nAS sub1\nORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\"EventCount\",\nCASE\n\tWHEN (\"EventCount\")/50 > 20 THEN -1\n\tELSE (\"EventCount\") DIV 50 * 50\nEND AS \"bucket_end\",\nCOUNT(CASE_ID) AS \"ClientCount\"\nFROM\n(\n\tSELECT\n\t\tCOUNT(EVENT_NAME) AS \"EventCount\",\n\t\tCASE_ID,\n\t\tROW_NUMBER() OVER () AS \"bucket_id\"\n\tFROM \"defaultview-124\"\n)\nAS sub1\nORDER BY 1 ASC"
    },
    {
        "filename": "431e0f5dc2",
        "split": "test",
        "name": "Percent of Cases with Rework",
        "query": "SELECT COUNT (CASE_ID) \n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1) \n    \tFROM (SELECT OCCURRENCE(EVENT_NAME) AS occurrence) AS sub)) \n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases in the table 'defaultview-545' where the event name occurs more than once. It does this by first counting the total number of cases (CASE_ID). Then, it filters this count to only include cases where the event name (EVENT_NAME) occurs more than once. This is done using a subquery that counts the occurrences of each event name and returns a boolean value indicating whether the count is greater than one. The result of this filter is then divided by the total number of cases and multiplied by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) \nFILTER (\n\tWHERE (\n\t\tSELECT COUNT(EVENT_NAME) > 1\n\t)\n)\n/\nCOUNT(case_id)\n* 100\nFROM \"defaultview-545\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) \nFILTER (\n\tWHERE (\n\t\tSELECT COUNT(EVENT_NAME) > 1\n\t)\n)\n/\nCOUNT(case_id)\n* 100\nFROM \"defaultview-545\"\n"
    },
    {
        "filename": "7524851a3d",
        "split": "test",
        "name": "Percentage of products touched by IO",
        "query": "\nSELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE (\n\t\tSELECT SUM(\"Recommended Safety Stock\") = 0\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n* 100\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of unique Product IDs from the 'defaultview-404' table where the sum of the 'Recommended Safety Stock' is equal to 0, and the 'MONTH' is within the current month and less than 320 days from the current month. This percentage is calculated by dividing the count of unique Product IDs meeting these conditions by the total count of unique Product IDs where the 'MONTH' is within the current month and less than 320 days from the current month, and then multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n(\nCOUNT(DISTINCT \"Product ID\") FILTER (\n\tWHERE \"Recommended Safety Stock\" = 0 \n  \tAND \"Month now\" BETWEEN DATE_TRUNC('MONTH', NOW()) AND NOW() \n    - DATE_TRUNC('MONTH', NOW()) + DURATION '320DAYS'\n)\n)\n/\n(\nCOUNT(DISTINCT \"Product ID\") FILTER (\n\tWHERE \"Month now\" BETWEEN DATE_TRUNC('MONTH', NOW()) AND NOW() \n    - DATE_TRUNC('MONTH', NOW()) + DURATION '320DAYS'\n)\n)\n* 100\nFROM \"defaultview-404\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n(\nCOUNT(DISTINCT \"Product ID\") FILTER (\n\tWHERE \"Recommended Safety Stock\" = 0 \n  \tAND \"Month now\" BETWEEN DATE_TRUNC('MONTH', NOW()) AND NOW() \n    - DATE_TRUNC('MONTH', NOW()) + DURATION '320DAYS'\n)\n)\n/\n(\nCOUNT(DISTINCT \"Product ID\") FILTER (\n\tWHERE \"Month now\" BETWEEN DATE_TRUNC('MONTH', NOW()) AND NOW() \n    - DATE_TRUNC('MONTH', NOW()) + DURATION '320DAYS'\n)\n)\n* 100\nFROM \"defaultview-404\""
    },
    {
        "filename": "28105fe921",
        "split": "test",
        "name": "First time fix rate",
        "query": "\nSELECT\n(COUNT (case_id) FILTER(WHERE ((SELECT COUNT (event_name) FILTER (WHERE event_name IN ('Technically Completed')) < 2) ))\n/ \nCOUNT (case_id) )*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-545' where the count of the event name 'Technically Completed' is less than 2. It does this by first counting the number of case IDs where the event name 'Technically Completed' occurs less than 2 times. This count is then divided by the total number of case IDs in the table. The result is multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID)\nFILTER (\n\tWHERE (SELECT COUNT (EVENT_NAME)\n\t\t    WHERE \"event_name\" = 'Technically Completed') < 2\n\t)\n/ COUNT (CASE_ID)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID)\nFILTER (\n\tWHERE (SELECT COUNT (EVENT_NAME)\n\t\t    WHERE \"event_name\" = 'Technically Completed') < 2\n\t)\n/ COUNT (CASE_ID)\n* 100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "a043407a7a",
        "split": "test",
        "name": "4. Percentage of Payments Manually processed (out of all clearly allocated payments ('SA','DZ'))",
        "query": "SELECT\n(count(DISTINCT \"ARUniqueKey\"  ) FILTER\n(WHERE event_name = 'Clear Accounts Receivable' and \"AutomationFlag\" is null)\n/ \ncount(DISTINCT \"ARUniqueKey\"  ) FILTER \n(WHERE event_name IN \n('Clear Accounts Receivable')\n)\n) \n* 100\n FROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is performing a calculation on the 'defaultview-222' table. It first counts the distinct values in the 'ARUniqueKey' column where the 'event_name' is 'Clear Accounts Receivable' and the 'AutomationFlag' is null. This count is then divided by the total count of distinct 'ARUniqueKey' values where the 'event_name' is 'Clear Accounts Receivable'. The result of this division is then multiplied by 100 to get a percentage. The purpose of this query is to find the percentage of 'Clear Accounts Receivable' events that have a null 'AutomationFlag' in relation to all 'Clear Accounts Receivable' events.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(DISTINCT \"ARUniqueKey\"\n) FILTER(\n\tWHERE event_name IN ('Clear Accounts Receivable')\n    AND (\"AutomationFlag\" IS NULL)\n   )\n/\nCOUNT(DISTINCT \"ARUniqueKey\"\n) FILTER(\n\tWHERE event_name IN ('Clear Accounts Receivable')\n   ) \n*100\nFROM \"defaultview-222\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(DISTINCT \"ARUniqueKey\"\n) FILTER(\n\tWHERE event_name IN ('Clear Accounts Receivable')\n    AND (\"AutomationFlag\" IS NULL)\n   )\n/\nCOUNT(DISTINCT \"ARUniqueKey\"\n) FILTER(\n\tWHERE event_name IN ('Clear Accounts Receivable')\n   ) \n*100\nFROM \"defaultview-222\"\n                "
    },
    {
        "filename": "aade6751ff",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Clear Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))))      \nFROM \"defaultview-133\" \nWHERE EVENT_NAME MATCHES ('Post Invoice' 'Clear Invoice')",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between the last 'Clear Invoice' event and the first 'Post Invoice' event from the table named 'defaultview-133'. It does this by first selecting the last end time of the 'Clear Invoice' event, then subtracting the first end time of the 'Post Invoice' event. The query only considers rows where the event name is either 'Post Invoice' or 'Clear Invoice'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG(\"Last Clear Invoice End\") FILTER (\n    WHERE\n      EVENTNAME = 'Clear Invoice'\n  ) - AVG(\"First Post Invoice End\") FILTER (\n    WHERE\n      EVENTNAME = 'Post Invoice'\n  ) \nFROM\n  (\n    SELECT\n      EVENTNAME,\n      (\n        SELECT\n          FIRST (END_TIME) FILTER (\n            WHERE\n              EVENTNAME IN ('Clear Invoice')\n          )\n      ) AS \"First Post Invoice End\",\n      (\n        SELECT\n          LAST (END_TIME) FILTER (\n            WHERE\n              EVENTNAME IN ('Post Invoice')\n          )\n      ) AS \"Last Clear Invoice End\"\n    FROM\n      FLATTEN(\"defaultview-133\")\n  ) AS sub_query_1\n  WHERE EVENTNAME IN ('Post Invoice', 'Clear Invoice')\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG(\"Last Clear Invoice End\") FILTER (\n    WHERE\n      EVENTNAME = 'Clear Invoice'\n  ) - AVG(\"First Post Invoice End\") FILTER (\n    WHERE\n      EVENTNAME = 'Post Invoice'\n  ) \nFROM\n  (\n    SELECT\n      EVENTNAME,\n      (\n        SELECT\n          FIRST (END_TIME) FILTER (\n            WHERE\n              EVENTNAME IN ('Clear Invoice')\n          )\n      ) AS \"First Post Invoice End\",\n      (\n        SELECT\n          LAST (END_TIME) FILTER (\n            WHERE\n              EVENTNAME IN ('Post Invoice')\n          )\n      ) AS \"Last Clear Invoice End\"\n    FROM\n      FLATTEN(\"defaultview-133\")\n  ) AS sub_query_1\n  WHERE EVENTNAME IN ('Post Invoice', 'Clear Invoice')\n"
    },
    {
        "filename": "d39c3be180",
        "split": "test",
        "name": "Overdue payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL AND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL)\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of unpaid invoices that are overdue from the table named 'defaultview-545'. It does this by first counting the number of cases where the 'Last Invoice Payment Date' is null, meaning the invoice has not been paid, and the 'Last Invoice Due Date' is earlier than the current date, meaning the payment is overdue. This count is then divided by the total number of unpaid invoices, which is determined by counting the number of cases where the 'Last Invoice Payment Date' is null. The result is then multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(COUNT(CASE_ID) FILTER\n(WHERE \"Last Invoice Payment Date\" IS NULL\nAND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))/)\n/\n(COUNT(CASE_ID) FILTER\n(WHERE \"Last Invoice Payment Date\" IS NULL)) *100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(COUNT(CASE_ID) FILTER\n(WHERE \"Last Invoice Payment Date\" IS NULL\nAND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))/)\n/\n(COUNT(CASE_ID) FILTER\n(WHERE \"Last Invoice Payment Date\" IS NULL)) *100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "c6857d95da",
        "split": "test",
        "name": "% Process Orders Released Early  grouped by most relevant Business Lines",
        "query": "SELECT \ncount(case_id) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') AS \"# Process Orders released early\",\nCOUNT (CASE_ID) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') / COUNT (CASE_ID)* 100 AS \"% Released Early\",\n\"Division\"\nFROM \"defaultview-183\"\n-- GROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to analyze data from the table named 'defaultview-183'. It calculates two metrics: the total number of process orders released early and the percentage of process orders released early. A process order is considered 'released early' if the 'Actual Release Date' is earlier than the 'Scheduled Release Date'. The query counts the number of such cases and labels this count as '# Process Orders released early'. Then, it calculates the percentage of early released orders by dividing the number of early released orders by the total number of orders, and multiplies the result by 100. This percentage is labeled as '% Released Early'. The query also selects the 'Division' column from the table. The results are sorted in descending order by the number of early released orders, and only the top 10 records are returned.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) AS \"# Process Orders released early\",\nCOUNT (CASE_ID) / (\n\tSELECT\n\t\tCOUNT (CASE_ID)\n\tFROM defaultview-183\n) * 100 AS \"% Released Early\",\n\"Division\"\nFROM \"defaultview-183\"\nWHERE\n(\n\t\"Actual Release Date\" < \"Scheduled Release Date\"\n)\nORDER BY\n1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) AS \"# Process Orders released early\",\nCOUNT (CASE_ID) / (\n\tSELECT\n\t\tCOUNT (CASE_ID)\n\tFROM defaultview-183\n) * 100 AS \"% Released Early\",\n\"Division\"\nFROM \"defaultview-183\"\nWHERE\n(\n\t\"Actual Release Date\" < \"Scheduled Release Date\"\n)\nORDER BY\n1 DESC\nLIMIT 10"
    },
    {
        "filename": "5cc0dd8c2b",
        "split": "test",
        "name": "SOL-1742 Fraction of total average cycle time spent on rework",
        "query": "\nSELECT\n((AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM (SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t))\n-\n(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\n)\n/(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is performing a calculation on the 'defaultview-59' table. It first calculates the average difference between the last and first 'end_time' values. This is done twice, once with a filter applied and once without. The filter checks if there is more than one occurrence of an 'event_name'. This is done by creating a subquery that counts the occurrences of 'event_name' and returns a boolean value if there is more than one occurrence. The average difference with the filter applied is then subtracted from the average difference without the filter. The result of this subtraction is then divided by the average difference without the filter. The final result of this query will be a single value.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG(\n    \t(SELECT AVG(LAST(end_time) - FIRST(end_time)))\n        FILTER (WHERE (SELECT BOOL_OR(events_occurrence > 1)\n        FROM (SELECT COUNT(event_name) AS events_occurrence) AS subquery_3\n        WHERE (events_occurrence > 1)))) -\n\tAVG((SELECT AVG(LAST(end_time) - FIRST(end_time)))))\n\t/\n   AVG((SELECT AVG(LAST(end_time) - FIRST(end_time)))))\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG(\n    \t(SELECT AVG(LAST(end_time) - FIRST(end_time)))\n        FILTER (WHERE (SELECT BOOL_OR(events_occurrence > 1)\n        FROM (SELECT COUNT(event_name) AS events_occurrence) AS subquery_3\n        WHERE (events_occurrence > 1)))) -\n\tAVG((SELECT AVG(LAST(end_time) - FIRST(end_time)))))\n\t/\n   AVG((SELECT AVG(LAST(end_time) - FIRST(end_time)))))\nFROM \"defaultview-59\""
    },
    {
        "filename": "df00ed7208",
        "split": "test",
        "name": "\u00d8 Cycle Time (Full Process)",
        "query": "SELECT AVG (\n\t(SELECT LAST (END_TIME)) \n  - (SELECT FIRST (END_TIME))) AS \"Average cycle time\"\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average cycle time from the table named 'defaultview-270'. It does this by subtracting the first recorded end time from the last recorded end time. The result of this subtraction is then averaged over all the records in the table. The average cycle time is returned as the output of the query.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG ((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME)))\nFROM \"defaultview-270\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG ((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME)))\nFROM \"defaultview-270\""
    },
    {
        "filename": "4d015ef6e5",
        "split": "test",
        "name": "No. of Invoices Paid Late",
        "query": "SELECT \nCOUNT(DISTINCT CASE_ID) AS \"Case Count\"\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the unique number of cases from the table named 'defaultview-124'. It specifically looks for cases where the 'Last FI Invoice Item Due Date' is earlier than the 'Last FI Invoice Item Clearing Date'. The result of this query will be the count of such distinct cases, labeled as 'Case Count'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count (distinct \"Case ID\") as \"Case Count\" FROM \"defaultview-124\"\nwhere \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count (distinct \"Case ID\") as \"Case Count\" FROM \"defaultview-124\"\nwhere \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\""
    },
    {
        "filename": "73e9b28d90",
        "split": "test",
        "name": "Number of Orders delayed in completion",
        "query": "\nSELECT\ncount(case_id) FILTER(\n\tWHERE \"Order Actual Start\" IS NOT NULL\n\tAND \"Order Actual Completion\" - \"Order Scheduled Completion\" > DURATION '0minutes') \nFROM \"defaultview-538\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is counting the number of case IDs from the table named 'defaultview-538'. However, it is not counting all the case IDs. It only counts those case IDs where the 'Order Actual Start' is not null and the difference between 'Order Actual Completion' and 'Order Scheduled Completion' is more than 0 minutes. In other words, it is counting the number of orders that have actually started and took more time to complete than was scheduled.",
        "llm_gpt-35-turbo-0613_query": "SELECT\ncount(case_id) FILTER (WHERE \"Order Actual Start\" IS NOT NULL AND (\"Order Actual Completion\" - \"Order Scheduled Completion\" ) > DURATION '0min') AS \"#Orders with Start and Finish delay\"\nFROM \"defaultview-538\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\ncount(case_id) FILTER (WHERE \"Order Actual Start\" IS NOT NULL AND (\"Order Actual Completion\" - \"Order Scheduled Completion\" ) > DURATION '0min') AS \"#Orders with Start and Finish delay\"\nFROM \"defaultview-538\"\n                "
    },
    {
        "filename": "7896255b68",
        "split": "test",
        "name": "Number Created Receivables over Time Posting",
        "query": "SELECT  \n\t\"PostingDate\"   AS \"Posting Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is selecting and renaming the 'PostingDate' column to 'Posting Date' and counting the distinct values in the 'ARUniqueKey' column, renaming it as '# Receivables' from the 'defaultview-222' table. It is filtering the data to only include rows where the 'EVENT_NAME' column contains the text 'Create Accounts Receivable'. The results are then ordered in ascending order by the first column of the result set, which is the 'Posting Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT     DATE_TRUNC('month', \"Posting Date\") AS \"Posting Date\", \nCOUNT(DISTINCT \"ARUniqueKey\") AS \"# Receivables\"\nFROM \"defaultview-222\"\nWHERE EVENT_NAME MATCHES ('Create Accounts Receivable')\nORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT     DATE_TRUNC('month', \"Posting Date\") AS \"Posting Date\", \nCOUNT(DISTINCT \"ARUniqueKey\") AS \"# Receivables\"\nFROM \"defaultview-222\"\nWHERE EVENT_NAME MATCHES ('Create Accounts Receivable')\nORDER BY 1 ASC"
    },
    {
        "filename": "ae803079ca",
        "split": "test",
        "name": "Sources of Change (Table) - # Events",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\", \"Changed Table\"\nFROM FLATTEN((SELECT \"case_id\", \"event_name\", \"end_time\", \"Change New Value\", \"Change Old Value\", \"Change Type\", \"Changed Field\", \"Changed Object Id\", \"Changed Table\", \"Event Created By User Id\", \"Event Created By User Type\"\nFROM \"defaultview-124\") AS sub)\nWHERE \"Changed Table\" IS NOT NULL\norder by 1 desc\nLIMIT 500",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting and counting the 'case_id' from a subquery, and it is also selecting the 'Changed Table' column. The subquery is selecting multiple columns such as 'case_id', 'event_name', 'end_time', 'Change New Value', 'Change Old Value', 'Change Type', 'Changed Field', 'Changed Object Id', 'Changed Table', 'Event Created By User Id', and 'Event Created By User Type' from the 'defaultview-124' table. The FLATTEN function is used to transform the subquery's result into a flat table structure. The query then filters the results to include only the rows where the 'Changed Table' is not null. The results are ordered in descending order based on the count of 'case_id'. The query limits the output to the top 500 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(\"case_id\") AS \"Case Count\", \n\"Changed Table\"\n \nFROM\n(\n SELECT \n \n \"case_id\", event_name, \n \n end_time AS \"STEP-1-EVT FireARMS in USE Date/Time\", \n\n (SELECT new_value FROM BE_TRACEV. FLATTEN(A_2)) AS \"Change New Value\",\n (SELECT new_value FROM BE_TRACEV. FLATTEN(A_2)) AS \"Change Old Value\", \n (SELECT arc_operation_name FROM BE_TRACEV. FLATTEN(A_2)) AS \"Change Type\", \n (SELECT arc_operation_out_name FROM BE_TRACEV. FLATTEN(A_2)) AS \"Changed Field\",\n \n (SELECT object_id FROM BE_TRACEV2. FLATTEN(A_2)) AS \"Changed Object Id\",\n \n (SELECT changed_object_name \n \t  \tFROM BE_TRACEV. FLATTEN(A_2)) AS \"Changed Table\",\n (SELECT event_created_by_user_id\n      \tFROM BE_TRACEV2. FLATTEN(A_2)) AS \"Event Created By User Id\",\n (SELECT event_created_by_user_type\n      \tFROM BE_TRACEV2. FLATTEN(A_2)) AS \"Event Created By User Type\"\n FROM BE_TRACEV\n \n) AS cnt\nWHERE \"Changed Table\" is not null\nORDER BY 1 DESC\n\n\nLIMIT 500",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(\"case_id\") AS \"Case Count\", \n\"Changed Table\"\n \nFROM\n(\n SELECT \n \n \"case_id\", event_name, \n \n end_time AS \"STEP-1-EVT FireARMS in USE Date/Time\", \n\n (SELECT new_value FROM BE_TRACEV. FLATTEN(A_2)) AS \"Change New Value\",\n (SELECT new_value FROM BE_TRACEV. FLATTEN(A_2)) AS \"Change Old Value\", \n (SELECT arc_operation_name FROM BE_TRACEV. FLATTEN(A_2)) AS \"Change Type\", \n (SELECT arc_operation_out_name FROM BE_TRACEV. FLATTEN(A_2)) AS \"Changed Field\",\n \n (SELECT object_id FROM BE_TRACEV2. FLATTEN(A_2)) AS \"Changed Object Id\",\n \n (SELECT changed_object_name \n \t  \tFROM BE_TRACEV. FLATTEN(A_2)) AS \"Changed Table\",\n (SELECT event_created_by_user_id\n      \tFROM BE_TRACEV2. FLATTEN(A_2)) AS \"Event Created By User Id\",\n (SELECT event_created_by_user_type\n      \tFROM BE_TRACEV2. FLATTEN(A_2)) AS \"Event Created By User Type\"\n FROM BE_TRACEV\n \n) AS cnt\nWHERE \"Changed Table\" is not null\nORDER BY 1 DESC\n\n\nLIMIT 500"
    },
    {
        "filename": "812a094000",
        "split": "test",
        "name": "# PO confirmed",
        "query": "SELECT count(case_id) FILTER (WHERE event_name MATCHES ('Confirmed')) FROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is counting the number of 'case_id' from the table named 'defaultview-183'. However, it is not counting all the 'case_id'. It is specifically counting those 'case_id' where the 'event_name' matches with the term 'Confirmed'. In other words, it is counting the number of confirmed cases from the table 'defaultview-183'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE (\n    \tSELECT event_name = 'Confirmed'\n    )\n)\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE (\n    \tSELECT event_name = 'Confirmed'\n    )\n)\nFROM \"defaultview-183\""
    },
    {
        "filename": "427922cb53",
        "split": "test",
        "name": "Number of PRs",
        "query": "SELECT count(DISTINCT \"Last PR Id\") FROM \"defaultview-431\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is performing a count operation on the 'defaultview-431' table. Specifically, it is counting the distinct values in the 'Last PR Id' column. This means it is finding all the unique 'Last PR Id' values in the table and then counting how many unique values there are. The result will be the total number of unique 'Last PR Id' in the 'defaultview-431' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (DISTINCT \"Last PR Id\")\nFROM\n  \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (DISTINCT \"Last PR Id\")\nFROM\n  \"defaultview-431\""
    },
    {
        "filename": "ba61aabb1a",
        "split": "test",
        "name": "Event: Update Payment Term (PO)",
        "query": "SELECT\n    count(event_name) / 1000\nFROM\n    FLATTEN(\"defaultview-225\")\nWHERE\n    event_name IN ('Update PO Payment Terms')",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of occurrences of the event named 'Update PO Payment Terms' in the 'event_name' column of the 'defaultview-225' table. The result of this count is then divided by 1000. The output will be the count of 'Update PO Payment Terms' events per thousand.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(event_name) filter (\n\tWHERE event_name MATCHES('Update PO Payment Terms')\n\t) /1000\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(event_name) filter (\n\tWHERE event_name MATCHES('Update PO Payment Terms')\n\t) /1000\nFROM \"defaultview-225\""
    },
    {
        "filename": "f17c42daff",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to calculate the sum of the 'Inv. Converted USD Amount' from the table named 'defaultview-225'. However, it only includes the rows where the 'Last Inv. Item Clearing Date' is null. In other words, it sums up the 'Inv. Converted USD Amount' for all the entries that have not been cleared yet.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n    SUM(\"Inv. Converted USD Amount\")\n\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Clearing Date\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n    SUM(\"Inv. Converted USD Amount\")\n\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Clearing Date\" IS NULL"
    },
    {
        "filename": "54c0f08366",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Production Scheduler Profile",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the number of process orders and group them by the 'Production Scheduler Profile' from the table named 'defaultview-183'. The count of process orders is represented by the column 'CASE_ID'. The query then orders the results in descending order based on the count of process orders. The 'GROUP BY 2' clause indicates that the results are grouped by the second column in the SELECT statement, which is 'Production Scheduler Profile'. The 'ORDER BY 1 DESC' clause means that the results are sorted in descending order by the first column in the SELECT statement, which is the count of 'CASE_ID'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(CASE_ID) AS \"No. of Process Orders\",\n\"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(CASE_ID) AS \"No. of Process Orders\",\n\"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 DESC"
    },
    {
        "filename": "9a9d898912",
        "split": "test",
        "name": "Invoice Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"Last Invoice Reconciliation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of unique 'Last Invoice Id' from the table 'defaultview-431' where the 'Last Invoice Reconciliation Status' is 'Rejected' and the 'PO Item Line Type' is 'Catalog'. It does this by first counting the distinct 'Last Invoice Id' that meet these conditions, then dividing this by the total count of distinct 'Last Invoice Id' in the table, and finally multiplying the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(DISTINCT \"Last Invoice Id\" ) \nFILTER (\n\tWHERE \"Last Invoice Reconciliation Status\" = 'Rejected'\n\tAND \"PO Item Line Type\" = 'Catalog'\t\n)\n/\nCOUNT(DISTINCT \"Last Invoice Id\" ) \nFILTER (\n)\n* 100\nFROM \"defaultview-431\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(DISTINCT \"Last Invoice Id\" ) \nFILTER (\n\tWHERE \"Last Invoice Reconciliation Status\" = 'Rejected'\n\tAND \"PO Item Line Type\" = 'Catalog'\t\n)\n/\nCOUNT(DISTINCT \"Last Invoice Id\" ) \nFILTER (\n)\n* 100\nFROM \"defaultview-431\"\n                "
    },
    {
        "filename": "5f9ce977a7",
        "split": "test",
        "name": "Automation Rate Deletion Flag",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Deletion Flag'\n\n\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of 'Deletion Flag' events that were not created by a 'Dialog' user type. It does this by dividing the count of 'Deletion Flag' events not created by 'Dialog' by the total count of 'Deletion Flag' events. The result is then multiplied by 100 to convert it into a percentage. The data for this query is being pulled from the 'defaultview-183' table. Specifically, it is looking at the 'event_name' and 'Event Created By User Type' columns.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(event_name) FILTER (\n\tWHERE (SELECT BOOL_OR(\"Event Created By User Type\" IN ('Dialog')))\n\t\tAND NOT BOOL_OR(\"Deletion Flag\")\n\t)\n/ COUNT(event_name) FILTER (\n\t\tWHERE BOOL_OR(\"Deletion Flag\"))\n* 100\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(event_name) FILTER (\n\tWHERE (SELECT BOOL_OR(\"Event Created By User Type\" IN ('Dialog')))\n\t\tAND NOT BOOL_OR(\"Deletion Flag\")\n\t)\n/ COUNT(event_name) FILTER (\n\t\tWHERE BOOL_OR(\"Deletion Flag\"))\n* 100\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "9676e5663d",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Creation to PO Release",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between the 'Release PO' event and the 'Create PO Item' event from the table named 'defaultview-124'. It first selects the last 'end_time' where the 'event_name' is 'Release PO'. Then, it selects the first 'end_time' where the 'event_name' is 'Create PO Item'. The difference between these two times is calculated for each row, and then the average of these differences is taken.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG\n\t(\n\t\t(\n\t\t(SELECT LAST (end_time) FILTER (WHERE event_name = 'Release PO'))\n\t\t-\n\t\t(SELECT FIRST (end_time) FILTER (WHERE event_name = 'Create PO Item'))\n\t\t)\n\t)\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG\n\t(\n\t\t(\n\t\t(SELECT LAST (end_time) FILTER (WHERE event_name = 'Release PO'))\n\t\t-\n\t\t(SELECT FIRST (end_time) FILTER (WHERE event_name = 'Create PO Item'))\n\t\t)\n\t)\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "dfc90845e4",
        "split": "test",
        "name": "Average Invoice Clearing Time",
        "query": "SELECT\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Pay Invoice')\n        )\n    ) - (\n      SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Receive Invoice')\n        )\n    )\n  ) AS PaymentTime\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average payment time from the table named 'defaultview-545'. It does this by subtracting the end time of the first event where the event name is 'Receive Invoice' from the end time of the last event where the event name is 'Pay Invoice'. The result of this calculation is then averaged over all the rows in the table and returned as 'PaymentTime'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG ((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Pay Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Receive Invoice'))\nAS \"Payment Time\"\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG ((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Pay Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Receive Invoice'))\nAS \"Payment Time\"\nFROM \"defaultview-545\""
    },
    {
        "filename": "bfb506743e",
        "split": "test",
        "name": "% of ODO Items w/o WTs",
        "query": "\nSELECT\nCOUNT(\nCASE WHEN event_name MATCHES('Create Warehouse Task') THEN null\nELSE case_id\nEND)\n/\nCOUNT(case_id)\n*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases in the table 'defaultview-545' where the 'event_name' is not 'Create Warehouse Task'. It does this by first counting the number of cases where the 'event_name' does not match 'Create Warehouse Task' and then dividing this by the total number of cases. The result is then multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  count(case_id) FILTER (\n    WHERE\n      (\n        EVENT_NAME MATCHES (('^((?!Create Warehouse Task).)*$'))        \n      )\n  ) / count(case_id) FILTER (\n      WHERE (EVENT_NAME IS NOT NULL)\n    ) * 100\nFROM\n  \"defaultview-545\"\n  \n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  count(case_id) FILTER (\n    WHERE\n      (\n        EVENT_NAME MATCHES (('^((?!Create Warehouse Task).)*$'))        \n      )\n  ) / count(case_id) FILTER (\n      WHERE (EVENT_NAME IS NOT NULL)\n    ) * 100\nFROM\n  \"defaultview-545\"\n  \n"
    },
    {
        "filename": "bdf1b3383d",
        "split": "test",
        "name": "SOL-1742 Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of case IDs in the 'defaultview-59' table where the occurrence of the event name is more than once. It does this by first counting the number of case IDs. Then, it filters this count to only include those case IDs where the occurrence of the event name is more than once. This is done using a subquery that counts the occurrence of the event name and checks if it is greater than one. The result of this filter is then divided by the total count of case IDs and multiplied by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME)\n        ) > 1\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME)\n        ) > 1\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-59\""
    },
    {
        "filename": "547ec2c903",
        "split": "test",
        "name": "No. of Mat. Invoices (Create to Clear Invoice Time > 18 Days) by Inv. Payment Term",
        "query": "SELECT \nCOUNT (CASE_ID) AS \"No. of Cases\", \nSUM(\"Last FI Invoice Item Gross Amount Local Curr.\") AS \"Total Inv. Amount\",\n\"Last FI Invoice Item Terms of Payment Key\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') > DURATION '18DAYS'\nGROUP BY 3\nORDER BY 1 DESC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the number of cases and sum the gross amount of the last FI invoice item in local currency from the table named 'defaultview-124'. It also retrieves the 'Last FI Invoice Item Terms of Payment Key' from the same table. The query only considers records where the difference between the last 'Clear Invoice' event time and the first 'Create FI Invoice' event time is more than 18 days. The results are then grouped by the 'Last FI Invoice Item Terms of Payment Key' and ordered in descending order based on the number of cases.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) AS \"# Cases\",\nSUM(\"Last FI Invoice Item Gross Amount in Local Currency\") AS \"# Invoiced Value\",\n\"Last FI Invoice Item Terms of Payment Key\"\n\nFROM \"defaultview-124\"\nWHERE \n\t(\n    \tSELECT LAST(event_name) \n        WHERE event_name IN ('Clear Invoice')\n      \t)\n        - \n      \t(\n      \tSELECT FIRST(event_name)\n       \tWHERE event_name IN ('Create FI Invoice')\n      \t)\n        > DURATION '18DAYS'\n\nGROUP BY 3\nORDER BY 1 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) AS \"# Cases\",\nSUM(\"Last FI Invoice Item Gross Amount in Local Currency\") AS \"# Invoiced Value\",\n\"Last FI Invoice Item Terms of Payment Key\"\n\nFROM \"defaultview-124\"\nWHERE \n\t(\n    \tSELECT LAST(event_name) \n        WHERE event_name IN ('Clear Invoice')\n      \t)\n        - \n      \t(\n      \tSELECT FIRST(event_name)\n       \tWHERE event_name IN ('Create FI Invoice')\n      \t)\n        > DURATION '18DAYS'\n\nGROUP BY 3\nORDER BY 1 DESC\n"
    },
    {
        "filename": "82093ccee6",
        "split": "test",
        "name": "_Number of  timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to calculate the total sum of the 'TSR_Count' column values from the table named 'defaultview-197'. The 'SUM' function is used to add up all the values in the 'TSR_Count' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM (\"TSR_Count\"  )\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM (\"TSR_Count\"  )\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "2dd9d9b679",
        "split": "test",
        "name": "Number of goods receipts",
        "query": "SELECT SUM((\n\tSELECT COUNT(event_name)\n\tFILTER(WHERE event_name LIKE 'GR%')))\nFROM \"defaultview-183\"\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is performing a calculation on the table named 'defaultview-183'. It is first selecting the 'event_name' column and applying a filter to only count the rows where the 'event_name' starts with 'GR'. This is indicated by the 'LIKE' operator followed by 'GR%'. The '%' symbol is a wildcard that matches any sequence of characters. The result of this count operation is then summed up, as indicated by the outer 'SUM' function. The final result will be the total count of rows in 'defaultview-183' where 'event_name' starts with 'GR'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\n    (\n      SELECT\n        COUNT(event_name) FILTER (\n          WHERE\n            event_name LIKE 'GR%'\n        )\n    )\n  )\nFROM\n  \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\n    (\n      SELECT\n        COUNT(event_name) FILTER (\n          WHERE\n            event_name LIKE 'GR%'\n        )\n    )\n  )\nFROM\n  \"defaultview-183\"\n                "
    },
    {
        "filename": "852ec656c8",
        "split": "test",
        "name": "Number of events",
        "query": "SELECT COUNT(event_name) FROM \"defaultview-124\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is counting the number of occurrences of 'event_name' in the table named 'defaultview-124'. It does not filter or sort the data in any way, it simply counts all the entries in the 'event_name' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(event_name)\nFROM FLATTEN(\"defaultview-124\")\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(event_name)\nFROM FLATTEN(\"defaultview-124\")\n"
    },
    {
        "filename": "496950a757",
        "split": "test",
        "name": "Average Payment Time Over Time and Company Codes",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\",\n    AR_CompanyCode\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting data from the table named 'defaultview-222'. It is truncating the 'end_time' column to the month and renaming it as 'Clearing Date'. It is also calculating the average difference between the 'ClearingDate' and 'CreationDate' columns, but only for rows where the 'EVENT_NAME' column contains the string 'Clear'. This average is being renamed as 'AVG Clearing Time'. Additionally, the 'AR_CompanyCode' column is being selected. The query is filtering the data to only include rows where the 'EVENT_NAME' column contains the string 'Clear'. Finally, the results are being ordered in ascending order by the first column of the result set, which is the 'Clearing Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nDATE_TRUNC('month', \"end_time\") as \"Clearing Date\",\nAVG ((SELECT LAST (\"end_time\") WHERE EVENT_NAME MATCHES ('Clear')) - (SELECT FIRST (\"end_time\")  WHERE EVENT_NAME MATCHES ('Clear')))  AS \"AVG Clearing Time\",\n \"AR_CompanyCode\"\nFROM \"defaultview-222\"\nWHERE EVENT_NAME LIKE '%Clear%'\nORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nDATE_TRUNC('month', \"end_time\") as \"Clearing Date\",\nAVG ((SELECT LAST (\"end_time\") WHERE EVENT_NAME MATCHES ('Clear')) - (SELECT FIRST (\"end_time\")  WHERE EVENT_NAME MATCHES ('Clear')))  AS \"AVG Clearing Time\",\n \"AR_CompanyCode\"\nFROM \"defaultview-222\"\nWHERE EVENT_NAME LIKE '%Clear%'\nORDER BY 1 ASC"
    },
    {
        "filename": "c8419a5887",
        "split": "test",
        "name": "Number of accounts receivables documents paid late",
        "query": "\nSELECT\nSUM(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is performing a summation operation on the 'AR_PaidLateCount' column from the table named 'defaultview-222'. Specifically, it is adding up all the values present in the 'AR_PaidLateCount' column. The result of this query will be the total count of late payments as recorded in the 'defaultview-222' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT sum(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT sum(\"AR_PaidLateCount\")\nFROM \"defaultview-222\""
    },
    {
        "filename": "1049f58d89",
        "split": "test",
        "name": "Manual Change Rate by SD Customer Country ",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocCustomerCountry\" AS \"SD Customer Country\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to retrieve data from the table named 'defaultview-383'. It calculates the count of unique 'case_id' values and labels this as '# of SDs'. It also calculates the 'Change rate' by counting the distinct 'case_id' values where the 'EventCreatedByUserType' is 'Dialog' and 'ChangeType' is 'Update'. This count is then divided by the total count of distinct 'case_id' values and multiplied by 100 to get the percentage. Additionally, it retrieves the 'SalesDocCustomerCountry' values and labels it as 'SD Customer Country'. The results are then ordered in descending order based on the '# of SDs'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT case_id) AS \"# of SDs\",\nCOUNT (DISTINCT case_id) \n\tFILTER (\n    \tWHERE \"EventCreatedByUserType\" = 'Dialog'\n       \tAND ChangeType = 'Update'\n    \t)\n\t/ \nCOUNT (DISTINCT case_id)\n    FILTER (\n    \tWHERE \"EventCreatedByUserType\" = 'Dialog') * 100 AS \"Change rate\",\n\"SD_CustomerCountry\"  AS \"SD Customer Country\"\n\n\nFROM FLATTEN(\"defaultview-383\")\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT case_id) AS \"# of SDs\",\nCOUNT (DISTINCT case_id) \n\tFILTER (\n    \tWHERE \"EventCreatedByUserType\" = 'Dialog'\n       \tAND ChangeType = 'Update'\n    \t)\n\t/ \nCOUNT (DISTINCT case_id)\n    FILTER (\n    \tWHERE \"EventCreatedByUserType\" = 'Dialog') * 100 AS \"Change rate\",\n\"SD_CustomerCountry\"  AS \"SD Customer Country\"\n\n\nFROM FLATTEN(\"defaultview-383\")\nORDER BY 1 DESC"
    },
    {
        "filename": "d5bcc67962",
        "split": "test",
        "name": "Overdue deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', NOW()) > \"PO Item Last Requested Delivery Date\"\n    \tAND \"PO Item Delivery Completed\" IS NULL\n      ) \nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of case_id from the table named 'defaultview-57'. It only counts those cases where the current date (truncated to the day) is greater than the 'PO Item Last Requested Delivery Date' and where the 'PO Item Delivery Completed' is null. In other words, it is counting the number of cases where the requested delivery date has passed and the delivery has not yet been completed.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) \nFROM \"defaultview-57\"\nWHERE\nDATE_TRUNC('day', NOW()) > \"PO Item Last Requested Delivery Date\" \nAND \"PO Item Delivery Completed\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) \nFROM \"defaultview-57\"\nWHERE\nDATE_TRUNC('day', NOW()) > \"PO Item Last Requested Delivery Date\" \nAND \"PO Item Delivery Completed\" IS NULL"
    },
    {
        "filename": "76aa55b92b",
        "split": "test",
        "name": "Table",
        "query": "SELECT title, case_id, \"IssueType\"  FROM \"defaultview-217\"\nWHERE title LIKE '%Support%'",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting data from the table named 'defaultview-217'. It is specifically retrieving the values from the 'title', 'case_id', and 'IssueType' columns. However, it is not retrieving all the rows from the table. It is only retrieving those rows where the 'title' contains the word 'Support'. The '%Support%' in the query is a wildcard that matches any sequence of characters followed by the word 'Support' and then followed by any sequence of characters. The result of this query will be a list of titles, case IDs, and issue types where the title includes 'Support'.",
        "llm_gpt-35-turbo-0613_query": "SELECT title, case_id, \"IssueType\"\nFROM \"defaultview-217\"\nwhere title like '%Support%'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT title, case_id, \"IssueType\"\nFROM \"defaultview-217\"\nwhere title like '%Support%'"
    },
    {
        "filename": "acf8aac40c",
        "split": "test",
        "name": "SOL-1709 Late Payment Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days')\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-59' where the 'Last Inv. Item Clearing Date' is more than one day after the 'Last Inv. Item Due Date'. It does this by first counting the number of cases where this condition is true, then dividing this by the total number of cases where the 'Last Inv. Item Clearing Date' is not null. The result is then multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nWITH temp AS (\nSELECT\nCOUNT(LAST OCCURRENCE Clearing Date) FILTER(\n\tWHERE DATE_DIFF('day',\n\t\t\"Last Inv. Item Due Date\",\n\t\t\"Last Inv. Item Clearing Date\"\n\t\t) > DURATION '1days') \n/ \nCOUNT(LAST OCCURRENCE Clearing Date)\nFILTER (WHERE \"Last Inv. Item Clearing Date\" IS NOT NULL) * 100 AS \"#Cases\"\n,\nDATE_TRUNC('month', LAST(\"Last Inv. Item Clearing Date\")) AS \"Timeline-Month\"\nFROM \"defaultview-59\"\n)\nSELECT \n\"Timeline-Month\", \nSUM(\"#Cases\") \nFROM temp\nWHERE \"Timeline-Month\" > DATE_TRUNC('month', NOW()) - INTV '18months'\nGROUP BY 1\nORDER BY 1 DESC\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nWITH temp AS (\nSELECT\nCOUNT(LAST OCCURRENCE Clearing Date) FILTER(\n\tWHERE DATE_DIFF('day',\n\t\t\"Last Inv. Item Due Date\",\n\t\t\"Last Inv. Item Clearing Date\"\n\t\t) > DURATION '1days') \n/ \nCOUNT(LAST OCCURRENCE Clearing Date)\nFILTER (WHERE \"Last Inv. Item Clearing Date\" IS NOT NULL) * 100 AS \"#Cases\"\n,\nDATE_TRUNC('month', LAST(\"Last Inv. Item Clearing Date\")) AS \"Timeline-Month\"\nFROM \"defaultview-59\"\n)\nSELECT \n\"Timeline-Month\", \nSUM(\"#Cases\") \nFROM temp\nWHERE \"Timeline-Month\" > DATE_TRUNC('month', NOW()) - INTV '18months'\nGROUP BY 1\nORDER BY 1 DESC\n\n"
    },
    {
        "filename": "4688181a90",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Vendor Name",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Item Material Group Text\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to retrieve specific information from the table named 'defaultview-124'. It starts by counting the number of 'case_id' and labels this count as 'No. of Cases'. Then, it calculates the sum of the 'PO Item Net Order Value' and labels this sum as 'Total PO Value'. Additionally, it retrieves the text from the 'PO Item Material Group Text' column. The results are then sorted in descending order based on the count of 'case_id'. Finally, the query limits the output to the top 50 records.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id) AS \"No. of Cases\",\n    SUM(\"PO Item Net Order Value\" ) AS \"Total PO Value\",\n   \"PO Item Material Group Text\" \n    \nFROM\n  \"defaultview-124\"\n     \nORDER BY\n  1 DESC\n  \n  LIMIT 50",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id) AS \"No. of Cases\",\n    SUM(\"PO Item Net Order Value\" ) AS \"Total PO Value\",\n   \"PO Item Material Group Text\" \n    \nFROM\n  \"defaultview-124\"\n     \nORDER BY\n  1 DESC\n  \n  LIMIT 50"
    },
    {
        "filename": "baf597ad20",
        "split": "test",
        "name": "Percentage of products with at least one period (month) where demand is not fulfilled",
        "query": "SELECT\nCOUNT(\"case_id\") FILTER(\n\tWHERE(\n\t\"Consensus Demand Delivered\" <> \"Consensus Demand\"\n\t)\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n    AND \"Consensus Demand\" > 0 \n)\n/\nCOUNT(\"case_id\") FILTER(\n\tWHERE \"Consensus Demand\" > 0\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating a percentage from the 'defaultview-404' table. The numerator of this percentage is the count of case_ids where the 'Consensus Demand Delivered' is not equal to 'Consensus Demand', the 'MONTH' is greater than or equal to the start of the current month, the difference between 'MONTH' and the start of the current month is less than 320 days, and 'Consensus Demand' is greater than 0. The denominator of this percentage is the count of case_ids where 'Consensus Demand' is greater than 0, the 'MONTH' is greater than or equal to the start of the current month, and the difference between 'MONTH' and the start of the current month is less than 320 days. The result is multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n (COUNT(case_id) FILTER (\n  WHERE\n    (\n      \"Consensus Demand Delivered\" <> \"Consensus Demand\"\n    )\n    AND MONTH >= (DATE_TRUNC('month', NOW()))\n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) <= DURATION '320days'\n    AND (\n      \"Consensus Demand\" > 0\n    )\n )) / (COUNT(case_id) FILTER (\n  WHERE\n    (\n      \"Consensus Demand\" > 0\n    )\n    AND MONTH >= (DATE_TRUNC('month', NOW()))\n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) <= DURATION '320days'\n ))\n* 100\nFROM \"defaultview-404\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n (COUNT(case_id) FILTER (\n  WHERE\n    (\n      \"Consensus Demand Delivered\" <> \"Consensus Demand\"\n    )\n    AND MONTH >= (DATE_TRUNC('month', NOW()))\n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) <= DURATION '320days'\n    AND (\n      \"Consensus Demand\" > 0\n    )\n )) / (COUNT(case_id) FILTER (\n  WHERE\n    (\n      \"Consensus Demand\" > 0\n    )\n    AND MONTH >= (DATE_TRUNC('month', NOW()))\n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) <= DURATION '320days'\n ))\n* 100\nFROM \"defaultview-404\""
    },
    {
        "filename": "b4ef96ed37",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"\t",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is calculating the average difference between the 'Basic Finish Date' and the 'Basic Start Date' from the table named 'defaultview-183'. This is done by subtracting the 'Basic Start Date' from the 'Basic Finish Date' for each record in the table, and then taking the average of all these differences. The result will give us the average duration of a certain process or event recorded in the table 'defaultview-183'.",
        "llm_gpt-35-turbo-0613_query": "\n-- Difference in durations --\n\nSELECT\nAVG (\n\t(SELECT AVG (\"Basic Finish Date\" - \"Basic Start Date\") )\n)\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\n-- Difference in durations --\n\nSELECT\nAVG (\n\t(SELECT AVG (\"Basic Finish Date\" - \"Basic Start Date\") )\n)\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "eb31f2d40f",
        "split": "test",
        "name": "_Average project start to end time",
        "query": "\nSELECT\nAVG(Project_StartToEndTime)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is calculating the average value of the column 'Project_StartToEndTime' from the table named 'defaultview-197'. The function AVG() is used to compute this average. The result will be the mean value of all the entries in the 'Project_StartToEndTime' column of the 'defaultview-197' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n\tAVG(\"Project_StartToEndTime\")\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n\tAVG(\"Project_StartToEndTime\")\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "511c40d335",
        "split": "test",
        "name": "Last PO Vendor Name (too much null...not worthy)",
        "query": "SELECT \"Last PO Vendor Name\" AS \"Last PO Vendor Name\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is selecting data from the table named 'defaultview-225'. It is retrieving the column 'Last PO Vendor Name' and counting the number of occurrences of each unique 'Inv. Accounting Document Number', which is then labeled as 'No. of Invoices'. The data is then grouped by the first selected column, which is 'Last PO Vendor Name'. Finally, the results are ordered in descending order based on the second column, which is 'No. of Invoices'. In essence, this query is providing a summary of the number of invoices per vendor.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n \"Last PO Vendor Name\", \n  COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n \"Last PO Vendor Name\", \n  COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC"
    },
    {
        "filename": "11f85b95e3",
        "split": "test",
        "name": "Case Count & Cycle Time (PR Approval to Create PO) by PO Business Unit",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create PO Item')) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Approve PR item'))) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\", \n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 100",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to retrieve data from the table named 'defaultview-545'. It calculates the count of 'CASE_ID' and labels it as 'No. of Cases'. It also calculates the average cycle time between the 'Approve PR item' event and the 'Create PO Item' event by subtracting the first occurrence of 'END_TIME' where 'EVENT_NAME' equals 'Approve PR item' from the last occurrence of 'END_TIME' where 'EVENT_NAME' equals 'Create PO Item'. This average cycle time is labeled as 'Avg. Cycle Time (PR Apprvl to Crt PO)'. The query also selects the 'PO Business Unit' column. The results are ordered in descending order based on the 'No. of Cases' and only the top 100 records are returned.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME)\n    \tWHERE EVENT_NAME = 'Create PO Item') - \n    (SELECT FIRST (END_TIME)\n\t\tWHERE EVENT_NAME = 'Approve PR item')) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\",\n\n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 100",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME)\n    \tWHERE EVENT_NAME = 'Create PO Item') - \n    (SELECT FIRST (END_TIME)\n\t\tWHERE EVENT_NAME = 'Approve PR item')) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\",\n\n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 100"
    },
    {
        "filename": "1387d29cf3",
        "split": "test",
        "name": "\u00d8 WIP time Painting -> Assembly",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0020'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0010'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average difference in end times between two specific events from the table named 'defaultview-270'. The first event is where the event name starts with 'Start' and the routing step is '0020'. The second event is where the event name starts with 'Complete' and the routing step is '0010'. The difference in end times for these two events is calculated for each row, and then the average of these differences is computed.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n AVG(\n  (SELECT END_TIME(EVENT) WHERE EVENT_NAME LIKE 'Start%' AND \"RoutingStep\" = '0020')\n  -\n  (SELECT END_TIME(EVENT) WHERE EVENT_NAME LIKE 'Complete%' AND \"RoutingStep\" = '0010')\n )\nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n AVG(\n  (SELECT END_TIME(EVENT) WHERE EVENT_NAME LIKE 'Start%' AND \"RoutingStep\" = '0020')\n  -\n  (SELECT END_TIME(EVENT) WHERE EVENT_NAME LIKE 'Complete%' AND \"RoutingStep\" = '0010')\n )\nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "ebc0a9dc87",
        "split": "test",
        "name": "Automation Rate Goods Issue",
        "query": "SELECT SUM(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE (\"Event Created By User Type\" IN ('System','Batch Job','Service') \n        AND event_name IN ('GI for order'))\n\t)\n   ))\n/ SUM((SELECT COUNT(event_name)\n\tFILTER (\n\t\tWHERE (event_name IN ('GI for order')))))\n* 100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating a percentage from the 'defaultview-183' table. It first sums up the count of the 'event_name' column where the 'Event Created By User Type' is either 'System', 'Batch Job', or 'Service' and the 'event_name' is 'GI for order'. This sum is then divided by the total count of 'event_name' where the 'event_name' is 'GI for order'. The result of this division is then multiplied by 100 to get the percentage. The final result will be the percentage of 'event_name' that are 'GI for order' and were created by either 'System', 'Batch Job', or 'Service'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM((SELECT COUNT (event_name) WHERE \"Event Created By User Type\" IN ('System', 'Batch Job', 'Service') and event_name = 'GI for order'))\n  /\n  COUNT(event_name) FILTER (WHERE event_name = 'GI for order')\n  * 100\nFROM \"defaultview-183\"\n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM((SELECT COUNT (event_name) WHERE \"Event Created By User Type\" IN ('System', 'Batch Job', 'Service') and event_name = 'GI for order'))\n  /\n  COUNT(event_name) FILTER (WHERE event_name = 'GI for order')\n  * 100\nFROM \"defaultview-183\"\n\n                "
    },
    {
        "filename": "4ac3ebb383",
        "split": "test",
        "name": "Invoices with immediate PT",
        "query": "SELECT COUNT(case_id) FILTER(\n\tWHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0) \nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is counting the number of case IDs from the table named 'defaultview-225'. However, it is not counting all the case IDs. It only counts those case IDs where the column 'Last Inv. Item Cash Discount Days 1' has either a NULL value or a value equal to 0. In other words, this query is used to find out how many case IDs in the 'defaultview-225' table have no information or zero days recorded in the 'Last Inv. Item Cash Discount Days 1' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL \n    OR \"Last Inv. Item Cash Discount Days 1\" = 0\n)\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL \n    OR \"Last Inv. Item Cash Discount Days 1\" = 0\n)\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "67ee27564b",
        "split": "test",
        "name": "Number of Quotation Changes over time",
        "query": "SELECT\n  DATE_TRUNC('month', end_time) AS \"Change Date\",\n  COUNT (DISTINCT \"UniqueEventId\") AS \"# Changes\"\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  EVENT_NAME LIKE '%Quotation%'\n  AND ChangeType = 'Update'\nORDER BY\n  1 ASC NULLS FIRST FILL TIMESERIES('Month'),\n  NULL",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to extract data from the table named 'defaultview-383'. It first selects the 'end_time' column and truncates the date to the month, which is then labeled as 'Change Date'. It also counts the distinct values in the 'UniqueEventId' column and labels this count as '# Changes'. The query then filters the data where the 'EVENT_NAME' contains the word 'Quotation' and the 'ChangeType' is equal to 'Update'. The resulting data is then ordered in ascending order by the first column, which is 'Change Date'. If there are any null values in the 'Change Date' column, they are placed first. The query also fills the time series for the 'Month' and places any null values at the end.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  DATE_TRUNC(\n    'month',\n    (SELECT\n        LAST (end_time)))\n        AS \"Change Date\",\n        \n  COUNT(DISTINCT \"UniqueEventId\") AS \"# Changes\"\n--# Changes \n\nFROM\n  \"defaultview-383\"\n\nWHERE\n  EVENT_NAME LIKE '%Quotation%'\n  AND ChangeType = 'Update'\n\nORDER BY\n  1 ASC NULLS FIRST\nFILL TIMESERIES 'Month'\nNULLS LAST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  DATE_TRUNC(\n    'month',\n    (SELECT\n        LAST (end_time)))\n        AS \"Change Date\",\n        \n  COUNT(DISTINCT \"UniqueEventId\") AS \"# Changes\"\n--# Changes \n\nFROM\n  \"defaultview-383\"\n\nWHERE\n  EVENT_NAME LIKE '%Quotation%'\n  AND ChangeType = 'Update'\n\nORDER BY\n  1 ASC NULLS FIRST\nFILL TIMESERIES 'Month'\nNULLS LAST"
    },
    {
        "filename": "835c24ddd6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of rows in the 'defaultview-225' table where the column 'Last Inv. Item Cash Discount Days 1' is either NULL or has a value of 0. It does this by first counting the number of rows that meet these conditions, then dividing that count by the total number of rows (represented by the count of 'case_id'), and finally multiplying the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(COUNT (CASE WHEN (\"Last Inv. Item Cash Discount Days 1\" IS NULL)\n    OR \"Last Inv. Item Cash Discount Days 1\" = '0'\n    THEN 1 ELSE NULL END)\n/ COUNT (\"case_id\")) * 100\n\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(COUNT (CASE WHEN (\"Last Inv. Item Cash Discount Days 1\" IS NULL)\n    OR \"Last Inv. Item Cash Discount Days 1\" = '0'\n    THEN 1 ELSE NULL END)\n/ COUNT (\"case_id\")) * 100\n\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "900d4e70c5",
        "split": "test",
        "name": "Avg. Cycle Time of Cases with Late Payment",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME)))\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average difference in time between the last and first 'END_TIME' in the table named 'defaultview-124'. However, this calculation is only performed for the rows where the 'Last FI Invoice Item Due Date' is earlier than the 'Last FI Invoice Item Clearing Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG ((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME))) FILTER (\n\t\tWHERE (\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"))\nFROM\n\t\"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG ((SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME))) FILTER (\n\t\tWHERE (\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"))\nFROM\n\t\"defaultview-124\""
    },
    {
        "filename": "5ac5c83f16",
        "split": "test",
        "name": "_Number of timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is performing a summation operation on the 'TSR_Count' column from the table named 'defaultview-197'. Specifically, it is adding up all the values present in the 'TSR_Count' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "202dcc39f3",
        "split": "test",
        "name": "AVG Payment Time",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\"\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is selecting data from the table named 'defaultview-222'. It is performing a date truncation operation on the 'end_time' column, truncating the date to the month and renaming it as 'Clearing Date'. It is also calculating the average difference between the 'ClearingDate' and 'CreationDate' columns, but only for those rows where the 'EVENT_NAME' column contains the string 'Clear%'. This average is being renamed as 'AVG Clearing Time'. The query is filtering the data to only include rows where the 'EVENT_NAME' column contains the string 'Clear%'. Finally, the query is ordering the resulting data in ascending order based on the first column of the result, which is the 'Clearing Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nDATE_TRUNC('Month', End_time) AS \"Clearing Date\", \nAVG(\"ClearingDate\" - \"CreationDate\") AS \"AVG Clearing Time\"\nFROM \"defaultview-222\"\nWhere EVENT_NAME ILIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nDATE_TRUNC('Month', End_time) AS \"Clearing Date\", \nAVG(\"ClearingDate\" - \"CreationDate\") AS \"AVG Clearing Time\"\nFROM \"defaultview-222\"\nWhere EVENT_NAME ILIKE 'Clear%'\nORDER BY 1 ASC"
    },
    {
        "filename": "4229e2c517",
        "split": "test",
        "name": "Table",
        "query": "SELECT count(case_id), event_name, \"Change Old Value\", \"Change New Value\"  \nFROM FLATTEN(\"defaultview-57\")\nWHERE Event_name ILIKE '%Update%'\nORDER BY 1 desc\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to retrieve data from the table named 'defaultview-57'. It is counting the number of 'case_id' and selecting the columns 'event_name', 'Change Old Value', and 'Change New Value'. The query is specifically looking for rows where the 'Event_name' column contains the word 'Update' (case-insensitive). The results are then ordered in descending order based on the count of 'case_id'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (\"case_id\") AS \"No. Of Case\", \n \"Event_name\" AS \"Event\",\n--\"Activity\",\"Role\",\"Event_entity_type\" , \"Event_entity_name\" ,\n\"Change Old Value\" as \"Old Value\",\n\"Change New Value\" as \"New Value\"\n FROM FLATTEN(\"defaultview-57\")\n-- WHERE \"Activity\"  like 'Update' and  LENGTH('Event_name') < 3\n WHERE EVENT_NAME like ILIKE '%update%'\n-- and EVENT_NAME  LENGTH  < 3 \n--WHERE EVENT_NAME like ('Select' | 'Place Order') AND EVENT_NAME MATCHES ('Insert' | 'void') \nGROUP BY 2,3,4 ORDER  BY  1 DESC  ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (\"case_id\") AS \"No. Of Case\", \n \"Event_name\" AS \"Event\",\n--\"Activity\",\"Role\",\"Event_entity_type\" , \"Event_entity_name\" ,\n\"Change Old Value\" as \"Old Value\",\n\"Change New Value\" as \"New Value\"\n FROM FLATTEN(\"defaultview-57\")\n-- WHERE \"Activity\"  like 'Update' and  LENGTH('Event_name') < 3\n WHERE EVENT_NAME like ILIKE '%update%'\n-- and EVENT_NAME  LENGTH  < 3 \n--WHERE EVENT_NAME like ('Select' | 'Place Order') AND EVENT_NAME MATCHES ('Insert' | 'void') \nGROUP BY 2,3,4 ORDER  BY  1 DESC  "
    },
    {
        "filename": "0a048d6ae2",
        "split": "test",
        "name": "Avg. Cycle Time (Create to Clear Invoice)",
        "query": "SELECT\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice')) AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average cycle time between the 'Clear Invoice' event and the 'Create FI Invoice' event in the 'defaultview-124' table. It does this by first selecting the last end time where the event name is 'Clear Invoice' and then subtracting the first end time where the event name is 'Create FI Invoice'. The result of this calculation is then averaged to give the 'Avg. Cycle Time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n AVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') -\n (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create FI Invoice'))\n  AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n AVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') -\n (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create FI Invoice'))\n  AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\""
    },
    {
        "filename": "d56a723b4e",
        "split": "test",
        "name": "_Number of completed projects",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE \"Project_StageText\" = 'Completed'\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the number of cases from the table named 'defaultview-197' where the 'Project_StageText' column has a value of 'Completed'. This is achieved by using the SELECT statement to specify the 'case_id' column, applying the COUNT function to count the number of cases. A FILTER clause is used to include only those rows where the 'Project_StageText' column equals 'Completed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE \"Project_StageText\" = 'Completed') \nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE \"Project_StageText\" = 'Completed') \nFROM \"defaultview-197\""
    },
    {
        "filename": "1052a139b9",
        "split": "test",
        "name": "_Percentage of projects created after start date",
        "query": "\nSELECT\n(\nSUM(\"Project_CreationAfterStartFlag\" )\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of projects that were created after the start of the project. It does this by summing up the values in the 'Project_CreationAfterStartFlag' column from the 'defaultview-197' table, which presumably contains a flag (1 or 0) indicating whether a project was created after the start or not. This sum is then divided by the total number of cases, which is determined by counting the number of 'case_id' in the same table. The result is then multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(SUM(\"Project_CreationAfterStartFlag\") \n\t/ COUNT(case_id))\n* 100\n FROM FLATTEN(\"defaultview-197\")\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(SUM(\"Project_CreationAfterStartFlag\") \n\t/ COUNT(case_id))\n* 100\n FROM FLATTEN(\"defaultview-197\")\n                "
    },
    {
        "filename": "b20189ef80",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\n  /\n  COUNT(case_id) FILTER (\n      WHERE \"PO Item Delivery Completed\" = 'Yes'\n      )\n  * 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-57' where the 'Last GR Creation Date', when truncated to the day, is later than the 'PO Item Last Requested Delivery Date' and the 'PO Item Delivery Completed' is 'Yes'. This percentage is calculated by dividing the count of such cases by the total count of cases where 'PO Item Delivery Completed' is 'Yes', and then multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        DATE_TRUNC('day', \"Last GR Creation Date\") \n        > \"PO Item Last Requested Delivery Date\"\n        AND \"PO Item Delivery Completed\" = 'Yes'\n      )\n  ) \n  / COUNT (CASE_ID) FILTER (\n    WHERE \"PO Item Delivery Completed\" = 'Yes'\n  ) * 100\n   FROM \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        DATE_TRUNC('day', \"Last GR Creation Date\") \n        > \"PO Item Last Requested Delivery Date\"\n        AND \"PO Item Delivery Completed\" = 'Yes'\n      )\n  ) \n  / COUNT (CASE_ID) FILTER (\n    WHERE \"PO Item Delivery Completed\" = 'Yes'\n  ) * 100\n   FROM \"defaultview-57\"\n                "
    },
    {
        "filename": "c0ee4f416c",
        "split": "test",
        "name": "PTP_DB_On-Time Delivery Rate",
        "query": "\nSELECT\n(1 - \n\tCOUNT(case_id) FILTER (\n\t\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n\t\t\tAND \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n\t/\n\tCOUNT(case_id) FILTER (\n\t\tWHERE \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n)\n* 100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases where the 'Last GR Creation Date' is later than the 'PO Item Last Requested Delivery Date' from the total number of cases where 'PO Item Delivery Completed' is 'Yes'. This is done in the table named 'defaultview-124'. The calculation is done by first counting the number of cases where 'Last GR Creation Date' is later than 'PO Item Last Requested Delivery Date' and 'PO Item Delivery Completed' is 'Yes'. This count is then subtracted from 1 and divided by the total count of cases where 'PO Item Delivery Completed' is 'Yes'. The result is then multiplied by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT ((COUNT (CASE_ID) FILTER (WHERE \"Last GR Creation Date\" > \"PO Item Last Requested Delivery Date\" AND \"PO Item Delivery Completed\" = 'Yes')))/ (COUNT (CASE_ID) FILTER (WHERE \"PO Item Delivery Completed\" = 'Yes')) * 100\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT ((COUNT (CASE_ID) FILTER (WHERE \"Last GR Creation Date\" > \"PO Item Last Requested Delivery Date\" AND \"PO Item Delivery Completed\" = 'Yes')))/ (COUNT (CASE_ID) FILTER (WHERE \"PO Item Delivery Completed\" = 'Yes')) * 100\nFROM \"defaultview-124\""
    },
    {
        "filename": "8f6fbc2031",
        "split": "test",
        "name": "Cancellation rate of purchase orders",
        "query": "SELECT COUNT(case_id) FILTER (\n    WHERE (SELECT FIRST(event_name) FILTER (\n            WHERE event_name IN ('Delete PO Item'))) IS NOT NULL\n    )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases in the table 'defaultview-57' where the first event name is 'Delete PO Item'. It does this by first counting the number of case_ids where the first event_name is 'Delete PO Item'. This is done using a subquery with a filter condition that checks if the event_name is 'Delete PO Item'. The result of this count is then divided by the total number of case_ids in the table 'defaultview-57'. The result of this division is then multiplied by 100 to get the percentage. The final result is the percentage of cases where the first event is 'Delete PO Item'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(\nCOUNT(case_id) FILTER(\n\t\tWHERE (SELECT FIRST(event_name) AS first_event_name) IN ('Delete PO Item'))\n   /\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(\nCOUNT(case_id) FILTER(\n\t\tWHERE (SELECT FIRST(event_name) AS first_event_name) IN ('Delete PO Item'))\n   /\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-57\"\n                "
    },
    {
        "filename": "d2566dc5b5",
        "split": "test",
        "name": "Top 5 Variants ranked by 90th Percentile Cycle Time",
        "query": "SELECT event_name AS \"Variant\", \n\t  PERCENTILE_DISC(0.9) WITHIN GROUP(ORDER BY (SELECT LAST(end_time) - FIRST(end_time))) AS \"90th Percentile Cycle Time per Variant\"\n  FROM \"defaultview-9\"\n GROUP BY 1\n ORDER BY 2 DESC\n LIMIT 5",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting data from the table named 'defaultview-9'. It is creating a new column named 'Variant' which contains the values from the 'event_name' column. It is also calculating the 90th percentile of the difference between the last and first 'end_time' for each group, and this value is being stored in a new column named '90th Percentile Cycle Time per Variant'. The grouping is done based on the 'event_name' column. The result is then sorted in descending order based on the '90th Percentile Cycle Time per Variant' column. Finally, the query limits the output to the top 5 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  \"event_name\" AS \"Variant\",\n  PERCENTILE_CONT(0.9) OVER (\n    PARTITION BY \"event_name\" \n    ORDER BY\n        (\n          SELECT\n            LAST(\"end_time\") - FIRST(\"end_time\")\n        )\n  ) AS \"90th Percentile Cycle Time per Variant\"\nFROM\n  (\n    SELECT\n      (\n        SELECT\n          LAST(\"end_time\")\n        WHERE\n          \"event_name\" = LOWER(\"event_name\")\n      ) -\n      (\n        SELECT\n          FIRST(\"end_time\")\n        WHERE\n          \"event_name\" = LOWER(\"event_name\")\n      ) AS \"Cycle Time\",\n      \"event_name\"\n    FROM\n      (\n        SELECT\n          FIRST(\"event_name\") AS \"event_name\",\n          LAST(\"end_time\") AS \"end_time\"\n        FROM\n          \"defaultview-9\"\n        WHERE\n          (\n            \"event_name\" = 'ConfigChange'\n            OR \"event_name\" = 'ChangeLog'\n            OR \"event_name\" = 'Edit_Dependency'\n            OR \"event_name\" = 'EditDiscussion'\n            OR \"event_name\" = 'EditImplementChange'\n            OR \"event_name\" = 'EditReconstruction'\n            OR \"event_name\" = 'EditTaskOfProcessStep'\n            OR \"event_name\" = 'EditTaskUser'\n            OR \"event_name\" = 'EditUserTask'\n            OR \"event_name\" = 'IS' \n--            OR event_name = 'Move_to_DF'\n          )\n        ORDER BY\n          LAST(\"end_time\") ASC\n      ) AS \"A\"\n  ) AS \"B\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  \"event_name\" AS \"Variant\",\n  PERCENTILE_CONT(0.9) OVER (\n    PARTITION BY \"event_name\" \n    ORDER BY\n        (\n          SELECT\n            LAST(\"end_time\") - FIRST(\"end_time\")\n        )\n  ) AS \"90th Percentile Cycle Time per Variant\"\nFROM\n  (\n    SELECT\n      (\n        SELECT\n          LAST(\"end_time\")\n        WHERE\n          \"event_name\" = LOWER(\"event_name\")\n      ) -\n      (\n        SELECT\n          FIRST(\"end_time\")\n        WHERE\n          \"event_name\" = LOWER(\"event_name\")\n      ) AS \"Cycle Time\",\n      \"event_name\"\n    FROM\n      (\n        SELECT\n          FIRST(\"event_name\") AS \"event_name\",\n          LAST(\"end_time\") AS \"end_time\"\n        FROM\n          \"defaultview-9\"\n        WHERE\n          (\n            \"event_name\" = 'ConfigChange'\n            OR \"event_name\" = 'ChangeLog'\n            OR \"event_name\" = 'Edit_Dependency'\n            OR \"event_name\" = 'EditDiscussion'\n            OR \"event_name\" = 'EditImplementChange'\n            OR \"event_name\" = 'EditReconstruction'\n            OR \"event_name\" = 'EditTaskOfProcessStep'\n            OR \"event_name\" = 'EditTaskUser'\n            OR \"event_name\" = 'EditUserTask'\n            OR \"event_name\" = 'IS' \n--            OR event_name = 'Move_to_DF'\n          )\n        ORDER BY\n          LAST(\"end_time\") ASC\n      ) AS \"A\"\n  ) AS \"B\""
    },
    {
        "filename": "c2922a0092",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with manual changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term')) AND BOOL_OR(\"Event Created By User Type\" = 'Dialog')))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases in the table 'defaultview-59' where the event name is 'Update Payment Term' and the event was created by a user type 'Dialog'. It does this by first counting the number of cases that meet these conditions using the 'COUNT(case_id) FILTER' function. This count is then divided by the total number of cases in the table, which is obtained by 'COUNT(case_id)'. The result is then multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  (\n    COUNT(case_id) FILTER (\n      WHERE\n        BEHAVIOR OF (\n          SELECT\n            FIRST(event_created_by_user_type) FILTER (\n              WHERE\n                event_name IN ('Update Payment Term')\n            ) AS \"first\",\n            LAST(event_created_by_user_type) AS \"last\"\n        ) AS sub_filter\n        BEHAVIOR WHERE sub_filter.last = 'Dialog'\n    ) > 0\n  ) /\n  (\n    COUNT(case_id)\n  ) * 100\nFROM\n  \"defaultview-59\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  (\n    COUNT(case_id) FILTER (\n      WHERE\n        BEHAVIOR OF (\n          SELECT\n            FIRST(event_created_by_user_type) FILTER (\n              WHERE\n                event_name IN ('Update Payment Term')\n            ) AS \"first\",\n            LAST(event_created_by_user_type) AS \"last\"\n        ) AS sub_filter\n        BEHAVIOR WHERE sub_filter.last = 'Dialog'\n    ) > 0\n  ) /\n  (\n    COUNT(case_id)\n  ) * 100\nFROM\n  \"defaultview-59\"\n                "
    },
    {
        "filename": "9c5586849c",
        "split": "test",
        "name": "_Number of projects with costs after end date",
        "query": "\nSELECT\nCOUNT (case_id) FILTER (\n\tWHERE (\"CostDoc_EnterDocAfterProjectClosingCount\" > 0)\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is counting the number of case IDs from the table named 'defaultview-197'. However, it is not counting all the case IDs. It only counts those case IDs where the value in the column 'CostDoc_EnterDocAfterProjectClosingCount' is greater than 0. In other words, it is counting the number of projects (represented by case IDs) that have had cost documents entered after the project was closed.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(\"Case Id\" ) FILTER(WHERE \"CostDoc_EnterDocAfterProjectClosingCount\" > 0)\nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(\"Case Id\" ) FILTER(WHERE \"CostDoc_EnterDocAfterProjectClosingCount\" > 0)\nFROM \"defaultview-197\""
    },
    {
        "filename": "b412cf1c81",
        "split": "test",
        "name": "Number of Closed Projects",
        "query": "SELECT COUNT(DISTINCT case_id)\nFROM \"defaultview-197\"\nWHERE \"Project_Stage\"  IN ('P005')\n\n--SELECT COUNT(DISTINCT case_id)\n--FROM FLATTEN(\"defaultview-197\")\n--WHERE event_name = ('Close Project')\n--AND end_time < NOW()",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the unique case IDs from the table named 'defaultview-197'. However, it doesn't count all the case IDs. It only counts those where the 'Project_Stage' column has a value of 'P005'. The DISTINCT keyword ensures that each case ID is only counted once, even if it appears multiple times in the table. The query is constructed by first specifying what to select, in this case, the count of distinct case IDs. Then it specifies from which table to select this data, 'defaultview-197'. Finally, it applies a condition to filter the data, only counting the case IDs where 'Project_Stage' equals 'P005'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count (DISTINCT \"CaseId\")\nFROM \"defaultview-197\"\nWhere \"Project_Stage\" = 'P005'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count (DISTINCT \"CaseId\")\nFROM \"defaultview-197\"\nWhere \"Project_Stage\" = 'P005'"
    },
    {
        "filename": "1b5cdb573c",
        "split": "test",
        "name": "Value",
        "query": "SELECT\nSUM(\n\t(SELECT COUNT(CASE_ID) FILTER (\n \tWHERE (EVENT_NAME IN ('Personal Data Change WF Initiated'))))) \n/ COUNT (CASE_ID) \n*100\nFROM \"defaultview-299\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases where the event name is 'Personal Data Change WF Initiated' in the table 'defaultview-299'. It does this by first counting the number of cases where the event name matches the specified value. This count is then divided by the total number of cases in the table. The result is multiplied by 100 to convert it into a percentage. The columns used in this query are 'CASE_ID' and 'EVENT_NAME'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(SUM(CASE WHEN EVENT_NAME = 'Personal Data Change WF Initiated' THEN 1 ELSE 0 END)\n\t/ SUM (SN_COUNT_CASE_ID) ) * 100\nFROM \"defaultview-299\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(SUM(CASE WHEN EVENT_NAME = 'Personal Data Change WF Initiated' THEN 1 ELSE 0 END)\n\t/ SUM (SN_COUNT_CASE_ID) ) * 100\nFROM \"defaultview-299\"\n                "
    },
    {
        "filename": "208336c2e5",
        "split": "test",
        "name": "Automation Rate Material availability checked",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Check Material Availability'\n\n\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to calculate the percentage of 'Check Material Availability' events that were not created by a 'Dialog' user type. It does this by dividing the count of 'Check Material Availability' events not created by 'Dialog' by the total count of 'Check Material Availability' events. The result is then multiplied by 100 to convert it into a percentage. The data for this query is extracted from the 'defaultview-183' table. Specifically, it uses the 'event_name' and 'Event Created By User Type' columns.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n100 * (\n\t\t(SELECT COUNT(event_name) \n\t\t\tWHERE NOT (\"Event Created By User Type\" IN ('Dialog')))\n\t\t/ \n        (SELECT COUNT(event_name) \n        \tWHERE event_name IN ('Check Material Availability'))) \n\t\t\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n100 * (\n\t\t(SELECT COUNT(event_name) \n\t\t\tWHERE NOT (\"Event Created By User Type\" IN ('Dialog')))\n\t\t/ \n        (SELECT COUNT(event_name) \n        \tWHERE event_name IN ('Check Material Availability'))) \n\t\t\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "e048ff1b2f",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))\n        \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item'  'Receive Invoice')\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between two events in the 'defaultview-431' table. Specifically, it is finding the difference between the last occurrence of the 'Receive Invoice' event and the first occurrence of the 'Create PO Item' event. The query is only considering rows where the EVENT_NAME is either 'Create PO Item' or 'Receive Invoice'. The result will be the average of these time differences across all relevant rows in the 'defaultview-431' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  AVG ((SELECT LAST (END_TIME) FILTER (\n      WHERE     (EVENT_NAME IN ('Receive Invoice')))))\n  - AVG ((SELECT FIRST (END_TIME) FILTER (\n      WHERE     (EVENT_NAME IN ('Create PO Item'))))))\nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  AVG ((SELECT LAST (END_TIME) FILTER (\n      WHERE     (EVENT_NAME IN ('Receive Invoice')))))\n  - AVG ((SELECT FIRST (END_TIME) FILTER (\n      WHERE     (EVENT_NAME IN ('Create PO Item'))))))\nFROM \"defaultview-431\""
    },
    {
        "filename": "8dc7922da6",
        "split": "test",
        "name": "PO Item changes rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES(ILIKE '%Update%')))\n\t/\n\tCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES('Create PO Item'))\n\t)\n\t* 100\n    \n    -- ILIKE '%Update%'\n    \n    \nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to calculate the percentage of 'Update' events in relation to 'Create PO Item' events from the table named 'defaultview-124'. It does this by first counting the number of case IDs where the event name contains the word 'Update' (case insensitive due to the use of ILIKE). This count is then divided by the count of case IDs where the event name exactly matches 'Create PO Item'. The result of this division is then multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\ncount(case_id) FILTER (\n\tWHERE event_name ILIKE '%Update%'\n\t)\n/\ncount(case_id) FILTER (\n\tWHERE event_name = 'Create PO Item'\n\t)\n* 100\nFROM\n\"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\ncount(case_id) FILTER (\n\tWHERE event_name ILIKE '%Update%'\n\t)\n/\ncount(case_id) FILTER (\n\tWHERE event_name = 'Create PO Item'\n\t)\n* 100\nFROM\n\"defaultview-124\""
    },
    {
        "filename": "4d107651fe",
        "split": "test",
        "name": "Volume of cancelled orders",
        "query": "SELECT SUM(\"PO Item Net Order Value in USD\") FILTER (\n\tWHERE event_name MATCHES('Delete PO Item')\n\t)\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is calculating the sum of the column 'PO Item Net Order Value in USD' from the table 'defaultview-57'. However, it is not considering all the rows in the table. It is applying a filter to only include those rows where the 'event_name' column matches the value 'Delete PO Item'. In other words, it is summing up the 'PO Item Net Order Value in USD' for all the 'Delete PO Item' events.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"PO Item Net Order Value in USD\") \n  FILTER (WHERE event_name = 'Delete PO Item') FROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"PO Item Net Order Value in USD\") \n  FILTER (WHERE event_name = 'Delete PO Item') FROM \"defaultview-57\""
    },
    {
        "filename": "e0aec295eb",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-225' where the 'Last Inv. Item Clearing Date' is more than one day after the 'Last Inv. Item Due Date'. It does this by first counting the number of cases where this condition is true, then dividing it by the total number of cases where the 'Last Inv. Item Clearing Date' is not null. The result is then multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\n(\n\tSELECT\n\t\tCOUNT (CASE_ID) FILTER (\n\t\t\tWHERE\n\t\t\t\t(\n\t\t\t\t\t\"Last Inv. Item Clearing Date\" IS NOT NULL\n\t\t\t\t\tAND (\n\t\t\t\t\t\t\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days'\n\t\t\t\t\t)\n\t\t\t\t)) \n\t\t/ COUNT (CASE_ID) FILTER (\n\t\t\tWHERE\n\t\t\t\t(\n\t\t\t\t\t\"Last Inv. Item Clearing Date\" IS NOT NULL\n\t\t\t\t)))\n\t* 100\nFROM\n\t\"defaultview-225\"\n)",
        "llm_gpt-35-turbo-0613_full_output": "\n(\n\tSELECT\n\t\tCOUNT (CASE_ID) FILTER (\n\t\t\tWHERE\n\t\t\t\t(\n\t\t\t\t\t\"Last Inv. Item Clearing Date\" IS NOT NULL\n\t\t\t\t\tAND (\n\t\t\t\t\t\t\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days'\n\t\t\t\t\t)\n\t\t\t\t)) \n\t\t/ COUNT (CASE_ID) FILTER (\n\t\t\tWHERE\n\t\t\t\t(\n\t\t\t\t\t\"Last Inv. Item Clearing Date\" IS NOT NULL\n\t\t\t\t)))\n\t* 100\nFROM\n\t\"defaultview-225\"\n)"
    },
    {
        "filename": "488b42c7bc",
        "split": "test",
        "name": "Company code and its latest changes ",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting four columns from a temporary table named 'Temp'. The 'Temp' table is created by selecting six columns from the 'defaultview-225' table and applying the FLATTEN function. The columns selected from the 'defaultview-225' table are 'case_id', 'Inv. Company Code', 'Inv. Company Code Text', 'Most recent Inv.', 'Last Inv. Item Terms of Payment Key', and 'Last Inv. Item Vendor Master Payment Terms'. The 'Most recent Inv.' column is created by applying the LAST function to the 'Inv. Accounting Document Date' column. The final output of the query includes the 'Inv. Company code', the 'Most recent Inv.', the 'Last Inv. Item Terms of Payment Key', and the 'Last Inv. Item Vendor Master Payment Terms' columns from the 'Temp' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Inv. Company Code\" AS \"I. Vendor Company code\", \"Most recent Inv.\" AS \"Last Booking\", \"Last Inv. Item Terms of Payment Key\", \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(\nSELECT\n\"case_id\",\n\"Inv. Company Code\",\n\"Inv. Company Code Text\",\n\"Most recent Inv.\",\n\"Last Inv. Item Terms of Payment Key\",\n\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")\n)\nAS Temp",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Inv. Company Code\" AS \"I. Vendor Company code\", \"Most recent Inv.\" AS \"Last Booking\", \"Last Inv. Item Terms of Payment Key\", \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(\nSELECT\n\"case_id\",\n\"Inv. Company Code\",\n\"Inv. Company Code Text\",\n\"Most recent Inv.\",\n\"Last Inv. Item Terms of Payment Key\",\n\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")\n)\nAS Temp"
    },
    {
        "filename": "a58ec89c7f",
        "split": "test",
        "name": "Table",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting four columns from a subquery. The subquery is flattening the 'defaultview-225' table and selecting six columns from it. The columns selected are 'case_id', 'Inv. Company Code', 'Inv. Company Code Text', 'Most recent Inv.', 'Last Inv. Item Terms of Payment Key', and 'Last Inv. Item Vendor Master Payment Terms'. The 'Most recent Inv.' column is created by taking the last value of the 'Inv. Accounting Document Date' column. The main query then selects the 'Inv. Company code', the last value of 'Most recent Inv.', 'Last Inv. Item Terms of Payment Key', and 'Last Inv. Item Vendor Master Payment Terms' from the result of the subquery.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Inv. Company Code\"\n,\"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(\n\nSELECT FLATTEN(\"case_id\") as case_Id, \"Inv. Company Code\" ,\"Inv. Company Code Text\",\n\"Inv. Accounting Document Date\" as \"Most recent Inv.\",\n\"Inv. Item Terms of Payment Key\" as \"Last Inv. Item Terms of Payment Key\", \"Inv. Item Vendor Master Payment Terms\" as \"Last Inv. Item Vendor Master Payment Terms\"\nFROM \"defaultview-225\"\nWHERE \"Inv. Item Terms of Payment Key\" IS NOT NULL\n\n\n)as sub",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Inv. Company Code\"\n,\"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(\n\nSELECT FLATTEN(\"case_id\") as case_Id, \"Inv. Company Code\" ,\"Inv. Company Code Text\",\n\"Inv. Accounting Document Date\" as \"Most recent Inv.\",\n\"Inv. Item Terms of Payment Key\" as \"Last Inv. Item Terms of Payment Key\", \"Inv. Item Vendor Master Payment Terms\" as \"Last Inv. Item Vendor Master Payment Terms\"\nFROM \"defaultview-225\"\nWHERE \"Inv. Item Terms of Payment Key\" IS NOT NULL\n\n\n)as sub"
    },
    {
        "filename": "72e24c5831",
        "split": "test",
        "name": " Time difference planned vs actual end date without planned order",
        "query": "SELECT avg(\n\"Scheduled Finish Date\" - \"Actual Finish Date\" \n)\nFROM \"defaultview-183\"\nWhere \"Planned Order Number\" is null",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is calculating the average difference between the 'Scheduled Finish Date' and the 'Actual Finish Date' from the table named 'defaultview-183'. However, it only considers the rows where the 'Planned Order Number' is null. In other words, it is finding the average delay or lead time in completing orders that were not planned.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG (\"Scheduled Finish Date\" - \"Actual Finish Date\" )\nWHERE \"Planned Order Number\" IS NULL\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG (\"Scheduled Finish Date\" - \"Actual Finish Date\" )\nWHERE \"Planned Order Number\" IS NULL\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "0df706fd5d",
        "split": "test",
        "name": "Work Order Backlog",
        "query": "SELECT count(case_id) \n\t\tFILTER( WHERE(\n        \tSELECT count(event_name)\n            WHERE event_name = 'Order: REL - Released') < 1)\n\nFROM \"defaultview-95\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of 'case_id' from the table named 'defaultview-95'. However, it is not counting all 'case_id'. It is only counting those 'case_id' where the count of 'event_name' equals to 'Order: REL - Released' is less than 1. In other words, it is counting the number of 'case_id' that do not have an 'event_name' of 'Order: REL - Released'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT (CASE_ID) FILTER (\n    WHERE event_name_count ('Order: REL - Released') < 1\n  ) \nFROM\n  \"defaultview-95\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT (CASE_ID) FILTER (\n    WHERE event_name_count ('Order: REL - Released') < 1\n  ) \nFROM\n  \"defaultview-95\""
    },
    {
        "filename": "e0ceb3aa5d",
        "split": "test",
        "name": "Total No. of Cases",
        "query": "SELECT COUNT(CASE_ID) \nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is counting the number of case IDs in the table named 'defaultview-124'. Specifically, it is using the SQL function COUNT to calculate the total number of rows in the 'CASE_ID' column of the 'defaultview-124' table. There are no specific conditions or filters applied in this query, so it will count all the case IDs present in the table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(CASE_ID)\nFROM\n  \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(CASE_ID)\nFROM\n  \"defaultview-124\""
    },
    {
        "filename": "0e70ef39a0",
        "split": "test",
        "name": "Late Payment Rate  (by Volume)",
        "query": "SELECT (\nCOUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' \nAND (ClearingDate   - NetDueDate)  > DURATION '1day')  \n/ COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n) * 100\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is performing a calculation on data from the 'defaultview-222' table. It is calculating the percentage of unique 'ARUniqueKey' values where the 'EVENT_NAME' starts with 'Clear' and the difference between 'ClearingDate' and 'NetDueDate' is more than one day, out of the total unique 'ARUniqueKey' values where the 'EVENT_NAME' starts with 'Clear'. The result is multiplied by 100 to convert it into a percentage. The FLATTEN function is used to transform the input table into a flat table structure.",
        "llm_gpt-35-turbo-0613_query": "SELECT\ncount(DISTINCT \"ARUniqueKey\" )\nFILTER (WHERE \"Event_name\" LIKE 'Clear%' AND (\"ClearingDate\" - \"NetDueDate\") > DURATION '1day') \n/ count(DISTINCT \"ARUniqueKey\" )\nFILTER (WHERE \"Event_name\" LIKE 'Clear%') \n* 100\nFROM FLATTEN(\"defaultview-222\")\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\ncount(DISTINCT \"ARUniqueKey\" )\nFILTER (WHERE \"Event_name\" LIKE 'Clear%' AND (\"ClearingDate\" - \"NetDueDate\") > DURATION '1day') \n/ count(DISTINCT \"ARUniqueKey\" )\nFILTER (WHERE \"Event_name\" LIKE 'Clear%') \n* 100\nFROM FLATTEN(\"defaultview-222\")\n"
    },
    {
        "filename": "3ffcebe83b",
        "split": "test",
        "name": "Late Payments by Company Code",
        "query": "SELECT\n  \"Accounting Company Code\"  AS \"Company Code\",\n  SUM (\"Last Invoice Item Amount\" ) AS \"Invoice Amount\",\n  COUNT(case_id) AS \"Number of Invoices\"\nFROM\n  \"defaultview-545\"\nWHERE\n  (\n    \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\n  )\nORDER BY\n  2 DESC\nNULLS LAST",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting data from the table named 'defaultview-545'. It is retrieving the 'Accounting Company Code' column and renaming it as 'Company Code'. It is also calculating the sum of the 'Last Invoice Item Amount' column and labeling it as 'Invoice Amount'. Additionally, it is counting the number of case IDs and labeling this count as 'Number of Invoices'. The query is only selecting rows where the 'Last Invoice Due Date' is earlier than the 'Last Invoice Payment Date'. Finally, the results are ordered by the second column (which is 'Invoice Amount') in descending order, with any null values appearing last.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Accounting Company Code\" AS \"Company Code\", \n       SUM(\"Last Invoice Item Amount\") AS \"Invoice Amount\",\n       COUNT(CASE_ID) AS \"Number of Invoices\"\nFROM \"defaultview-545\"\nWHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\nORDER BY 2 DESC NULLS LAST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Accounting Company Code\" AS \"Company Code\", \n       SUM(\"Last Invoice Item Amount\") AS \"Invoice Amount\",\n       COUNT(CASE_ID) AS \"Number of Invoices\"\nFROM \"defaultview-545\"\nWHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\nORDER BY 2 DESC NULLS LAST"
    },
    {
        "filename": "a399be4a32",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference",
        "query": "SELECT count(case_id) FROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is counting the number of case IDs from the table named 'defaultview-183'. It only includes the cases where the 'Actual Finish Date' is the same as the 'Scheduled Finish Date' and where the 'Planned Order Number' is not provided (NULL). In other words, it is counting the number of cases that were finished as scheduled and did not have a planned order number.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Actual Finish Date\" LIKE \"Scheduled Finish Date%\")\n\t\tAND \"Planned Order Number\" IS NULL\n\t)\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Actual Finish Date\" LIKE \"Scheduled Finish Date%\")\n\t\tAND \"Planned Order Number\" IS NULL\n\t)\nFROM \"defaultview-183\""
    },
    {
        "filename": "737c4d00c6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of rows in the 'defaultview-225' table where the column 'Last Inv. Item Cash Discount Days 1' is either NULL or has a value of 0. It does this by first counting the number of rows that meet these conditions, then dividing that count by the total number of rows in the table (represented by COUNT(case_id)), and finally multiplying the result by 100 to get the percentage. The result will give an understanding of what proportion of the total cases in the 'defaultview-225' table have no cash discount days recorded in the 'Last Inv. Item Cash Discount Days 1' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(\nCOUNT(case_id) FILTER(\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\" IS NULL OR \n\t\"Last Inv. Item Cash Discount Days 1\" = 0))) \n/ COUNT(case_id)\n)\n*100\n\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(\nCOUNT(case_id) FILTER(\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\" IS NULL OR \n\t\"Last Inv. Item Cash Discount Days 1\" = 0))) \n/ COUNT(case_id)\n)\n*100\n\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "2a5c42276f",
        "split": "test",
        "name": "\u00d8 WIP time Assembly -> Inspection",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0030'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0020'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average difference in end times between two specific events from the table named 'defaultview-270'. The first event is where the event name starts with 'Start' and the routing step is '0030'. The second event is where the event name starts with 'Complete' and the routing step is '0020'. The difference in end times for these two events is calculated for each row, and then the average of these differences is computed.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG (\n\t(SELECT AVG (end_time) FILTER (\n\t\tWHERE\n\t\t\tevent_name LIKE 'Complete%' AND \"Routing Step\" = '0020'\n\t\t))\n    - \n    (SELECT AVG (end_time) FILTER (\n    \tWHERE\n\t\tevent_name LIKE 'Start%' AND \"Routing Step\" = '0030'\n\t))\n   )\n   \n   \n   FROM \"defaultview-270\"\nLIMIT 100\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG (\n\t(SELECT AVG (end_time) FILTER (\n\t\tWHERE\n\t\t\tevent_name LIKE 'Complete%' AND \"Routing Step\" = '0020'\n\t\t))\n    - \n    (SELECT AVG (end_time) FILTER (\n    \tWHERE\n\t\tevent_name LIKE 'Start%' AND \"Routing Step\" = '0030'\n\t))\n   )\n   \n   \n   FROM \"defaultview-270\"\nLIMIT 100\n"
    },
    {
        "filename": "160da29779",
        "split": "test",
        "name": "Average time issue to assign first reviewer",
        "query": "SELECT \nAVG(\n\t\t(SELECT FIRST(end_time) \n\t \tWHERE event_name IN ('Assign Validator'))\n    - \t(SELECT FIRST(end_time)\n       \tWHERE event_name IN ('Change Status to Ready For Review'))\n\t)\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to Ready For Review' ~> \n    \t\t\t\t\t\t 'Change Status to In Review')",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between two events in the 'defaultview-217' table. The first event is 'Assign Validator' and the second event is 'Change Status to Ready For Review'. The query first selects the earliest 'end_time' for the 'Assign Validator' event, then subtracts from it the earliest 'end_time' for the 'Change Status to Ready For Review' event. This difference is calculated for all rows where the 'event_name' transitions from 'Change Status to Ready For Review' to 'Change Status to In Review'. The average of these time differences is then computed.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time) \n     WHERE event_name = 'Assign Validator'\n    ) - \n    (SELECT FIRST(end_time) \n     WHERE event_name = 'Change Status to Ready For Review'\n     )\n    )\n)\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to Ready For Review' ~> 'Change Status to In Review')\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time) \n     WHERE event_name = 'Assign Validator'\n    ) - \n    (SELECT FIRST(end_time) \n     WHERE event_name = 'Change Status to Ready For Review'\n     )\n    )\n)\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to Ready For Review' ~> 'Change Status to In Review')\n"
    },
    {
        "filename": "49e3ff16c8",
        "split": "test",
        "name": "Process orders overdue for release",
        "query": "SELECT COUNT(case_id) \n\tFILTER(WHERE \"Scheduled Release Date\" < NOW() \n\tAND \"Actual Release Date\" IS NULL)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of case IDs from the table named 'defaultview-183'. However, it is not counting all the case IDs. It is only counting those case IDs where the 'Scheduled Release Date' is earlier than the current date and time, and where the 'Actual Release Date' is not provided (is NULL). In other words, it is counting the number of cases that were scheduled to be released by now but have not actually been released yet.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE \"Scheduled Release Date\" < NOW()\n\tAND \"Actual Release Date\" IS NULL)\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE \"Scheduled Release Date\" < NOW()\n\tAND \"Actual Release Date\" IS NULL)\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "b11414e427",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Released to Goods Receipt",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Goods Receipt'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between the last 'Create Goods Receipt' event and the first 'Release PO' event in the 'defaultview-124' table. It does this by first selecting the last end_time where the event_name is 'Create Goods Receipt', and then subtracting from this the first end_time where the event_name is 'Release PO'. The average of these time differences is then calculated.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\nAVG((\nSELECT LAST(end_time) FILTER (\n\tWHERE event_name IN ('Create Goods Receipt')))\n- \n(SELECT FIRST(end_time) FILTER (\n\tWHERE event_name IN ('Release PO')))\n) \nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\nAVG((\nSELECT LAST(end_time) FILTER (\n\tWHERE event_name IN ('Create Goods Receipt')))\n- \n(SELECT FIRST(end_time) FILTER (\n\tWHERE event_name IN ('Release PO')))\n) \nFROM \"defaultview-124\""
    },
    {
        "filename": "d4dfe3fb4d",
        "split": "test",
        "name": "Overdue Receivables (15+ days overdue) by Value - Top 10  Customer ",
        "query": "SELECT \"Overdue Amount\" , \"Customer\"\nFROM\n(\nSELECT SUM( \"AmountInGlobalCurrency\" ) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingDate IS NULL AND (NOW() - NetDueDate) > DURATION '15day') \n--OVER ( PARTITION BY \"AR_Customer\")\nAS \"Overdue Amount\", \n\"AR_CustomerName\" as \"Customer\"\nFROM FLATTEN(\"defaultview-222\")\n) as selections\nWHERE  \"Overdue Amount\" IS NOT NULL\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting the 'Overdue Amount' and 'Customer' from a subquery. In the subquery, it calculates the sum of the 'AmountInGlobalCurrency' from the 'defaultview-222' table, but only for rows where the event name is 'Create Accounts Receivable', the 'ClearingDate' is null, and the difference between the current date and 'NetDueDate' is more than 15 days. This sum is labeled as 'Overdue Amount'. It also selects the 'AR_CustomerName' and labels it as 'Customer'. In the main query, it filters out rows where 'Overdue Amount' is null. Finally, it orders the result by 'Overdue Amount' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\t\"Overdue Amount\", \n    \"Customer\" \n    \nFROM(\n\nSELECT \n    SUM (\"AmountInGlobalCurrency\") AS \"Overdue Amount\",\n    \"AR_CustomerName\" AS \"Customer\"\nFROM FLATTEN(\"defaultview-222\")\n\nWHERE\n    (\"BE Event Name\"= 'Create Accounts Receivable' ) \n    \n        AND\n  \t    \"ClearingDate\" IS NULL\n            AND\n        \n\t\n    (((DATE_TRUNC('DAY', NOW()) - \"NetDueDate\" ) > DURATION '15DAYS')))\nAS a\nWHERE \"Overdue Amount\" IS NOT NULL\nORDER BY 1 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\t\"Overdue Amount\", \n    \"Customer\" \n    \nFROM(\n\nSELECT \n    SUM (\"AmountInGlobalCurrency\") AS \"Overdue Amount\",\n    \"AR_CustomerName\" AS \"Customer\"\nFROM FLATTEN(\"defaultview-222\")\n\nWHERE\n    (\"BE Event Name\"= 'Create Accounts Receivable' ) \n    \n        AND\n  \t    \"ClearingDate\" IS NULL\n            AND\n        \n\t\n    (((DATE_TRUNC('DAY', NOW()) - \"NetDueDate\" ) > DURATION '15DAYS')))\nAS a\nWHERE \"Overdue Amount\" IS NOT NULL\nORDER BY 1 DESC\n"
    },
    {
        "filename": "44cae3c190",
        "split": "test",
        "name": "Avg. Cycle Time per Project (20 longest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n   \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 DESC\nLIMIT 20\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to select the 'Project' and the average cycle time, labeled as 'Avg Cycle Time', from a subquery. The subquery is constructed from the table 'defaultview-197'. In this subquery, the 'case_id' and 'Project_Description' (renamed as 'Project') are selected. Additionally, a calculation is performed to determine the cycle time (labeled as 'C'). This calculation is the difference between the last 'end_time' where the 'event_name' is 'Close Project' and the first 'end_time' where the 'event_name' is 'Start Project'. The results from this subquery are then used in the main query to calculate the average cycle time for each project. The final output is ordered by the average cycle time in descending order and limited to the top 20 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Project\", AVG(\"C\") as \"Avg Cycle Time\"\nFROM\n(\n SELECT\n  CASE_ID,\n  \"Project_Description\" AS \"Project\", \n  LAST(end_time) FILTER (\n   WHERE EVENT_NAME = 'Close Project') \n   -FIRST(end_time) FILTER (\n   WHERE EVENT_NAME = 'Start Project') AS \"C\"\n FROM FLATTEN(\"defaultview-197\")\n)\nAS SUB\nGROUP BY 1\nORDER BY 2 desc\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Project\", AVG(\"C\") as \"Avg Cycle Time\"\nFROM\n(\n SELECT\n  CASE_ID,\n  \"Project_Description\" AS \"Project\", \n  LAST(end_time) FILTER (\n   WHERE EVENT_NAME = 'Close Project') \n   -FIRST(end_time) FILTER (\n   WHERE EVENT_NAME = 'Start Project') AS \"C\"\n FROM FLATTEN(\"defaultview-197\")\n)\nAS SUB\nGROUP BY 1\nORDER BY 2 desc\nLIMIT 20"
    },
    {
        "filename": "471ccd349c",
        "split": "test",
        "name": "Order confirmation lead time",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) FILTER(WHERE event_name = 'Confirmed'))\n    -\n    (SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n\t)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average difference between two specific events in the 'defaultview-183' table. The first event is the earliest occurrence of the event named 'Confirmed', identified by the 'end_time' column. The second event is the latest occurrence of the event named 'Released', also identified by the 'end_time' column. The difference between these two times is calculated for each row, and then the average of these differences is taken as the final result.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  avg(\n    (SELECT\n        LAST(end_time) FILTER (\n          WHERE\n            event_name IN ('Released'))\n        -\n        FIRST(end_time) FILTER (\n          WHERE\n            event_name IN ('Confirmed'))))) AS \"Avg. Time to Release\"\nFROM\n  \"defaultview-183\"\nWHERE\n  event_name IN ('Confirmed', 'Released')\n\n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  avg(\n    (SELECT\n        LAST(end_time) FILTER (\n          WHERE\n            event_name IN ('Released'))\n        -\n        FIRST(end_time) FILTER (\n          WHERE\n            event_name IN ('Confirmed'))))) AS \"Avg. Time to Release\"\nFROM\n  \"defaultview-183\"\nWHERE\n  event_name IN ('Confirmed', 'Released')\n\n\n\n\n"
    },
    {
        "filename": "f6d2878264",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Manufacturing Plant",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Manufacturing Plant\" \nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to retrieve data from the table named 'defaultview-183'. It calculates the count of 'case_id' and labels it as 'Cases'. It also calculates the average difference between 'Basic Finish Date' and 'Basic Start Date', which is labeled as 'Cycle Time'. Additionally, it retrieves the data from the 'Manufacturing Plant' column. The results are then sorted in descending order based on the first column of the result set, which is the 'Cases' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) as \"Cases\",\nAVG (\"Basic Finish Date\"  - \"Basic Start Date\" ) AS \"Cycle Time\",\n\"Plant Name\" AS  \"Manufacturing Plant\"\nFROM \"defaultview-183\"\nORDER BY 1 Desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) as \"Cases\",\nAVG (\"Basic Finish Date\"  - \"Basic Start Date\" ) AS \"Cycle Time\",\n\"Plant Name\" AS  \"Manufacturing Plant\"\nFROM \"defaultview-183\"\nORDER BY 1 Desc"
    },
    {
        "filename": "dc64a9e81b",
        "split": "test",
        "name": "Manufacturing lead time",
        "query": "SELECT\nAVG(\n(SELECT FIRST(end_time) FILTER(WHERE event_name LIKE 'GR%'))\n-\n(SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average difference between two specific event times from the table named 'defaultview-183'. The first event time is the earliest ('FIRST') 'end_time' where the 'event_name' starts with 'GR'. The second event time is the latest ('LAST') 'end_time' where the 'event_name' is exactly 'Released'. The difference between these two times is calculated for each row, and then the average of these differences is taken as the final result.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG ((SELECT LAST(end_time) WHERE event_name = 'Released') - (SELECT FIRST(end_time) WHERE event_name LIKE 'GR%'))\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG ((SELECT LAST(end_time) WHERE event_name = 'Released') - (SELECT FIRST(end_time) WHERE event_name LIKE 'GR%'))\nFROM \"defaultview-183\""
    },
    {
        "filename": "eaabd9dd85",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT\nAVG (\n\t(SELECT LAST (END_TIME))\n     -\n    (SELECT FIRST (END_TIME))\n\t)\n    FROM \"defaultview-525\"\nWHERE event_name MATCHES \n\t('Create Inspection Lot' 'Create Usage Decision' ILIKE 'Material Movement%')\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average difference in time between the last and first 'END_TIME' in the table named 'defaultview-525'. This calculation is only performed for rows where the 'event_name' matches either 'Create Inspection Lot', 'Create Usage Decision', or any value that starts with 'Material Movement'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG(\"LAST_END_TIME\" - \"FIRST_END_TIME\") \n--AVG(\"END_TIME\" - \"FIRST_END_TIME\") AS AvgTimeByProcess --eventsendlast();\nFROM\n(SELECT\n  event_name,\n  end_time AS LAST_END_TIME,\n  LAG(END_TIME) OVER (PARTITION BY CASE WHEN \" FIRST_EVENT_NAME\" <> 'Material Movement' THEN \"CASE_FLAG\" IS NULL ELSE \"CASE_FLAG\" END ORDER BY END_TIME) AS \"FIRST_END_TIME\"\nFROM\n  (SELECT\n    \tevent_name,\n    \tend_time,\n    \tLAG(CASE WHEN (event_name = 'Create Inspection Lot' OR event_name = 'Create Usage Decision') OR (event_name LIKE 'Material Movement%') THEN 1 END)\n    \tOVER (ORDER BY end_time) AS \"CASE_FLAG\",\n    \tevent_name AS \" FIRST_EVENT_NAME\" \n  \tFROM\n    \tFLATTEN(\"defaultview-525\")\n\t  ) AS SUB)\nAS S00\nWHERE\n\"FIRST_EVENT_NAME\" IS NOT NULL\n--+  FILTER (WHERE event_name BEGINS MATCHES ('Material Movement')) \n--AND event_name LAST(EVENT_NAME) MATCHES (event_name_regex =>'(\"^(Create Usage Decision)|\"Create Inspection Lot)\")') \n--AND \"%event_name%\" MATCHES (event_name_regex =>'(\"^(Create Usage Decision)|\"Create Inspection Lot)\")' )  \"%event_name%\" BEGINS MATCHING ('\"Create Inspect')\n--(SELECT END_TIME WHERE (EVENT_NAME ILIKE 'Create Inspection Lot' OR EVENT_NAME ILIKE 'Create Usage Decision') NULL AS \"Create Defect\" BEGINS MATCHING ('event_name' => (event_name ILIKE 'Create Inspection Lot')))\n--AND event_name ILIKE '%Create Inspection Lot%' THEN NULL ELSE 1 ELSE NULL END) --IF event_name ILIKE '%Create Usage Decision%' THEN NULL ELSE 1 ELSE NULL END AS FLAG\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG(\"LAST_END_TIME\" - \"FIRST_END_TIME\") \n--AVG(\"END_TIME\" - \"FIRST_END_TIME\") AS AvgTimeByProcess --eventsendlast();\nFROM\n(SELECT\n  event_name,\n  end_time AS LAST_END_TIME,\n  LAG(END_TIME) OVER (PARTITION BY CASE WHEN \" FIRST_EVENT_NAME\" <> 'Material Movement' THEN \"CASE_FLAG\" IS NULL ELSE \"CASE_FLAG\" END ORDER BY END_TIME) AS \"FIRST_END_TIME\"\nFROM\n  (SELECT\n    \tevent_name,\n    \tend_time,\n    \tLAG(CASE WHEN (event_name = 'Create Inspection Lot' OR event_name = 'Create Usage Decision') OR (event_name LIKE 'Material Movement%') THEN 1 END)\n    \tOVER (ORDER BY end_time) AS \"CASE_FLAG\",\n    \tevent_name AS \" FIRST_EVENT_NAME\" \n  \tFROM\n    \tFLATTEN(\"defaultview-525\")\n\t  ) AS SUB)\nAS S00\nWHERE\n\"FIRST_EVENT_NAME\" IS NOT NULL\n--+  FILTER (WHERE event_name BEGINS MATCHES ('Material Movement')) \n--AND event_name LAST(EVENT_NAME) MATCHES (event_name_regex =>'(\"^(Create Usage Decision)|\"Create Inspection Lot)\")') \n--AND \"%event_name%\" MATCHES (event_name_regex =>'(\"^(Create Usage Decision)|\"Create Inspection Lot)\")' )  \"%event_name%\" BEGINS MATCHING ('\"Create Inspect')\n--(SELECT END_TIME WHERE (EVENT_NAME ILIKE 'Create Inspection Lot' OR EVENT_NAME ILIKE 'Create Usage Decision') NULL AS \"Create Defect\" BEGINS MATCHING ('event_name' => (event_name ILIKE 'Create Inspection Lot')))\n--AND event_name ILIKE '%Create Inspection Lot%' THEN NULL ELSE 1 ELSE NULL END) --IF event_name ILIKE '%Create Usage Decision%' THEN NULL ELSE 1 ELSE NULL END AS FLAG\n\n"
    },
    {
        "filename": "4906928657",
        "split": "test",
        "name": "Cancellation of goods receipts",
        "query": "SELECT COUNT(case_id) FILTER (\nWHERE (event_name MATCHES('Reverse Goods Receipt'))\nAND (event_name MATCHES('Create Goods Receipt'))\n)\n\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of 'case_id' from the table named 'defaultview-57'. However, it is not counting all the 'case_id'. It is only counting those 'case_id' where the 'event_name' matches both 'Reverse Goods Receipt' and 'Create Goods Receipt'. In other words, it is looking for records in the 'defaultview-57' table where the 'event_name' is either 'Reverse Goods Receipt' or 'Create Goods Receipt' and then counting the number of 'case_id' for those specific records.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER( \n\tWHERE ( SELECT BOOL_OR ((event_name IN ('Reverse Goods Receipt' ))\n\t\t)) \n\t),COUNT(case_id) FILTER( \n\tWHERE ( SELECT BOOL_OR ((event_name IN ('Create Goods Receipt' ))\n\t\t)) \n\t)\nFROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER( \n\tWHERE ( SELECT BOOL_OR ((event_name IN ('Reverse Goods Receipt' ))\n\t\t)) \n\t),COUNT(case_id) FILTER( \n\tWHERE ( SELECT BOOL_OR ((event_name IN ('Create Goods Receipt' ))\n\t\t)) \n\t)\nFROM \"defaultview-57\""
    },
    {
        "filename": "70fa42ce9c",
        "split": "test",
        "name": "On-time delivery rate",
        "query": "SELECT COUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL AND \"Actual Delivery Date\" - \"Scheduled Finish Date\" = DURATION '0days'\n    )\n/\nCOUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL) \n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the table 'defaultview-183' where the 'Actual Delivery Date' is not null and the difference between the 'Actual Delivery Date' and 'Scheduled Finish Date' is exactly 0 days. This is done by first counting the number of such cases and then dividing it by the total number of cases where the 'Actual Delivery Date' is not null. The result is then multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(CASE_ID) FILTER (WHERE \"Actual Delivery Date\" WITH NULL AS NO_DELIVERY_ DATE) \n/ COUNT(CASE_ID) FILTER (WHERE \"Actual Delivery Date\" WITH NULL AS NO_DELIVERY_ DATE) * 100\nFROM \"defaultview-183\"\nWHERE (\"Actual Delivery Date\" - \"Scheduled Finish Date\") \nMATCHES (DURATION '0day')\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(CASE_ID) FILTER (WHERE \"Actual Delivery Date\" WITH NULL AS NO_DELIVERY_ DATE) \n/ COUNT(CASE_ID) FILTER (WHERE \"Actual Delivery Date\" WITH NULL AS NO_DELIVERY_ DATE) * 100\nFROM \"defaultview-183\"\nWHERE (\"Actual Delivery Date\" - \"Scheduled Finish Date\") \nMATCHES (DURATION '0day')\n                "
    },
    {
        "filename": "a24472f64b",
        "split": "test",
        "name": "Total overdue invoice amounts",
        "query": "\nSELECT\nSUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER(\n\t WHERE (\"AR_LastClearingDate\" IS NULL)\n\t\t AND \"AR_LastNetDueDate\" < DATE_TRUNC('day', NOW())\n\t)\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is calculating the sum of the column 'AR_InvoicedAmountInGlobalCurrency' from the table 'defaultview-222'. However, it's not just summing up all the values in this column. It's applying a filter to only include certain rows in the sum. Specifically, it's only including rows where the 'AR_LastClearingDate' is null and the 'AR_LastNetDueDate' is earlier than the current date. The DATE_TRUNC function is used to ensure that the comparison is only considering the date part of 'AR_LastNetDueDate', not the time.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER (\n    WHERE\n      (\n        \"AR_LastClearingDate\" IS NULL\n        AND \"AR_LastNetDueDate\" < DATE_TRUNC('day', NOW())\n      )\n  )\nFROM\n  \"defaultview-222\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER (\n    WHERE\n      (\n        \"AR_LastClearingDate\" IS NULL\n        AND \"AR_LastNetDueDate\" < DATE_TRUNC('day', NOW())\n      )\n  )\nFROM\n  \"defaultview-222\"\n                "
    },
    {
        "filename": "0c18038530",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Material Text",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Material Text\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the number of process orders and group them by the material text in the table named 'defaultview-183'. The count of process orders is represented by the column 'CASE_ID'. The query then orders the results in descending order based on the count of process orders. The 'GROUP BY 2' clause indicates that the results are grouped by the second column selected in the query, which is 'Material Text'. The 'ORDER BY 1 DESC' clause means that the results are sorted in descending order by the first column in the SELECT statement, which is the count of process orders.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) AS \"No. Of PO\",\n\"Material Text\"  AS \"Material Text\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) AS \"No. Of PO\",\n\"Material Text\"  AS \"Material Text\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 DESC\n"
    },
    {
        "filename": "9b703e674b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Delivered or Technically Completed",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Delivered', 'Technically Completed')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the average time difference between two events in the table 'defaultview-183'. It first selects the last 'end_time' where the 'event_name' is either 'Delivered' or 'Technically Completed'. Then it subtracts the first 'end_time' where the 'event_name' is 'Create Process Order'. The average of these time differences is then calculated.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG (\n\t(SELECT LAST (end_time) \n\t\tWHERE ((event_name IN ('Delivered')\n\t\t\t\tOR event_name IN ('Technically Completed')))))\n-\nAVG (\n\t(SELECT FIRST(end_time) \n\t\tWHERE event_name MATCHES ('Create Process Order')))\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG (\n\t(SELECT LAST (end_time) \n\t\tWHERE ((event_name IN ('Delivered')\n\t\t\t\tOR event_name IN ('Technically Completed')))))\n-\nAVG (\n\t(SELECT FIRST(end_time) \n\t\tWHERE event_name MATCHES ('Create Process Order')))\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "afc16d1b66",
        "split": "test",
        "name": "Average number of rework on issues with rework",
        "query": "SELECT AVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1\nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The query is performing an operation on the table named 'defaultview-217'. It first selects the average count of the event_name 'Change Status to In Progress'. From this average, it subtracts 1. This operation is only performed on rows where the count of the event_name 'Change Status to In Review' is greater than 1. In other words, the query is calculating the average number of 'Change Status to In Progress' events, subtracting 1, but only for those rows where there is more than one 'Change Status to In Review' event.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG ((SELECT\n        COUNT (EVENT_NAME) FILTER (\n          WHERE\n            BEHEEL_CONTAINS (EVENT_NAME, 'Change Status to In Progress')))\n     - 1) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME) FILTER (\n            WHERE\n              BEHEEL_CONTAINS (EVENT_NAME, 'Change Status to In Review')))\n       > 1)\nFROM\n  \"defaultview-217\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG ((SELECT\n        COUNT (EVENT_NAME) FILTER (\n          WHERE\n            BEHEEL_CONTAINS (EVENT_NAME, 'Change Status to In Progress')))\n     - 1) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME) FILTER (\n            WHERE\n              BEHEEL_CONTAINS (EVENT_NAME, 'Change Status to In Review')))\n       > 1)\nFROM\n  \"defaultview-217\""
    },
    {
        "filename": "e454fa513b",
        "split": "test",
        "name": "Percentage of products with considerable forecast override",
        "query": "SELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE( \n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) > 20\n\tOR\n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) < -20\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"Statistical Fcst Qty\" > 0\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t) * 24.98\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "This SIGNAL query is calculating a ratio from the 'defaultview-404' table. The numerator of the ratio is the count of distinct 'Product ID' where the percentage difference between 'Consensus Demand Plan Qty' and 'Statistical Fcst Qty' is either greater than 20% or less than -20%, and the 'MONTH' is in the current month or within the next 320 days. The denominator of the ratio is the count of distinct 'Product ID' where 'Statistical Fcst Qty' is greater than 0, and the 'MONTH' is in the current month or within the next 320 days. The result of this ratio is then multiplied by 24.98.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (DISTINCT \"Product ID\") FILTER (\n    WHERE\n      (\n        (\n          \"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\"\n        ) / NULLIF (\"Consensus Demand Plan Qty\", 0) > 0.2\n        OR (\n          \"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\"\n        ) / NULLIF (\"Consensus Demand Plan Qty\", 0) < - 0.2\n      )\n      AND (\n        \"MONTH\" <= \n      \t  (\n            SELECT\n              DATE_TRUNC('month', NOW()) + INTERVAL '320' DAY\n          )\n          AND \"MONTH\" > DATE_TRUNC('month', NOW())\n      )\n  )\n  /\n  COUNT (DISTINCT \"Product ID\") FILTER (\n    \tWHERE\n    \t\"Statistical Fcst Qty\" > 0\n        AND \"MONTH\" <= \n      \t  (\n            SELECT\n              DATE_TRUNC('month', NOW()) + INTERVAL '320' DAY\n          )\n          AND \"MONTH\" > DATE_TRUNC('month', NOW())\n  )\n  * 24.98\nFROM\n  \"defaultview-404\"\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (DISTINCT \"Product ID\") FILTER (\n    WHERE\n      (\n        (\n          \"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\"\n        ) / NULLIF (\"Consensus Demand Plan Qty\", 0) > 0.2\n        OR (\n          \"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\"\n        ) / NULLIF (\"Consensus Demand Plan Qty\", 0) < - 0.2\n      )\n      AND (\n        \"MONTH\" <= \n      \t  (\n            SELECT\n              DATE_TRUNC('month', NOW()) + INTERVAL '320' DAY\n          )\n          AND \"MONTH\" > DATE_TRUNC('month', NOW())\n      )\n  )\n  /\n  COUNT (DISTINCT \"Product ID\") FILTER (\n    \tWHERE\n    \t\"Statistical Fcst Qty\" > 0\n        AND \"MONTH\" <= \n      \t  (\n            SELECT\n              DATE_TRUNC('month', NOW()) + INTERVAL '320' DAY\n          )\n          AND \"MONTH\" > DATE_TRUNC('month', NOW())\n  )\n  * 24.98\nFROM\n  \"defaultview-404\"\n\n"
    },
    {
        "filename": "8296553520",
        "split": "test",
        "name": "No. of Invoices with Multiple Payment Term Change Events",
        "query": "SELECT\nCOUNT(CASE_ID)\nFROM\n(\n SELECT\n  COUNT(CASE_ID) AS \"CASE_COUNT\", CASE_ID, EVENT_NAME\n FROM FLATTEN(\"defaultview-225\")\n WHERE\n  (\"Changed Table\" IN ('EKKO','BSEG'))\n  AND (\"Changed Field\" IN  ('ZTERM', 'ZTERM', 'ZBD1T','ZBD2T','ZBD3T', 'ZBD1P', 'ZBD2P'))\n GROUP BY 2,3\n) AS SUB1\nWHERE \"CASE_COUNT\" > 1",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of case IDs from a subquery. The subquery is selecting the count of case IDs, the case ID itself, and the event name from the table named 'defaultview-225'. It only includes rows where the 'Changed Table' is either 'EKKO' or 'BSEG' and the 'Changed Field' is one of the following: 'ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', or 'ZBD2P'. The subquery groups the results by the case ID and the event name. The main query then only includes the results from the subquery where the count of case IDs is greater than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (CASE_ID) AS \"count Case Ids\"\n  , CASE_ID\n  , EVENT_NAME\nFROM\n  FLATTEN(\n    'defaultview-225'\n    , 'defaultview-225'\n  )\nWHERE\n  \"Changed Table\" IN ('EKKO','BSEG')\n  AND \"Changed Field\" IN ('ZTERM','ZBD1T','ZBD2T','ZBD3T','ZBD1P','ZBD2P')\nGROUP BY\n  2, 3\nHAVING\n  COUNT (CASE_ID) > 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (CASE_ID) AS \"count Case Ids\"\n  , CASE_ID\n  , EVENT_NAME\nFROM\n  FLATTEN(\n    'defaultview-225'\n    , 'defaultview-225'\n  )\nWHERE\n  \"Changed Table\" IN ('EKKO','BSEG')\n  AND \"Changed Field\" IN ('ZTERM','ZBD1T','ZBD2T','ZBD3T','ZBD1P','ZBD2P')\nGROUP BY\n  2, 3\nHAVING\n  COUNT (CASE_ID) > 1"
    },
    {
        "filename": "a8599a428f",
        "split": "test",
        "name": "#\u00a0Process\u00a0Orders\u00a0without\u00a0business\u00a0complete\u00a0",
        "query": "SELECT count(case_id) \nFROM \"defaultview-183\"\nWHERE not event_name MATCHES ('Confirmed')",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is counting the number of 'case_id' from the table named 'defaultview-183'. However, it is only counting those 'case_id' where the 'event_name' does not match the value 'Confirmed'. In other words, it is excluding all the records where 'event_name' is 'Confirmed' from the count.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (case_id)\nFROM \"defaultview-183\"\nWHERE \nevent_name MATCHES (NOT \"Confirmed\" )\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (case_id)\nFROM \"defaultview-183\"\nWHERE \nevent_name MATCHES (NOT \"Confirmed\" )\n"
    },
    {
        "filename": "a646885e92",
        "split": "test",
        "name": "Number of Completed SLAs",
        "query": "SELECT SUM(\"SLA Count Completed\") FROM \"defaultview-370\"",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is performing a summation operation on the 'SLA Count Completed' column from the table named 'defaultview-370'. It is adding up all the values present in the 'SLA Count Completed' column and will return the total sum as the result.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\"SLA Count Completed\")            \nFROM \"defaultview-370\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\"SLA Count Completed\")            \nFROM \"defaultview-370\""
    },
    {
        "filename": "08f340e540",
        "split": "test",
        "name": "Count of Cases per Activity",
        "query": "SELECT case_id, \"Request Type\",\n\"EVENT_NAME\" AS \"Activities\",\n(SELECT COUNT (\"EVENT_NAME\")) AS \"Number of Cases per Event\"\nFROM \"defaultview-299\"\nORDER BY 4 DESC\nLIMIT 5",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is selecting the 'case_id' and 'Request Type' columns from the 'defaultview-299' table. It is also creating a new column named 'Activities' which is a copy of the 'EVENT_NAME' column. Additionally, it is creating another new column named 'Number of Cases per Event' which is the count of 'EVENT_NAME' for each row. The result is then sorted in descending order by the fourth column, which is 'Number of Cases per Event'. Finally, the query limits the output to the top 5 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT case_id, \"Request Type\", \n \"EVENT_NAME\" AS \"Activities\" , \n count(\"EVENT_NAME\") as \"Number of Cases per Event\"\nFROM FLATTEN(\"defaultview-299\")\nORDER BY 4 desc\nLIMIT 5",
        "llm_gpt-35-turbo-0613_full_output": "SELECT case_id, \"Request Type\", \n \"EVENT_NAME\" AS \"Activities\" , \n count(\"EVENT_NAME\") as \"Number of Cases per Event\"\nFROM FLATTEN(\"defaultview-299\")\nORDER BY 4 desc\nLIMIT 5"
    },
    {
        "filename": "7dc7833543",
        "split": "test",
        "name": "Invoices waiting for Goods Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES('Receive PO item'))\n\tAND (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice')))\n\t)\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to count the number of case IDs from the table named 'defaultview-545'. However, it only counts those case IDs where the event name does not match 'Receive PO item' and at the same time, the event name matches either 'Receive Invoice' or 'Reconcile Invoice'. In other words, it is counting the number of instances where an invoice is received or reconciled, excluding any cases where a PO item is received.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(CASE_ID) FILTER(\n\tWHERE (\n\t\t(\n\t\t\t(NOT(event_name IN ('Receive PO item')))\n\t\t\tAND (event_name MATCHES ('Receive Invoice'))\n\t\t) OR (\n\t\t\t(NOT(event_name IN ('Receive PO item'))))\n\t\t\tAND (event_name MATCHES ('Reconcile Invoice'))\n\t\t)\n\t)\n)\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(CASE_ID) FILTER(\n\tWHERE (\n\t\t(\n\t\t\t(NOT(event_name IN ('Receive PO item')))\n\t\t\tAND (event_name MATCHES ('Receive Invoice'))\n\t\t) OR (\n\t\t\t(NOT(event_name IN ('Receive PO item'))))\n\t\t\tAND (event_name MATCHES ('Reconcile Invoice'))\n\t\t)\n\t)\n)\nFROM \"defaultview-545\""
    },
    {
        "filename": "d7aec6e338",
        "split": "test",
        "name": "\u2300 Time before scheduled release ",
        "query": "SELECT avg(\"Scheduled Release Date\" - \"Actual Release Date\")\nFROM \"defaultview-183\"\nWHERE \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds'",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The query is calculating the average difference between the 'Scheduled Release Date' and the 'Actual Release Date' from the table named 'defaultview-183'. However, it only considers the records where the 'Scheduled Release Date' is later than the 'Actual Release Date', as it filters out any records where the difference between these two dates is not greater than 0 seconds.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG(\"Scheduled Release Date\" - \"Actual Release Date\") \nFILTER (WHERE \"Scheduled Release Date\" > \"Actual Release Date\") \nFROM \"defaultview-183\"\nWHERE (\"Scheduled Release Date\" - \"Actual Release Date\") > DURATION '0seconds'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG(\"Scheduled Release Date\" - \"Actual Release Date\") \nFILTER (WHERE \"Scheduled Release Date\" > \"Actual Release Date\") \nFROM \"defaultview-183\"\nWHERE (\"Scheduled Release Date\" - \"Actual Release Date\") > DURATION '0seconds'"
    },
    {
        "filename": "6f5fbcc69b",
        "split": "test",
        "name": "Copy of Open POs without GRN ( > 45 Days)",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\"\nFROM \"defaultview-124\"\nWHERE\n(NOW() - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')) > DURATION '45DAYS'",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is counting the number of 'case_id' from the table named 'defaultview-124'. It is assigning this count to a new column named 'Cases'. The count is based on a specific condition. The condition is that the current time (NOW()) minus the last 'END_TIME' where 'EVENT_NAME' equals 'Release PO' should be greater than a duration of 45 days. In simpler terms, it is counting the number of cases where the event 'Release PO' has not occurred in the last 45 days.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(\"case_id\") AS Cases\nFROM \"defaultview-124\"\nWHERE\n NOW() - (SELECT last(\"END_TIME\") \n          WHERE EVENT_NAME = 'Release PO')\n          >\n DURATION '45DAYS' \nAND (\"EVENT_NAME\" MATCHES ('PO Created'\n~> ('BOM Created' | 'Release PO' | 'Material Check' | 'PR - Material Check'))))",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(\"case_id\") AS Cases\nFROM \"defaultview-124\"\nWHERE\n NOW() - (SELECT last(\"END_TIME\") \n          WHERE EVENT_NAME = 'Release PO')\n          >\n DURATION '45DAYS' \nAND (\"EVENT_NAME\" MATCHES ('PO Created'\n~> ('BOM Created' | 'Release PO' | 'Material Check' | 'PR - Material Check'))))"
    },
    {
        "filename": "c77441d9cc",
        "split": "test",
        "name": "Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of case_ids in the table 'defaultview-124' where the occurrence of the event_name is more than once. It does this by first creating a subquery that counts the occurrence of each event_name. Then, it uses the BOOL_OR function to return true if any of these occurrences are greater than 1. This result is then filtered and counted. The count of these filtered case_ids is then divided by the total count of case_ids and multiplied by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT BOOL_OR(Occurrences > 1)\n       \t  FROM (SELECT COUNT(event_name) AS Occurrences\n              \t\t FROM FLATTEN(\"defaultview-124\")\n                   \t \t) AS Sub1\n    \t   ))/COUNT(case_id)*100\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT BOOL_OR(Occurrences > 1)\n       \t  FROM (SELECT COUNT(event_name) AS Occurrences\n              \t\t FROM FLATTEN(\"defaultview-124\")\n                   \t \t) AS Sub1\n    \t   ))/COUNT(case_id)*100\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "f030043950",
        "split": "test",
        "name": "Early Release with System / Batch User & Planned Order Reference",
        "query": "SELECT count(case_id) Filter( \nWhere \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND \"Event Created By User Type\" NOT in ('Dialog') AND event_name = 'Released' )\n/\ncount(case_id) Filter(Where \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND event_name = 'Released') *100\nFROM FLATTEN(\"defaultview-183\")\nWHERE \"Planned Order Number\" IS NOT NULL\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases from the 'defaultview-183' table where the 'Scheduled Release Date' is later than the 'Actual Release Date', the 'Event Created By User Type' is not 'Dialog', and the event name is 'Released', out of all cases where the 'Scheduled Release Date' is later than the 'Actual Release Date' and the event name is 'Released'. This is done only for the rows where the 'Planned Order Number' is not null. The result is multiplied by 100 to convert it into a percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT (\nCOUNT (CASE_ID) FILTER (\n\tWHERE\n\t\t\"Scheduled Release Date\" > \"Actual Release Date\"\n        AND \"Planned Order Number\" IS NOT NULL\n    AND (\n    \t\"Event Created By User Type\" IN ('System')\n        AND \"Event Name\" IN ('Released')\n    )\n    AND (\n    \t\"Event Created By User Type\" NOT IN ('Dialog')\n    )\n    )\n\t/ COUNT (CASE_ID)\n    FILTER (WHERE \"Scheduled Release Date\" > \"Actual Release Date\"\n    \t\tAND \"Event Name\" IN ('Released')\n            AND \"Planned Order Number\" IS NOT NULL)\n    )\n* 100  as \"Percentage of Planning AD Rohit\"\n\nFROM \"defaultview-183\" \n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT (\nCOUNT (CASE_ID) FILTER (\n\tWHERE\n\t\t\"Scheduled Release Date\" > \"Actual Release Date\"\n        AND \"Planned Order Number\" IS NOT NULL\n    AND (\n    \t\"Event Created By User Type\" IN ('System')\n        AND \"Event Name\" IN ('Released')\n    )\n    AND (\n    \t\"Event Created By User Type\" NOT IN ('Dialog')\n    )\n    )\n\t/ COUNT (CASE_ID)\n    FILTER (WHERE \"Scheduled Release Date\" > \"Actual Release Date\"\n    \t\tAND \"Event Name\" IN ('Released')\n            AND \"Planned Order Number\" IS NOT NULL)\n    )\n* 100  as \"Percentage of Planning AD Rohit\"\n\nFROM \"defaultview-183\" \n"
    },
    {
        "filename": "4f5797f512",
        "split": "test",
        "name": "Return rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE event_name IN ('Create Return Sales Order Item','Create Returns Delivery')) > 0\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is calculating the percentage of cases in the table 'defaultview-290' where the event name is either 'Create Return Sales Order Item' or 'Create Returns Delivery'. It does this by first counting the number of cases where the event name matches either of the two specified values. This count is then divided by the total number of cases in the table to get a ratio. This ratio is then multiplied by 100 to convert it into a percentage. The result of this query will be the percentage of cases in the 'defaultview-290' table where the event name is either 'Create Return Sales Order Item' or 'Create Returns Delivery'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) \nFILTER (WHERE event_name MATCHES ('Create Return Sales Order Item'\n\tOR 'Create Returns Delivery')) \n/ COUNT(case_id) * 100\nFROM \"defaultview-290\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) \nFILTER (WHERE event_name MATCHES ('Create Return Sales Order Item'\n\tOR 'Create Returns Delivery')) \n/ COUNT(case_id) * 100\nFROM \"defaultview-290\"\n                "
    },
    {
        "filename": "f16c619f2a",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time (Receive to Approve Invoice) by PO Supplier (Top 25) - Without POs",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Approve Invoice') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive invoice')) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 25",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The given SIGNAL query is designed to retrieve specific information from the table named 'defaultview-545'. It calculates and returns the total number of cases, the average cycle time between the 'Approve Invoice' and 'Receive invoice' events, and the 'PO Item Supplier ID'. The total number of cases is calculated by counting the 'CASE_ID'. The average cycle time is calculated by subtracting the first end time of the 'Receive invoice' event from the last end time of the 'Approve Invoice' event. The results are then ordered in descending order based on the total number of cases. The query limits the output to the top 25 records.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (\"end_time\") FILTER (WHERE BEHAVIOR (\"event_name\") IN ('Approve Invoice')))- (SELECT FIRST (\"end_time\") FILTER (WHERE BEHAVIOR (\"event_name\") IN ('Receive invoice')))) AS \"Avg. Cycle time\",\n\"PO Item Supplier ID\" \n\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 25\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (\"end_time\") FILTER (WHERE BEHAVIOR (\"event_name\") IN ('Approve Invoice')))- (SELECT FIRST (\"end_time\") FILTER (WHERE BEHAVIOR (\"event_name\") IN ('Receive invoice')))) AS \"Avg. Cycle time\",\n\"PO Item Supplier ID\" \n\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 25\n"
    },
    {
        "filename": "897f3b1354",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Item Plant",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\", \n\"PO Item Plant\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to retrieve data from the table named 'defaultview-124'. It is counting the number of 'case_id' and labeling this count as 'No. of Cases'. It is also calculating the sum of the 'PO Item Net Order Value' and labeling this sum as 'Total PO Value'. Additionally, it is retrieving the data from the 'PO Item Plant' column. The results are then ordered in descending order based on the count of 'case_id'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) AS \"No. of Cases\",\nSUM(\"PO Item Net Order Value\" ) AS \"Total PO Value \", \n\"PO Item Plant\" \nFROM \"defaultview-124\"\nORDER BY 1 DESC\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) AS \"No. of Cases\",\nSUM(\"PO Item Net Order Value\" ) AS \"Total PO Value \", \n\"PO Item Plant\" \nFROM \"defaultview-124\"\nORDER BY 1 DESC\n                "
    },
    {
        "filename": "2952d1e1d0",
        "split": "test",
        "name": "Open Overdue Receivables by Project Manager (Top 10)",
        "query": "SELECT COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day')\nas \"#Receivables\" , \n \"Project_Manager\"  as \"Project Manager\"\nFROM FLATTEN(\"defaultview-197\")\nGROUP BY 2\nORDER By 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the distinct values in the 'ARUniqueKey' column from the 'defaultview-197' table. However, it only considers those rows where the 'EVENT_NAME' column is equal to 'Create Accounts Receivable', the 'ClearingJournalEntry' column is null, and the difference between the current date and the 'NetDueDate' column is more than 15 days. This count is then labeled as '#Receivables'. The query also selects the 'Project_Manager' column and labels it as 'Project Manager'. The results are grouped by the second selected column, which is 'Project Manager'. The output is then ordered in descending order by the first selected column, which is '#Receivables'. Finally, the query limits the output to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT \"ARUniqueKey\") FILTER (\n\tWHERE EVENT_NAME = 'Create Accounts Receivable'\n    and ClearingJournalEntry is null\n    and (NOW() - \"NetDueDate\") > DURATION '15DAYS'\n) AS \"#Receivables\", \"Project_Manager\" AS \"Project Manager\"\nFROM \"defaultview-197\"\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT \"ARUniqueKey\") FILTER (\n\tWHERE EVENT_NAME = 'Create Accounts Receivable'\n    and ClearingJournalEntry is null\n    and (NOW() - \"NetDueDate\") > DURATION '15DAYS'\n) AS \"#Receivables\", \"Project_Manager\" AS \"Project Manager\"\nFROM \"defaultview-197\"\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "e0ae4c7960",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of invoice item changes",
        "query": "SELECT COUNT (\"event_name\") FILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n 'Change Invoice%' OR event_name LIKE 'Create Invoice Item Cancellation%' OR event_name LIKE 'Update Invoice%') AS created_with_dialog MATCHES (created_with_dialog)),\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nGROUP BY 2\norder by 1 desc\nLimit 10",
        "llm_name": "signal_description_gpt-4",
        "description_llm": "The SIGNAL query is designed to count the number of events in the 'defaultview-290' table where the 'event_name' starts with either 'Change Invoice', 'Create Invoice Item Cancellation', or 'Update Invoice'. These events are identified as 'created_with_dialog'. The query then filters the results to only include those that match the 'created_with_dialog' criteria. The results are grouped by the 'SalesDocCustomerCompany' column (which is the second column in the table as indicated by 'GROUP BY 2'). The final output is ordered in descending order based on the count of the 'event_name' and the query limits the output to the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (EVENT_NAME) AS \"# of Invoices Created\",\n\"SalesDocCustomerCompany\"  AS \"Customers\" \n\nFROM FLATTEN(\"defaultview-290\")\n--WHERE event_name_matches('[Cc]ange Invoice|[Cc]reate Invoice Item Cancellation|[Uu]pdate Invoice') AS \"created_with_dialog\"\nWHERE (event_name ~ '^[Cc]reate Invoice( Item.*)?$' OR event_name LIKE 'Change Invoice%'\nOR event_name ~ '^[Uu]pdate Invoice( .*)?$') \nAND event_name_matches('(^created_with_dialog$)') AS \"created_with_dialog\"\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (EVENT_NAME) AS \"# of Invoices Created\",\n\"SalesDocCustomerCompany\"  AS \"Customers\" \n\nFROM FLATTEN(\"defaultview-290\")\n--WHERE event_name_matches('[Cc]ange Invoice|[Cc]reate Invoice Item Cancellation|[Uu]pdate Invoice') AS \"created_with_dialog\"\nWHERE (event_name ~ '^[Cc]reate Invoice( Item.*)?$' OR event_name LIKE 'Change Invoice%'\nOR event_name ~ '^[Uu]pdate Invoice( .*)?$') \nAND event_name_matches('(^created_with_dialog$)') AS \"created_with_dialog\"\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "f5213b3ab3",
        "split": "test",
        "name": "Events by User Type and frequency of occurence",
        "query": "SELECT DISTINCT  event_name,\"Event Created by User Type\",count(event_name) AS A\nFROM FLATTEN (\"defaultview-59\")\nORDER BY 3  desc\nlimit 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the distinct event names and the user type that created each event from the defaultview-59 table. Count the number of occurrences of each event name. Order the results by the count in descending order. Limit the results to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT DISTINCT event_name, \"User type\" as Created_by,\nCOUNT(event_name)\nOVER (PARTITION BY 1) as No_of_Cases\nFROM FLATTEN(\"defaultview-59\")\nWhere \"User type\" is not null\nORDER BY 3 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT DISTINCT event_name, \"User type\" as Created_by,\nCOUNT(event_name)\nOVER (PARTITION BY 1) as No_of_Cases\nFROM FLATTEN(\"defaultview-59\")\nWhere \"User type\" is not null\nORDER BY 3 DESC\nLIMIT 10"
    },
    {
        "filename": "bac85808e2",
        "split": "test",
        "name": "Conformance Level",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES (\n    \t'Create PO Item'\n\t\t~> 'Release PO'\n\t\t~> 'Create Goods Receipt'\n\t\t~> ('Record Invoice Receipt'|'Create FI Invoice')\n\t\t~> 'Clear Invoice')) \n\t/ COUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Clear Invoice')) \n    * 100 AS \"Conformance Rate\"\n\nFROM \"defaultview-124\" ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case IDs in the defaultview-124 table where the EVENT_NAME column has the sequence of values 'Create PO Item', then 'Release PO', then 'Create Goods Receipt', then either 'Record Invoice Receipt' or 'Create FI Invoice', and finally 'Clear Invoice'. Divide this count by the number of case IDs in defaultview-124 where EVENT_NAME is 'Clear Invoice' and multiply by 100 to get the 'Conformance Rate' in percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(CASE_ID) FILTER (\n\tWHERE (SELECT BOOL_OR (event_name IN ('Create PO Item'))) OVER ()\n    AND (SELECT BOOL_OR (event_name IN ('Release PO'))) OVER ()\n    AND (SELECT BOOL_OR (event_name IN ('Create Goods Receipt'))) OVER ()\n    AND (SELECT BOOL_OR ((event_name IN ('Record Invoice Receipt')\n    \tOR event_name IN ('Create FI Invoice'))))) OVER ()\n    AND 'Clear Invoice' IN (SELECT event_name)\n) / COUNT(CASE_ID) FILTER(\n\tWHERE EVENT_NAME = 'Clear Invoice'\n) * 100 AS \"Conformance Rate\"\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(CASE_ID) FILTER (\n\tWHERE (SELECT BOOL_OR (event_name IN ('Create PO Item'))) OVER ()\n    AND (SELECT BOOL_OR (event_name IN ('Release PO'))) OVER ()\n    AND (SELECT BOOL_OR (event_name IN ('Create Goods Receipt'))) OVER ()\n    AND (SELECT BOOL_OR ((event_name IN ('Record Invoice Receipt')\n    \tOR event_name IN ('Create FI Invoice'))))) OVER ()\n    AND 'Clear Invoice' IN (SELECT event_name)\n) / COUNT(CASE_ID) FILTER(\n\tWHERE EVENT_NAME = 'Clear Invoice'\n) * 100 AS \"Conformance Rate\"\nFROM \"defaultview-124\""
    },
    {
        "filename": "d9c60165f1",
        "split": "test",
        "name": "PO Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"PO Confirmation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of distinct invoice IDs from the 'defaultview-431' table where the purchase order confirmation status is 'Rejected' and the purchase order item line type is 'Catalog'. Divide this count by the total number of distinct invoice IDs in the table and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(DISTINCT \"PO Item ID\") FILTER(\n\tWHERE \"PO Conf. Status\" IN ('Rejected') \n\tAND \"PO Item Line Type\" IN ('Catalog')\n    ) / \nCOUNT(DISTINCT \"Document Number\") * 100 \nFILTER (WHERE (COUNT(DISTINCT \"PO Item ID\") > 0))\nFROM \"defaultview-431\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(DISTINCT \"PO Item ID\") FILTER(\n\tWHERE \"PO Conf. Status\" IN ('Rejected') \n\tAND \"PO Item Line Type\" IN ('Catalog')\n    ) / \nCOUNT(DISTINCT \"Document Number\") * 100 \nFILTER (WHERE (COUNT(DISTINCT \"PO Item ID\") > 0))\nFROM \"defaultview-431\"\n                "
    },
    {
        "filename": "1c43801ce6",
        "split": "test",
        "name": "TOP 10 Customers with most Invoice Changes ",
        "query": "SELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Invoice%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of unique Invoice update events for each customer company. \nLook at the defaultview-383 table. \nFind all rows where the event name contains 'Invoice' and the ChangeType column equals 'Update'. \nCount how many unique UniqueEventId values are in those rows. \nGroup the results by the SalesDocCustomerCompany column. \nOrder the results descending by the count. \nShow the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (UNIQUE \"UniqueEventId\") AS \"# Invoice Updates\", \"SalesDocCustomerCompany\"\nFROM \"defaultview-383\"\nWHERE \n EVENT_NAME LIKE '%Invoice%' AND ChangeType = 'Update'\nGROUP BY 2\norder by 1 desc\nlimit 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (UNIQUE \"UniqueEventId\") AS \"# Invoice Updates\", \"SalesDocCustomerCompany\"\nFROM \"defaultview-383\"\nWHERE \n EVENT_NAME LIKE '%Invoice%' AND ChangeType = 'Update'\nGROUP BY 2\norder by 1 desc\nlimit 10\n"
    },
    {
        "filename": "aef7816f49",
        "split": "test",
        "name": "On time Delivery Rate",
        "query": "SELECT COUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE (\"DeliveryGoodsMovementOnTime\" = 'Yes')) > 0\n\t)\n/ COUNT(case_id)\n* 100 \nFROM \"defaultview-43\"\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-43' table where the subquery returns more than 0 rows. The subquery counts the number of 'event_name' rows where the value of the 'DeliveryGoodsMovementOnTime' column is 'Yes'. Divide the count from the first query by the total count of case_id rows in the 'defaultview-43' table and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\n    \tSELECT \n        \tcount(event_name)\n        \tFROM \"defaultview-43\"\n           \tWHERE \"DeliveryGoodsMovementOnTime\" = 'Yes'\n     \t) > 0\n\t) / COUNT(case_id) * 100\nFROM \"defaultview-43\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\n    \tSELECT \n        \tcount(event_name)\n        \tFROM \"defaultview-43\"\n           \tWHERE \"DeliveryGoodsMovementOnTime\" = 'Yes'\n     \t) > 0\n\t) / COUNT(case_id) * 100\nFROM \"defaultview-43\"\n                "
    },
    {
        "filename": "2ea60d0c15",
        "split": "test",
        "name": "Orders with SFC Activities not started",
        "query": "SELECT\n  count(\"case_id\")\nFROM\n  (\n    SELECT\n      DISTINCT case_id,\n      COUNT(DISTINCT \"event_name\") AS cnt\n    FROM\n      FLATTEN(\"defaultview-545\")\n    GROUP BY\n      1\n  ) AS T\nWHERE\n  cnt = 2",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id values from the FLATTENed defaultview-545 table where the count of distinct event_name values for each case_id is exactly 2. To do this:\n\n1. Select the distinct case_id values and count the distinct event_name values for each case_id from the FLATTENed defaultview-545 table. Store the counts in the cnt column.\n2. Group the results by case_id.\n3. Filter the grouped results to only keep rows where cnt is equal to 2.\n4. Count the number of remaining case_id values.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) AS \"2 event count\"\nFROM\n(SELECT DISTINCT case_id, COUNT (DISTINCT event_name) as cnt\nFROM FLATTEN(\"defaultview-545\")\n) AS a\nWHERE cnt = 2\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) AS \"2 event count\"\nFROM\n(SELECT DISTINCT case_id, COUNT (DISTINCT event_name) as cnt\nFROM FLATTEN(\"defaultview-545\")\n) AS a\nWHERE cnt = 2\n"
    },
    {
        "filename": "8898300b76",
        "split": "test",
        "name": "Total Spend by PO Supplier (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the table 'defaultview-431', select the sum of values in the 'PO Item Total Amount' column as 'Total PO Amount'. Also select the average of the difference between the last value in the 'END_TIME' column and the first value in the 'END_TIME' column as 'Avg. Cycle Time'. Finally, select the values in the 'PO Item Supplier ID' column as 'PO Supplier'. Order the results by the 'Total PO Amount' in descending order and limit to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tSUM (\"PO Item Total Amount\") AS \"Total PO Amount\",\n    AVG((SELECT LAST(\"END_TIME\"))) - AVG((SELECT FIRST(\"END_TIME\"))) AS\n\t\"Avg. Cycle Time\",\n\t\"PO Item Supplier ID\" AS \"PO Supplier\"\n    \nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tSUM (\"PO Item Total Amount\") AS \"Total PO Amount\",\n    AVG((SELECT LAST(\"END_TIME\"))) - AVG((SELECT FIRST(\"END_TIME\"))) AS\n\t\"Avg. Cycle Time\",\n\t\"PO Item Supplier ID\" AS \"PO Supplier\"\n    \nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10\n"
    },
    {
        "filename": "adbdde6533",
        "split": "test",
        "name": "Average invoice customer process time",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) WHERE event_name IN ('Create Invoice'))\n\t-\n\t(SELECT FIRST(end_time) WHERE event_name IN ('Post Goods Issue'))\n)\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time between the last 'Create Invoice' event and the first 'Post Goods Issue' event for each process instance in the 'defaultview-290' table. This is done by taking the last end_time timestamp where event_name is 'Create Invoice' and subtracting the first end_time timestamp where event_name is 'Post Goods Issue' for each process instance.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Post Goods Issue'))\nFROM \"defaultview-290\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Post Goods Issue'))\nFROM \"defaultview-290\""
    },
    {
        "filename": "abc59e9a38",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time PO Creation to PO Release ( > 3 Days)  by PO Plant",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - \n(SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg Cycle Time PO Create to PO Release\",\n\"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 20",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-124' table, select the count of 'CASE_ID' values as 'No. of Cases'. \nThen calculate the average time difference between the last 'END_TIME' where 'EVENT_NAME' is 'Release PO' and the last 'END_TIME' where 'EVENT_NAME' is 'Create PO Item' as 'Avg Cycle Time PO Create to PO Release'.\nSelect 'PO Item Plant' as 'PO Plant'.\nFilter to only include rows where the time difference between the last 'END_TIME' where 'EVENT_NAME' is 'Release PO' and the last 'END_TIME' where 'EVENT_NAME' is 'Create PO Item' is greater than 3 days.\nGroup by 'PO Plant' and order by descending 'No. of Cases'.\nLimit to the top 20 results.\n",
        "llm_gpt-35-turbo-0613_query": "SELECT  COUNT (\"CASE_ID\" ) AS \"No. of Cases\", AVG ((SELECT LAST (END_TIME) WHERE ((EVENT_NAME = 'Release PO' )))) - (SELECT LAST (END_TIME) WHERE ((EVENT_NAME = 'Create PO Item' ))) AS \"Avg Cycle Time PO Create to PO Release\", \"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\nWHERE  ((SELECT LAST (END_TIME) WHERE ((EVENT_NAME = 'Release PO' )))) - (SELECT LAST (END_TIME) WHERE ((EVENT_NAME = 'Create PO Item' ))) > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 desc\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  COUNT (\"CASE_ID\" ) AS \"No. of Cases\", AVG ((SELECT LAST (END_TIME) WHERE ((EVENT_NAME = 'Release PO' )))) - (SELECT LAST (END_TIME) WHERE ((EVENT_NAME = 'Create PO Item' ))) AS \"Avg Cycle Time PO Create to PO Release\", \"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\nWHERE  ((SELECT LAST (END_TIME) WHERE ((EVENT_NAME = 'Release PO' )))) - (SELECT LAST (END_TIME) WHERE ((EVENT_NAME = 'Create PO Item' ))) > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 desc\nLIMIT 20"
    },
    {
        "filename": "73a2f1f5d3",
        "split": "test",
        "name": "Number of Invoice without PO",
        "query": "SELECT \nCOUNT(DISTINCT \"Last Invoice Id\")FILTER (WHERE \"PO ID\" IS NULL) AS \"# PO without Invoice\"\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of unique values in the Last Invoice Id column in the defaultview-431 table where the PO ID column is empty. Store the result in # PO without Invoice.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (DISTINCT \"Last Invoice Id\") AS \"# PO without Invoice\" \nFROM\n  FLATTEN(\"defaultview-431\")\nWHERE\n  \"PO ID\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (DISTINCT \"Last Invoice Id\") AS \"# PO without Invoice\" \nFROM\n  FLATTEN(\"defaultview-431\")\nWHERE\n  \"PO ID\" IS NULL"
    },
    {
        "filename": "e21acbeec8",
        "split": "test",
        "name": "_Total approved hours",
        "query": "\nSELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the TSR_HoursApproved column from the defaultview-197 table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\""
    },
    {
        "filename": "55cd82a6dd",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create FI Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-124\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Create FI Invoice')",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time between the first 'Create PO Item' event and the last 'Create FI Invoice' event for all process instances in the 'defaultview-124' table where both of these events occurred. This is done by taking the last end time of the 'Create FI Invoice' event and subtracting the first end time of the 'Create PO Item' event for each process instance.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') \n- (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item'))\nFROM \"defaultview-124\"\nWHERE\n  (SELECT FIRST (EVENT_NAME) FILTER (\n      WHERE EVENT_NAME IN ('Create PO Item')))\n  AND (SELECT LAST (EVENT_NAME) FILTER (\n      WHERE EVENT_NAME IN ('Create FI Invoice')))",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') \n- (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item'))\nFROM \"defaultview-124\"\nWHERE\n  (SELECT FIRST (EVENT_NAME) FILTER (\n      WHERE EVENT_NAME IN ('Create PO Item')))\n  AND (SELECT LAST (EVENT_NAME) FILTER (\n      WHERE EVENT_NAME IN ('Create FI Invoice')))"
    },
    {
        "filename": "0f63bf2cea",
        "split": "test",
        "name": "Planning Rate",
        "query": "SELECT \nCOUNT(case_id) \n\tFILTER(WHERE \"Planned Order Number\" IS NOT NULL)\n/ \nCOUNT(case_id)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases in the 'defaultview-183' table where the 'Planned Order Number' column has a non-null value. Divide this count by the total number of cases in the table. Multiply the result by 100 to get the percentage of cases with a non-null 'Planned Order Number' value.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) FILTER (\n WHERE \"Planned Order Number\" IS NOT NULL\n                            )\n/ COUNT(CASE_ID) \n* 100\nFROM \"defaultview-183\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) FILTER (\n WHERE \"Planned Order Number\" IS NOT NULL\n                            )\n/ COUNT(CASE_ID) \n* 100\nFROM \"defaultview-183\" "
    },
    {
        "filename": "a8de636039",
        "split": "test",
        "name": "SOL-1709 No-Touch Invoice Processing Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES  (('Remove Dunning Block'\n    \t\t|'Set Dunning Block'|'Change Dunning Block'|'Send 1st Overdue Notice'\n    \t\t|'Update Baseline Date'|'Update Payment Term'|'Reverse Invoice'))) \n    \tAND (event_name MATCHES('Clear Invoice'))\n\t)\n/ (COUNT(case_id) FILTER (\n\tWHERE event_name MATCHES('Clear Invoice'))\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the defaultview-59 table where the event_name column does NOT contain any of the following values: \n'Remove Dunning Block', \n'Set Dunning Block',\n'Change Dunning Block',\n'Send 1st Overdue Notice',\n'Update Baseline Date',\n'Update Payment Term',\n'Reverse Invoice'\nAND the event_name column DOES contain the value 'Clear Invoice'.\nDivide this count by the total count of case_id rows where the event_name column contains the value 'Clear Invoice'.\nMultiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (FILTER (WHERE NOT EVENT_NAME \n        MATCHES ('Remove Dunning Block'\n                 'Set Dunning Block'\n                 'Change Dunning Block'\n                 'Send 1st Overdue Notice' \n                 'Update Baseline Date' \n                 'Update Payment Term' \n                 'Reverse Invoice') \n\t\t\t\t))\n/ \nCOUNT( case_id) \n  MATCHES (event_name ~'Clear Invoice') * 1\n*  100\n FROM FLATTEN(\"defaultview-59\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (FILTER (WHERE NOT EVENT_NAME \n        MATCHES ('Remove Dunning Block'\n                 'Set Dunning Block'\n                 'Change Dunning Block'\n                 'Send 1st Overdue Notice' \n                 'Update Baseline Date' \n                 'Update Payment Term' \n                 'Reverse Invoice') \n\t\t\t\t))\n/ \nCOUNT( case_id) \n  MATCHES (event_name ~'Clear Invoice') * 1\n*  100\n FROM FLATTEN(\"defaultview-59\")"
    },
    {
        "filename": "cbc696ff54",
        "split": "test",
        "name": "Overdue Receivables",
        "query": "SELECT \n \"AR_CustomerName\" ,\n\"Overdue Category\", \ncount(\"ARUniqueKey\" ) as \"#Receivables\"\nFROM FLATTEN (\"defaultview-197\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate \n \n GROUP BY 1,2\n ORDER BY  3 DESC\nLIMIT 20",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the customer name 'AR_CustomerName' and overdue category 'Overdue Category' from the flattened table 'defaultview-197'. Count the number of receivables '#Receivables' for each customer and overdue category combination where the net due date 'NetDueDate' is not null, the event name is 'Create Accounts Receivable', the clearing date 'ClearingDate' is null and the current date 'NOW()' is greater than or equal to the net due date. Group the results by the customer name and overdue category. Order the results by the count of receivables in descending order. Limit the results to the top 20 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"AR_CustomerName\" AS \"Customer Name\",\nCASE\nWHEN (NOW() - \"NetDueDate\" <= DURATION '60days') AND (NOW() - \"NetDueDate\" > DURATION '0days') THEN '1 - 60 days overdue'\nWHEN (NOW() - \"NetDueDate\" <= DURATION '90days') AND (NOW() - \"NetDueDate\" > DURATION '60days') THEN '61 - 90 days overdue'\nWHEN (NOW() - \"NetDueDate\"  > DURATION '90days') THEN '> 90 days overdue'\nEND AS \"Overdue Category\",\nCOUNT(\"AR_ReceivableDocNumber\") AS \"# Receivables\"\n\nFROM FLATTEN(\"defaultview-197\")\n--WHERE EVENT_NAME MATCHES ('Update Data')\n\nWhere (NetDueDate)\n--WHERE (PaymentDocumentClearingDate) IS NULL                      \n\nAND EVENT_NAME FIRST MATCHES ('Create Accounts Receivable')\nAND \"ClearingDate\" IS NULL\nAND NOW() >= \"NetDueDate\"\n\nGROUP BY 1,2\nORDER BY 3 desc\nLIMIT 20\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"AR_CustomerName\" AS \"Customer Name\",\nCASE\nWHEN (NOW() - \"NetDueDate\" <= DURATION '60days') AND (NOW() - \"NetDueDate\" > DURATION '0days') THEN '1 - 60 days overdue'\nWHEN (NOW() - \"NetDueDate\" <= DURATION '90days') AND (NOW() - \"NetDueDate\" > DURATION '60days') THEN '61 - 90 days overdue'\nWHEN (NOW() - \"NetDueDate\"  > DURATION '90days') THEN '> 90 days overdue'\nEND AS \"Overdue Category\",\nCOUNT(\"AR_ReceivableDocNumber\") AS \"# Receivables\"\n\nFROM FLATTEN(\"defaultview-197\")\n--WHERE EVENT_NAME MATCHES ('Update Data')\n\nWhere (NetDueDate)\n--WHERE (PaymentDocumentClearingDate) IS NULL                      \n\nAND EVENT_NAME FIRST MATCHES ('Create Accounts Receivable')\nAND \"ClearingDate\" IS NULL\nAND NOW() >= \"NetDueDate\"\n\nGROUP BY 1,2\nORDER BY 3 desc\nLIMIT 20\n\n"
    },
    {
        "filename": "c6d0126e8f",
        "split": "test",
        "name": "Monthly average number of reworks per case",
        "query": "SELECT \nDATE_TRUNC('month', \n                   (SELECT FIRST(end_time) \n                    WHERE event_name \n                    IN ('Change Status to Closed')\n                   )\n          ) AS \"Month\",\nAVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1 AS \"Rework ratio per case\" \nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1\n  AND \"ResolutionStatus\" IS NOT NULL\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the first day of each month from the defaultview-217 table. \nFor each month, calculate the average number of times the status changed to 'In Progress' per case, minus 1. \nOnly include months where the status changed to 'In Review' more than once. \nOnly include cases where the ResolutionStatus column has a value.\nGroup the results by month and order by month.",
        "llm_gpt-35-turbo-0613_query": "SELECT Date_trunc('month', \"EndOfResolution\") AS Month,\n       Avg(\"No. of times status changed to 'In Progress' per case\") - 1 AS \"Avg. No of Progress Mades\"\nFROM   (SELECT\n                CASE\n                    WHEN LAG (\"EndOfResolutionStatus\") OVER (PARTITION BY \"case_id\" ORDER BY \"end_timestamp\") = 'In Progress' THEN 1\n                    -- WHEN \"to_status\" ~* 'To Review' THEN NULL\n                    ELSE 0\n                END AS \"No. of times status changed to 'In Progress' per case\",\n                \"case_id\",\n                -- \"end_timestamp\" - \"start_timestamp\" AS \"CaseDuration\",\n                \"end_timestamp\" AS \"EndOfResolution\",    \n                \"end_event\" AS \"EndOfResolutionStatus\"\n           \n        FROM  (\n                SELECT\n                \"case_id\",\n                \"event_id\",\n                LAG (\"event_name\" ) OVER (PARTITION BY \"case_id\" ORDER BY \"event_id\" ) AS \"from_name\" ,\n                LAG (\"status\" ) OVER (PARTITION BY \"case_id\" ORDER BY \"event_id\" ) AS \"from_status\" ,\n                -- LAG (\"end_timestamp\" ) OVER (PARTITION BY \"case_id\" ORDER BY \"event_id\" ) AS \"from_ts\" ,\n                LAG (\"end_timestamp\" ) OVER (PARTITION BY \"case_id\" ,\"event_id\" ORDER BY \"event_id\" ) AS \"from_ts\" ,(CASE WHEN event_name = 'Resolve' THEN 'Resolved' ELSE status END) AS \"status\" ,\"event_name\" ,\n                \"end_timestamp\"\n                FROM\n                (SELECT\n                \"case_id\",\n                \"event_id\",\n                -- \"end_timestamp\",\n                \"end_event_name\" AS event_name,\n                -- \"end_event_duration\",\n               \n                (CASE \n                WHEN \"end_event_duration\"  > DATE '2021-01-01' THEN 'Ongoing'\n                WHEN \"end_event_duration\" <= DATE '2021-01-01' AND \"end_event_name\" = 'Cancel Case' THEN 'Cancelled'\n                WHEN \"end_event_duration\" <= DATE '2021-01-01' THEN 'Completed'\n                ELSE '' END) AS \"status\" ,\n                CASE\n                WHEN \"end_event_duration\" > DATE '2021-01-01' THEN  DATE '2021-01-01'\n                WHEN \"end_event_duration\" <= DATE '2021-01-01' THEN (DATE '2021-01-01' - \"end_event_duration\")  END AS \"end_timestamp\"\n                FROM\n                (SELECT\n                case_id,\n                event_name AS \"end_event_name\",\n                event_id,\"event_count\"   ,\n                -- count(event_id),\n                LAG (\"end_timestamp\" ) OVER (PARTITION BY case_id ORDER BY event_id ) AS \"end_event_duration\"\n                \n                FROM\n                (SELECT\n                    case_id,\n                    event_name,\n                    event_id,\n                    Duration,\n                    \"Responsible Lane\"\n                    ,\"Case Id\"\n                    ,\"event_count\"\n                    FROM\n                    (\"Espionage\".FLUX_FIT_DATA_COMPLETED_VIEW) AS \"F1\"\n                    -- WHERE\n                ORDER BY event_id ASC) AS \"F2\"\n                ) AS \"F4\"\n                ) AS \"F5\"\n                ) AS \"F6\"\n        ) AS \"F7\"\nWHERE 1< (SELECT COUNT(\"to_status\") FILTER (WHERE \"to_status\" IN ('In Review'))) \n      AND \"ResolutionStatus\" IS NOT NULL\nGROUP  BY 1\nORDER  BY 1\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT Date_trunc('month', \"EndOfResolution\") AS Month,\n       Avg(\"No. of times status changed to 'In Progress' per case\") - 1 AS \"Avg. No of Progress Mades\"\nFROM   (SELECT\n                CASE\n                    WHEN LAG (\"EndOfResolutionStatus\") OVER (PARTITION BY \"case_id\" ORDER BY \"end_timestamp\") = 'In Progress' THEN 1\n                    -- WHEN \"to_status\" ~* 'To Review' THEN NULL\n                    ELSE 0\n                END AS \"No. of times status changed to 'In Progress' per case\",\n                \"case_id\",\n                -- \"end_timestamp\" - \"start_timestamp\" AS \"CaseDuration\",\n                \"end_timestamp\" AS \"EndOfResolution\",    \n                \"end_event\" AS \"EndOfResolutionStatus\"\n           \n        FROM  (\n                SELECT\n                \"case_id\",\n                \"event_id\",\n                LAG (\"event_name\" ) OVER (PARTITION BY \"case_id\" ORDER BY \"event_id\" ) AS \"from_name\" ,\n                LAG (\"status\" ) OVER (PARTITION BY \"case_id\" ORDER BY \"event_id\" ) AS \"from_status\" ,\n                -- LAG (\"end_timestamp\" ) OVER (PARTITION BY \"case_id\" ORDER BY \"event_id\" ) AS \"from_ts\" ,\n                LAG (\"end_timestamp\" ) OVER (PARTITION BY \"case_id\" ,\"event_id\" ORDER BY \"event_id\" ) AS \"from_ts\" ,(CASE WHEN event_name = 'Resolve' THEN 'Resolved' ELSE status END) AS \"status\" ,\"event_name\" ,\n                \"end_timestamp\"\n                FROM\n                (SELECT\n                \"case_id\",\n                \"event_id\",\n                -- \"end_timestamp\",\n                \"end_event_name\" AS event_name,\n                -- \"end_event_duration\",\n               \n                (CASE \n                WHEN \"end_event_duration\"  > DATE '2021-01-01' THEN 'Ongoing'\n                WHEN \"end_event_duration\" <= DATE '2021-01-01' AND \"end_event_name\" = 'Cancel Case' THEN 'Cancelled'\n                WHEN \"end_event_duration\" <= DATE '2021-01-01' THEN 'Completed'\n                ELSE '' END) AS \"status\" ,\n                CASE\n                WHEN \"end_event_duration\" > DATE '2021-01-01' THEN  DATE '2021-01-01'\n                WHEN \"end_event_duration\" <= DATE '2021-01-01' THEN (DATE '2021-01-01' - \"end_event_duration\")  END AS \"end_timestamp\"\n                FROM\n                (SELECT\n                case_id,\n                event_name AS \"end_event_name\",\n                event_id,\"event_count\"   ,\n                -- count(event_id),\n                LAG (\"end_timestamp\" ) OVER (PARTITION BY case_id ORDER BY event_id ) AS \"end_event_duration\"\n                \n                FROM\n                (SELECT\n                    case_id,\n                    event_name,\n                    event_id,\n                    Duration,\n                    \"Responsible Lane\"\n                    ,\"Case Id\"\n                    ,\"event_count\"\n                    FROM\n                    (\"Espionage\".FLUX_FIT_DATA_COMPLETED_VIEW) AS \"F1\"\n                    -- WHERE\n                ORDER BY event_id ASC) AS \"F2\"\n                ) AS \"F4\"\n                ) AS \"F5\"\n                ) AS \"F6\"\n        ) AS \"F7\"\nWHERE 1< (SELECT COUNT(\"to_status\") FILTER (WHERE \"to_status\" IN ('In Review'))) \n      AND \"ResolutionStatus\" IS NOT NULL\nGROUP  BY 1\nORDER  BY 1\n"
    },
    {
        "filename": "1f62e5a6ab",
        "split": "test",
        "name": "Average number of reworks per case",
        "query": "\nSELECT\nAVG((SELECT COUNT(event_name) - COUNT(DISTINCT event_name)))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average number of duplicate event names in the defaultview-545 table by:\n1. Selecting the count of all event_name values \n2. Subtracting the count of distinct event_name values\n3. Taking the average of the results across all rows\n",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT COUNT (EVENT_NAME)) - (SELECT COUNT (DISTINCT EVENT_NAME)))\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT COUNT (EVENT_NAME)) - (SELECT COUNT (DISTINCT EVENT_NAME)))\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "0d0de12fc7",
        "split": "test",
        "name": "Invoice Open Amount",
        "query": "SELECT SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\" ) \n+ SUM(\"AR_ClearedAmountInCompanyCodeCurrency\" )\nFROM \"defaultview-197\"\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the AR_InvoicedAmountInCompanyCodeCurrency column and the AR_ClearedAmountInCompanyCodeCurrency column from the defaultview-197 table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\" \n  + \"AR_ClearedAmountInCompanyCodeCurrency\")\nFROM\n  \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\" \n  + \"AR_ClearedAmountInCompanyCodeCurrency\")\nFROM\n  \"defaultview-197\"\n                "
    },
    {
        "filename": "6777a222c9",
        "split": "test",
        "name": "Rate of Cases executed in a given timeframe",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (\n    \tWHERE (SELECT LAST (END_TIME) FILTER (\n        \tWHERE EVENT_NAME IN ('Clear Invoice')) \n\t- FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))) \n        \t< DURATION '14days') \n\t/ COUNT (CASE_ID) * 100\n    \nFROM \"defaultview-225\" ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the percentage of cases where the time between the first 'Post Invoice' event and the last 'Clear Invoice' event is less than 14 days. \nTo calculate this, first count the number of cases where the time between these two events is less than 14 days. \nThen count the total number of cases. \nFinally, divide the first count by the total count and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  count(case_id) FILTER (\n    WHERE\n      ((SELECT\n          LAST (END_TIME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Clear Invoice'))) - (SELECT\n          FIRST (END_TIME) FILTER (\n            WHERE\nEVENT_NAME IN ('Post Invoice')))) < DURATION '14days') / count(case_id) * 100\nFROM\n  \"D&B - FI - Process Mining View\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  count(case_id) FILTER (\n    WHERE\n      ((SELECT\n          LAST (END_TIME) FILTER (\n            WHERE\n              EVENT_NAME IN ('Clear Invoice'))) - (SELECT\n          FIRST (END_TIME) FILTER (\n            WHERE\nEVENT_NAME IN ('Post Invoice')))) < DURATION '14days') / count(case_id) * 100\nFROM\n  \"D&B - FI - Process Mining View\"\n                "
    },
    {
        "filename": "ec2c5da4a8",
        "split": "test",
        "name": "<<Placeholder>>",
        "query": "SELECT MIN(1) FROM \"defaultview-124\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the minimum value of 1 from the table named 'defaultview-124'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  MIN (1)\nFROM\n  \"defaultview-124\"\n  \n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  MIN (1)\nFROM\n  \"defaultview-124\"\n  \n\n\n"
    },
    {
        "filename": "a77c1ac911",
        "split": "test",
        "name": "SOL-1742 Cases at compliance risk",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (NOT event_name MATCHES('Create Invoice' \t~> 'Post Invoice' \t~> 'Clear Invoice' \t~> 'Due Date passed')\n\tAND (SELECT BOOL_OR( event_name IN ('Post Invoice')))\n\tAND (SELECT\n\t\tLAST(end_time) FILTER (WHERE event_name IN ('Clear Invoice'))\n\t\t-\n\t\tFIRST(end_time) FILTER (WHERE event_name IN ('Create Invoice'))\n\t) < DURATION '25days'\n\t)\n)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id in the defaultview-59 table where:\n- The event_name does NOT match the sequence 'Create Invoice' followed by 'Post Invoice' followed by 'Clear Invoice' followed by 'Due Date passed'\n- There exists at least one event_name that is 'Post Invoice' \n- The time difference between the last end_time where event_name is 'Clear Invoice' and the first end_time where event_name is 'Create Invoice' is less than 25 days",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      NOT (\n        event_name MATCHES ('Create Invoice' >> 'Post Invoice' >> 'Clear Invoice' >> 'Due Date passed')\n      )\n      AND event_name MATCHES ('Post Invoice')\n      AND (\n        (\n          SELECT\n            LAST (end_time) FILTER (\n              WHERE\n                event_name IN ('Clear Invoice')\n            )\n        ) - (\n          SELECT\n            FIRST (end_time) FILTER (\n              WHERE\n                event_name IN ('Create Invoice')\n            )\n        )\n      ) < DURATION '25days'\n  )\nFROM\n  \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      NOT (\n        event_name MATCHES ('Create Invoice' >> 'Post Invoice' >> 'Clear Invoice' >> 'Due Date passed')\n      )\n      AND event_name MATCHES ('Post Invoice')\n      AND (\n        (\n          SELECT\n            LAST (end_time) FILTER (\n              WHERE\n                event_name IN ('Clear Invoice')\n            )\n        ) - (\n          SELECT\n            FIRST (end_time) FILTER (\n              WHERE\n                event_name IN ('Create Invoice')\n            )\n        )\n      ) < DURATION '25days'\n  )\nFROM\n  \"defaultview-59\""
    },
    {
        "filename": "27e7e22e07",
        "split": "test",
        "name": "Payment Terms Differences where PO is better",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n\t\t< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \n\tELSE \"PO Cash Discount Days 1\" END))\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the defaultview-57 table where the value in the Last FI Invoice Item Cash Discount Days 1 column is less than the value in the PO Cash Discount Days 1 column. If the PO Cash Discount Days 1 column value is null, use 0 instead.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tCOUNT(case_id)\nFROM \"defaultview-57\"\nWHERE (\"Last FI Invoice Item Cash Discount Days 1\" < \n\t   COALESCE(\"PO Cash Discount Days 1\", 0))",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tCOUNT(case_id)\nFROM \"defaultview-57\"\nWHERE (\"Last FI Invoice Item Cash Discount Days 1\" < \n\t   COALESCE(\"PO Cash Discount Days 1\", 0))"
    },
    {
        "filename": "fd2419de53",
        "split": "test",
        "name": "Open Overdue Invoices by Company Code (Top-10)",
        "query": "SELECT \n\"Inv. Company Code Text\" AS \"Company Code Name\"\n,SUM (\"Inv. Converted USD Amount\") AS \"Invoice Amount in $\"\n,COUNT(case_id) AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n  AND \"Last Inv. Item Due Date\" < DATE_TRUNC('day', NOW()) \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the company code name (Inv. Company Code Text) and sum the invoice amount in USD (Inv. Converted USD Amount) and count the number of invoices (case_id) from the defaultview-225 table. Filter to only include invoices where the last item clearing date (Last Inv. Item Clearing Date) is null and the last item due date (Last Inv. Item Due Date) is before today (NOW()). Group the results by company code name (1) and order by the sum of invoice amount in USD (2) in descending order. Limit the results to the top 10.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Inv. Company Code Text\" AS \"Company Code\", \nSUM(\"Inv. Converted USD Amount\") AS \"Invoice Amount (USD)\",\nCOUNT(case_id) AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nWHERE\n\"Last Inv. Item Clearing Date\" IS NULL\nAND \"Last Inv. Item Due Date\" < DATE_TRUNC('day', NOW())\nGROUP BY 1\nORDER BY 2 DESC \nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Inv. Company Code Text\" AS \"Company Code\", \nSUM(\"Inv. Converted USD Amount\") AS \"Invoice Amount (USD)\",\nCOUNT(case_id) AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nWHERE\n\"Last Inv. Item Clearing Date\" IS NULL\nAND \"Last Inv. Item Due Date\" < DATE_TRUNC('day', NOW())\nGROUP BY 1\nORDER BY 2 DESC \nLIMIT 10"
    },
    {
        "filename": "05eb19e4de",
        "split": "test",
        "name": "Number of idle cases",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOW() - (SELECT LAST(end_time)) > DURATION '21days'\n\t\tAND (SELECT FIRST(event_name) FILTER (\n\t\t\tWHERE event_name IN ('Update Opportunity Stage to: Closed Won',\n'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n'Update Opportunity Stage to: Closed Lost',\n'Update Opportunity Stage to: Dead',\n'Update Opportunity Stage to: Dead - No Opportunity',\n'Update Opportunity Stage to: Dead - No Decision',\n'Update Opportunity Stage to: Dead - Duplicate',\n'Update Opportunity Stage to: 00 Dead - Lost',\n'Update Lead Status to: Archive',\n'Reject Quote'))) IS NULL\n   )\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id in the defaultview-545 table where the time period between NOW() and the last end_time is greater than 21 days AND the first event_name from the list ('Update Opportunity Stage to: Closed Won', \n'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n'Update Opportunity Stage to: Closed Lost',\n'Update Opportunity Stage to: Dead',\n'Update Opportunity Stage to: Dead - No Opportunity',\n'Update Opportunity Stage to: Dead - No Decision',\n'Update Opportunity Stage to: Dead - Duplicate',\n'Update Opportunity Stage to: 00 Dead - Lost',\n'Update Lead Status to: Archive',\n'Reject Quote') is NULL.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id)\nFROM \"defaultview-545\"\nWHERE NOW() - (SELECT LAST(end_time)) > DURATION '21days'\nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Closed Won') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: 06 Closed Won (Onboarding)') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Closed Lost') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Dead') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Dead - No Opportunity') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Dead - No Decision') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Dead - Duplicate') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: 00 Dead - Lost') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Lead Status to: Archive') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Reject Quote') ) IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id)\nFROM \"defaultview-545\"\nWHERE NOW() - (SELECT LAST(end_time)) > DURATION '21days'\nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Closed Won') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: 06 Closed Won (Onboarding)') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Closed Lost') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Dead') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Dead - No Opportunity') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Dead - No Decision') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: Dead - Duplicate') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Opportunity Stage to: 00 Dead - Lost') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Update Lead Status to: Archive') ) IS NULL  \nAND (SELECT FIRST(event_name) WHERE event_name IN ('Reject Quote') ) IS NULL"
    },
    {
        "filename": "40f1d116ed",
        "split": "test",
        "name": "Invoice Open Overdue Amount",
        "query": "SELECT \nSUM(\"AmountInGlobalCurrency\" )  \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND NOW() >= NetDueDate )\nAS \"Amount\"\nFROM  FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the AmountInGlobalCurrency column from the defaultview-222 table for all rows where:\n- The EVENT_NAME column value is 'Create Accounts Receivable'\n- The ClearingJournalEntry column value is NULL\n- The current date (NOW()) is greater than or equal to the NetDueDate column value\nStore the result of this sum in a new column named Amount.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tSUM(\"AmountInGlobalCurrency\" ) AS \"Amount\"\nFROM\n\t\"defaultview-222\"\nWHERE\n\t EVENT_NAME = 'Create Accounts Receivable'\n    \tAND \"ClearingJournalEntry\" IS NULL\n    \tAND NOW()\n        \t>= \"NetDueDate\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tSUM(\"AmountInGlobalCurrency\" ) AS \"Amount\"\nFROM\n\t\"defaultview-222\"\nWHERE\n\t EVENT_NAME = 'Create Accounts Receivable'\n    \tAND \"ClearingJournalEntry\" IS NULL\n    \tAND NOW()\n        \t>= \"NetDueDate\""
    },
    {
        "filename": "dbf5719713",
        "split": "test",
        "name": "Last PO Terms of Payment Key",
        "query": "SELECT \"Last PO Terms of Payment Key\" AS \"Last PO Terms of Payment Key\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the column 'Last PO Terms of Payment Key' and rename it to 'Last PO Terms of Payment Key'. \nCount the values in the column 'Inv. Accounting Document Number' and rename the count to 'No. of Invoices'.\nGroup the results by the 'Last PO Terms of Payment Key' column.\nOrder the results by the 'No. of Invoices' column in descending order.\nThe query is run on the 'defaultview-225' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\t\"Last PO Terms of Payment Key\" AS \"Last PO Terms of Payment Key\",\n    Count(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM \"defaultview-225\" \n                    \tORDER BY 2 DESC NULLS LAST\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\t\"Last PO Terms of Payment Key\" AS \"Last PO Terms of Payment Key\",\n    Count(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM \"defaultview-225\" \n                    \tORDER BY 2 DESC NULLS LAST\n"
    },
    {
        "filename": "3ca9a3a9b0",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference grouped by Plant",
        "query": "SELECT COUNT (CASE_ID), \"Plant\"\nFROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL\nGROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case IDs from the defaultview-183 table where the Actual Finish Date column has the same value as the Scheduled Finish Date column and the Planned Order Number column is empty. Group the results by the Plant column. Order the results by the count in descending order. Limit the results to the top 10.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) as \"# Orders\", \"Site\" as \"BPC Name\"\nfrom \"defaultview-183\"\nwhere \"Actual Finish Date\" = \"Scheduled Finish Date\" \nand \"Planned Order Number\" is null \nGROUP BY 2\nORDER By 1 desc\nLimit 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) as \"# Orders\", \"Site\" as \"BPC Name\"\nfrom \"defaultview-183\"\nwhere \"Actual Finish Date\" = \"Scheduled Finish Date\" \nand \"Planned Order Number\" is null \nGROUP BY 2\nORDER By 1 desc\nLimit 10\n"
    },
    {
        "filename": "efb87ebe9e",
        "split": "test",
        "name": "Market forecast override rate",
        "query": "SELECT\nCOUNT(case_id) FILTER(\n\tWHERE(\n\t\t(SELECT FIRST(\"end_time\")\n\t\t\tWHERE event_name IN ('Review Marketing Forecast') \n\t\t)IS NOT NULL\n\t)\n)\n/\nCOUNT(case_id) FILTER(\n\tWHERE \"Marketing Forecast Qty\" <> 0\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-404' table where the end_time value for the 'Review Marketing Forecast' event is not null. Divide this count by the total number of case_id rows where the 'Marketing Forecast Qty' column does not equal 0. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(end_time IS NOT NULL)\n        WHERE\n          event_name IN ('Review Marketing Forecast')\n      )\n  ) / COUNT (case_id) FILTER (WHERE \"Marketing Forecast Qty\" <> 0) * 100 AS \"# Of Cases With Marketing Forecast Review\"\nFROM\n  \"defaultview-404\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(end_time IS NOT NULL)\n        WHERE\n          event_name IN ('Review Marketing Forecast')\n      )\n  ) / COUNT (case_id) FILTER (WHERE \"Marketing Forecast Qty\" <> 0) * 100 AS \"# Of Cases With Marketing Forecast Review\"\nFROM\n  \"defaultview-404\""
    },
    {
        "filename": "bead32ea3f",
        "split": "test",
        "name": "$ of Invoices with its PT better than Vendor Master data",
        "query": "SELECT SUM(\"Inv. Converted USD Amount\") FILTER(\n\t\tWHERE (\"Last Inv. Item Cash Discount Days 1\") < \n    \t  (\"Last Inv. Item Vendor Master CD 1\") OR \n          (\"Last Inv. Item Cash Discount Days 2\") < \n    \t  (\"Last Inv. Item Vendor Master CD 2\") OR \n          (\"Last Inv. Item Net Payment Terms Period\") <\n          (\"Last Inv. Item Vendor Master NDD\"))\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the 'Inv. Converted USD Amount' column of the 'defaultview-225' table for only those rows where either:\n- The value in the 'Last Inv. Item Cash Discount Days 1' column is less than the value in the 'Last Inv. Item Vendor Master CD 1' column, or\n- The value in the 'Last Inv. Item Cash Discount Days 2' column is less than the value in the 'Last Inv. Item Vendor Master CD 2' column, or \n- The value in the 'Last Inv. Item Net Payment Terms Period' column is less than the value in the 'Last Inv. Item Vendor Master NDD' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"Inv. Converted USD Amount\") \nFROM \"defaultview-225\"\nWHERE \n(\"Last Inv. Item Cash Discount Days 1\" < \"Last Inv. Item Vendor Master CD 1\"\nOR \"Last Inv. Item Cash Discount Days 2\" < \"Last Inv. Item Vendor Master CD 2\"\nOR \"Last Inv. Item Net Payment Terms Period\" < \"Last Inv. Item Vendor Master NDD\")\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"Inv. Converted USD Amount\") \nFROM \"defaultview-225\"\nWHERE \n(\"Last Inv. Item Cash Discount Days 1\" < \"Last Inv. Item Vendor Master CD 1\"\nOR \"Last Inv. Item Cash Discount Days 2\" < \"Last Inv. Item Vendor Master CD 2\"\nOR \"Last Inv. Item Net Payment Terms Period\" < \"Last Inv. Item Vendor Master NDD\")\n"
    },
    {
        "filename": "e9674c4a5e",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of delivery item changes ",
        "query": "SELECT COUNT (\"event_name\") \n\tFILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n\t\t'Change Delivery%' OR event_name LIKE 'Update Delivery%') \n        AS created_with_dialog MATCHES (created_with_dialog))\n    ,\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nWHERE SalesDocCustomerCompany IS NOT NULL\nGROUP BY 2\nORDER BY 1 DESC\nLimit 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of events where the event_name column starts with 'Change Delivery' or 'Update Delivery' and the created_with_dialog column has the same value. Group the results by the SalesDocCustomerCompany column. Order the results by the count in descending order and limit to the top 10 results. The data is from the defaultview-290 table where the SalesDocCustomerCompany column is not null.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) as \"Count\", event_name\n-- created_with_dialog \n\nFROM FLATTEN(defaultview-290)\nWHERE event_name    MATCHES ('Change Delivery%' OR 'Update Delivery%' ) \nAND event_name LIKE 'Update%'\n--AND created_with_dialog= 'wwb' --event name created as data column\n--AND created_with_dialog= event_name --SAME AS Direct MTM, DIALOG PARTICIPANTS\n\n\nGROUP BY 2\nORDER BY 1 DESC\n\nLIMIT 10 \n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) as \"Count\", event_name\n-- created_with_dialog \n\nFROM FLATTEN(defaultview-290)\nWHERE event_name    MATCHES ('Change Delivery%' OR 'Update Delivery%' ) \nAND event_name LIKE 'Update%'\n--AND created_with_dialog= 'wwb' --event name created as data column\n--AND created_with_dialog= event_name --SAME AS Direct MTM, DIALOG PARTICIPANTS\n\n\nGROUP BY 2\nORDER BY 1 DESC\n\nLIMIT 10 \n\n\n"
    },
    {
        "filename": "a9ef667704",
        "split": "test",
        "name": "Average Payment Time",
        "query": "SELECT \nAVG (\"ClearingDate\"   - \"CreationDate\"  ) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \nAs \"AVG Clearing Time\"\nFROM FLATTEN(\"defaultview-222\")\nWHERE \"ClearingDate\" IS NOT NULL AND \"NetDueDate\" IS NOT NULL",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time between the CreationDate and ClearingDate for all process instances in the defaultview-222 table where the event name starts with 'Clear' and both the ClearingDate and NetDueDate columns have non-null values. Name the resulting column 'AVG Clearing Time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\t(\n    AVG(event_date) \n    FILTER (WHERE event_name ILIKE 'Clear%'), \n\tAVG(\n\t(\n\t\tSELECT LAST(event_date) \n\t\tWHERE event_name IN ('Clearing Assigned')\n\t))\n    FILTER (WHERE event_name ILIKE '%Cash%')\n    ) \n\tAS \"AVG Clearing Time\"\nFROM\n  (\n    SELECT\n\t\tDATE_TRUNC('DAY', CreationDate) AS \"Creation Day\"\n        ,EVENT_NAME AS \"event_name\"\n        ,DATE_TRUNC('DAY', CreationDate) AS \"Clearing Day\"\n        ,DATEADD('DAY', 30, \n\t\t DATE_TRUNC('DAY', ClearingDate)\n         ) AS \"Net Due Date\"\n        ,(\n\t\t SELECT\n\t\t\tLAST (DATE_TRUNC('DAY', ClearingDate))\n\t\t )\n\t\t-LAST (DATE_TRUNC('DAY', ClearingDate)) AS \"Clearing Time\"\n    FROM\n        \"defaultview-222\"\n    WHERE\n        (event_name ILIKE '%Clearing Assigned%'\n            OR event_name ILIKE '%Clear%')\n        AND (\n            ClearingDate IS NOT NULL\n            AND NetDueDate IS NOT NULL\n        )\n    ORDER BY\n        1 ASC NULLS FIRST,\n        3 ASC NULLS FIRST\n    ) AS s1\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\t(\n    AVG(event_date) \n    FILTER (WHERE event_name ILIKE 'Clear%'), \n\tAVG(\n\t(\n\t\tSELECT LAST(event_date) \n\t\tWHERE event_name IN ('Clearing Assigned')\n\t))\n    FILTER (WHERE event_name ILIKE '%Cash%')\n    ) \n\tAS \"AVG Clearing Time\"\nFROM\n  (\n    SELECT\n\t\tDATE_TRUNC('DAY', CreationDate) AS \"Creation Day\"\n        ,EVENT_NAME AS \"event_name\"\n        ,DATE_TRUNC('DAY', CreationDate) AS \"Clearing Day\"\n        ,DATEADD('DAY', 30, \n\t\t DATE_TRUNC('DAY', ClearingDate)\n         ) AS \"Net Due Date\"\n        ,(\n\t\t SELECT\n\t\t\tLAST (DATE_TRUNC('DAY', ClearingDate))\n\t\t )\n\t\t-LAST (DATE_TRUNC('DAY', ClearingDate)) AS \"Clearing Time\"\n    FROM\n        \"defaultview-222\"\n    WHERE\n        (event_name ILIKE '%Clearing Assigned%'\n            OR event_name ILIKE '%Clear%')\n        AND (\n            ClearingDate IS NOT NULL\n            AND NetDueDate IS NOT NULL\n        )\n    ORDER BY\n        1 ASC NULLS FIRST,\n        3 ASC NULLS FIRST\n    ) AS s1\n\n"
    },
    {
        "filename": "0f07aff629",
        "split": "test",
        "name": "_Percentage of projects in execution",
        "query": "\nSELECT\n(\nCOUNT(case_id) FILTER (WHERE Project_StageText = 'In Execution')\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cases in the 'In Execution' stage out of the total number of cases in the 'defaultview-197' table. \nTo do this:\n1. Count the number of cases where the value in the 'Project_StageText' column is 'In Execution'. Store this count.\n2. Count the total number of cases in the table. Store this count.\n3. Divide the count from step 1 by the count from step 2. \n4. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(COUNT (CASE_ID) FILTER (WHERE Project_StageText = 'In Execution')) /(count(case_id))  * 100\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(COUNT (CASE_ID) FILTER (WHERE Project_StageText = 'In Execution')) /(count(case_id))  * 100\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "3f84ef5334",
        "split": "test",
        "name": "Early Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Due Date\" - \"Last Inv. Item Clearing Date\" > DURATION '5days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cases from the 'defaultview-225' table where the time difference between the 'Last Inv. Item Due Date' and 'Last Inv. Item Clearing Date' columns is greater than 5 days. \nTo do this:\n1. Count the number of cases where 'Last Inv. Item Due Date' - 'Last Inv. Item Clearing Date' > 5 days\n2. Count the total number of cases where 'Last Inv. Item Clearing Date' is not null\n3. Divide the count from step 1 by the count from step 2\n4. Multiply the result by 100 to get the percentage",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n    COUNT(case_id) FILTER(FIRST (Occurrence))  FILTER (\n    \tWHERE DATE_DIFF('Day',(SELECT FIRST(\"Last Inv. Item Clearing Date\")),\n\t\t(SELECT FIRST(\"Last Inv. Item Due Date\")))) > DURATION '5DAYS'\n   \t\t )\n\t/ COUNT(case_id) FILTER\n    \t(WHERE  \n            (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n        \t)\n\t* 100\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n    COUNT(case_id) FILTER(FIRST (Occurrence))  FILTER (\n    \tWHERE DATE_DIFF('Day',(SELECT FIRST(\"Last Inv. Item Clearing Date\")),\n\t\t(SELECT FIRST(\"Last Inv. Item Due Date\")))) > DURATION '5DAYS'\n   \t\t )\n\t/ COUNT(case_id) FILTER\n    \t(WHERE  \n            (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n        \t)\n\t* 100\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "cd37fa8683",
        "split": "test",
        "name": "Avg. Cycle Time (Create PO to Release PO)",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')\n- (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item'))\nAS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-124' table, calculate the average time difference between the last end time of the 'Release PO' event and the first end time of the 'Create PO Item' event. Label this calculated average time difference as 'Avg. Cycle Time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG (\"cycle_time_create_po_item_last_end_time_to_release_po_last_end_time\") \nAS \"Avg. Cycle Time\"\nFROM \n(\nSELECT\nLAST(end_time) FILTER (WHERE event_name = 'Release PO') \n- FIRST(end_time) FILTER (WHERE event_name = 'Create PO Item') \nAS \"cycle_time_create_po_item_last_end_time_to_release_po_last_end_time\"\nFROM FLATTEN(\"defaultview-124\")\n)\nAS sub\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG (\"cycle_time_create_po_item_last_end_time_to_release_po_last_end_time\") \nAS \"Avg. Cycle Time\"\nFROM \n(\nSELECT\nLAST(end_time) FILTER (WHERE event_name = 'Release PO') \n- FIRST(end_time) FILTER (WHERE event_name = 'Create PO Item') \nAS \"cycle_time_create_po_item_last_end_time_to_release_po_last_end_time\"\nFROM FLATTEN(\"defaultview-124\")\n)\nAS sub\n"
    },
    {
        "filename": "4cc4a0017e",
        "split": "test",
        "name": "SOL-1742 Average cycle time for cases affected by rework",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average duration of process instances from the 'defaultview-59' table that have at least one event that occurs more than once. To do this:\n\n1. For each process instance, find the time between the first and last occurrence of any event (using FIRST() and LAST() functions)\n2. Filter to only keep process instances that have at least one event that occurs more than once (using OCCURRENCE() and BOOL_OR())\n3. Take the average of the durations calculated in step 1 (using AVG())\n",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG (\n  (SELECT FIRST(end_time) - LAST(end_time))\n      )\nWHERE\n(\n  SELECT BOOL_OR (\n      (SELECT FIRST (occurrence_id) != LAST (occurrence_id))\n    )\n  )\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG (\n  (SELECT FIRST(end_time) - LAST(end_time))\n      )\nWHERE\n(\n  SELECT BOOL_OR (\n      (SELECT FIRST (occurrence_id) != LAST (occurrence_id))\n    )\n  )\nFROM \"defaultview-59\""
    },
    {
        "filename": "7003c60890",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Type",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Type\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases ('case_id' column) in the 'defaultview-124' table. Sum the total purchase order value ('PO Item Net Order Value' column) for those cases. Group the results by the purchase order type ('PO Type' column). Order the results by the number of cases in descending order. Limit the results to the top 50 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (CASE_ID) as \"# of cases\", \nSUM(\"PO Item Net Order Value\" ) as \"Total PO Value\",\n\"PO Type\" as \"PO Type\"\nFROM \"defaultview-124\" \ngroup by 3\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (CASE_ID) as \"# of cases\", \nSUM(\"PO Item Net Order Value\" ) as \"Total PO Value\",\n\"PO Type\" as \"PO Type\"\nFROM \"defaultview-124\" \ngroup by 3\nORDER BY 1 DESC\nLIMIT 50\n"
    },
    {
        "filename": "da7eeb3527",
        "split": "test",
        "name": "%Manually created Process orders grouped by Business Line",
        "query": "SELECT \ncount(Distinct case_id) as \"#Process Orders\",\n(COUNT (EVENT_NAME) FILTER \n(WHERE \"Event Created By User Type\" IN ('Dialog'))) / (COUNT (EVENT_NAME))* 100 \nas \"Manual rate\",\n\"Division\"\nFROM FLATTEN(\"defaultview-183\")\nWHERE EVENT_NAME = 'Create Process Order'\norder by 1 desc\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of unique process order case IDs (#Process Orders) from the defaultview-183 table. \nCalculate the percentage of process order creation events (Manual rate) that were created by dialog users (Event Created By User Type = 'Dialog') out of the total number of process order creation events. \nGroup the results by Division. \nOnly consider process order creation events (EVENT_NAME = 'Create Process Order').",
        "llm_gpt-35-turbo-0613_query": "SELECT\n    COUNT(DISTINCT \"Case ID\") AS \"# Process Orders\",\n    100 * AVG(\n        (SELECT COUNT(event_name) \n            FILTER(\n                WHERE \"Event Created By User Type\" = 'Dialog')\n        ) / (SELECT COUNT(event_name)) \n            FILTER(WHERE event_name ILIKE 'Create%'))\n        ) AS \"Manual rate\"\n        , \"Division\" \nFROM \"defaultview-183\"\nWHERE EVENT_NAME MATCHES ('Create Process Order')\nGROUP BY 3",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n    COUNT(DISTINCT \"Case ID\") AS \"# Process Orders\",\n    100 * AVG(\n        (SELECT COUNT(event_name) \n            FILTER(\n                WHERE \"Event Created By User Type\" = 'Dialog')\n        ) / (SELECT COUNT(event_name)) \n            FILTER(WHERE event_name ILIKE 'Create%'))\n        ) AS \"Manual rate\"\n        , \"Division\" \nFROM \"defaultview-183\"\nWHERE EVENT_NAME MATCHES ('Create Process Order')\nGROUP BY 3"
    },
    {
        "filename": "505cfbf1ae",
        "split": "test",
        "name": "Cleared Amount",
        "query": "SELECT SUM(\"AmountInGlobalCurrency\" )\nFROM FLATTEN(\"defaultview-222\")\nWHERE event_name LIKE 'Clear%'",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the AmountInGlobalCurrency column of the defaultview-222 table for all rows where the event_name column starts with 'Clear'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"AmountInGlobalCurrency\" ) FILTER (\n\tWHERE event_name LIKE 'Clear%')\nFROM \"defaultview-222\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"AmountInGlobalCurrency\" ) FILTER (\n\tWHERE event_name LIKE 'Clear%')\nFROM \"defaultview-222\""
    },
    {
        "filename": "0761bcb1e5",
        "split": "test",
        "name": "Open Overdue Amount (15+ Days)",
        "query": "SELECT SUM(\"AmountInCompanyCodeCurrency\"  ) \nFROM FLATTEN(\"defaultview-197\")\nWHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day'",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the AmountInCompanyCodeCurrency column from the defaultview-197 table. Only include rows where:\n- The EVENT_NAME column equals 'Create Accounts Receivable'\n- The ClearingJournalEntry column is NULL\n- 15 days or more have passed since the NetDueDate column",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tSUM (\"AmountInCompanyCodeCurrency\")\nFROM\n\t\"defaultview-197\"\nWHERE\n\tEVENT_NAME = 'Create Accounts Receivable' \n\tAND ClearingJournalEntry IS NULL \n\tAND DATE_DIFF('day', NetDueDate, NOW()) >= 15",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tSUM (\"AmountInCompanyCodeCurrency\")\nFROM\n\t\"defaultview-197\"\nWHERE\n\tEVENT_NAME = 'Create Accounts Receivable' \n\tAND ClearingJournalEntry IS NULL \n\tAND DATE_DIFF('day', NetDueDate, NOW()) >= 15"
    },
    {
        "filename": "707fa40cc4",
        "split": "test",
        "name": "AVG Cycle Time for On-Time Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" > \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-431' table, select the average time difference between the last end time of the 'Pay Invoice' event and the first end time of the 'Receive Invoice' event for those process instances where the event sequence 'Receive Invoice' is directly followed by 'Pay Invoice' and the last invoice due date is after the last invoice payment date.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG(\n\t(SELECT LAST(end_time) \n    \tWHERE event_name IN ('Pay Invoice'))\n    - \n    (SELECT FIRST(end_time) \n    \tWHERE event_name IN ('Receive Invoice'))\n\t)\nFILTER(\n\tWHERE\n\t\t'Receive Invoice'~> 'Pay Invoice'\n    \tAND (SELECT LAST (\"Invoice payment date (Clearing)\") \n    \t\t\tWHERE (\"Last invoice due date\")<'Last invoice payment date') IS NOT NULL) \nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG(\n\t(SELECT LAST(end_time) \n    \tWHERE event_name IN ('Pay Invoice'))\n    - \n    (SELECT FIRST(end_time) \n    \tWHERE event_name IN ('Receive Invoice'))\n\t)\nFILTER(\n\tWHERE\n\t\t'Receive Invoice'~> 'Pay Invoice'\n    \tAND (SELECT LAST (\"Invoice payment date (Clearing)\") \n    \t\t\tWHERE (\"Last invoice due date\")<'Last invoice payment date') IS NOT NULL) \nFROM \"defaultview-431\""
    },
    {
        "filename": "d6c10482e1",
        "split": "test",
        "name": "Combinations with understocking",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Inventory Target\" > \"Stock on Hand\") \n\tAND DATE_TRUNC('month', NOW()) = \"MONTH\"\n)\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the defaultview-404 table where the Inventory Target column has a value greater than the Stock on Hand column and the MONTH column has a value equal to the current month truncated to just the month.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) AS \"Number of cases\"\nFROM \"defaultview-404\"\nWHERE \n\"Inventory Target\" > \"Stock on Hand\" \nAND \"MONTH\" = (SELECT DATE_TRUNC('month', NOW()))",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) AS \"Number of cases\"\nFROM \"defaultview-404\"\nWHERE \n\"Inventory Target\" > \"Stock on Hand\" \nAND \"MONTH\" = (SELECT DATE_TRUNC('month', NOW()))"
    },
    {
        "filename": "6ec4e9c927",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Type",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Process Order Type\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of rows in the 'defaultview-183' table for each unique value in the 'Process Order Type' column. Sort the results in descending order by the count.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(1) AS \"Count\", \"Process Order Type\" AS \"Order Type\"\nFROM \"defaultview-183\"\nORDER BY 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(1) AS \"Count\", \"Process Order Type\" AS \"Order Type\"\nFROM \"defaultview-183\"\nORDER BY 1 desc"
    },
    {
        "filename": "cf2c703ad2",
        "split": "test",
        "name": "No. of Cases by PO Vendor & PO Plant City",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\", \n\"PO Vendor Name\" AS \"PO Vendor\", \n\"PO Item Plant City\" AS \"PO Plant City\"\nFROM \"defaultview-124\"\n--WHERE (EVENT_NAME MATCHES ('Clear Invoice') AND EVENT_NAME MATCHES ('Create PR Item'))\nORDER BY 1 DESC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases in the 'defaultview-124' table. Group the cases by the 'PO Vendor Name' column and 'PO Item Plant City' column. Order the results by descending count of cases. Do not apply any filter.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id)\nFROM \"defaultview-124\"\nGROUP BY 2,3\norder by 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id)\nFROM \"defaultview-124\"\nGROUP BY 2,3\norder by 1 desc"
    },
    {
        "filename": "2b513712ff",
        "split": "test",
        "name": "Number of Billing Documents Cancelled",
        "query": "SELECT \nCOUNT(DISTINCT \"BillingDocument\") FILTER (\n\tWHERE event_name ='Cancel Billing Document')\n\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of unique BillingDocument column values from the defaultview-222 table where the event_name column value is 'Cancel Billing Document'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (DISTINCT \"BillingDocument\" ) \nFROM FLATTEN(\"defaultview-222\")\n--WHERE\n--event_name = 'Cancel Billing Document'\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (DISTINCT \"BillingDocument\" ) \nFROM FLATTEN(\"defaultview-222\")\n--WHERE\n--event_name = 'Cancel Billing Document'\n                "
    },
    {
        "filename": "b3e2ffc236",
        "split": "test",
        "name": "Production quantity accuracy ",
        "query": "SELECT \nAVG(\n\t\"Produced Delivered Quantity\"/\"Total Order Quantity\")\n\tFILTER(WHERE \"Delivery Completed\" IS NOT NULL)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average percentage of the total order quantity that was delivered for all orders where a delivery was completed. This is done by taking the average of the 'Produced Delivered Quantity' column divided by the 'Total Order Quantity' column for only those rows in the 'defaultview-183' table where the 'Delivery Completed' column is not null. The result is then multiplied by 100 to get a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t\"Produced Delivered Quantity\"\n\t/\n\t\"Total Order Quantity\"\n   ) * 100 AS \"Average delivery completeness percentage\"\nFROM\n\"defaultview-183\"\nWHERE\n \"Delivery Completed\" !=  null\n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t\"Produced Delivered Quantity\"\n\t/\n\t\"Total Order Quantity\"\n   ) * 100 AS \"Average delivery completeness percentage\"\nFROM\n\"defaultview-183\"\nWHERE\n \"Delivery Completed\" !=  null\n\n                "
    },
    {
        "filename": "d7a764fe04",
        "split": "test",
        "name": "AVG Cycle Time for Late Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-431' table, select the average time difference between the last end time of the 'Pay Invoice' event and the first end time of the 'Receive Invoice' event for those process instances where the event sequence 'Receive Invoice' is directly followed by 'Pay Invoice' and the last invoice due date is before the last invoice payment date.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG(\n    \t(SELECT LAST(end_time) \n        \tWHERE event_name IN ('Pay Invoice')) \n        - (SELECT FIRST(end_time) \n        \tWHERE event_name IN ('Receive Invoice')))\n        \n        FILTER (\n        \tWHERE event_name MATCHES (\n            \t'Receive Invoice' 'Pay Invoice')\n                AND (SELECT FIRST (\"Invoice Proforma Due Date\")\n                \t< LAST(\"Invoice Proforma Payment Date\"))))\nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG(\n    \t(SELECT LAST(end_time) \n        \tWHERE event_name IN ('Pay Invoice')) \n        - (SELECT FIRST(end_time) \n        \tWHERE event_name IN ('Receive Invoice')))\n        \n        FILTER (\n        \tWHERE event_name MATCHES (\n            \t'Receive Invoice' 'Pay Invoice')\n                AND (SELECT FIRST (\"Invoice Proforma Due Date\")\n                \t< LAST(\"Invoice Proforma Payment Date\"))))\nFROM \"defaultview-431\""
    },
    {
        "filename": "7cda2249c2",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-545' table where the value in the 'Last Invoice Due Date' column is less than the value in the 'Last Invoice Payment Date' column. Divide this count by the total number of case_id rows in the 'defaultview-545' table where 'Last Invoice Payment Date' is not null. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER(\n\tWHERE \"Last Invoice Due Date\" \n           \t\t< \"Last Invoice Payment Date\" ) \n/\nCOUNT(case_id) FILTER(WHERE \"Last Invoice Payment Date\" IS NOT NULL)\n* 100\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER(\n\tWHERE \"Last Invoice Due Date\" \n           \t\t< \"Last Invoice Payment Date\" ) \n/\nCOUNT(case_id) FILTER(WHERE \"Last Invoice Payment Date\" IS NOT NULL)\n* 100\nFROM \"defaultview-545\""
    },
    {
        "filename": "b1511789a0",
        "split": "test",
        "name": "Current status - what was the last activity",
        "query": "SELECT \nCOUNT(case_id) AS \"Affected Invoice Volume\"\n,LAST(event_name) AS \"Last Activity\"\n,\"Last FI Invoice Item Due Date\"- DATE_TRUNC('day', NOW()) AS \"Days until Due\"\n\nFROM FLATTEN(\"defaultview-57\")\nWHERE (\"Last FI Invoice Item Clearing Date\" IS NULL)\nAND \"Last FI Invoice ID\" IS NOT NULL\nORDER BY 1 desc",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id where Last FI Invoice Item Clearing Date is NULL and Last FI Invoice ID is not NULL. Name the count as Affected Invoice Volume. \nTake the last value of event_name and name it as Last Activity.\nSubtract today's date from Last FI Invoice Item Due Date and name it as Days until Due.\nOrder the results by Affected Invoice Volume in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) as \"Affected Invoice Volume\" , LAST (event_name)  as \"Last Activity\",  (date(now()) - \"Last FI Invoice Item Due Date\" ) as \"Days until Due\"\nFROM \"default\".\"processview-875\"\nWhere \"Last FI Invoice Item Clearing Date\" is Null  and \"Last FI Invoice ID\" is not Null\nOrder by 1 desc\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) as \"Affected Invoice Volume\" , LAST (event_name)  as \"Last Activity\",  (date(now()) - \"Last FI Invoice Item Due Date\" ) as \"Days until Due\"\nFROM \"default\".\"processview-875\"\nWhere \"Last FI Invoice Item Clearing Date\" is Null  and \"Last FI Invoice ID\" is not Null\nOrder by 1 desc\n\n"
    },
    {
        "filename": "9667cec47a",
        "split": "test",
        "name": "AVG Cycle Time",
        "query": "SELECT AVG((SELECT LAST(end_time))\n\t\t- (SELECT FIRST(end_time)))\nAS \"AVG Cycle Time\"\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average cycle time for all process instances in the 'defaultview-545' table. \nTo calculate the cycle time for a single process instance, take the timestamp of the last end_time event and subtract the timestamp of the first end_time event.\nThen take the average of all these cycle times across all process instances.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG (\n\t(SELECT LAST(end_time) WHERE event_name = 'Order Completed')\n\t-\n\t(SELECT FIRST(end_time) WHERE event_name = 'Order Created')\n\t)\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG (\n\t(SELECT LAST(end_time) WHERE event_name = 'Order Completed')\n\t-\n\t(SELECT FIRST(end_time) WHERE event_name = 'Order Created')\n\t)\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "a864b7d746",
        "split": "test",
        "name": "Number Created Receivables over Time",
        "query": "SELECT  \n\tDATE_TRUNC('Day', \"end_time\" )  AS \"Creation Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the truncated date (day precision) from the end_time column as 'Creation Date' and count the distinct ARUniqueKey values from the defaultview-222 table where the event name is 'Create Accounts Receivable'. Order the results by the Creation Date in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  DATE_TRUNC('day', (SELECT LAST(end_time)))) AS \"Creation Date\",\n  COUNT(DISTINCT \"ARUniqueKey\")\n  FROM FLATTEN(\"defaultview-222\")\n WHERE\n (event_name ILIKE 'Create Accounts Receivable')\n ORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  DATE_TRUNC('day', (SELECT LAST(end_time)))) AS \"Creation Date\",\n  COUNT(DISTINCT \"ARUniqueKey\")\n  FROM FLATTEN(\"defaultview-222\")\n WHERE\n (event_name ILIKE 'Create Accounts Receivable')\n ORDER BY 1 ASC"
    },
    {
        "filename": "ed8e83eb28",
        "split": "test",
        "name": "Number of changes in invoice items",
        "query": "SELECT COUNT(\"event_name\") \n\tFILTER(WHERE BEHAVIOR (\n           event_name LIKE 'Change Invoice%' \n           OR event_name LIKE 'Create Invoice Cancellation%' \n           OR event_name LIKE 'Update Invoice%'\n           ) AS created_with_dialog MATCHES (created_with_dialog))\nFROM FLATTEN(\"defaultview-290\")\n\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of rows in the 'defaultview-290' table where the value in the 'event_name' column starts with 'Change Invoice', 'Create Invoice Cancellation' or 'Update Invoice' and the value in the 'created_with_dialog' column is 'true'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(*)\nFROM \"defaultview-290\"\nWHERE event_name MATCHES('Change Invoice%') \nOR event_name MATCHES('Create Invoice Cancellation%') \nOR event_name MATCHES('Update Invoice%')\nAND \n'created_with_dialog'\nIN ('true')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(*)\nFROM \"defaultview-290\"\nWHERE event_name MATCHES('Change Invoice%') \nOR event_name MATCHES('Create Invoice Cancellation%') \nOR event_name MATCHES('Update Invoice%')\nAND \n'created_with_dialog'\nIN ('true')"
    },
    {
        "filename": "33b740656c",
        "split": "test",
        "name": "% Cases Started Late WITHOUT planned order reference",
        "query": "SELECT (count(case_id)\nFILTER (WHERE \"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\n \n  FROM \"defaultview-183\"\n\nWHERE \"Planned Order Number\" IS NULL\n\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cases from the 'defaultview-183' table where the actual start date is later than the scheduled start date. \nTo do this:\n1) Count the number of cases where the actual start date is greater than the scheduled start date by more than 0 seconds. \n2) Count the total number of cases.\n3) Divide the count from step 1 by the count from step 2. \n4) Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\n(\nSELECT count (case_id) WHERE \n  \"Actual Start\" - \"Scheduled Start\" > DURATION '0second'\n)\n/ \n(SELECT count (case_id)) \n* 100\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\n(\nSELECT count (case_id) WHERE \n  \"Actual Start\" - \"Scheduled Start\" > DURATION '0second'\n)\n/ \n(SELECT count (case_id)) \n* 100\n                "
    },
    {
        "filename": "093ba34496",
        "split": "test",
        "name": "JSM Average Closing Time",
        "query": "\nSELECT\nAVG(\n\tIF(\"Issue Type\" = '[System] Change',\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Canceled','Issue status change: Completed','Issue status change: Failed'))\n\t\t-(\"Issue Created Date\" ),\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Closed','Issue status change: Done'))\n\t\t-(\"Issue Created Date\" ))\n   )\nFROM \"defaultview-370\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time elapsed between issue creation and issue closure for issues of type '[System] Change' and other issue types in the defaultview-370 table. \nFor '[System] Change' issue types, find the last end_time value where the event_name is either 'Issue status change: Canceled', 'Issue status change: Completed' or 'Issue status change: Failed' and subtract the Issue Created Date column value.  \nFor other issue types, find the last end_time value where the event_name is either 'Issue status change: Closed' or 'Issue status change: Done' and subtract the Issue Created Date column value.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG(\n    (\n      SELECT\n        LAST (end_time) FILTER (\n          WHERE\n            event_name MATCHES (\n              'Issue status change: Canceled'\n              OR 'Issue status change: Completed'\n              OR 'Issue status change: Failed'\n            )\n        )\n    ) - \"Issue Created Date\"\n  )/86400 AS \"Avg. Elapsed Issue Resolution Time\",\n  \"issue type\"\nFROM\n  \"defaultview-370\"\nWHERE\n  (\n    SELECT\n      COUNT (event_name) FILTER (\n        WHERE\n          event_name IN (\n            'Issue status change: Canceled'\n            OR 'Issue status change: Completed'\n            OR 'Issue status change: Failed'\n          )\n      )\n  ) > 0\n  OR \"issue type\" MATCHES ('[System] Change')\nGROUP BY\n  2\nORDER BY\n  2 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG(\n    (\n      SELECT\n        LAST (end_time) FILTER (\n          WHERE\n            event_name MATCHES (\n              'Issue status change: Canceled'\n              OR 'Issue status change: Completed'\n              OR 'Issue status change: Failed'\n            )\n        )\n    ) - \"Issue Created Date\"\n  )/86400 AS \"Avg. Elapsed Issue Resolution Time\",\n  \"issue type\"\nFROM\n  \"defaultview-370\"\nWHERE\n  (\n    SELECT\n      COUNT (event_name) FILTER (\n        WHERE\n          event_name IN (\n            'Issue status change: Canceled'\n            OR 'Issue status change: Completed'\n            OR 'Issue status change: Failed'\n          )\n      )\n  ) > 0\n  OR \"issue type\" MATCHES ('[System] Change')\nGROUP BY\n  2\nORDER BY\n  2 ASC"
    },
    {
        "filename": "a9f69086c6",
        "split": "test",
        "name": "POs created after Invoice Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER\n\t(WHERE (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice') ~> 'Create PO Item')))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the 'defaultview-545' table where the event_name column value is either 'Receive Invoice' or 'Reconcile Invoice' followed by 'Create PO Item'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n COUNT(case_id) FILTER (WHERE event_name IN ('Receive Invoice','Reconcile Invoice') THEN ('Create PO Item'))\nFROM FLATTEN(\"defaultview-545\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n COUNT(case_id) FILTER (WHERE event_name IN ('Receive Invoice','Reconcile Invoice') THEN ('Create PO Item'))\nFROM FLATTEN(\"defaultview-545\")"
    },
    {
        "filename": "4ed73943d3",
        "split": "test",
        "name": "Number of Invoices ",
        "query": "SELECT\n  COUNT( case_id)\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of rows in the table named 'defaultview-545'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT(*)\nFROM\n  \"defaultview-545\"\n  \n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT(*)\nFROM\n  \"defaultview-545\"\n  \n\n\n"
    },
    {
        "filename": "88d017c4a6",
        "split": "test",
        "name": "Total PO discount Amount on Catalog item",
        "query": "SELECT -SUM(\"PO Amount Discount\") AS \"Total PO discount Amount\"\nFROM \"defaultview-431\"\nWHERE \"PO Item Line Type\" = 'Catalog'",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the total sum of values in the 'PO Amount Discount' column from the 'defaultview-431' table. Only include rows where the value in the 'PO Item Line Type' column is equal to 'Catalog'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n\tSUM(\"PO Amount Discount\") FILTER(\n\t\tWHERE \"PO Item Line Type\" = 'Catalog')\nFROM \"defaultview-431\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n\tSUM(\"PO Amount Discount\") FILTER(\n\t\tWHERE \"PO Item Line Type\" = 'Catalog')\nFROM \"defaultview-431\"\n                "
    },
    {
        "filename": "7701541719",
        "split": "test",
        "name": "Average Cycle Time Over Time",
        "query": "SELECT\n    DATE_TRUNC('month', (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"PO Creation Date\",\n    \n    AVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Receive Invoice')))\n   \t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"Average cycle time\"\n    \nFROM \"defaultview-545\"\nWHERE event_name MATCHES ('Create PO Item' 'Receive Invoice')\nORDER BY 1 ASC NULLS FIRST\nFILL TIMESERIES('MONTH'), NULL",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "The query selects from the 'defaultview-545' table. \nIt filters for rows where the 'event_name' column contains either 'Create PO Item' or 'Receive Invoice'.\nIt groups the rows by month, using the DATE_TRUNC function on the first 'end_time' for 'Create PO Item' events. \nThis gives the 'PO Creation Date' column.\nIt then calculates the average time between the first 'Create PO Item' event and last 'Receive Invoice' event for each month. \nThis gives the 'Average cycle time' column.\nThe results are ordered by 'PO Creation Date' in ascending order, with nulls first.\nAny missing months have null values filled in, to give a complete time series.",
        "llm_gpt-35-turbo-0613_query": "/*SELECT\nAVG (\"Into\" - \"print_Pick_List\") FILTER (WHERE \"Event_name\" IN ('print_Pick_List', 'Pick_List_Confirmation')) AS \"Time to create Pick List\",\nAVG (\"Into\" - \"Putaway_Completion\" ) FILTER (WHERE \"Event_name\" IN ('Putaway_Completion_Decentral', 'Putaway_Completion_Text'))) AS \"Time to complete \"Putaway\",\nAVG (\"Into\" - \"Gr_posting\")== Average ABGR Filter (WHERE Ecc_Item_Type = 'N' OR Ecc_Item_Type = 'U')  AS \"Time to post GR for Non-service/Product Item\",\nCOUNT(\"carton_printing_complete\" ) FILTER (WHERE \"End_Time\" > \"Order_confirmation\"  AND (\"Event_name\" = 'Order_confirmation'))) AS \"No. of Advance Orders Confirmed\",\nCOUNT(\"Event\" ) FILTER (WHERE \"Event_name\" = 'Vendor_scheduling_agreement_GI'  AND (\"End_Time\" \">=\" CREATETIME (DATE'2019-06-21', TIME'01:12:21')))) AS \"No. GI Made\",\nCOUNT(\"Event\" ) FILTER (WHERE \"Event_name\" = 'Vendor_scheduling_agreement_GI'  AND (\"End_Time\" \">=\" DATEADD (DAY, -1, (CREATETIME (DATE'2019-06-21', TIME'01:12:21')))))) AS \"GR Made Within 24 hrs\",\nCOUNT(\"Event\" ) FILTER (WHERE \"Event_name\" = 'Vendor_scheduling_agreement_GI'  AND (\"End_Time\" \">=\" DATEADD (DAY, -3, (CREATETIME (DATE'2019-06-21', TIME'01:12:21')))))) AS \"GR Made WIthin 3 days\"\n*/\nSELECT\n    DATE_TRUNC('month', (SELECT FIRST(end_time) \n    \t\t\t\tWHERE event_name IN ('Create PO')\n\t\t\t\t\t)\n                ) AS \"PO Creation Date\",\n    AVG(\"CYCLE_TIME\" \n       - (SELECT FIRST(end_time) \n         \tWHERE event_name IN ('Receive Invoice'))) \n    AS \"Average cycle time\"\n\t\nFROM \"defaultview-545\"\nWHERE event_name IN ('Create PO Item', 'Receive Invoice')\nGROUP BY 1\nORDER BY 1 ASC NULLS FIRST\nFILL TIMESERIES('MONTH'), NULL",
        "llm_gpt-35-turbo-0613_full_output": "/*SELECT\nAVG (\"Into\" - \"print_Pick_List\") FILTER (WHERE \"Event_name\" IN ('print_Pick_List', 'Pick_List_Confirmation')) AS \"Time to create Pick List\",\nAVG (\"Into\" - \"Putaway_Completion\" ) FILTER (WHERE \"Event_name\" IN ('Putaway_Completion_Decentral', 'Putaway_Completion_Text'))) AS \"Time to complete \"Putaway\",\nAVG (\"Into\" - \"Gr_posting\")== Average ABGR Filter (WHERE Ecc_Item_Type = 'N' OR Ecc_Item_Type = 'U')  AS \"Time to post GR for Non-service/Product Item\",\nCOUNT(\"carton_printing_complete\" ) FILTER (WHERE \"End_Time\" > \"Order_confirmation\"  AND (\"Event_name\" = 'Order_confirmation'))) AS \"No. of Advance Orders Confirmed\",\nCOUNT(\"Event\" ) FILTER (WHERE \"Event_name\" = 'Vendor_scheduling_agreement_GI'  AND (\"End_Time\" \">=\" CREATETIME (DATE'2019-06-21', TIME'01:12:21')))) AS \"No. GI Made\",\nCOUNT(\"Event\" ) FILTER (WHERE \"Event_name\" = 'Vendor_scheduling_agreement_GI'  AND (\"End_Time\" \">=\" DATEADD (DAY, -1, (CREATETIME (DATE'2019-06-21', TIME'01:12:21')))))) AS \"GR Made Within 24 hrs\",\nCOUNT(\"Event\" ) FILTER (WHERE \"Event_name\" = 'Vendor_scheduling_agreement_GI'  AND (\"End_Time\" \">=\" DATEADD (DAY, -3, (CREATETIME (DATE'2019-06-21', TIME'01:12:21')))))) AS \"GR Made WIthin 3 days\"\n*/\nSELECT\n    DATE_TRUNC('month', (SELECT FIRST(end_time) \n    \t\t\t\tWHERE event_name IN ('Create PO')\n\t\t\t\t\t)\n                ) AS \"PO Creation Date\",\n    AVG(\"CYCLE_TIME\" \n       - (SELECT FIRST(end_time) \n         \tWHERE event_name IN ('Receive Invoice'))) \n    AS \"Average cycle time\"\n\t\nFROM \"defaultview-545\"\nWHERE event_name IN ('Create PO Item', 'Receive Invoice')\nGROUP BY 1\nORDER BY 1 ASC NULLS FIRST\nFILL TIMESERIES('MONTH'), NULL"
    },
    {
        "filename": "ce0a335a7b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Set Deletion Flag WITHOUT planned order reference",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Deletion Flag')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the table 'defaultview-183', select the average time difference between:\n- The last end_time value where the event_name is 'Deletion Flag' \n- The first end_time value where the event_name is 'Create Process Order'\nOnly consider rows where the 'Planned Order Number' column is NULL.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME = 'Deletion Flag'\n        )\n    ) - (\n      SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME = 'Create Process Order'\n        )\n    )\n  )\nFROM\n  \"defaultview-183\"\nWHERE\n  \"Planned Order Number\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME = 'Deletion Flag'\n        )\n    ) - (\n      SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME = 'Create Process Order'\n        )\n    )\n  )\nFROM\n  \"defaultview-183\"\nWHERE\n  \"Planned Order Number\" IS NULL"
    },
    {
        "filename": "7d57352489",
        "split": "test",
        "name": "Late Delivery after on-time release",
        "query": "SELECT (count(case_id)\nFILTER (\nWHERE \"Actual Delivery Date\" - \"Scheduled Finish Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\nFROM \"defaultview-183\"\nWhere \"Actual Release Date\" - \"Scheduled Release Date\" = DURATION '0seconds'\nAND \"Actual Finish Date\" is not null\nAND \"Scheduled Finish Date\" is not null\nAND \"Actual Start Date\" is not null\nAND \"Scheduled Start Date\" is not null\n\n\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-183' table, select the count of case_id where the Actual Delivery Date is greater than the Scheduled Finish Date by more than 0 seconds. Divide this count by the total count of case_id. Multiply the result by 100 to get the percentage. Only consider rows where:\n- Actual Release Date equals Scheduled Release Date \n- Actual Finish Date is not null\n- Scheduled Finish Date is not null\n- Actual Start Date is not null\n- Scheduled Start Date is not null",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER(\n\tWHERE \"Actual Delivery Date\" > \"Scheduled Finish Date\"\n    ) / \nCOUNT(case_id)\n*100\nFROM \"defaultview-183\"\nWHERE (\"Actual Release Date\" = \"Scheduled Release Date\" ) AND \n\"Actual Finish Date\" IS NOT NULL AND \n\"Scheduled Finish Date\" IS NOT NULL AND\n\"Actual Start Date\" IS NOT NULL AND \n\"Scheduled Start Date\" IS NOT NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER(\n\tWHERE \"Actual Delivery Date\" > \"Scheduled Finish Date\"\n    ) / \nCOUNT(case_id)\n*100\nFROM \"defaultview-183\"\nWHERE (\"Actual Release Date\" = \"Scheduled Release Date\" ) AND \n\"Actual Finish Date\" IS NOT NULL AND \n\"Scheduled Finish Date\" IS NOT NULL AND\n\"Actual Start Date\" IS NOT NULL AND \n\"Scheduled Start Date\" IS NOT NULL"
    },
    {
        "filename": "7afbed3e6c",
        "split": "test",
        "name": "Avg. Cycle Time (GRN to Post Invoice) by PO Purchasing Group",
        "query": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\",\n\"PO Purchasing Group Text\" AS \"Purchasing Group\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the table 'defaultview-124', select the count of CASE_ID column values as 'No. of Cases'. \nThen select the average of the time difference between the last END_TIME value where EVENT_NAME is 'Create FI Invoice' and the last END_TIME value where EVENT_NAME is 'Create Goods Receipt' as 'Avg. Cycle Time'.\nThen select the 'PO Purchasing Group Text' column value as 'Purchasing Group'.\nGroup the results by the 'PO Purchasing Group Text' column.\nOrder the results by descending 'No. of Cases' values.\nLimit the results to 50 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \n count(CASE_ID)as \"No. of Cases\"\n ,AVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\"\n,\"PO Purchasing Group Text\" as \"Purchasing Group\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \n count(CASE_ID)as \"No. of Cases\"\n ,AVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\"\n,\"PO Purchasing Group Text\" as \"Purchasing Group\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50"
    },
    {
        "filename": "ebfb4c5190",
        "split": "test",
        "name": "_Average timesheet approval time",
        "query": "\nSELECT\nSUM(\"TSR_AVGCreationTillApprovalTime\" * \"TSR_Count\")\n/\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time from creation to approval for all tickets in the defaultview-197 table. \nFirst, multiply the TSR_AVGCreationTillApprovalTime column by the TSR_Count column for each ticket to get the total time from creation to approval for that ticket. \nThen sum all of those total times. \nNext, sum the TSR_Count column to get the total number of tickets.\nFinally, divide the total time sum by the total ticket count sum to calculate the average time from creation to approval for all tickets.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM (\n    (\n      SELECT\n        SUM (EVENT \"AvgCreationTillReleaseTime\"() )\n      OVER (PARTITION BY TICKET_ID)\n    ) + (\n      SELECT\n        SUM (EVENT \"AvgReleaseTillApprovalTime\"() )\n      OVER (PARTITION BY TICKET_ID)\n    )\n  )\n  / SUM (\"TSR_Count\" )\nFROM\n  \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM (\n    (\n      SELECT\n        SUM (EVENT \"AvgCreationTillReleaseTime\"() )\n      OVER (PARTITION BY TICKET_ID)\n    ) + (\n      SELECT\n        SUM (EVENT \"AvgReleaseTillApprovalTime\"() )\n      OVER (PARTITION BY TICKET_ID)\n    )\n  )\n  / SUM (\"TSR_Count\" )\nFROM\n  \"defaultview-197\""
    },
    {
        "filename": "d62720137d",
        "split": "test",
        "name": "Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the defaultview-57 table where the value in the Last FI Invoice Item Due Date column is less than the value in the Last FI Invoice Item Clearing Date column. Divide that count by the total number of case_id rows in the defaultview-57 table where the Last FI Invoice Item Clearing Date column is not null. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (WHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\") / \nCOUNT(case_id) FILTER (WHERE \"Last FI Invoice Item Clearing Date\" IS NOT NULL) \n* 100\nFROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (WHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\") / \nCOUNT(case_id) FILTER (WHERE \"Last FI Invoice Item Clearing Date\" IS NOT NULL) \n* 100\nFROM \"defaultview-57\""
    },
    {
        "filename": "aa7861486e",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-133\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the 'Inv. Converted USD Amount' column for all rows in the 'defaultview-133' table where the value in the 'Last Inv. Item Clearing Date' column is NULL.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"Inv. Converted USD Amount\")\nFROM \"defaultview-133\" \nWHERE \"Last Inv. Item Clearing Date\" IS NULL\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"Inv. Converted USD Amount\")\nFROM \"defaultview-133\" \nWHERE \"Last Inv. Item Clearing Date\" IS NULL\n                "
    },
    {
        "filename": "935da015df",
        "split": "test",
        "name": "Percentage of not Approved Timesheets by Activity Type",
        "query": "SELECT\n(\nCount(distinct TimesheetRecord) \nFILTER \n(WHERE event_name = 'Create Timesheet Record')\n-\n Count(distinct TimesheetRecord) \nFILTER \n(WHERE event_name IN ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record'))\n)\n/ Count(distinct TimesheetRecord) * 100 AS \"% of not Approved Timesheets\",\n\n\"ActivityType\"  AS \"Activity Type\"\n\n\nFROM FLATTEN(\"defaultview-197\")\n\nORDER BY 1 DESC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of distinct TimesheetRecord events where event_name is 'Create Timesheet Record' from the defaultview-197 table. \nSubtract from this count the number of distinct TimesheetRecord events where event_name is in the set ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record') from the defaultview-197 table.\nDivide the result by the total count of distinct TimesheetRecord events from the defaultview-197 table and multiply by 100 to get the percentage of Timesheet Records that are not yet approved. \nLabel this calculated percentage as '% of not Approved Timesheets'.\nAlso select the ActivityType column from the defaultview-197 table.\nOrder the results by descending '% of not Approved Timesheets'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT(DISTINCT \"ActivityInstanceId\") FILTER (\n      WHERE \"event_name\" = 'Create Timesheet Record')\n/ COUNT(DISTINCT \"ActivityInstanceId\") * 100 AS \"% of not Approved Timesheets\",  \nActivityType \n\nFROM FLATTEN(\"defaultview-197\") \nWHERE  event_name  IN ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record') \n--GROUP BY 2\nORDER BY 1 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT(DISTINCT \"ActivityInstanceId\") FILTER (\n      WHERE \"event_name\" = 'Create Timesheet Record')\n/ COUNT(DISTINCT \"ActivityInstanceId\") * 100 AS \"% of not Approved Timesheets\",  \nActivityType \n\nFROM FLATTEN(\"defaultview-197\") \nWHERE  event_name  IN ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record') \n--GROUP BY 2\nORDER BY 1 DESC\n"
    },
    {
        "filename": "fdbbf9f7fc",
        "split": "test",
        "name": "% of automatic delivery items changes",
        "query": "SELECT\n    COUNT(\"event_name\") FILTER (\n        WHERE BEHAVIOR (\n              \"EventCreatedByUserType\"  IN ('System','Service','Batch Job')\n            ) AS created_with_dialog MATCHES (created_with_dialog)\n    ) / COUNT(\"event_name\") * 100\nFROM FLATTEN(\"defaultview-290\")\nWHERE (event_name LIKE 'Change Delivery%' \n\tOR event_name LIKE 'Update Delivery%')",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of events with name starting with 'Change Delivery' or 'Update Delivery' in the table 'defaultview-290' where the column 'EventCreatedByUserType' has the value 'System', 'Service' or 'Batch Job'. Divide this count by the total number of events with name starting with 'Change Delivery' or 'Update Delivery' and multiply by 100 to get the percentage of such events.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (EVENT_Name) /  COUNT (EVENT_Name)   FILTER (where EVENT_Name LIKE 'Change Delivery%' OR EVENT_Name LIKE 'Update Delivery%') * 100\nFROM FLATTEN(\"defaultview-290\")\nWHERE\nEVENT_NAME  LIKE 'Change Delivery%' OR EVENT_NAME  LIKE 'Update Delivery%'\nAND \"EventCreatedByUserType\" IN ('System', 'Service', 'Batch Job')\n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (EVENT_Name) /  COUNT (EVENT_Name)   FILTER (where EVENT_Name LIKE 'Change Delivery%' OR EVENT_Name LIKE 'Update Delivery%') * 100\nFROM FLATTEN(\"defaultview-290\")\nWHERE\nEVENT_NAME  LIKE 'Change Delivery%' OR EVENT_NAME  LIKE 'Update Delivery%'\nAND \"EventCreatedByUserType\" IN ('System', 'Service', 'Batch Job')\n\n                "
    },
    {
        "filename": "d1bd2930bd",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average duration of process instances in the 'defaultview-183' table by subtracting the value in the 'Basic Finish Date' column from the value in the 'Basic Start Date' column for each row, then calculating the average of all those durations.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t\"Basic Finish Date\" - \"Basic Start Date\"\n   )\nFROM \"defaultview-183\"\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t\"Basic Finish Date\" - \"Basic Start Date\"\n   )\nFROM \"defaultview-183\"\n"
    },
    {
        "filename": "005b27854f",
        "split": "test",
        "name": "Top 10 Customers with highest Open Receivables Amounts",
        "query": "SELECT\n     \"AR_CustomerName\"  AS \"Customer\",\n    SUM(\"AmountInCompanyCodeCurrency\" ) as \"Amount\"\nFROM FLATTEN(\"defaultview-197\")\nWHERE \"ClearingDate\"  IS NULL\nAND event_name =  'Create Accounts Receivable' \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the Customer column as 'Customer' and sum the AmountInCompanyCodeCurrency column as 'Amount' from the defaultview-197 table. Filter to only include rows where the ClearingDate column is null and the event_name column equals 'Create Accounts Receivable'. Group the results by the Customer column. Order the results by the Amount column in descending order. Limit the results to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Customer\", SUM(\"AmountInCompanyCodeCurrency\") as \"Amount\"\nFROM FLATTEN(\"defaultview-197\")\nWHERE (\"ClearingDate\" IS NULL)\n\tAND event_name = 'Create Accounts Receivable'\nGROUP BY 1\norder by 2 desc \nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Customer\", SUM(\"AmountInCompanyCodeCurrency\") as \"Amount\"\nFROM FLATTEN(\"defaultview-197\")\nWHERE (\"ClearingDate\" IS NULL)\n\tAND event_name = 'Create Accounts Receivable'\nGROUP BY 1\norder by 2 desc \nLIMIT 10"
    },
    {
        "filename": "4f97b966fc",
        "split": "test",
        "name": "Top Vendors with worse Payments Terms on their invoice",
        "query": "SELECT \nSUM (\"Last FI Invoice Item Gross Amount in USD\") \nFILTER (WHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \nELSE \"PO Cash Discount Days 1\" END)) AS \"Payment Terms Differences where PO is better (Amount)\"\n,\"PO Vendor Name\"\nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the column 'Last FI Invoice Item Gross Amount in USD' for all rows in the 'defaultview-124' table where the value in the column 'Last FI Invoice Item Cash Discount Days 1' is less than either the value in the column 'PO Cash Discount Days 1' or 0 if that column is null. Group the results by the values in the column 'PO Vendor Name' and name the summed column 'Payment Terms Differences where PO is better (Amount)'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"Last FI Invoice Item Gross Amount in USD\")\nIF ( \"Last FI Invoice Item Cash Discount Days 1\" >\n     COALESCE (\"PO Cash Discount Days 1\",0),1=1,1=0 ) FILSYNCH ,\n\"PO Vendor Name\"\n,\"Last PO Payment Terms\"\n,CASE \n\tWHEN\n \n    (\"Last FI Invoice Item Cash Discount Days 1\" >\n     COALESCE (\"PO Cash Discount Days 1\",0))\nTHEN 'Payment Terms Differences'\n  END AS \"Payment Terms Differences where PO is better (Amount)\"\nFROM \"defaultview-124\"\nGROUP BY 2,3\nORDER BY 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"Last FI Invoice Item Gross Amount in USD\")\nIF ( \"Last FI Invoice Item Cash Discount Days 1\" >\n     COALESCE (\"PO Cash Discount Days 1\",0),1=1,1=0 ) FILSYNCH ,\n\"PO Vendor Name\"\n,\"Last PO Payment Terms\"\n,CASE \n\tWHEN\n \n    (\"Last FI Invoice Item Cash Discount Days 1\" >\n     COALESCE (\"PO Cash Discount Days 1\",0))\nTHEN 'Payment Terms Differences'\n  END AS \"Payment Terms Differences where PO is better (Amount)\"\nFROM \"defaultview-124\"\nGROUP BY 2,3\nORDER BY 1"
    },
    {
        "filename": "59a5b5c1d4",
        "split": "test",
        "name": "Projects by Project Profile",
        "query": "SELECT count(case_id) AS \"# Projects\", \nProject_ProfileCode AS \"Project Profile\"\nFROM \"defaultview-197\"\nORDER BY 1 DESC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id values (representing projects) in the table defaultview-197. Group the results by Project_ProfileCode (the project profile column). Order the results by descending count of case_id values. This will show the project profiles with the highest number of associated projects at the top.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) AS \"No. of Projects\", Project_ProfileCode AS \"Project Profile\"\nFROM \"defaultview-197\"\nGROUP BY 2\nORDER BY 1 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) AS \"No. of Projects\", Project_ProfileCode AS \"Project Profile\"\nFROM \"defaultview-197\"\nGROUP BY 2\nORDER BY 1 DESC\n"
    },
    {
        "filename": "defa1f2d35",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Business Line",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Division\"\nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records (Cases) in the defaultview-183 table. \nCalculate the average time difference (Cycle Time) between the Basic Finish Date and Basic Start Date column values across all records.\nGroup the results by the Division column. \nSort the results in descending order by the Cases count.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) as \"Cases\", \nAVG(\"Basic Finish Date\" - \"Basic Start Date\") as \"Cycle Time\", \n\"Division\"\nFROM \"defaultview-183\"\nGroup by 3\norder by 1 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) as \"Cases\", \nAVG(\"Basic Finish Date\" - \"Basic Start Date\") as \"Cycle Time\", \n\"Division\"\nFROM \"defaultview-183\"\nGroup by 3\norder by 1 desc"
    },
    {
        "filename": "92022651c1",
        "split": "test",
        "name": "SOL-1682 Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n        WHERE (SELECT COUNT(event_name)\n                        WHERE (\"Last Inv. Item Clearing Date\" > \"Last Inv. Item Due Date\")) > 0\n        )\n/ COUNT (case_id) * 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-59' table where the number of event_name values is greater than 0 for the condition where the 'Last Inv. Item Clearing Date' column value is greater than the 'Last Inv. Item Due Date' column value. Divide this count by the total number of case_id rows and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (CASE_ID) FILTER (WHERE (\n(SELECT COUNT (EVENT_NAME))\n)))/\nCOUNT (CASE_ID) * 100\nFROM \"defaultview-59\"\nWHERE \"Last Inv. Item Clearing Date\" > \"Last Inv. Item Due Date\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (CASE_ID) FILTER (WHERE (\n(SELECT COUNT (EVENT_NAME))\n)))/\nCOUNT (CASE_ID) * 100\nFROM \"defaultview-59\"\nWHERE \"Last Inv. Item Clearing Date\" > \"Last Inv. Item Due Date\""
    },
    {
        "filename": "ef3533bece",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Controlling Area",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Controlling Area\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of process orders (CASE_ID column) for each Controlling Area value in the defaultview-183 table. Sort the results in descending order by the count of process orders.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(CASE_ID) AS \"No. of Process Order\",\n\"CO Controlling Area\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(CASE_ID) AS \"No. of Process Order\",\n\"CO Controlling Area\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC"
    },
    {
        "filename": "7a820c8c23",
        "split": "test",
        "name": "Ratio of tickets with rework",
        "query": "SELECT COUNT(case_id) \nFILTER (\n\tWHERE (SELECT count(event_name) WHERE event_name = 'Change Status to In Progress' ) > 1 )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-217\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-217' table where the number of 'Change Status to In Progress' events is greater than 1. Divide this count by the total number of case_id rows in the table and multiply by 100 to get the percentage of cases that have had the 'Change Status to In Progress' event happen more than once.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(CASE_ID) FILTER(\n\tWHERE (\n    \tSELECT BOOL_OR (EVENT_NAME = 'Change Status to In Progress')\n        FROM FLATTEN(\"defaultview-217\")\n        ) \n\n\tAND (\n\t\tSELECT BOOL_OR (Event_order_number > 1) \n\t\tFROM FLATTEN(\"defaultview-217\")\n\t\t))\n    )\n/ \nCOUNT(CASE_ID) \n* 100\nFROM FLATTEN(\"defaultview-217\")\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(CASE_ID) FILTER(\n\tWHERE (\n    \tSELECT BOOL_OR (EVENT_NAME = 'Change Status to In Progress')\n        FROM FLATTEN(\"defaultview-217\")\n        ) \n\n\tAND (\n\t\tSELECT BOOL_OR (Event_order_number > 1) \n\t\tFROM FLATTEN(\"defaultview-217\")\n\t\t))\n    )\n/ \nCOUNT(CASE_ID) \n* 100\nFROM FLATTEN(\"defaultview-217\")\n                "
    },
    {
        "filename": "57824bbefa",
        "split": "test",
        "name": "First call resolution ratio",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT COUNT(DISTINCT event_name)) = (SELECT COUNT(event_name))\n\t)\n/ COUNT(case_id)\n*100\n\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-545' table where the number of unique event_name values equals the total number of event_name values. Divide this count by the total number of case_id rows and multiply by 100 to get the percentage of case_id rows meeting this condition.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n  (SELECT\n     COUNT(DISTINCT event_name))\n  = (SELECT\n     COUNT(event_name)))\n/\nCOUNT(case_id) * 100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n  (SELECT\n     COUNT(DISTINCT event_name))\n  = (SELECT\n     COUNT(event_name)))\n/\nCOUNT(case_id) * 100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "c428caeb29",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Plant",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Plant\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of CASE_ID (process orders) in the defaultview-183 table grouped by Plant column. Sort the results in descending order by the number of process orders.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(DISTINCT \"CASE_ID\") AS \"No OF Orders\", \"Plant\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC NULLS LAST\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(DISTINCT \"CASE_ID\") AS \"No OF Orders\", \"Plant\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC NULLS LAST\n"
    },
    {
        "filename": "1898593acc",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Receive Invoice')",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time between the end of the 'Create PO Item' event and the end of the 'Receive Invoice' event for all process instances in the 'defaultview-431' table where both of these events occurred. To do this:\n\n1. For each process instance, find the timestamp of the last 'Receive Invoice' event (call this LAST_RECEIVE_INVOICE)\n2. For each process instance, find the timestamp of the first 'Create PO Item' event (call this FIRST_CREATE_PO_ITEM)\n3. Subtract FIRST_CREATE_PO_ITEM from LAST_RECEIVE_INVOICE to get the time between these events for each process instance \n4. Take the average of these time differences across all process instances",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT LAST (END_TIME)\n    WHERE EVENT_NAME = 'Receive Invoice') \n    - (SELECT FIRST (END_TIME)\n    WHERE EVENT_NAME = 'Create PO Item')) \n\tAS \"Avg. Time Betw. 'Create PO Item' & 'Receive Invoice'\" \n      \nFROM \"defaultview-431\"\nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Receive Invoice')\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT LAST (END_TIME)\n    WHERE EVENT_NAME = 'Receive Invoice') \n    - (SELECT FIRST (END_TIME)\n    WHERE EVENT_NAME = 'Create PO Item')) \n\tAS \"Avg. Time Betw. 'Create PO Item' & 'Receive Invoice'\" \n      \nFROM \"defaultview-431\"\nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Receive Invoice')\n                "
    },
    {
        "filename": "ec1afff845",
        "split": "test",
        "name": "Number of invoices with \"Last Inv. Item Terms of Payment Key\" column is NULL",
        "query": "SELECT COUNT(case_id), \"Last Inv. Item Terms of Payment Key\"\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Terms of Payment Key\" IS NULL",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of rows in the defaultview-225 table where the value in the Last Inv. Item Terms of Payment Key column is NULL.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\"case id\")\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Terms of Payment Key\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\"case id\")\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Terms of Payment Key\" IS NULL"
    },
    {
        "filename": "717545c103",
        "split": "test",
        "name": "\u00d8 Automation Rate of Payment Events",
        "query": "SELECT\n  SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            (\n              \"Event Created By User Type\" IN ('System', 'Service')\n              AND (event_name LIKE '%Payment%')\n            )\n        )\n    )\n  ) / SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            event_name LIKE '%Payment%' AND \"Event Created By User Type\" IS NOT NULL\n        )\n    )\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of Payment events created by System or Service user types in the defaultview-225 table.\n\n1. Select the sum of counts of case_id for Payment events created by System or Service users from the defaultview-225 table. \n2. Select the sum of counts of case_id for all Payment events where Event Created By User Type is not null from the defaultview-225 table.\n3. Divide the result of step 1 by the result of step 2. \n4. Multiply the result of step 3 by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n(SUM (SELECT COUNT (CASE_ID) FILTER (\n\tWHERE EVENT_CREATED_BY_USER_TYPE IN ('System','Service'))))\n/ (SUM (SELECT COUNT (CASE_ID) FILTER (\n\tWHERE EVENT_CREATED_BY_USER_TYPE IS NOT NULL))) \n* 100\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n(SUM (SELECT COUNT (CASE_ID) FILTER (\n\tWHERE EVENT_CREATED_BY_USER_TYPE IN ('System','Service'))))\n/ (SUM (SELECT COUNT (CASE_ID) FILTER (\n\tWHERE EVENT_CREATED_BY_USER_TYPE IS NOT NULL))) \n* 100\nFROM \"defaultview-225\""
    },
    {
        "filename": "aef1c8c1d7",
        "split": "test",
        "name": "Top 10 Customers with highest Invoiced Amounts",
        "query": "SELECT\n    AR_CustomerName AS \"Customer\",\n    SUM(\"AR_InvoicedAmountInGlobalCurrency\") AS \"Amount\"\nFROM \"defaultview-222\"\nWHERE AR_CustomerName IS NOT NULL\n\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the Customer column, aliased as 'Customer', and the sum of the Amount column, aliased as 'Amount', from the 'defaultview-222' table. Filter to only include rows where the Customer column is not null. Group the results by the Customer column. Order the results by the Amount column in descending order. Limit the results to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  Customer AS \"Customer\",\n  SUM(Amount) AS \"Amount\"\nFROM\n  \"defaultview-222\"\nWHERE\n  (Customer IS NOT NULL)\nGROUP BY 1\nORDER BY\n  2 DESC\nLIMIT\n  10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  Customer AS \"Customer\",\n  SUM(Amount) AS \"Amount\"\nFROM\n  \"defaultview-222\"\nWHERE\n  (Customer IS NOT NULL)\nGROUP BY 1\nORDER BY\n  2 DESC\nLIMIT\n  10"
    },
    {
        "filename": "8092de898c",
        "split": "test",
        "name": "Manual Change Rate by Top 10 Material",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocItemMaterial\" AS \"SD Material\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the defaultview-383 table, select the count of distinct case_id values as '# of SDs'. \nThen calculate the percentage of case_id values where the BEHAVIOR of EventCreatedByUserType is 'Dialog' and ChangeType is 'Update' matches the created_with_dialog column. \nLabel this as 'Change rate'.\nAlso select the SalesDocItemMaterial column as 'SD Material'.\nOrder the results by the '# of SDs' in descending order.\nLimit the results to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IS 'Dialog'\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog\n      ) IS TRUE\n  ) / COUNT(case_id) * 100 AS \"Change rate\",\n  \"SD Material\" AS \"SD Material\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IS 'Dialog'\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog\n      ) IS TRUE\n  ) / COUNT(case_id) * 100 AS \"Change rate\",\n  \"SD Material\" AS \"SD Material\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10"
    },
    {
        "filename": "487549492d",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term'))))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases in the 'defaultview-59' table where the event 'Update Payment Term' occurred at least once. Divide this count by the total number of cases in the table and multiply by 100 to get the percentage of cases where this event occurred.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\"case_id\") FILTER (\n\tWHERE (SELECT BOOL_OR(event_name = 'Update Payment Term'))\n)\n/ COUNT(\"case_id\")\n* 100\nFROM \"defaultview-59\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\"case_id\") FILTER (\n\tWHERE (SELECT BOOL_OR(event_name = 'Update Payment Term'))\n)\n/ COUNT(\"case_id\")\n* 100\nFROM \"defaultview-59\"\n"
    },
    {
        "filename": "8deb242ea5",
        "split": "test",
        "name": "_Invoice cancellation rate",
        "query": "\nSELECT\n(\nSUM(\"BillingDoc_TotalCancelled\")\n/\nSUM(\"BillingDoc_TotalCount\")\n)\n* 100\n\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cancelled billing documents from the defaultview-197 table.\nTake the sum of values in the BillingDoc_TotalCancelled column. \nTake the sum of values in the BillingDoc_TotalCount column.\nDivide the sum of BillingDoc_TotalCancelled by the sum of BillingDoc_TotalCount.\nMultiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n(\nsum(\"BillingDoc_TotalCancelled\") \n/\nsum(\"BillingDoc_TotalCount\")\n)\n* 100\nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n(\nsum(\"BillingDoc_TotalCancelled\") \n/\nsum(\"BillingDoc_TotalCount\")\n)\n* 100\nFROM \"defaultview-197\""
    },
    {
        "filename": "df5561bb21",
        "split": "test",
        "name": "Confirmed process orders",
        "query": "SELECT COUNT(event_name)\n    FILTER(WHERE event_name MATCHES ('Confirmed'))\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of rows in the 'defaultview-183' table where the value in the 'event_name' column is exactly 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(event_name) \nFILTER(WHERE event_name = 'Confirmed')\nAS \"#People Confirmed\"\n\nFROM FLATTEN(\"defaultview-183\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(event_name) \nFILTER(WHERE event_name = 'Confirmed')\nAS \"#People Confirmed\"\n\nFROM FLATTEN(\"defaultview-183\")"
    },
    {
        "filename": "6ff4a8f764",
        "split": "test",
        "name": "Late deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the defaultview-57 table where the day portion of the Last GR Creation Date column is greater than the PO Item Last Requested Delivery Date column and the PO Item Delivery Completed column equals 'Yes'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\ncount(case_id) FILTER(\n    WHERE (DATE_TRUNC('day', (\nCREATE_DATE(\"transaction\")\n  FILTER (WHERE \"Creating PO Line\" = 'Yes')\n))) > DATE_TRUNC('day', (\n    SELECT FIRST (DATE_TRUNC('day', \"PO Item Last Requested Delivery Date\")))\n        ))\n  AND \"PO Item Delivery Completed\" = 'Yes' )\n\nFROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\ncount(case_id) FILTER(\n    WHERE (DATE_TRUNC('day', (\nCREATE_DATE(\"transaction\")\n  FILTER (WHERE \"Creating PO Line\" = 'Yes')\n))) > DATE_TRUNC('day', (\n    SELECT FIRST (DATE_TRUNC('day', \"PO Item Last Requested Delivery Date\")))\n        ))\n  AND \"PO Item Delivery Completed\" = 'Yes' )\n\nFROM \"defaultview-57\""
    },
    {
        "filename": "6ad1f0922e",
        "split": "test",
        "name": "\u00d8 SFC Initial Quantity",
        "query": "SELECT AVG(\"SFC Initial Quantity\") FROM \"defaultview-270\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average value of the column named 'SFC Initial Quantity' from the table named 'defaultview-270'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\"SFC Initial Quantity\")\nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\"SFC Initial Quantity\")\nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "b371622da1",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Requested Delivery Date\"\n\t\tAND \"PO Delivery Status\" = 'Received'\n\t)\n/\nCOUNT(case_id) FILTER (\n\tWHERE \"PO Delivery Status\" = 'Received'\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases where the truncated date of the last GR creation is after the requested delivery date of the purchase order and the delivery status of the purchase order is 'Received'. Divide this count by the total number of cases where the delivery status of the purchase order is 'Received' and multiply by 100. This will give the percentage of late deliveries for received purchase orders.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (WHERE (DATE_TRUNC('day', \"Last GR Creation\") >  \"PO Requested Delivery Date\"\n\t) AND (\"PO Delivery Status\" = 'Received' ))) \n/ COUNT (CASE_ID) FILTER (WHERE \"PO Delivery Status\" = 'Received' ) * 100\nFROM \"defaultview-278\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (WHERE (DATE_TRUNC('day', \"Last GR Creation\") >  \"PO Requested Delivery Date\"\n\t) AND (\"PO Delivery Status\" = 'Received' ))) \n/ COUNT (CASE_ID) FILTER (WHERE \"PO Delivery Status\" = 'Received' ) * 100\nFROM \"defaultview-278\"\n                "
    },
    {
        "filename": "8977266362",
        "split": "test",
        "name": "WC Impact of Invoices with immediate payment terms",
        "query": "\nSELECT\nSUM(\"Last FI Invoice Item Gross Amount in USD\") FILTER(\n\tWHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) *15*0.04/365\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the 'Last FI Invoice Item Gross Amount in USD' column in the 'defaultview-124' table for all rows where the 'Last FI Invoice Item Cash Discount Days 1' column is either NULL or 0. Multiply the sum by 15, then multiply by 0.04, then divide by 365.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM(\"Last FI Invoice Item Gross Amount in USD\") \nFILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL \n                     OR \"Last FI Invoice Item Cash Discount Days 1\" =0)\n* 15\n* 0.04\n/ 365\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM(\"Last FI Invoice Item Gross Amount in USD\") \nFILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL \n                     OR \"Last FI Invoice Item Cash Discount Days 1\" =0)\n* 15\n* 0.04\n/ 365\nFROM \"defaultview-124\""
    },
    {
        "filename": "b3b2c64a6b",
        "split": "test",
        "name": "Number of Billing Requests rejected",
        "query": "SELECT \nCOUNT(DISTINCT \"SalesDocument\") FILTER (\n\tWHERE event_name LIKE 'Reject Billing Request%')\nFROM FLATTEN(\"defaultview-197\")",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of unique SalesDocument records from the defaultview-197 table where the event_name column contains a value starting with 'Reject Billing Request'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(DISTINCT \"SalesDocument\" ) \nFROM FLATTEN(\"defaultview-197\") \nWHERE event_name MATCHES ('Reject Billing Request%')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(DISTINCT \"SalesDocument\" ) \nFROM FLATTEN(\"defaultview-197\") \nWHERE event_name MATCHES ('Reject Billing Request%')"
    },
    {
        "filename": "f8140fe8c4",
        "split": "test",
        "name": "Number of Tickets Completed/Rejected",
        "query": "SELECT \n\tDATE_TRUNC('month', \n    \t(SELECT FIRST(end_time) \n        WHERE event_name IN ('Change Status to Closed'))) AS \"Month when Issue Closed\",\n\tCOUNT(case_id) \n    FILTER (WHERE event_name MATCHES(('Change Status to Closed'))) AS \"# Cases\"\nFROM \"defaultview-217\"\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the month when the first 'Change Status to Closed' event occurred for each case from the 'defaultview-217' table. Count the number of cases that had a 'Change Status to Closed' event in that month. Group the results by month and order by month in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT DATE_TRUNC('month',(\nSELECT FIRST(END_TIME)\nFILTER (WHERE EVENT_NAME IN ('Change Status to Closed'))\n)) AS \"First Closed\", \nCOUNT (CASE_ID) AS \"# of Cases\"\nFROM \"defaultview-217\"\nWHERE END_TIME MATCHES \n('Change Status to Closed'~>) \n--\t('Create Change Order')~>'Create PO'~> ('Goods Receipt')-->'Sales Order Processed'~>'Change Status to Closed')OR \n--('Create Invoice')~>'Change Status to Closed') \n--OR ('Sales Order Processed'~> 'Change Status to Closed')\nGROUP BY 1\nORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT DATE_TRUNC('month',(\nSELECT FIRST(END_TIME)\nFILTER (WHERE EVENT_NAME IN ('Change Status to Closed'))\n)) AS \"First Closed\", \nCOUNT (CASE_ID) AS \"# of Cases\"\nFROM \"defaultview-217\"\nWHERE END_TIME MATCHES \n('Change Status to Closed'~>) \n--\t('Create Change Order')~>'Create PO'~> ('Goods Receipt')-->'Sales Order Processed'~>'Change Status to Closed')OR \n--('Create Invoice')~>'Change Status to Closed') \n--OR ('Sales Order Processed'~> 'Change Status to Closed')\nGROUP BY 1\nORDER BY 1 ASC"
    },
    {
        "filename": "a6cf9b8367",
        "split": "test",
        "name": "Immediate WC Impact grouped by PO Vendor Name",
        "query": "SELECT SUM (\"Last FI Invoice Item Gross Amount Document Curr.\") \nFILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL \nOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) * 15 * 0.04 / 365 \nAS \"WC Impact of Invoices with immediate payment terms\", \"PO Vendor Name\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the sum of the 'Last FI Invoice Item Gross Amount Document Curr.' column from the 'defaultview-124' table. Filter the data to only include rows where the 'Last FI Invoice Item Cash Discount Days 1' column is either null or 0. Multiply the sum by 15, then multiply by 0.04. Finally, divide by 365. Label this calculated column as 'WC Impact of Invoices with immediate payment terms'. Also select the 'PO Vendor Name' column. Order the results by the calculated column in descending order, with null values last. Limit the results to 30 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"Last FI Invoice Item Gross Amount Document Curr.\") FILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL OR \"Last FI Invoice Item Cash Discount Days 1\" =0) * 15 \n* 0.04\n/ 365\nas \"WC Impact of Invoices with immediate payment terms\"\n,\"PO Vendor Name\"\n\nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"Last FI Invoice Item Gross Amount Document Curr.\") FILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL OR \"Last FI Invoice Item Cash Discount Days 1\" =0) * 15 \n* 0.04\n/ 365\nas \"WC Impact of Invoices with immediate payment terms\"\n,\"PO Vendor Name\"\n\nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30"
    },
    {
        "filename": "8411df93d4",
        "split": "test",
        "name": "Automation Rate Technically completed",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Technically completed'\n\n\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of 'Technically completed' events that were not created by users of type 'Dialog' from the 'defaultview-183' table. \nFirst, count the total number of 'Technically completed' events in the table. \nThen, filter to only count 'Technically completed' events that were not created by users of type 'Dialog'. \nDivide the filtered count by the total count and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT(case_id) FILTER (\n     \tWHERE event_name = 'Technically completed'\n\t) \n\t/\n  \tCOUNT(case_id) * 100\n    \nFROM \"defaultview-183\"\n\nWHERE\n\tCreatedByUser = 'Dialog' ->> user_type\n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT(case_id) FILTER (\n     \tWHERE event_name = 'Technically completed'\n\t) \n\t/\n  \tCOUNT(case_id) * 100\n    \nFROM \"defaultview-183\"\n\nWHERE\n\tCreatedByUser = 'Dialog' ->> user_type\n\n                "
    },
    {
        "filename": "e9259d68f7",
        "split": "test",
        "name": "Olap Table",
        "query": "SELECT case_id, \n\"Planned Release Date\", \n\"Scheduled Release date\",\n\"Actual Release Date\", \n\"Scheduled Start Date\", \n\"Actual Start Date\",     \n\"Scheduled Finish Date\", \n\"Confirmed Finish Date\",\n\"Actual Finish Date\", \n\"Basic Start Date\",\n--\"Basic End Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",   \n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"\nFROM \"defaultview-183\"\nLimit 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the first 10 rows from the table named 'defaultview-183'. \nReturn the following columns:\n- case_id: the case identifier\n- Planned Release Date: the planned date when the case is released\n- Scheduled Release date: the scheduled date when the case is released \n- Actual Release Date: the actual date when the case is released\n- Scheduled Start Date: the scheduled start date of the case\n- Actual Start Date: the actual start date of the case\n- Scheduled Finish Date: the scheduled finish date of the case\n- Confirmed Finish Date: the confirmed finish date of the case\n- Actual Finish Date: the actual finish date of the case\n- Basic Start Date: the basic start date of the case\n- Planned Order Opening Date: the planned date when the order is opened\n- Planned Order Start Date: the planned start date of the order  \n- Actual Delivery Date: the actual delivery date \n- Planned Order Actual Delivery Date: the planned actual delivery date of the order\n- Basic Finish Date: the basic finish date of the case\n",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  CASE_ID, \n  \"Planned Release Date\",\n  \"Scheduled Release date\" ,\n  \"Actual Release Date\" ,\n  \"Scheduled Start Date\" ,\n  \"Actual Start Date\" ,\n  \"Scheduled Finish Date\" ,\n  \"Confirmed Finish Date\" ,\n  \"Actual Finish Date\" ,\n  \"Basic Start Date\" ,\n  \"Planned Order Opening Date\" ,\n  \"Planned Order Start Date\" ,\n  \"Actual Delivery Date\" ,\n  \"Planned Order Actual Delivery Date\",\n  \"Basic Finish Date\" \nFROM \"defaultview-183\" LIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  CASE_ID, \n  \"Planned Release Date\",\n  \"Scheduled Release date\" ,\n  \"Actual Release Date\" ,\n  \"Scheduled Start Date\" ,\n  \"Actual Start Date\" ,\n  \"Scheduled Finish Date\" ,\n  \"Confirmed Finish Date\" ,\n  \"Actual Finish Date\" ,\n  \"Basic Start Date\" ,\n  \"Planned Order Opening Date\" ,\n  \"Planned Order Start Date\" ,\n  \"Actual Delivery Date\" ,\n  \"Planned Order Actual Delivery Date\",\n  \"Basic Finish Date\" \nFROM \"defaultview-183\" LIMIT 10"
    },
    {
        "filename": "88033c5325",
        "split": "test",
        "name": "Total Spend by PO Material (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Material Number\" \nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the table 'defaultview-431', select the sum of values in the 'PO Item Total Amount' column as 'Total PO Amount'. Also select the average of the difference between the last value in the 'END_TIME' column and the first value in the 'END_TIME' column as 'Avg. Cycle Time'. Additionally, select the values in the 'PO Material Number' column. Order the results by the 'Total PO Amount' in descending order and limit to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\",\nAVG((SELECT LAST(END_TIME))-(SELECT FIRST(END_TIME)))) AS \"Avg. Cycle Time\",\n\"PO Material Number\"\n\nFROM \"defaultview-431\" \nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\",\nAVG((SELECT LAST(END_TIME))-(SELECT FIRST(END_TIME)))) AS \"Avg. Cycle Time\",\n\"PO Material Number\"\n\nFROM \"defaultview-431\" \nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "125e48fc10",
        "split": "test",
        "name": "Avg. Cycle Time per Case ID (20 shortest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n    \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) \n              AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 ASC\nLIMIT 20\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the 'Project' column and calculate the average value of the 'C' column from the subquery results. \nThe subquery selects the case_id, 'Project_Description' column aliased as 'Project' and calculates the cycle time 'C' as the difference between the last end_time for the 'Close Project' event and the first end_time for the 'Start Project' event for each case. \nThe results are ordered by the average cycle time in ascending order and limited to the top 20 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  AVG(c) AS \"Average Cycle Time\", \n  \"Project\"\nFROM (\n  SELECT \n    case_id, \n    FIRST (end_time) FILTER (\n      WHERE \n        event_name IN ('Close Project')\n    ) - FIRST (end_time) FILTER (\n      WHERE \n        event_name IN ('Start Project')\n    ) AS \"c\", \n    \"Project_Description\" AS \"Project\" \n  FROM \n    \"defaultview-960\" \n    \n) AS sub_query_NAME\nORDER BY \n  1 ASC NULLS FIRST\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  AVG(c) AS \"Average Cycle Time\", \n  \"Project\"\nFROM (\n  SELECT \n    case_id, \n    FIRST (end_time) FILTER (\n      WHERE \n        event_name IN ('Close Project')\n    ) - FIRST (end_time) FILTER (\n      WHERE \n        event_name IN ('Start Project')\n    ) AS \"c\", \n    \"Project_Description\" AS \"Project\" \n  FROM \n    \"defaultview-960\" \n    \n) AS sub_query_NAME\nORDER BY \n  1 ASC NULLS FIRST\nLIMIT 20"
    },
    {
        "filename": "d1ef7aa5cf",
        "split": "test",
        "name": "Table",
        "query": "SELECT\nIF (bucket_id > 20, -1, (bucket_id * 50) + 0) AS bucket_end,\n\"ClientCount\"\nFROM (\nSELECT\nBUCKET(EventCount, 0, 50, 20) as bucket_id,\nCOUNT(CASE_ID) AS \"ClientCount\" FROM\n(\nSELECT CASE_ID, \nCOUNT(EVENT_NAME) as EventCount\nFROM FLATTEN(\"defaultview-124\")\n) AS sq1\n) AS sq2\nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the bucket_end column which is calculated as -1 if bucket_id is greater than 20, otherwise it is calculated as (bucket_id * 50) + 0. \nAlso select the ClientCount column which counts the number of unique case IDs.\nThis is done by first selecting the bucket_id column which buckets the EventCount into buckets of size 50, starting from 0 and going up to 20 buckets. \nThen the ClientCount is counted by counting the unique case IDs.\nThis is all done on the 'defaultview-124' table by first flattening it and then performing the above calculations.\nThe results are ordered by the bucket_end column in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT (\n\t\tCASE \n        WHEN \"bucket_id\" > 20 THEN -1\n        ELSE (bucket_id * 50) + 0\n    END) AS bucket_end, \n    COUNT(DISTINCT \"case_id\") AS ClientCount\nFROM FLATTEN(\"defaultview-124\")\n(BUCKETIZE EVENT \nOVER (PARTITION BY \"case_id\" ORDER BY \"event_start_time\")) AS flt\nORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT (\n\t\tCASE \n        WHEN \"bucket_id\" > 20 THEN -1\n        ELSE (bucket_id * 50) + 0\n    END) AS bucket_end, \n    COUNT(DISTINCT \"case_id\") AS ClientCount\nFROM FLATTEN(\"defaultview-124\")\n(BUCKETIZE EVENT \nOVER (PARTITION BY \"case_id\" ORDER BY \"event_start_time\")) AS flt\nORDER BY 1 ASC"
    },
    {
        "filename": "431e0f5dc2",
        "split": "test",
        "name": "Percent of Cases with Rework",
        "query": "SELECT COUNT (CASE_ID) \n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1) \n    \tFROM (SELECT OCCURRENCE(EVENT_NAME) AS occurrence) AS sub)) \n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case IDs from the table 'defaultview-545' where the event name occurs more than once. Divide this count by the total number of case IDs in the table and multiply by 100 to get the percentage of case IDs with duplicate event names.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\ncount(case_id) * 100 / \n(SELECT count(CASE_ID) FROM \"defaultview-545\" ) as \"% Case IDs with Duplicates Event Name\"\nFROM\n(\nSELECT\n  case_id\nFROM\n  FLATTEN(\"defaultview-545\".VIEW_NAME)\nGROUP BY\n  1\nHAVING\n  COUNT(EVENT_NAME) > 1\n) as subq\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\ncount(case_id) * 100 / \n(SELECT count(CASE_ID) FROM \"defaultview-545\" ) as \"% Case IDs with Duplicates Event Name\"\nFROM\n(\nSELECT\n  case_id\nFROM\n  FLATTEN(\"defaultview-545\".VIEW_NAME)\nGROUP BY\n  1\nHAVING\n  COUNT(EVENT_NAME) > 1\n) as subq\n                "
    },
    {
        "filename": "7524851a3d",
        "split": "test",
        "name": "Percentage of products touched by IO",
        "query": "\nSELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE (\n\t\tSELECT SUM(\"Recommended Safety Stock\") = 0\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n* 100\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the distinct Product IDs from the defaultview-404 table where the Recommended Safety Stock column equals 0 and the MONTH column is within the past 320 days. Divide this count by the total count of distinct Product IDs from the defaultview-404 table where the MONTH column is within the past 320 days. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  count(Distinct \"Product ID\") FILTER (\n    WHERE\n      (\n        \"Recommended Safety Stock\"  = 0\n      )\n      AND \"MONTH\" >= (SELECT DATE_TRUNC('month', (SELECT DATE_TRUNC('MONTH', NOW())) )) - DURATION '320DAYS'\n  )\n  / count(Distinct \"Product ID\") FILTER (\n    WHERE\n      \"MONTH\" >= (SELECT DATE_TRUNC('month', (SELECT DATE_TRUNC('MONTH', NOW())) )) - DURATION '320DAYS'\n  ) * 100\nFROM\n  \"defaultview-404\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  count(Distinct \"Product ID\") FILTER (\n    WHERE\n      (\n        \"Recommended Safety Stock\"  = 0\n      )\n      AND \"MONTH\" >= (SELECT DATE_TRUNC('month', (SELECT DATE_TRUNC('MONTH', NOW())) )) - DURATION '320DAYS'\n  )\n  / count(Distinct \"Product ID\") FILTER (\n    WHERE\n      \"MONTH\" >= (SELECT DATE_TRUNC('month', (SELECT DATE_TRUNC('MONTH', NOW())) )) - DURATION '320DAYS'\n  ) * 100\nFROM\n  \"defaultview-404\"\n                "
    },
    {
        "filename": "28105fe921",
        "split": "test",
        "name": "First time fix rate",
        "query": "\nSELECT\n(COUNT (case_id) FILTER(WHERE ((SELECT COUNT (event_name) FILTER (WHERE event_name IN ('Technically Completed')) < 2) ))\n/ \nCOUNT (case_id) )*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cases from the 'defaultview-545' table where the number of 'Technically Completed' events is less than 2. \nTo do this:\n1. Count the number of cases ('case_id' column) where the number of 'Technically Completed' events ('event_name' column with value 'Technically Completed') is less than 2. This is done using a subquery.\n2. Count the total number of cases ('case_id' column)\n3. Divide the count from step 1 by the count from step 2\n4. Multiply the result by 100 to get the percentage\n",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(\n    COUNT(case_id) FILTER (\n        WHERE (\n            SELECT\n                COUNT(event_name)\n            WHERE\n                event_name IN ('Technically Completed')\n        ) < 2\n    )\n) / COUNT(case_id) * 100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(\n    COUNT(case_id) FILTER (\n        WHERE (\n            SELECT\n                COUNT(event_name)\n            WHERE\n                event_name IN ('Technically Completed')\n        ) < 2\n    )\n) / COUNT(case_id) * 100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "a043407a7a",
        "split": "test",
        "name": "4. Percentage of Payments Manually processed (out of all clearly allocated payments ('SA','DZ'))",
        "query": "SELECT\n(count(DISTINCT \"ARUniqueKey\"  ) FILTER\n(WHERE event_name = 'Clear Accounts Receivable' and \"AutomationFlag\" is null)\n/ \ncount(DISTINCT \"ARUniqueKey\"  ) FILTER \n(WHERE event_name IN \n('Clear Accounts Receivable')\n)\n) \n* 100\n FROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of distinct ARUniqueKey values where the event_name is 'Clear Accounts Receivable' and AutomationFlag is null. Divide this count by the total number of distinct ARUniqueKey values where the event_name is 'Clear Accounts Receivable'. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT (\nCOUNT(DISTINCT \"ARUniqueKey\") \nFILTER (\n\tWHERE EVENT_NAME IN ('Clear Accounts Receivable') \n  \tAND AutomationFlag IS NULL\n\t)\n/ COUNT(DISTINCT \"ARUniqueKey\")\nFILTER (\n\tWHERE EVENT_NAME IN ('Clear Accounts Receivable'))) \n*100 \nFROM \"defaultview-464\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT (\nCOUNT(DISTINCT \"ARUniqueKey\") \nFILTER (\n\tWHERE EVENT_NAME IN ('Clear Accounts Receivable') \n  \tAND AutomationFlag IS NULL\n\t)\n/ COUNT(DISTINCT \"ARUniqueKey\")\nFILTER (\n\tWHERE EVENT_NAME IN ('Clear Accounts Receivable'))) \n*100 \nFROM \"defaultview-464\""
    },
    {
        "filename": "aade6751ff",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Clear Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))))      \nFROM \"defaultview-133\" \nWHERE EVENT_NAME MATCHES ('Post Invoice' 'Clear Invoice')",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-133' table, select the average time difference between the last end time of the 'Clear Invoice' event and the first end time of the 'Post Invoice' event for only those rows where the event name matches either 'Post Invoice' or 'Clear Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Post Invoice'))\nFROM \"defaultview-133\"\nWHERE \"Event Filter\" MATCHES ('Post Invoice' 'Clear Invoice')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Post Invoice'))\nFROM \"defaultview-133\"\nWHERE \"Event Filter\" MATCHES ('Post Invoice' 'Clear Invoice')"
    },
    {
        "filename": "d39c3be180",
        "split": "test",
        "name": "Overdue payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL AND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL)\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of overdue unpaid invoices in the 'defaultview-545' table. \nFirst, count the number of case_id rows where the 'Last Invoice Payment Date' column is NULL and the 'Last Invoice Due Date' column is before today's date.\nThen, count the total number of case_id rows where the 'Last Invoice Payment Date' column is NULL.\nFinally, divide the first count by the second count and multiply by 100 to get the percentage of overdue unpaid invoices.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n100 * \nCOUNT(case_id) \nFILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL)\n    AND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()) \n)\n/\nCOUNT(case_id) FILTER(WHERE  \"Last Invoice Payment Date\" IS NULL)\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n100 * \nCOUNT(case_id) \nFILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL)\n    AND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()) \n)\n/\nCOUNT(case_id) FILTER(WHERE  \"Last Invoice Payment Date\" IS NULL)\nFROM \"defaultview-545\""
    },
    {
        "filename": "c6857d95da",
        "split": "test",
        "name": "% Process Orders Released Early  grouped by most relevant Business Lines",
        "query": "SELECT \ncount(case_id) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') AS \"# Process Orders released early\",\nCOUNT (CASE_ID) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') / COUNT (CASE_ID)* 100 AS \"% Released Early\",\n\"Division\"\nFROM \"defaultview-183\"\n-- GROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case IDs from the defaultview-183 table where the Actual Release Date is less than 0 seconds after the Scheduled Release Date. Call this count '# Process Orders released early'. \nAlso calculate the percentage of case IDs released early as (# Process Orders released early / total case ID count) * 100. \nLabel this as '% Released Early'.\nGroup the results by Division. \nOrder the results by '# Process Orders released early' in descending order. \nLimit the results to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) Filter(PART 1)\n    ((SELECT COUNT (EVENT_NAME) \n    \tWHERE EVENT_NAME = 'Release order' \n        AND ActualReleaseDate - ScheduledReleaseDate <= DURATION '0seconds' )) \n  \t/ \n  \tCOUNT(CASE_ID) * 100 AS \"% Released Early\"\n  \t,\"Division\"\n       \n    FROM \"defaultview-183\"\n    GROUP BY 2\n    ORDER BY 1 DESC\n    LIMIT 10\n      ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) Filter(PART 1)\n    ((SELECT COUNT (EVENT_NAME) \n    \tWHERE EVENT_NAME = 'Release order' \n        AND ActualReleaseDate - ScheduledReleaseDate <= DURATION '0seconds' )) \n  \t/ \n  \tCOUNT(CASE_ID) * 100 AS \"% Released Early\"\n  \t,\"Division\"\n       \n    FROM \"defaultview-183\"\n    GROUP BY 2\n    ORDER BY 1 DESC\n    LIMIT 10\n      "
    },
    {
        "filename": "5cc0dd8c2b",
        "split": "test",
        "name": "SOL-1742 Fraction of total average cycle time spent on rework",
        "query": "\nSELECT\n((AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM (SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t))\n-\n(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\n)\n/(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average duration of process instances that have at least one event that occurs more than once. \nTo do this:\n1. From the defaultview-59 table, select the last end_time minus the first end_time for each process instance. \n2. Take the average of these durations.\n3. Filter to only keep process instances where there is at least one event that occurs more than once. To check this, select whether there is any event that occurs more than once from the subquery.\n4. Take the average duration of the filtered process instances.\n5. Subtract the average duration of all process instances from the average duration of filtered process instances.\n6. Divide the result by the average duration of all process instances to get the percentage increase in average duration.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n(\nAVG\n\t(\n\tSELECT \n\t\t(LAST(end_time)) \n\t\t-\n\t\t(FIRST(end_time))\n\tWHERE event_counter > 1\n\t\n\t)\n FILTER(\n \tWHERE(\n \t\t\t(SELECT BOOL_OR(event_counter > 1)) -- Subquery 1\n \t   )\n \t  )\n )\n  \n/\nAVG\n\t(\n\tSELECT \n\t\t(LAST(end_time)) \n\t\t-\n\t\t(FIRST(end_time))\n\t)\n\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n(\nAVG\n\t(\n\tSELECT \n\t\t(LAST(end_time)) \n\t\t-\n\t\t(FIRST(end_time))\n\tWHERE event_counter > 1\n\t\n\t)\n FILTER(\n \tWHERE(\n \t\t\t(SELECT BOOL_OR(event_counter > 1)) -- Subquery 1\n \t   )\n \t  )\n )\n  \n/\nAVG\n\t(\n\tSELECT \n\t\t(LAST(end_time)) \n\t\t-\n\t\t(FIRST(end_time))\n\t)\n\nFROM \"defaultview-59\""
    },
    {
        "filename": "df00ed7208",
        "split": "test",
        "name": "\u00d8 Cycle Time (Full Process)",
        "query": "SELECT AVG (\n\t(SELECT LAST (END_TIME)) \n  - (SELECT FIRST (END_TIME))) AS \"Average cycle time\"\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average cycle time for all process instances in the 'defaultview-270' table. \nTo calculate the cycle time for a single process instance, take the timestamp of the last end event (END_TIME column) and subtract the timestamp of the first end event (also END_TIME column). \nThen take the average of all these cycle times across all process instances.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG (\n\t(SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME))\n   )\nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG (\n\t(SELECT LAST (END_TIME)) - (SELECT FIRST (END_TIME))\n   )\nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "4d015ef6e5",
        "split": "test",
        "name": "No. of Invoices Paid Late",
        "query": "SELECT \nCOUNT(DISTINCT CASE_ID) AS \"Case Count\"\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of unique case IDs from the table 'defaultview-124' where the value in the 'Last FI Invoice Item Due Date' column is less than the value in the 'Last FI Invoice Item Clearing Date' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (DISTINCT \"CASE_ID\")\nFROM \n\"defaultview-124\"\nWhere\n\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (DISTINCT \"CASE_ID\")\nFROM \n\"defaultview-124\"\nWhere\n\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n"
    },
    {
        "filename": "73e9b28d90",
        "split": "test",
        "name": "Number of Orders delayed in completion",
        "query": "\nSELECT\ncount(case_id) FILTER(\n\tWHERE \"Order Actual Start\" IS NOT NULL\n\tAND \"Order Actual Completion\" - \"Order Scheduled Completion\" > DURATION '0minutes') \nFROM \"defaultview-538\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-538' table where the 'Order Actual Start' column has a non-null value and the difference between the 'Order Actual Completion' and 'Order Scheduled Completion' column values is greater than 0 minutes.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) from \"defaultview-538\"\nWHERE \"Order Actual Start\" IS NOT NULL\nAND \"Order Actual Completion\" - \"Order Scheduled Completion\" > DURATION '0minutes'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) from \"defaultview-538\"\nWHERE \"Order Actual Start\" IS NOT NULL\nAND \"Order Actual Completion\" - \"Order Scheduled Completion\" > DURATION '0minutes'"
    },
    {
        "filename": "7896255b68",
        "split": "test",
        "name": "Number Created Receivables over Time Posting",
        "query": "SELECT  \n\t\"PostingDate\"   AS \"Posting Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the PostingDate column from the defaultview-222 table and rename it to 'Posting Date'. Count the distinct ARUniqueKey column values for each PostingDate. Filter the rows to only include events where the EVENT_NAME column value is 'Create Accounts Receivable'. Order the results by the Posting Date column in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  DATE_TRUNC('day', \"ARCreateDate\" ) AS \"Posting Date\"\n, COUNT (DISTINCT  \"ARUniqueKey\"  ) AS \"ARUniqueKey Count\"\nFROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME ='Create Accounts Receivable'\nORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  DATE_TRUNC('day', \"ARCreateDate\" ) AS \"Posting Date\"\n, COUNT (DISTINCT  \"ARUniqueKey\"  ) AS \"ARUniqueKey Count\"\nFROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME ='Create Accounts Receivable'\nORDER BY 1 ASC"
    },
    {
        "filename": "ae803079ca",
        "split": "test",
        "name": "Sources of Change (Table) - # Events",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\", \"Changed Table\"\nFROM FLATTEN((SELECT \"case_id\", \"event_name\", \"end_time\", \"Change New Value\", \"Change Old Value\", \"Change Type\", \"Changed Field\", \"Changed Object Id\", \"Changed Table\", \"Event Created By User Id\", \"Event Created By User Type\"\nFROM \"defaultview-124\") AS sub)\nWHERE \"Changed Table\" IS NOT NULL\norder by 1 desc\nLIMIT 500",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases where the Changed Table column has a non-null value. \nTo do this:\n\n1. Select the case_id, event_name, end_time, Change New Value, Change Old Value, Change Type, Changed Field, Changed Object Id, Changed Table, Event Created By User Id, Event Created By User Type columns \nfrom the defaultview-124 table.\n\n2. Flatten this selection into a single table called sub.\n\n3. Filter sub to only keep rows where Changed Table is not null.\n\n4. Group by Changed Table and count the number of case_id values.\n\n5. Order the results by the count in descending order.\n\n6. Limit the results to the top 500 rows.\n\n7. Name the count column 'Cases'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (case_id) as \"Cases\", \"Changed Table\"\nFROM FLATTEN((\nSELECT case_id, \nevent_name,\nend_time, \n\"Change New Value\", \n\"Change Old Value\", \n\"Change Type\", \n\"Changed Field\",\n\"Changed Object Id\", \n\"Changed Table\",\n\"Event Created By User Id\",\n\"Event Created By User Type\"\nFROM \"defaultview-124\"\n)), sub\n)\nWHERE \"Changed Table\" !='null'\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 500",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (case_id) as \"Cases\", \"Changed Table\"\nFROM FLATTEN((\nSELECT case_id, \nevent_name,\nend_time, \n\"Change New Value\", \n\"Change Old Value\", \n\"Change Type\", \n\"Changed Field\",\n\"Changed Object Id\", \n\"Changed Table\",\n\"Event Created By User Id\",\n\"Event Created By User Type\"\nFROM \"defaultview-124\"\n)), sub\n)\nWHERE \"Changed Table\" !='null'\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 500"
    },
    {
        "filename": "812a094000",
        "split": "test",
        "name": "# PO confirmed",
        "query": "SELECT count(case_id) FILTER (WHERE event_name MATCHES ('Confirmed')) FROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id values in the 'defaultview-183' table where the event_name column contains the string 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) FILTER (\n\tWHERE event_name MATCHES ('Confirmed')) \nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) FILTER (\n\tWHERE event_name MATCHES ('Confirmed')) \nFROM \"defaultview-183\""
    },
    {
        "filename": "427922cb53",
        "split": "test",
        "name": "Number of PRs",
        "query": "SELECT count(DISTINCT \"Last PR Id\") FROM \"defaultview-431\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of unique values in the column named 'Last PR Id' from the table named 'defaultview-431'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(DISTINCT \"Last PR Id\")\nFROM\n  \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(DISTINCT \"Last PR Id\")\nFROM\n  \"defaultview-431\""
    },
    {
        "filename": "ba61aabb1a",
        "split": "test",
        "name": "Event: Update Payment Term (PO)",
        "query": "SELECT\n    count(event_name) / 1000\nFROM\n    FLATTEN(\"defaultview-225\")\nWHERE\n    event_name IN ('Update PO Payment Terms')",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of events named 'Update PO Payment Terms' in the table 'defaultview-225', divide the result by 1000 and return the quotient. This summary was constructed by explicitly stating the table name 'defaultview-225', the column 'event_name' with the value 'Update PO Payment Terms' used in the WHERE clause filter, the aggregation function 'count()' used on the 'event_name' column, and the division of the result by 1000.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(event_name) / 1000\nFROM \"defaultview-225\"\nWHERE event_name = 'Update PO Payment Terms'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(event_name) / 1000\nFROM \"defaultview-225\"\nWHERE event_name = 'Update PO Payment Terms'"
    },
    {
        "filename": "f17c42daff",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the 'Inv. Converted USD Amount' column for all rows in the 'defaultview-225' table where the value in the 'Last Inv. Item Clearing Date' column is NULL.",
        "llm_gpt-35-turbo-0613_query": "SELECT sum(\"Inv. Converted USD Amount\") FROM \"defaultview-225\" WHERE \"Last Inv. Item Clearing Date\" is NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT sum(\"Inv. Converted USD Amount\") FROM \"defaultview-225\" WHERE \"Last Inv. Item Clearing Date\" is NULL"
    },
    {
        "filename": "54c0f08366",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Production Scheduler Profile",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of CASE_ID values in the defaultview-183 table for each unique Production Scheduler Profile value. Order the results by descending count of CASE_ID.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (CASE_ID) AS \"# Cases\",\n\"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (CASE_ID) AS \"# Cases\",\n\"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC"
    },
    {
        "filename": "9a9d898912",
        "split": "test",
        "name": "Invoice Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"Last Invoice Reconciliation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of distinct invoice IDs from the 'defaultview-431' table where the 'Last Invoice Reconciliation Status' column has the value 'Rejected' and the 'PO Item Line Type' column has the value 'Catalog'. Divide this count by the total number of distinct invoice IDs in the table and multiply by 100 to get the percentage of invoices matching these criteria.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(COUNT(DISTINCT \"Invoice Id\" ) \nFILTER (WHERE \"Last Invoice Reconciliation Status\"  IN ('Rejected') and\n\"PO Item Line Type\" = 'Catalog' ))\n/ COUNT(DISTINCT \"Invoice Id\" ) * 100\n\nFROM \"defaultview-431\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(COUNT(DISTINCT \"Invoice Id\" ) \nFILTER (WHERE \"Last Invoice Reconciliation Status\"  IN ('Rejected') and\n\"PO Item Line Type\" = 'Catalog' ))\n/ COUNT(DISTINCT \"Invoice Id\" ) * 100\n\nFROM \"defaultview-431\"\n                "
    },
    {
        "filename": "5f9ce977a7",
        "split": "test",
        "name": "Automation Rate Deletion Flag",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Deletion Flag'\n\n\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of 'Deletion Flag' events created by user types other than 'Dialog' in the 'defaultview-183' table. \nFirst, count the total number of 'Deletion Flag' events in the table. \nThen, filter to only count 'Deletion Flag' events created by user types other than 'Dialog'. \nDivide the filtered count by the total count and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(event) FILTER(\n\tWHERE \"Deletion Flag\" = TRUE \n    AND NOT \"Created by User Type\" IN ('Dialog')\n\t)\n/ COUNT(event)\n* 100\n\n\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(event) FILTER(\n\tWHERE \"Deletion Flag\" = TRUE \n    AND NOT \"Created by User Type\" IN ('Dialog')\n\t)\n/ COUNT(event)\n* 100\n\n\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "9676e5663d",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Creation to PO Release",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time between the last end time of the 'Release PO' event and the first end time of the 'Create PO Item' event for all process instances in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create PO Item'))\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create PO Item'))\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "dfc90845e4",
        "split": "test",
        "name": "Average Invoice Clearing Time",
        "query": "SELECT\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Pay Invoice')\n        )\n    ) - (\n      SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Receive Invoice')\n        )\n    )\n  ) AS PaymentTime\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time between receiving an invoice and paying it for the process instances in the 'defaultview-545' table. \nFirst, for each process instance, find the timestamp of the last 'Pay Invoice' event (END_TIME column) in that instance. \nThen, find the timestamp of the first 'Receive Invoice' event in that instance. \nSubtract the first timestamp from the last timestamp to get the time between receiving and paying for that instance. \nFinally, take the average of these time durations across all process instances to get the average payment time.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG (\n\t\t(\n\t\t\t(SELECT ( \n\t\t\t\t(SELECT LAST (END_TIME) \n\t\t\t\tWHERE EVENT_NAME IN ('Pay Invoice'))\n\t\t\t\t-\n\t\t\t\t(SELECT FIRST (END_TIME) \n\t\t\t\tWHERE EVENT_NAME IN ('Receive Invoice'))))\n\t\t))\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG (\n\t\t(\n\t\t\t(SELECT ( \n\t\t\t\t(SELECT LAST (END_TIME) \n\t\t\t\tWHERE EVENT_NAME IN ('Pay Invoice'))\n\t\t\t\t-\n\t\t\t\t(SELECT FIRST (END_TIME) \n\t\t\t\tWHERE EVENT_NAME IN ('Receive Invoice'))))\n\t\t))\nFROM \"defaultview-545\""
    },
    {
        "filename": "bfb506743e",
        "split": "test",
        "name": "% of ODO Items w/o WTs",
        "query": "\nSELECT\nCOUNT(\nCASE WHEN event_name MATCHES('Create Warehouse Task') THEN null\nELSE case_id\nEND)\n/\nCOUNT(case_id)\n*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-545' table, count the number of rows where the 'event_name' column value matches the string 'Create Warehouse Task'. Then count the total number of rows in the table. Divide the first count by the total count and multiply by 100 to get the percentage of rows where 'event_name' is 'Create Warehouse Task'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (EVENT_NAME) FILTER\n(\n\tWHERE event_name MATCHES ('Create Warehouse Task'))\n/\nCOUNT (EVENT_NAME)\n*100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (EVENT_NAME) FILTER\n(\n\tWHERE event_name MATCHES ('Create Warehouse Task'))\n/\nCOUNT (EVENT_NAME)\n*100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "bdf1b3383d",
        "split": "test",
        "name": "SOL-1742 Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id in the 'defaultview-59' table where the event_name column has at least one occurrence greater than 1. Divide this count by the total number of case_id in the table and multiply by 100 to get the percentage of cases where event_name occurs more than once.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT bool_or(occurrences > 1)\n    \tFROM UNNEST (event_name_occurrence)) )\n\t)\n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-59\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT bool_or(occurrences > 1)\n    \tFROM UNNEST (event_name_occurrence)) )\n\t)\n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-59\"\n                "
    },
    {
        "filename": "547ec2c903",
        "split": "test",
        "name": "No. of Mat. Invoices (Create to Clear Invoice Time > 18 Days) by Inv. Payment Term",
        "query": "SELECT \nCOUNT (CASE_ID) AS \"No. of Cases\", \nSUM(\"Last FI Invoice Item Gross Amount Local Curr.\") AS \"Total Inv. Amount\",\n\"Last FI Invoice Item Terms of Payment Key\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') > DURATION '18DAYS'\nGROUP BY 3\nORDER BY 1 DESC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the table 'defaultview-124', select the count of CASE_ID as 'No. of Cases', the sum of 'Last FI Invoice Item Gross Amount Local Curr.' as 'Total Inv. Amount' and 'Last FI Invoice Item Terms of Payment Key'. Filter the rows where the time difference between the last END_TIME where EVENT_NAME is 'Clear Invoice' and the first END_TIME where EVENT_NAME is 'Create FI Invoice' is greater than 18 days. Group the results by 'Last FI Invoice Item Terms of Payment Key' and order by 'No. of Cases' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) AS  \"No. of Cases\",\nSUM ('Last FI Invoice Item Gross Amount Local Curr.') AS \"Inv. Amount\",\n\"Last FI Invoice Item Terms of Payment Key\"\nFROM \"defaultview-124\"\nWHERE  ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') \n- (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create FI Invoice')) > DURATION '18days'\nGROUP BY 3\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) AS  \"No. of Cases\",\nSUM ('Last FI Invoice Item Gross Amount Local Curr.') AS \"Inv. Amount\",\n\"Last FI Invoice Item Terms of Payment Key\"\nFROM \"defaultview-124\"\nWHERE  ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') \n- (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create FI Invoice')) > DURATION '18days'\nGROUP BY 3\nORDER BY 1 DESC"
    },
    {
        "filename": "82093ccee6",
        "split": "test",
        "name": "_Number of  timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the TSR_Count column of the defaultview-197 table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\"TSR_Count\")\nFROM\n  \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\"TSR_Count\")\nFROM\n  \"defaultview-197\"\n                "
    },
    {
        "filename": "2dd9d9b679",
        "split": "test",
        "name": "Number of goods receipts",
        "query": "SELECT SUM((\n\tSELECT COUNT(event_name)\n\tFILTER(WHERE event_name LIKE 'GR%')))\nFROM \"defaultview-183\"\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the total number of events whose name starts with 'GR' from the table 'defaultview-183'. This summary was constructed by explicitly stating the table name 'defaultview-183', the column 'event_name' with the filter condition 'event_name LIKE 'GR%'' to select only events starting with 'GR' and then aggregating the count of those events using SUM().",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM (COUNT(event_name) FILTER (\n\tWHERE (event_name LIKE 'GR%')\n))\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM (COUNT(event_name) FILTER (\n\tWHERE (event_name LIKE 'GR%')\n))\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "852ec656c8",
        "split": "test",
        "name": "Number of events",
        "query": "SELECT COUNT(event_name) FROM \"defaultview-124\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of rows in the 'defaultview-124' table that have a value in the 'event_name' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(\"event_name\")\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(\"event_name\")\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "496950a757",
        "split": "test",
        "name": "Average Payment Time Over Time and Company Codes",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\",\n    AR_CompanyCode\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the month of the end_time column as 'Clearing Date'. \nCalculate the average time between the ClearingDate and CreationDate columns only for rows where the EVENT_NAME column starts with 'Clear'. \nName this average time 'AVG Clearing Time'.\nAlso select the AR_CompanyCode column.\nFilter to only include rows where EVENT_NAME starts with 'Clear'.\nOrder the results by the Clearing Date in ascending order.\n",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  DATE_TRUNC('month', \"end_time\" ) AS \"Clearing Date\"  ,\n--  COUNT (AR_CompanyCode),\nAVG(\"END_TIME\" - \"ACTIVITY_START_TIME\") FILTER (\n          WHERE \"EVENT_NAME\" LIKE '%Clear%') AS \"AVG Clearing Time\",\nAR_CompanyCode\nFROM FLATTEN(\"defaultview-3756\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  DATE_TRUNC('month', \"end_time\" ) AS \"Clearing Date\"  ,\n--  COUNT (AR_CompanyCode),\nAVG(\"END_TIME\" - \"ACTIVITY_START_TIME\") FILTER (\n          WHERE \"EVENT_NAME\" LIKE '%Clear%') AS \"AVG Clearing Time\",\nAR_CompanyCode\nFROM FLATTEN(\"defaultview-3756\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC\n"
    },
    {
        "filename": "c8419a5887",
        "split": "test",
        "name": "Number of accounts receivables documents paid late",
        "query": "\nSELECT\nSUM(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the AR_PaidLateCount column from the defaultview-222 table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"AR_PaidLateCount\" )\nFROM \"defaultview-222\"\nWHERE \"AR_PaidLateCount\"  IS NOT NULL\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"AR_PaidLateCount\" )\nFROM \"defaultview-222\"\nWHERE \"AR_PaidLateCount\"  IS NOT NULL\n"
    },
    {
        "filename": "1049f58d89",
        "split": "test",
        "name": "Manual Change Rate by SD Customer Country ",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocCustomerCountry\" AS \"SD Customer Country\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the table 'defaultview-383', select the count of distinct case_id values as '# of SDs'. \nThen calculate the percentage of cases where the column 'EventCreatedByUserType' has the value 'Dialog' and the column 'ChangeType' has the value 'Update' (store this count as 'created_with_dialog'). \nDivide 'created_with_dialog' by the count of distinct case_id values and multiply by 100 to get the 'Change rate' percentage.\nAlso select the column 'SalesDocCustomerCountry' as 'SD Customer Country'.\nOrder the results by '# of SDs' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT( DISTINCT case_id ) as \"# of SDs\",\nCOUNT( DISTINCT case_id) filter (WHERE created_with_dialog  > 0 ) / COUNT( DISTINCT case_id ) * 100 AS \"Change rate\",\n\"SD Customer Country\"\n\n\nFROM\n(\nSELECT \n  case_id,\n  COUNT (CASE WHEN \n  \t\t-- count (case_id) > 0 \n  \t\tEventCreatedByUserType = 'Dialog' AND ChangeType = 'Update'  THEN 1 ELSE NULL END) AS created_with_dialog,\n  \"SalesDocCustomerCountry\" \n  \nFROM FLATTEN(\"defaultview-383\")\n\n--WHERE  (EventCreatedByUserType = 'Dialog' AND ChangeType = 'Update') \nGROUP BY 1\nORDER BY 1\n\n) AS sub1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT( DISTINCT case_id ) as \"# of SDs\",\nCOUNT( DISTINCT case_id) filter (WHERE created_with_dialog  > 0 ) / COUNT( DISTINCT case_id ) * 100 AS \"Change rate\",\n\"SD Customer Country\"\n\n\nFROM\n(\nSELECT \n  case_id,\n  COUNT (CASE WHEN \n  \t\t-- count (case_id) > 0 \n  \t\tEventCreatedByUserType = 'Dialog' AND ChangeType = 'Update'  THEN 1 ELSE NULL END) AS created_with_dialog,\n  \"SalesDocCustomerCountry\" \n  \nFROM FLATTEN(\"defaultview-383\")\n\n--WHERE  (EventCreatedByUserType = 'Dialog' AND ChangeType = 'Update') \nGROUP BY 1\nORDER BY 1\n\n) AS sub1"
    },
    {
        "filename": "d5bcc67962",
        "split": "test",
        "name": "Overdue deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', NOW()) > \"PO Item Last Requested Delivery Date\"\n    \tAND \"PO Item Delivery Completed\" IS NULL\n      ) \nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of rows in the 'defaultview-57' table where the current day is after the value in the 'PO Item Last Requested Delivery Date' column and the 'PO Item Delivery Completed' column is empty (NULL).",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (*)\nFROM \"defaultview-57\"\nWHERE\nDATE_TRUNC('day', NOW()) >  \"PO Item Last Requested Delivery Date\" \nAND  \"PO Item Delivery Completed\" IS NULL\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (*)\nFROM \"defaultview-57\"\nWHERE\nDATE_TRUNC('day', NOW()) >  \"PO Item Last Requested Delivery Date\" \nAND  \"PO Item Delivery Completed\" IS NULL\n\n\n"
    },
    {
        "filename": "76aa55b92b",
        "split": "test",
        "name": "Table",
        "query": "SELECT title, case_id, \"IssueType\"  FROM \"defaultview-217\"\nWHERE title LIKE '%Support%'",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the title, case_id and IssueType column values from the defaultview-217 table where the title column contains the string 'Support' anywhere in the value.",
        "llm_gpt-35-turbo-0613_query": "SELECT \ntitle, case_id, \"Issue Type\" \nFROM \"defaultview-217\"\nWHERE title LIKE '%Support%'\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \ntitle, case_id, \"Issue Type\" \nFROM \"defaultview-217\"\nWHERE title LIKE '%Support%'\n"
    },
    {
        "filename": "acf8aac40c",
        "split": "test",
        "name": "SOL-1709 Late Payment Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days')\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of overdue invoice items in the 'defaultview-59' table. \nFirst, count the number of case_id rows where the difference between the 'Last Inv. Item Clearing Date' and 'Last Inv. Item Due Date' columns is greater than 1 day. \nThen count the total number of case_id rows where 'Last Inv. Item Clearing Date' is not null.\nFinally, divide the first count by the second count and multiply by 100 to get the percentage of overdue invoice items.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\") > DURATION '1day'\n\t)\n/\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\") > DURATION '1day'\n\t)\n/\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-59\"\n                "
    },
    {
        "filename": "4688181a90",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Vendor Name",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Item Material Group Text\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases ('case_id' column) in the 'defaultview-124' table. Sum the total purchase order value ('PO Item Net Order Value' column) for those cases. Group the cases by the material group text ('PO Item Material Group Text' column). Order the results by the number of cases in descending order. Limit the results to the top 50 groups.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tCOUNT (CASE_ID) AS \"Number of Cases\",\n\tSUM (\"PO Item Net Order Value\") AS \"Net Order Value\", \n\t\"PO Item Material Group Text\" AS \"Material Group\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tCOUNT (CASE_ID) AS \"Number of Cases\",\n\tSUM (\"PO Item Net Order Value\") AS \"Net Order Value\", \n\t\"PO Item Material Group Text\" AS \"Material Group\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n"
    },
    {
        "filename": "baf597ad20",
        "split": "test",
        "name": "Percentage of products with at least one period (month) where demand is not fulfilled",
        "query": "SELECT\nCOUNT(\"case_id\") FILTER(\n\tWHERE(\n\t\"Consensus Demand Delivered\" <> \"Consensus Demand\"\n\t)\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n    AND \"Consensus Demand\" > 0 \n)\n/\nCOUNT(\"case_id\") FILTER(\n\tWHERE \"Consensus Demand\" > 0\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the case IDs from the defaultview-404 table where the Consensus Demand Delivered column does not equal the Consensus Demand column and where the MONTH column is greater than or equal to the current month truncated to the month and where the MONTH column minus the current month truncated to the month is less than 320 days and where the Consensus Demand column is greater than 0. Divide that count by the count of case IDs from the defaultview-404 table where the Consensus Demand column is greater than 0 and where the MONTH column is greater than or equal to the current month truncated to the month and where the MONTH column minus the current month truncated to the month is less than 320 days. Multiply that result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\ncount(case_id)\n/\nCOUNT (CASE_ID) \n*\nFROM FLATTEN(\"defaultview-404\")\nWHERE\n\"Consensus Demand Delivered\" \n  <> \"Consensus Demand\" \n  \tAND (\n  \t\t  -- Consensus Demand is greater than 0 and Planned Demand in month is greater than 0\n  \t  \t  \t\t  (\"Consensus Demand\"      > 0)\n                    \t  AND (\"Planned Demand in month\"  > 0)\n                      \t  AND (\"Actual Delivery\"            > 0)\n                      \t  AND (\"Consensus Demand Delivered\" > 0)\n                      \t\t)\nAND  \"MONTH\" >= (SELECT DATE_TRUNC('month', NOW()))\nAND (  \"MONTH\" - ( SELECT DATE_TRUNC('month', NOW())))  < DURATION '320days' \nAND      (\"Consensus Demand\"          > 0)\n\n\n-- Consensus Demand is greater than 0 and Planned Demand in month is greater than 0\n  \t  \t  \t\t  --    (\"Consensus Demand\" > 0) -- AND (AD_PLAN_MONTH > 0 AND PLAN_DATE > 0)\n\n   \t  \t  \t  \n        \n    \n                \n     \n  \t  \t  \t\n\n\n                            \n  \t  \t  \n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\ncount(case_id)\n/\nCOUNT (CASE_ID) \n*\nFROM FLATTEN(\"defaultview-404\")\nWHERE\n\"Consensus Demand Delivered\" \n  <> \"Consensus Demand\" \n  \tAND (\n  \t\t  -- Consensus Demand is greater than 0 and Planned Demand in month is greater than 0\n  \t  \t  \t\t  (\"Consensus Demand\"      > 0)\n                    \t  AND (\"Planned Demand in month\"  > 0)\n                      \t  AND (\"Actual Delivery\"            > 0)\n                      \t  AND (\"Consensus Demand Delivered\" > 0)\n                      \t\t)\nAND  \"MONTH\" >= (SELECT DATE_TRUNC('month', NOW()))\nAND (  \"MONTH\" - ( SELECT DATE_TRUNC('month', NOW())))  < DURATION '320days' \nAND      (\"Consensus Demand\"          > 0)\n\n\n-- Consensus Demand is greater than 0 and Planned Demand in month is greater than 0\n  \t  \t  \t\t  --    (\"Consensus Demand\" > 0) -- AND (AD_PLAN_MONTH > 0 AND PLAN_DATE > 0)\n\n   \t  \t  \t  \n        \n    \n                \n     \n  \t  \t  \t\n\n\n                            \n  \t  \t  \n\n\n"
    },
    {
        "filename": "b4ef96ed37",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"\t",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average duration of process instances in the 'defaultview-183' table by subtracting the value in the 'Basic Finish Date' column from the value in the 'Basic Start Date' column for each row, then calculating the average of all those durations.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(FIRST(\"Basic Start Date\") - FIRST(\"Basic Finish Date\")))\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(FIRST(\"Basic Start Date\") - FIRST(\"Basic Finish Date\")))\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "eb31f2d40f",
        "split": "test",
        "name": "_Average project start to end time",
        "query": "\nSELECT\nAVG(Project_StartToEndTime)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average duration between Project Start and End dates across all projects in the 'defaultview-197' table by summing up the values in the 'Project_StartToEndTime' column and dividing the total by the number of projects.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM (\"Project_StartToEndTime\"_dtt\n  ) / COUNT (DISTINCT \"ProjectId\"\n  ) AS \"Avg. Duration\"\nFROM\n  (\n    SELECT\n      \"ProjectId\",\n      DATE_PART(\n        'SECOND',\n        (\n          SELECT\n            LAST (END_TIME)\n          FROM\n            \"defaultview-147\"\n          WHERE\n            EVENT_NAME IN ('End')\n        ) - FIRST (END_TIME)\n      ) AS \"Project_StartToEndTime\"\n    FROM\n      (\n        SELECT\n          \"ProjectId\",\n          EVENT_NAME AS \"CurrentEvent\",\n          END_TIME,\n          LAG (EVENT_NAME) OVER (\n            PARTITION BY \"ProjectId\"\n            ORDER BY\n              END_TIME\n          ) AS \"PreviousEvent\"\n        FROM\n          (\n            SELECT\n              \"ProjectId\",\n              EVENT_NAME,\n              END_TIME\n            FROM\n              \"defaultview-147\"\n            UNION ALL\n            SELECT\n              \"ProjectId\",\n              EVENT_NAME,\n              END_TIME\n            FROM\n              \"defaultview-197\"\n            UNION ALL\n            SELECT\n              \"ProjectId\",\n              EVENT_NAME,\n              END_TIME\n            FROM\n              \"defaultview-200\"\n            UNION ALL\n            SELECT\n              \"ProjectId\",\n              EVENT_NAME,\n              END_TIME\n            FROM\n              \"defaultview-198\"\n          )\n          AS \"sub_Query_156\"\n      )\n      AS \"sub_Query_155\"\n    WHERE\n      (\n        \"PreviousEvent\" = 'Start'\n        AND NOT (EVENT_NAME = 'RestartMainProcess')\n      )\n      OR \"PreviousEvent\" IS NULL\n  )\n  AS \"sub_Query_132\"\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM (\"Project_StartToEndTime\"_dtt\n  ) / COUNT (DISTINCT \"ProjectId\"\n  ) AS \"Avg. Duration\"\nFROM\n  (\n    SELECT\n      \"ProjectId\",\n      DATE_PART(\n        'SECOND',\n        (\n          SELECT\n            LAST (END_TIME)\n          FROM\n            \"defaultview-147\"\n          WHERE\n            EVENT_NAME IN ('End')\n        ) - FIRST (END_TIME)\n      ) AS \"Project_StartToEndTime\"\n    FROM\n      (\n        SELECT\n          \"ProjectId\",\n          EVENT_NAME AS \"CurrentEvent\",\n          END_TIME,\n          LAG (EVENT_NAME) OVER (\n            PARTITION BY \"ProjectId\"\n            ORDER BY\n              END_TIME\n          ) AS \"PreviousEvent\"\n        FROM\n          (\n            SELECT\n              \"ProjectId\",\n              EVENT_NAME,\n              END_TIME\n            FROM\n              \"defaultview-147\"\n            UNION ALL\n            SELECT\n              \"ProjectId\",\n              EVENT_NAME,\n              END_TIME\n            FROM\n              \"defaultview-197\"\n            UNION ALL\n            SELECT\n              \"ProjectId\",\n              EVENT_NAME,\n              END_TIME\n            FROM\n              \"defaultview-200\"\n            UNION ALL\n            SELECT\n              \"ProjectId\",\n              EVENT_NAME,\n              END_TIME\n            FROM\n              \"defaultview-198\"\n          )\n          AS \"sub_Query_156\"\n      )\n      AS \"sub_Query_155\"\n    WHERE\n      (\n        \"PreviousEvent\" = 'Start'\n        AND NOT (EVENT_NAME = 'RestartMainProcess')\n      )\n      OR \"PreviousEvent\" IS NULL\n  )\n  AS \"sub_Query_132\"\n"
    },
    {
        "filename": "511c40d335",
        "split": "test",
        "name": "Last PO Vendor Name (too much null...not worthy)",
        "query": "SELECT \"Last PO Vendor Name\" AS \"Last PO Vendor Name\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the column 'Last PO Vendor Name' from the table 'defaultview-225' and rename it to 'Last PO Vendor Name'. \nCount the number of rows in the column 'Inv. Accounting Document Number' in the same table and rename the count to 'No. of Invoices'.\nGroup the results by the 'Last PO Vendor Name' column. \nOrder the results by the 'No. of Invoices' column in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Last PO Vendor Name\" AS \"Last PO Vendor Name\",\nCOUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM FLATTEN(\"defaultview-225\")\nGROUP BY 1\nORDER BY 2 desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Last PO Vendor Name\" AS \"Last PO Vendor Name\",\nCOUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM FLATTEN(\"defaultview-225\")\nGROUP BY 1\nORDER BY 2 desc"
    },
    {
        "filename": "11f85b95e3",
        "split": "test",
        "name": "Case Count & Cycle Time (PR Approval to Create PO) by PO Business Unit",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create PO Item')) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Approve PR item'))) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\", \n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 100",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the top 100 rows from the 'defaultview-545' table ordered by the count of CASE_ID in descending order. \nFor each row, calculate:\n1) The count of CASE_ID column values as 'No. of Cases'\n2) The average time difference between the last END_TIME value where EVENT_NAME is 'Create PO Item' and the first END_TIME value where EVENT_NAME is 'Approve PR item' as 'Avg. Cycle Time (PR Apprvl to Crt PO)'\n3) The value from the 'PO Business Unit' column\n",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\", \nAVG ((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Approve PR item')) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\",\n\"PO Business Unit\"\n\nFROM \"defaultview-545\"\nORDER BY 1 desc\nLIMIT 100",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\", \nAVG ((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Approve PR item')) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\",\n\"PO Business Unit\"\n\nFROM \"defaultview-545\"\nORDER BY 1 desc\nLIMIT 100"
    },
    {
        "filename": "1387d29cf3",
        "split": "test",
        "name": "\u00d8 WIP time Painting -> Assembly",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0020'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0010'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time difference between the first end time of a 'Start%' event with Routing Step '0020' and the first end time of a 'Complete%' event with Routing Step '0010' for all process instances in the 'defaultview-270' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n\t\tWHERE \"Routing Step\" LIKE '0010%'\n\t\tAND event_name MATCHES ('Complete%')))\n\t-(SELECT FIRST(end_time) FILTER (\n\t\tWHERE \"Routing Step\" LIKE '0020%'\n\t\tAND event_name MATCHES ('Start%')))\n   )\nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n\t\tWHERE \"Routing Step\" LIKE '0010%'\n\t\tAND event_name MATCHES ('Complete%')))\n\t-(SELECT FIRST(end_time) FILTER (\n\t\tWHERE \"Routing Step\" LIKE '0020%'\n\t\tAND event_name MATCHES ('Start%')))\n   )\nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "ebc0a9dc87",
        "split": "test",
        "name": "Automation Rate Goods Issue",
        "query": "SELECT SUM(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE (\"Event Created By User Type\" IN ('System','Batch Job','Service') \n        AND event_name IN ('GI for order'))\n\t)\n   ))\n/ SUM((SELECT COUNT(event_name)\n\tFILTER (\n\t\tWHERE (event_name IN ('GI for order')))))\n* 100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of 'GI for order' events created by system, batch job or service user types out of the total number of 'GI for order' events.\n\nTo do this:\n\n1. Count the number of 'GI for order' events created by system, batch job or service user types in the 'defaultview-183' table. Store this count.\n2. Count the total number of 'GI for order' events in the 'defaultview-183' table. Store this count.\n3. Divide the count from step 1 by the count from step 2. \n4. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\"EVENT_NAME\"  \n) FILTER (\n\tWHERE EVENT_NAME IN ('Create reservation automatically', 'GI for order')\n    AND (\"ActivityType\"UserType IN ('System', 'Batch Job', 'Service')\n    ))\n/ COUNT(\"EVENT_NAME\") FILTER (\n\tWHERE EVENT_NAME IN ('Create reservation automatically', 'GI for order'))\n* 100\nFROM FLATTEN(\"defaultview-183\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\"EVENT_NAME\"  \n) FILTER (\n\tWHERE EVENT_NAME IN ('Create reservation automatically', 'GI for order')\n    AND (\"ActivityType\"UserType IN ('System', 'Batch Job', 'Service')\n    ))\n/ COUNT(\"EVENT_NAME\") FILTER (\n\tWHERE EVENT_NAME IN ('Create reservation automatically', 'GI for order'))\n* 100\nFROM FLATTEN(\"defaultview-183\")"
    },
    {
        "filename": "4ac3ebb383",
        "split": "test",
        "name": "Invoices with immediate PT",
        "query": "SELECT COUNT(case_id) FILTER(\n\tWHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0) \nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the defaultview-225 table where the value in the Last Inv. Item Cash Discount Days 1 column is either NULL or 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER (WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL OR \"Last Inv. Item Cash Discount Days 1\" =-'0')\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER (WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL OR \"Last Inv. Item Cash Discount Days 1\" =-'0')\nFROM \"defaultview-225\""
    },
    {
        "filename": "67ee27564b",
        "split": "test",
        "name": "Number of Quotation Changes over time",
        "query": "SELECT\n  DATE_TRUNC('month', end_time) AS \"Change Date\",\n  COUNT (DISTINCT \"UniqueEventId\") AS \"# Changes\"\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  EVENT_NAME LIKE '%Quotation%'\n  AND ChangeType = 'Update'\nORDER BY\n  1 ASC NULLS FIRST FILL TIMESERIES('Month'),\n  NULL",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the month of the end_time column from the FLATTENed defaultview-383 table. Count the number of unique UniqueEventId values for each month. Only include rows where the EVENT_NAME column contains 'Quotation' and the ChangeType column equals 'Update'. Order the results by the month in ascending order, filling in any missing months with 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tDATE_TRUNC('month', (SELECT LAST (end_time))))    AS \"Month\",\n    COUNT (UniqueEventId) AS \"No. of Quotation Updates\"\n  \nFROM FLATTEN(\"defaultview-383\")\n\nWHERE EVENT_NAME MATCHES ('Quotation') AND ChangeType = 'Update'\nORDER BY 1 ASC NULLS FIRST\nFILL timeseries ('MONTH'), 0\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tDATE_TRUNC('month', (SELECT LAST (end_time))))    AS \"Month\",\n    COUNT (UniqueEventId) AS \"No. of Quotation Updates\"\n  \nFROM FLATTEN(\"defaultview-383\")\n\nWHERE EVENT_NAME MATCHES ('Quotation') AND ChangeType = 'Update'\nORDER BY 1 ASC NULLS FIRST\nFILL timeseries ('MONTH'), 0\n\n\n"
    },
    {
        "filename": "835c24ddd6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cases in the 'defaultview-225' table where the column 'Last Inv. Item Cash Discount Days 1' is either NULL or has a value of 0. This is done by counting the number of cases where 'Last Inv. Item Cash Discount Days 1' is NULL or 0, dividing that count by the total number of cases, and multiplying by 100 to get a percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\ncount (CASE_ID) FILTER (WHERE \"Last Inv. Item Cash Discount Days 1\" = 0 OR \"Last Inv. Item Cash Discount Days 1\" IS NULL)\n/\ncount (CASE_ID)\n* 100\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\ncount (CASE_ID) FILTER (WHERE \"Last Inv. Item Cash Discount Days 1\" = 0 OR \"Last Inv. Item Cash Discount Days 1\" IS NULL)\n/\ncount (CASE_ID)\n* 100\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "900d4e70c5",
        "split": "test",
        "name": "Avg. Cycle Time of Cases with Late Payment",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME)))\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the table 'defaultview-124', select the average time difference between the last end time (LAST(END_TIME)) and the first end time (FIRST(END_TIME)) for only those rows where the last FI invoice item due date (Last FI Invoice Item Due Date) is before the last FI invoice item clearing date (Last FI Invoice Item Clearing Date).",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG( ( \n\tlast(END_TIME) FILTER (WHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\") \n    ) \n\t- first(END_TIME) ) \nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG( ( \n\tlast(END_TIME) FILTER (WHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\") \n    ) \n\t- first(END_TIME) ) \nFROM \"defaultview-124\""
    },
    {
        "filename": "5ac5c83f16",
        "split": "test",
        "name": "_Number of timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the TSR_Count column of the defaultview-197 table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\"TSR_Count\" )\n\nFROM \"defaultview-197\" \n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\"TSR_Count\" )\n\nFROM \"defaultview-197\" \n\n                "
    },
    {
        "filename": "202dcc39f3",
        "split": "test",
        "name": "AVG Payment Time",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\"\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the month of the end_time column as 'Clearing Date'. \nThen calculate the average time between the ClearingDate and CreationDate columns, filtering to only include rows where the EVENT_NAME column starts with 'Clear'. \nDo this calculation on the flattened defaultview-222 table.\nFilter the table to only include rows where EVENT_NAME starts with 'Clear'.\nOrder the results by the Clearing Date in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  DATE_TRUNC('month', (SELECT LAST(end_time) WHERE event_name = 'Pre-Accept' OR event_name = 'Correction'))) AS \"Clearing Date\", \n  AVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Clear')) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create'))) FILTER (WHERE EVENT_NAME ~~ '>Clear') AS \"Average clearing duration (days)\" \nFROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%' \nORDER BY 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  DATE_TRUNC('month', (SELECT LAST(end_time) WHERE event_name = 'Pre-Accept' OR event_name = 'Correction'))) AS \"Clearing Date\", \n  AVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Clear')) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create'))) FILTER (WHERE EVENT_NAME ~~ '>Clear') AS \"Average clearing duration (days)\" \nFROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%' \nORDER BY 1"
    },
    {
        "filename": "4229e2c517",
        "split": "test",
        "name": "Table",
        "query": "SELECT count(case_id), event_name, \"Change Old Value\", \"Change New Value\"  \nFROM FLATTEN(\"defaultview-57\")\nWHERE Event_name ILIKE '%Update%'\nORDER BY 1 desc\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id for each event_name in the defaultview-57 table where the event_name contains the string 'Update'. Also return the old and new values for the changes. Order the results by the count in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id), event_name MATCH_RECOGNIZE (\n\tMEASURES\n  \t\t          changes.old_data AS old\n          \t\t, changes.new_data AS new\n          \t\t, 1 AS count\n  \t        \tPATTERN (changes)\n              \t\t\t) AS c1\nFROM ((SELECT event_name, \n\t\t    DataChanges.new_value AS new_data, \n\t\t\tDataChanges.old_value AS old_data\n\t FROM FLATTEN ((\"defaultview-57\") ))\n     WHERE 1 = (SELECT COUNT(1)\n     \t\t   FROM FLATTEN ((\"defaultview-57\") )\n               WHERE (Event_name LIKE '%Update%'))\n     \t  AND (\"Event_name\" IN ('Insert - General Configuration',\n                                     'Update - General Configuration',\n                                     'Update - Loan Data',\n                                     'Update - Access Details',\n                                     'Update - Investment Data',\n                                     'Update - Control Data',\n                                     'Update - Evaluation')\n     )\n    ) AS changes\nGROUP BY 2\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id), event_name MATCH_RECOGNIZE (\n\tMEASURES\n  \t\t          changes.old_data AS old\n          \t\t, changes.new_data AS new\n          \t\t, 1 AS count\n  \t        \tPATTERN (changes)\n              \t\t\t) AS c1\nFROM ((SELECT event_name, \n\t\t    DataChanges.new_value AS new_data, \n\t\t\tDataChanges.old_value AS old_data\n\t FROM FLATTEN ((\"defaultview-57\") ))\n     WHERE 1 = (SELECT COUNT(1)\n     \t\t   FROM FLATTEN ((\"defaultview-57\") )\n               WHERE (Event_name LIKE '%Update%'))\n     \t  AND (\"Event_name\" IN ('Insert - General Configuration',\n                                     'Update - General Configuration',\n                                     'Update - Loan Data',\n                                     'Update - Access Details',\n                                     'Update - Investment Data',\n                                     'Update - Control Data',\n                                     'Update - Evaluation')\n     )\n    ) AS changes\nGROUP BY 2\nORDER BY 1 DESC"
    },
    {
        "filename": "0a048d6ae2",
        "split": "test",
        "name": "Avg. Cycle Time (Create to Clear Invoice)",
        "query": "SELECT\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice')) AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-124' table, calculate the average time between the last end time of the 'Clear Invoice' event and the first end time of the 'Create FI Invoice' event. Store this average time in a column named 'Avg. Cycle Time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \n AVG(\n   (SELECT LAST(\"end_time\") FILTER (\n       WHERE BE.event_name IN ('Clear Invoice'))) \n- (SELECT FIRST(\"end_time\") FILTER (\n       WHERE BE.event_name IN ('Create FI Invoice'))) \n   )AS \"Avg. Cycle Time\"\n FROM \"defaultview-124\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \n AVG(\n   (SELECT LAST(\"end_time\") FILTER (\n       WHERE BE.event_name IN ('Clear Invoice'))) \n- (SELECT FIRST(\"end_time\") FILTER (\n       WHERE BE.event_name IN ('Create FI Invoice'))) \n   )AS \"Avg. Cycle Time\"\n FROM \"defaultview-124\" "
    },
    {
        "filename": "d56a723b4e",
        "split": "test",
        "name": "_Number of completed projects",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE \"Project_StageText\" = 'Completed'\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id entries in the defaultview-197 table where the Project_StageText column has the value 'Completed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) \nFROM \"defaultview-197\" \nWHERE Project_StageText = 'Completed'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) \nFROM \"defaultview-197\" \nWHERE Project_StageText = 'Completed'"
    },
    {
        "filename": "1052a139b9",
        "split": "test",
        "name": "_Percentage of projects created after start date",
        "query": "\nSELECT\n(\nSUM(\"Project_CreationAfterStartFlag\" )\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cases in the 'defaultview-197' table where the 'Project_CreationAfterStartFlag' column has a value of 1. This is done by:\n1. Summing all values in the 'Project_CreationAfterStartFlag' column\n2. Dividing the sum by the total number of cases in the table (COUNT(case_id))\n3. Multiplying the result by 100 to get a percentage value\n",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\"Project_CreationAfterStartFlag\")\n  / COUNT(case_id)\n  * 100\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\"Project_CreationAfterStartFlag\")\n  / COUNT(case_id)\n  * 100\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "b20189ef80",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\n  /\n  COUNT(case_id) FILTER (\n      WHERE \"PO Item Delivery Completed\" = 'Yes'\n      )\n  * 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases where the truncated date (day precision) of the last GR creation date is greater than the PO item last requested delivery date and the PO item delivery completed equals 'Yes'. Divide this count by the total number of cases where PO item delivery completed equals 'Yes' and multiply by 100. This calculates the percentage of late deliveries for completed items.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(CASE_ID) FILTER(\n\tWHERE DATE_TRUNC('day',(\n\t\tSELECT LAST (\"GR Creation Date\")\n    )) \n\t> \"PO Item last requested delivery date\"\n \tAND \"PO Item Delivery Completed\" = 'Yes') \n/ COUNT(CASE_ID) FILTER(\n \tWHERE \"PO Item Delivery Completed\" = 'Yes') * 100\nFROM \"SAP PO Extraction\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(CASE_ID) FILTER(\n\tWHERE DATE_TRUNC('day',(\n\t\tSELECT LAST (\"GR Creation Date\")\n    )) \n\t> \"PO Item last requested delivery date\"\n \tAND \"PO Item Delivery Completed\" = 'Yes') \n/ COUNT(CASE_ID) FILTER(\n \tWHERE \"PO Item Delivery Completed\" = 'Yes') * 100\nFROM \"SAP PO Extraction\""
    },
    {
        "filename": "c0ee4f416c",
        "split": "test",
        "name": "PTP_DB_On-Time Delivery Rate",
        "query": "\nSELECT\n(1 - \n\tCOUNT(case_id) FILTER (\n\t\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n\t\t\tAND \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n\t/\n\tCOUNT(case_id) FILTER (\n\t\tWHERE \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n)\n* 100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-124' table, select the percentage of purchase order items where the date the last goods receipt was created is after the last requested delivery date for that item and the item has been delivered. Calculate this as:\n\n1. Count the number of case IDs where:\n- The date the last goods receipt was created (using the DATE_TRUNC function to truncate to days) is after the last requested delivery date for that item \n- The item has been delivered ('PO Item Delivery Completed' = 'Yes')\n\n2. Count the total number of case IDs where the item has been delivered ('PO Item Delivery Completed' = 'Yes')\n\n3. Subtract the count from step 1 from 1\n\n4. Divide the result from step 3 by the count from step 2\n\n5. Multiply the result from step 4 by 100 to get the percentage",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\n\tcase_id\n    )\n     FILTER (WHERE\n\t  (\n      SELECT DATE_TRUNC('DAY', \n\t\t(\n         SELECT LAST (\"PO Delivery Date\")\n        )\n       )\n      )< (DATE_CLIP ([Last Goods Receipt Date Created]\n      \t  ))\n      AND (\"PO Item Delivery Completed\" = 'Yes'\n      )\n\t) AS \"#of late delivered PO items (PR-PO-GOODS RECEIPT)\", \nCOUNT(case_id) FILTER (WHERE (\"PO Item Delivery Completed\" = 'Yes')) AS \"#of Delivered PO Items\", \nCOUNT(\n\tcase_id\n    )\n     FILTER (\n      WHERE 1 = (\n      SELECT DATE_TRUNC('DAY', \"On Time Item\") -DATE_TRUNC('DAY', \"Late Item\"))\n      ) < 2 )  /  \n    COUNT(case_id) FILTER \n\t(WHERE  (\"PO Item Delivery Completed\" = 'Yes'))  \n    * 100\nAS \"# of Late Delivered PO Items (PR-PO DELIVERY ITEM)\",\n\n\nCOUNT(\n\tcase_id\n    )\n     FILTER (\n     \tWHERE 1 = (\n      \tSELECT DATE_TRUNC('DAY', \"On Time Item\") -DATE_TRUNC('DAY', \"Late Item\"))\n      ) < 2 )  \n    /  \n    COUNT(case_id) FILTER \n\t(WHERE  (\"PO Item Delivery Completed\" = 'Yes'))  \n    * 100\n    AS \"# of Late Delivered PO \nItem (Late Item)\"\n FROM \"defaultview-124\" \n\n \tWHERE\n \n\t (\n        SELECT IifNull(\n         (\n         SELECT LAST (DATE_TRUNC('day', \"PO Latest Delivery Date\")\n\t FILTER (\n        \"PO L Item Indicator for GR\" IN (TRUE)\n        OR (   (SELECT FIRST (\"PO LItemGrFinalInvd\") \n        \tWHERE ((SELECT LAST (\"Event_GoodRecCreatedBool\") = TRUE)) ) )))\n         ),\n         (\n         SELECT FIRST (DATE_TRUNC('day', Cl_Delivery_Item_Last_Date))\n         WHERE ((PO_LItemGrFinalInvd)) IN (TRUE))\n         ),\n           (\n           SELECT FIRST (DATE_TRUNC('day', Cl_Delivery_Item_Last_Date))\n           WHERE ((SELECT FIRST (\"Event_GoodRecCreatedBool\") = TRUE))) IS NULL\n           )\n          ) AS NoEinbuchungsDatum\n       )\n        = 'NoEinbuchungsDatum' \n        \n\n        --Pr\u00fcfung ob der PO LErstellprv>GeliefDatuILetzteTD \n        AND (SELECT FIRST (Cl_POItemCreatedBy)) = (SELECT FIRST (Cl_KUser))\n        AND DATE_TRUNC('DAY', \"PO Latest Delivery Date\") < (DATE_TRUNC('day', Cl_Delivery_Item_Last_Date))\n        \n        --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          SELECT FIRST (\"PO Final InvReceiptDate\") IS NOT NULL\n      )\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))\n       )\n       -- Pr\u00fcfung, ob die FW ab einer gewissen PO-Zeit eingegangen ist -> GeliefDatum gem\u00e4ss ClFW eingrenzen\n       AND DATE_TRUNC('DAY', (SELECT FIRST (\"PO Last GR Postng Date\")- \n            \"PO PR Created On\"))) >= 30 DAYS\n      \n        --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          \n          \"PO Display GR-Bsd Inv Receipt Date\" IS NOT NULL\n      )\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))\n       )\n\tAND\n\t\"Po_eks_LSolInd_AB\" = 1\n \n                                /*//Filter: PO mit L Solle eingang oder L_text = Erwartet)*/\n\t\n\t\n\t\n        \n        \n        \n        \n        --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          \"FW Delivery Completed\" IS NOT NULL\n      )\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))\n       )\n       -- Pr\u00fcfung, ob die FW ab einer gewissen PO-Zeit eingegangen ist -> GeliefDatum gem\u00e4ss ClFW eingrenzen\n       AND DATE_TRUNC('DAY', (SELECT FIRST (\"PO Last GR Postng Date\")- \n            \"PO PR Created On\"))) >= 30 DAYS\n      \n        --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          \n          \"Delivery Completed\" IS NOT NULL\n      )\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))\n       )\n        -- Pr\u00fcfung, ob die CBS Kostenstelle ab einer gewissen PO-Zeit eingegangen ist -> GeliefDatum nach KlDelAbr\n       AND DATE_TRUNC('DAY', (SELECT FIRST (\"PO Last GR Postng Date\"))- \n            (SELECT FIRST (\"PO Item Ir Deliv Dt\"))) >= 30 DAYS\n         --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          \n          (SELECT FIRST (\"PO Item Ir Deliv Date Compl\")))) <= (SELECT FIRST (\"PO Last GR Postng Date\" ))\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))). \n       )\n        -- Pr\u00fcfung, ob die CBS Kostenstelle ab einer gewissen PO-Zeit eingegangen ist -> GeliefDatum nach PO\n       AND DATE_TRUNC('DAY', (SELECT FIRST (\"PO Last GR Postng Date\"))- \n            (SELECT FIRST (\"PO Item Ir Deliv Dt\"))) >= 30 DAYS\n         --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          (SELECT FIRST (\"PO Item Ir Deliv Date Compl\"))) <= (SELECT FIRST (\"PO Last GR Postng Date\" ))\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))) \n\n        --\"PO Archive Status\" = 'shouldbeopen' --201\n        --Falls nein, wird der Tabellen-Block durchlaufen\n      OR\n      (\n          (\"PO Archive Status\" = 'ApplicationFollowUp')\n          OR\n          (\"PO Archive Status\" = 'Application2ndPIRequest')\n          OR\n          (\"PO Archive Status\" = 'Application SupplierBackItmConfPart')\n          OR\n          (\"PO Archive Status\" = 'Application 2ndRM')}}\n          OR\n          (\"PO Archive Status\" = 'AppliShouldBeClosed'}}\n\n          OR\n          (\"PO Archive Status\" = 'Application2ndPIATextItem')}\n          OR\n          (\"PO Archive Status\" = 'Application2ndDeliveryFinished')}\n\n          --Nachfolgende Bedingung: um die Meldung zu reduzieren\n           --OR\n           --(\"PO Archive Status\" = 'Application2ndDelivText')\n          OR\n          (\"PO Archive Status\" = 'ApplicationGoodsRecDeliveryFollowup')\n          OR\n          (\"PO Archive Status\" = 'Application2ndDelivNichtGeliefert')\n      )",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\n\tcase_id\n    )\n     FILTER (WHERE\n\t  (\n      SELECT DATE_TRUNC('DAY', \n\t\t(\n         SELECT LAST (\"PO Delivery Date\")\n        )\n       )\n      )< (DATE_CLIP ([Last Goods Receipt Date Created]\n      \t  ))\n      AND (\"PO Item Delivery Completed\" = 'Yes'\n      )\n\t) AS \"#of late delivered PO items (PR-PO-GOODS RECEIPT)\", \nCOUNT(case_id) FILTER (WHERE (\"PO Item Delivery Completed\" = 'Yes')) AS \"#of Delivered PO Items\", \nCOUNT(\n\tcase_id\n    )\n     FILTER (\n      WHERE 1 = (\n      SELECT DATE_TRUNC('DAY', \"On Time Item\") -DATE_TRUNC('DAY', \"Late Item\"))\n      ) < 2 )  /  \n    COUNT(case_id) FILTER \n\t(WHERE  (\"PO Item Delivery Completed\" = 'Yes'))  \n    * 100\nAS \"# of Late Delivered PO Items (PR-PO DELIVERY ITEM)\",\n\n\nCOUNT(\n\tcase_id\n    )\n     FILTER (\n     \tWHERE 1 = (\n      \tSELECT DATE_TRUNC('DAY', \"On Time Item\") -DATE_TRUNC('DAY', \"Late Item\"))\n      ) < 2 )  \n    /  \n    COUNT(case_id) FILTER \n\t(WHERE  (\"PO Item Delivery Completed\" = 'Yes'))  \n    * 100\n    AS \"# of Late Delivered PO \nItem (Late Item)\"\n FROM \"defaultview-124\" \n\n \tWHERE\n \n\t (\n        SELECT IifNull(\n         (\n         SELECT LAST (DATE_TRUNC('day', \"PO Latest Delivery Date\")\n\t FILTER (\n        \"PO L Item Indicator for GR\" IN (TRUE)\n        OR (   (SELECT FIRST (\"PO LItemGrFinalInvd\") \n        \tWHERE ((SELECT LAST (\"Event_GoodRecCreatedBool\") = TRUE)) ) )))\n         ),\n         (\n         SELECT FIRST (DATE_TRUNC('day', Cl_Delivery_Item_Last_Date))\n         WHERE ((PO_LItemGrFinalInvd)) IN (TRUE))\n         ),\n           (\n           SELECT FIRST (DATE_TRUNC('day', Cl_Delivery_Item_Last_Date))\n           WHERE ((SELECT FIRST (\"Event_GoodRecCreatedBool\") = TRUE))) IS NULL\n           )\n          ) AS NoEinbuchungsDatum\n       )\n        = 'NoEinbuchungsDatum' \n        \n\n        --Pr\u00fcfung ob der PO LErstellprv>GeliefDatuILetzteTD \n        AND (SELECT FIRST (Cl_POItemCreatedBy)) = (SELECT FIRST (Cl_KUser))\n        AND DATE_TRUNC('DAY', \"PO Latest Delivery Date\") < (DATE_TRUNC('day', Cl_Delivery_Item_Last_Date))\n        \n        --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          SELECT FIRST (\"PO Final InvReceiptDate\") IS NOT NULL\n      )\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))\n       )\n       -- Pr\u00fcfung, ob die FW ab einer gewissen PO-Zeit eingegangen ist -> GeliefDatum gem\u00e4ss ClFW eingrenzen\n       AND DATE_TRUNC('DAY', (SELECT FIRST (\"PO Last GR Postng Date\")- \n            \"PO PR Created On\"))) >= 30 DAYS\n      \n        --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          \n          \"PO Display GR-Bsd Inv Receipt Date\" IS NOT NULL\n      )\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))\n       )\n\tAND\n\t\"Po_eks_LSolInd_AB\" = 1\n \n                                /*//Filter: PO mit L Solle eingang oder L_text = Erwartet)*/\n\t\n\t\n\t\n        \n        \n        \n        \n        --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          \"FW Delivery Completed\" IS NOT NULL\n      )\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))\n       )\n       -- Pr\u00fcfung, ob die FW ab einer gewissen PO-Zeit eingegangen ist -> GeliefDatum gem\u00e4ss ClFW eingrenzen\n       AND DATE_TRUNC('DAY', (SELECT FIRST (\"PO Last GR Postng Date\")- \n            \"PO PR Created On\"))) >= 30 DAYS\n      \n        --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          \n          \"Delivery Completed\" IS NOT NULL\n      )\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))\n       )\n        -- Pr\u00fcfung, ob die CBS Kostenstelle ab einer gewissen PO-Zeit eingegangen ist -> GeliefDatum nach KlDelAbr\n       AND DATE_TRUNC('DAY', (SELECT FIRST (\"PO Last GR Postng Date\"))- \n            (SELECT FIRST (\"PO Item Ir Deliv Dt\"))) >= 30 DAYS\n         --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          \n          (SELECT FIRST (\"PO Item Ir Deliv Date Compl\")))) <= (SELECT FIRST (\"PO Last GR Postng Date\" ))\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))). \n       )\n        -- Pr\u00fcfung, ob die CBS Kostenstelle ab einer gewissen PO-Zeit eingegangen ist -> GeliefDatum nach PO\n       AND DATE_TRUNC('DAY', (SELECT FIRST (\"PO Last GR Postng Date\"))- \n            (SELECT FIRST (\"PO Item Ir Deliv Dt\"))) >= 30 DAYS\n         --Falls ja, dann wird das n\u00e4chste Statement ausgef\u00fchrt\n    \n  ) )  \n        --Hier wird in den oberen Fall gejumped\n       OR\n       (\n          (\n               (SELECT FIRST (Cl_POItemCreatedBy)) <> (SELECT FIRST (Cl_KUser))\n          )\n          AND NOT IS_NULL ((SELECT FIRST (Cl_KUser))) -- bit notwendig wg Performance\n       )\n        -- Falls nein, wird das n\u00e4chste Statement ausgef\u00fchrt\n      OR\n      (\n          (SELECT FIRST (\"PO Item Ir Deliv Date Compl\"))) <= (SELECT FIRST (\"PO Last GR Postng Date\" ))\n        --Hier wird in den unteren Fall gejumpt\n       OR\n       (\n          IS_NULL ((SELECT FIRST (Cl_KUser))))) \n\n        --\"PO Archive Status\" = 'shouldbeopen' --201\n        --Falls nein, wird der Tabellen-Block durchlaufen\n      OR\n      (\n          (\"PO Archive Status\" = 'ApplicationFollowUp')\n          OR\n          (\"PO Archive Status\" = 'Application2ndPIRequest')\n          OR\n          (\"PO Archive Status\" = 'Application SupplierBackItmConfPart')\n          OR\n          (\"PO Archive Status\" = 'Application 2ndRM')}}\n          OR\n          (\"PO Archive Status\" = 'AppliShouldBeClosed'}}\n\n          OR\n          (\"PO Archive Status\" = 'Application2ndPIATextItem')}\n          OR\n          (\"PO Archive Status\" = 'Application2ndDeliveryFinished')}\n\n          --Nachfolgende Bedingung: um die Meldung zu reduzieren\n           --OR\n           --(\"PO Archive Status\" = 'Application2ndDelivText')\n          OR\n          (\"PO Archive Status\" = 'ApplicationGoodsRecDeliveryFollowup')\n          OR\n          (\"PO Archive Status\" = 'Application2ndDelivNichtGeliefert')\n      )"
    },
    {
        "filename": "8f6fbc2031",
        "split": "test",
        "name": "Cancellation rate of purchase orders",
        "query": "SELECT COUNT(case_id) FILTER (\n    WHERE (SELECT FIRST(event_name) FILTER (\n            WHERE event_name IN ('Delete PO Item'))) IS NOT NULL\n    )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-57' table where the first event_name value is 'Delete PO Item'. Divide this count by the total number of case_id rows in the table and multiply by 100 to get the percentage of cases that contain the 'Delete PO Item' event.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER(\n\tWHERE (SELECT FIRST(event_name) \n\t\t\tWHERE event_name = 'Delete PO Item' )\n\t)\n/\nCOUNT (CASE_ID) * 100\n-- COUNT(event_name) FILTER(WHERE event_name = 'Delete PO Item')\n-- \n-- SUM((event_name = 'Delete PO Item')::INT)\nFROM \"defaultview-57\"\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER(\n\tWHERE (SELECT FIRST(event_name) \n\t\t\tWHERE event_name = 'Delete PO Item' )\n\t)\n/\nCOUNT (CASE_ID) * 100\n-- COUNT(event_name) FILTER(WHERE event_name = 'Delete PO Item')\n-- \n-- SUM((event_name = 'Delete PO Item')::INT)\nFROM \"defaultview-57\"\n"
    },
    {
        "filename": "d2566dc5b5",
        "split": "test",
        "name": "Top 5 Variants ranked by 90th Percentile Cycle Time",
        "query": "SELECT event_name AS \"Variant\", \n\t  PERCENTILE_DISC(0.9) WITHIN GROUP(ORDER BY (SELECT LAST(end_time) - FIRST(end_time))) AS \"90th Percentile Cycle Time per Variant\"\n  FROM \"defaultview-9\"\n GROUP BY 1\n ORDER BY 2 DESC\n LIMIT 5",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the event_name column from the defaultview-9 table and rename it as Variant. \nThen calculate the 90th percentile of the cycle time per variant, which is the time between the last end_time and first end_time for each variant. \nGroup the results by the Variant column. \nOrder the results by the 90th Percentile Cycle Time per Variant in descending order. \nLimit the results to the top 5 variants with the highest 90th percentile cycle time.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Variant\", \nPERCENTILE_CONT(0.9) OVER (\nORDER BY (SELECT NULL))\n*(SELECT Duration\n  WHERE EVENT_NAME = 'Checkout'\n  AND DURATION IS NOT NULL\n     )\nFROM \"defaultview-9\"\nGROUP BY 1\nORDER BY 2 DESC\tNULLS LAST\nLIMIT 5",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Variant\", \nPERCENTILE_CONT(0.9) OVER (\nORDER BY (SELECT NULL))\n*(SELECT Duration\n  WHERE EVENT_NAME = 'Checkout'\n  AND DURATION IS NOT NULL\n     )\nFROM \"defaultview-9\"\nGROUP BY 1\nORDER BY 2 DESC\tNULLS LAST\nLIMIT 5"
    },
    {
        "filename": "c2922a0092",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with manual changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term')) AND BOOL_OR(\"Event Created By User Type\" = 'Dialog')))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-59' table where the event_name column has the value 'Update Payment Term' OR the 'Event Created By User Type' column has the value 'Dialog'. Divide this count by the total number of case_id rows in the table and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (CASE_ID) FILTER \n(WHERE (EVENT_NAME ='Update Payment Term' \n OR \"Event Created By User Type\" = 'Dialog')) \n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (CASE_ID) FILTER \n(WHERE (EVENT_NAME ='Update Payment Term' \n OR \"Event Created By User Type\" = 'Dialog')) \n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-59\""
    },
    {
        "filename": "9c5586849c",
        "split": "test",
        "name": "_Number of projects with costs after end date",
        "query": "\nSELECT\nCOUNT (case_id) FILTER (\n\tWHERE (\"CostDoc_EnterDocAfterProjectClosingCount\" > 0)\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the defaultview-197 table where the CostDoc_EnterDocAfterProjectClosingCount column has a value greater than 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) FROM \"defaultview-197\"\n WHERE \"CostDoc_EnterDocAfterProjectClosingCount\"  > 0\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) FROM \"defaultview-197\"\n WHERE \"CostDoc_EnterDocAfterProjectClosingCount\"  > 0\n"
    },
    {
        "filename": "b412cf1c81",
        "split": "test",
        "name": "Number of Closed Projects",
        "query": "SELECT COUNT(DISTINCT case_id)\nFROM \"defaultview-197\"\nWHERE \"Project_Stage\"  IN ('P005')\n\n--SELECT COUNT(DISTINCT case_id)\n--FROM FLATTEN(\"defaultview-197\")\n--WHERE event_name = ('Close Project')\n--AND end_time < NOW()",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of unique case IDs from the 'defaultview-197' table where the value in the 'Project_Stage' column is 'P005'. This query was constructed by specifying the table name 'defaultview-197', the column name 'Project_Stage' and the value 'P005' that is checked for in that column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  COUNT (DISTINCT \"case_id\" ) \nFROM \n  \"defaultview-197\"\nWHERE\n \"Event Name\"   MATCHES ('^.*Project_Stage.* [^P005P005].*$')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  COUNT (DISTINCT \"case_id\" ) \nFROM \n  \"defaultview-197\"\nWHERE\n \"Event Name\"   MATCHES ('^.*Project_Stage.* [^P005P005].*$')"
    },
    {
        "filename": "1b5cdb573c",
        "split": "test",
        "name": "Value",
        "query": "SELECT\nSUM(\n\t(SELECT COUNT(CASE_ID) FILTER (\n \tWHERE (EVENT_NAME IN ('Personal Data Change WF Initiated'))))) \n/ COUNT (CASE_ID) \n*100\nFROM \"defaultview-299\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cases in the 'defaultview-299' table where the 'EVENT_NAME' column has the value 'Personal Data Change WF Initiated'. This is done by:\n1. Counting the number of rows in 'defaultview-299' where 'EVENT_NAME' equals 'Personal Data Change WF Initiated'\n2. Dividing this count by the total number of rows in 'defaultview-299'\n3. Multiplying the result by 100 to get a percentage",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"EVENT_NAME\" \n    IN ('Personal Data Change WF Initiated')))\n/\nCOUNT(case_id) * 100\n\nFROM \"defaultview-299\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"EVENT_NAME\" \n    IN ('Personal Data Change WF Initiated')))\n/\nCOUNT(case_id) * 100\n\nFROM \"defaultview-299\""
    },
    {
        "filename": "208336c2e5",
        "split": "test",
        "name": "Automation Rate Material availability checked",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Check Material Availability'\n\n\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of 'Check Material Availability' events created by user types other than 'Dialog' from the 'defaultview-183' table. \nFirst, count the total number of 'Check Material Availability' events in the table. \nThen, filter to only count 'Check Material Availability' events where the 'Event Created By User Type' column does not contain the value 'Dialog'. \nDivide the filtered count by the total count and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(\nCOUNT(\"Event Name\") FILTER (\n\tWHERE \"Event Created By User Type\" NOT IN ('Dialog')\n)\n/ COUNT(\"Event Name\")\n) * 100\nFROM FLATTEN(\"defaultview-183\")\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(\nCOUNT(\"Event Name\") FILTER (\n\tWHERE \"Event Created By User Type\" NOT IN ('Dialog')\n)\n/ COUNT(\"Event Name\")\n) * 100\nFROM FLATTEN(\"defaultview-183\")\n                "
    },
    {
        "filename": "e048ff1b2f",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))\n        \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item'  'Receive Invoice')\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time between the end of the 'Create PO Item' event and the end of the 'Receive Invoice' event for all process instances in the 'defaultview-431' table where both of these events occurred. To do this:\n\n1. For each process instance, find the timestamp of the last 'Receive Invoice' event (call this LAST_RECEIVE_INVOICE)\n2. For each process instance, find the timestamp of the first 'Create PO Item' event (call this FIRST_CREATE_PO_ITEM)\n3. Subtract FIRST_CREATE_PO_ITEM from LAST_RECEIVE_INVOICE to get the time between these events for each process instance \n4. Take the average of these time differences across all process instances",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG(\n\t\t(SELECT LAST(END_TIME) \n\t\tWHERE EVENT_NAME = 'Receive Invoice') \n\t\t-\n\t\t(SELECT FIRST(END_TIME) \n\t\tWHERE EVENT_NAME = 'Create PO Item')\n\t\t\t)\n\tFROM \"defaultview-431\"\n    WHERE EVENT_NAME MATCHES ('Create PO Item' 'Receive Invoice')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG(\n\t\t(SELECT LAST(END_TIME) \n\t\tWHERE EVENT_NAME = 'Receive Invoice') \n\t\t-\n\t\t(SELECT FIRST(END_TIME) \n\t\tWHERE EVENT_NAME = 'Create PO Item')\n\t\t\t)\n\tFROM \"defaultview-431\"\n    WHERE EVENT_NAME MATCHES ('Create PO Item' 'Receive Invoice')"
    },
    {
        "filename": "8dc7922da6",
        "split": "test",
        "name": "PO Item changes rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES(ILIKE '%Update%')))\n\t/\n\tCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES('Create PO Item'))\n\t)\n\t* 100\n    \n    -- ILIKE '%Update%'\n    \n    \nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cases in the 'defaultview-124' table that contain an event with a name containing the string 'Update' compared to the total number of cases that contain an event named 'Create PO Item'. This is done by:\n\n1. Counting the number of cases that contain an event with a name containing 'Update' \n2. Counting the total number of cases that contain an event named 'Create PO Item'\n3. Dividing the count from step 1 by the count from step 2\n4. Multiplying the result by 100 to get a percentage",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) FILTER (\n    WHERE (SELECT BOOL_OR (EVENT_NAME ILIKE '%Update%') AS \"Has Updates\")\n        )\n/ \nCOUNT (CASE_ID) FILTER (\n    WHERE EVENT_NAME = 'Create PO Item')\n* 100\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) FILTER (\n    WHERE (SELECT BOOL_OR (EVENT_NAME ILIKE '%Update%') AS \"Has Updates\")\n        )\n/ \nCOUNT (CASE_ID) FILTER (\n    WHERE EVENT_NAME = 'Create PO Item')\n* 100\nFROM \"defaultview-124\""
    },
    {
        "filename": "4d107651fe",
        "split": "test",
        "name": "Volume of cancelled orders",
        "query": "SELECT SUM(\"PO Item Net Order Value in USD\") FILTER (\n\tWHERE event_name MATCHES('Delete PO Item')\n\t)\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the 'PO Item Net Order Value in USD' column for all rows in the 'defaultview-57' table where the value in the 'event_name' column contains the string 'Delete PO Item'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n\tSUM(\"PO Item Net Order Value in USD\")\nFROM\n\t\"defaultview-57\"\nWHERE\n\tevent_name LIKE '%Delete PO Item%'\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n\tSUM(\"PO Item Net Order Value in USD\")\nFROM\n\t\"defaultview-57\"\nWHERE\n\tevent_name LIKE '%Delete PO Item%'\n                "
    },
    {
        "filename": "e0aec295eb",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of overdue invoice items in the 'defaultview-225' table. \nFirst, count the number of case_id rows where the difference between the 'Last Inv. Item Clearing Date' and 'Last Inv. Item Due Date' columns is greater than 1 day. \nThen, count the total number of case_id rows where 'Last Inv. Item Clearing Date' is not null.\nFinally, divide the first count by the second count and multiply by 100 to get the percentage of overdue invoice items.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\") > DURATION '1day')\n)\n/ \nCOUNT(case_id) FILTER (\n\tWHERE \"Last Inv. Item Clearing Date\" IS NOT NULL)\n) * 100\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\") > DURATION '1day')\n)\n/ \nCOUNT(case_id) FILTER (\n\tWHERE \"Last Inv. Item Clearing Date\" IS NOT NULL)\n) * 100\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "488b42c7bc",
        "split": "test",
        "name": "Company code and its latest changes ",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the company code column, the most recent invoice date column which contains the latest invoice date value per case, the terms of payment key column and the vendor master payment terms column from a temporary table. This temporary table is created by flattening the defaultview-225 table and keeping only the latest invoice date per case.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Company code\" ,\n\"vendor master payment terms\" as \"Credit Terms\",\nCASE WHEN \"terms of payment key\" ='Z101' THEN '30 days'\nWHEN \"terms of payment key\" ='Z300' THEN '30 days'\nWHEN \"terms of payment key\" ='Z301' THEN '0 days'\nWHEN \"terms of payment key\" ='Z302' THEN '21 days'\nWHEN \"terms of payment key\" ='Z303' THEN '14 days'\nWHEN \"terms of payment key\" ='Z500' THEN '0 days' END AS \"Calc. Payment due date\",\n\"Calc. Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")\nWHERE RECENT(\"Cleared item due date\") - RECENT(\"Item Posting Date\")  >= DURATION '7DAYS' \nOR RECENT(\"Cleared item due date\") - RECENT(\"Item Posting Date\")  <= DURATION '0DAYS' \nAND \"terms of payment key\" IS NOT NULL\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Company code\" ,\n\"vendor master payment terms\" as \"Credit Terms\",\nCASE WHEN \"terms of payment key\" ='Z101' THEN '30 days'\nWHEN \"terms of payment key\" ='Z300' THEN '30 days'\nWHEN \"terms of payment key\" ='Z301' THEN '0 days'\nWHEN \"terms of payment key\" ='Z302' THEN '21 days'\nWHEN \"terms of payment key\" ='Z303' THEN '14 days'\nWHEN \"terms of payment key\" ='Z500' THEN '0 days' END AS \"Calc. Payment due date\",\n\"Calc. Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")\nWHERE RECENT(\"Cleared item due date\") - RECENT(\"Item Posting Date\")  >= DURATION '7DAYS' \nOR RECENT(\"Cleared item due date\") - RECENT(\"Item Posting Date\")  <= DURATION '0DAYS' \nAND \"terms of payment key\" IS NOT NULL\n"
    },
    {
        "filename": "a58ec89c7f",
        "split": "test",
        "name": "Table",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the company code column, the most recent invoice date column which was calculated using the LAST() aggregation function on the invoice accounting document date column, the last invoice item terms of payment key column and the last invoice item vendor master payment terms column from a temporary table called Temp. This temporary table was created by flattening the defaultview-225 table and selecting the case_id, company code, company code text, most recent invoice date, last invoice item terms of payment key and last invoice item vendor master payment terms columns.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n   company_code,\n   (SELECT LAST (invoice_accounting_document_date)) AS \"Most Recent Inv Date\",\n   \"Last Inv Item Terms of Payment Key\",\n   \"Last Inv Item Vendor Master Payment Terms\"\n\nFROM FLATTEN (\"defaultview-225\")\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n   company_code,\n   (SELECT LAST (invoice_accounting_document_date)) AS \"Most Recent Inv Date\",\n   \"Last Inv Item Terms of Payment Key\",\n   \"Last Inv Item Vendor Master Payment Terms\"\n\nFROM FLATTEN (\"defaultview-225\")\n"
    },
    {
        "filename": "72e24c5831",
        "split": "test",
        "name": " Time difference planned vs actual end date without planned order",
        "query": "SELECT avg(\n\"Scheduled Finish Date\" - \"Actual Finish Date\" \n)\nFROM \"defaultview-183\"\nWhere \"Planned Order Number\" is null",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average difference between the Scheduled Finish Date and Actual Finish Date columns for all rows in the defaultview-183 table where the Planned Order Number column is empty (null).",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\"Scheduled Finish Date\"  - \"Actual Finish Date\")\nFROM \"defaultview-183\"\nWHERE \n\"Planned Order Number\"  IS NULL\n                    \n    \n                    \n    \n                    \n    \n                \n                \n\n\n                    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n                    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    \n    \n    \n    \n    \n\n\n                    \n    \n    \n\n\n\n\n\n\n\n\n                \n    \n    \n\n\n\n                    \n    \n    \n    \n\n\n\n\n                    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    \n    \n    \n    \n    \n\n\n\n\n            \n                \n            \n        \n\n    \n\n\n\n    \n\n\n                    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n                    \n    \n    \n    \n    \n\n\n                \n\n\n\n    \n\n\n        \n\n    \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n                \n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n                \n\n\n\n    \n            \n\n        \n\n    \n    \n\n\n\n            \n            \n        \n    \n\n\n\n\n                        \n\n                        \n\n                    \n    \n    \n    \n\n\n\n\n\n\n    \n\n\n\n                \n \n\n\n            \n        \n\n    \n\n\n\n    \n\n    \n\n\n\n        \n        \n        \n    \n\n\n                \n\n\n                \n\n\n        \n\n\n\n    \n\n\n\n\n    \n\n\n\n                \n\n\n                \n\n                \n            \n        \n\n\n    \n\n\n\n        \n\n        \n    \n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\"Scheduled Finish Date\"  - \"Actual Finish Date\")\nFROM \"defaultview-183\"\nWHERE \n\"Planned Order Number\"  IS NULL\n                    \n    \n                    \n    \n                    \n    \n                \n                \n\n\n                    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n                    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    \n    \n    \n    \n    \n\n\n                    \n    \n    \n\n\n\n\n\n\n\n\n                \n    \n    \n\n\n\n                    \n    \n    \n    \n\n\n\n\n                    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    \n    \n    \n    \n    \n\n\n\n\n            \n                \n            \n        \n\n    \n\n\n\n    \n\n\n                    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n                    \n    \n    \n    \n    \n\n\n                \n\n\n\n    \n\n\n        \n\n    \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n\n\n\n                \n\n\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n                \n\n\n\n    \n            \n\n        \n\n    \n    \n\n\n\n            \n            \n        \n    \n\n\n\n\n                        \n\n                        \n\n                    \n    \n    \n    \n\n\n\n\n\n\n    \n\n\n\n                \n \n\n\n            \n        \n\n    \n\n\n\n    \n\n    \n\n\n\n        \n        \n        \n    \n\n\n                \n\n\n                \n\n\n        \n\n\n\n    \n\n\n\n\n    \n\n\n\n                \n\n\n                \n\n                \n            \n        \n\n\n    \n\n\n\n        \n\n        \n    \n\n\n\n"
    },
    {
        "filename": "0df706fd5d",
        "split": "test",
        "name": "Work Order Backlog",
        "query": "SELECT count(case_id) \n\t\tFILTER( WHERE(\n        \tSELECT count(event_name)\n            WHERE event_name = 'Order: REL - Released') < 1)\n\nFROM \"defaultview-95\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id values in the 'defaultview-95' table where the number of 'Order: REL - Released' event_name values is less than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) AS \"# Orders not Released Yet\" \nFROM \"defaultview-95\"\nWHERE \n(SELECT count(event_name) \n FROM \"defaultview-95\".BEHAVIOUR \n WHERE event_name = 'Order: REL - Released'\n) < 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) AS \"# Orders not Released Yet\" \nFROM \"defaultview-95\"\nWHERE \n(SELECT count(event_name) \n FROM \"defaultview-95\".BEHAVIOUR \n WHERE event_name = 'Order: REL - Released'\n) < 1"
    },
    {
        "filename": "e0ceb3aa5d",
        "split": "test",
        "name": "Total No. of Cases",
        "query": "SELECT COUNT(CASE_ID) \nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of rows in the table named 'defaultview-124' by counting the values in the column named 'CASE_ID'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(\"CASE_ID\") FROM  \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(\"CASE_ID\") FROM  \"defaultview-124\""
    },
    {
        "filename": "0e70ef39a0",
        "split": "test",
        "name": "Late Payment Rate  (by Volume)",
        "query": "SELECT (\nCOUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' \nAND (ClearingDate   - NetDueDate)  > DURATION '1day')  \n/ COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n) * 100\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cleared Accounts Receivable (AR) items that were cleared more than 1 day after the Net Due Date. \nTo do this:\n1. Count the distinct ARUniqueKeys for rows where the EVENT_NAME column starts with 'Clear' and the ClearingDate column is more than 1 day after the NetDueDate column.\n2. Count the distinct ARUniqueKeys for all rows where the EVENT_NAME column starts with 'Clear'.\n3. Divide the result of step 1 by the result of step 2. \n4. Multiply the result of step 3 by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (DISTINCT ARUniqueKey) FILTER (\n    WHERE (SELECT FIRST(EVENT_NAME) \n          WHERE EVENT_NAME LIKE 'Clear%' \n          AND DATE_DIFF('day', \"Net Due Date\", \"Clearing Date\") > 1))\n/ COUNT (DISTINCT ARUniqueKey) FILTER (\n    WHERE (SELECT FIRST(EVENT_NAME) \n          WHERE EVENT_NAME LIKE 'Clear%')) \n* 100\nFROM \"defaultview-388\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (DISTINCT ARUniqueKey) FILTER (\n    WHERE (SELECT FIRST(EVENT_NAME) \n          WHERE EVENT_NAME LIKE 'Clear%' \n          AND DATE_DIFF('day', \"Net Due Date\", \"Clearing Date\") > 1))\n/ COUNT (DISTINCT ARUniqueKey) FILTER (\n    WHERE (SELECT FIRST(EVENT_NAME) \n          WHERE EVENT_NAME LIKE 'Clear%')) \n* 100\nFROM \"defaultview-388\"\n"
    },
    {
        "filename": "3ffcebe83b",
        "split": "test",
        "name": "Late Payments by Company Code",
        "query": "SELECT\n  \"Accounting Company Code\"  AS \"Company Code\",\n  SUM (\"Last Invoice Item Amount\" ) AS \"Invoice Amount\",\n  COUNT(case_id) AS \"Number of Invoices\"\nFROM\n  \"defaultview-545\"\nWHERE\n  (\n    \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\n  )\nORDER BY\n  2 DESC\nNULLS LAST",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the 'Accounting Company Code' column as 'Company Code', sum the values in the 'Last Invoice Item Amount' column as 'Invoice Amount' and count the number of rows in the 'case_id' column as 'Number of Invoices' from the 'defaultview-545' table. Filter the rows where the value in the 'Last Invoice Due Date' column is less than the value in the 'Last Invoice Payment Date' column. Order the results by the 'Invoice Amount' in descending order, with null values last.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\"Accounting Company Code\"  as \"Company Code\", \nSUM(\"Last Invoice Item Amount\") AS \"Invoice Amount\",\ncount(case_id) AS \"Number of Invoices\"\nFROM \"defaultview-545\" \nWHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\nORDER BY 2 DESC NULLS LAST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\"Accounting Company Code\"  as \"Company Code\", \nSUM(\"Last Invoice Item Amount\") AS \"Invoice Amount\",\ncount(case_id) AS \"Number of Invoices\"\nFROM \"defaultview-545\" \nWHERE \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\nORDER BY 2 DESC NULLS LAST"
    },
    {
        "filename": "a399be4a32",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference",
        "query": "SELECT count(case_id) FROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the defaultview-183 table where the Actual Finish Date column has the same value as the Scheduled Finish Date column and the Planned Order Number column is empty (NULL).",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id)\nFROM \"defaultview-183\" \nWhere \"Actual Finish Date\" =  \"Scheduled Finish Date\" \nAND  \"Planned Order Number\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id)\nFROM \"defaultview-183\" \nWhere \"Actual Finish Date\" =  \"Scheduled Finish Date\" \nAND  \"Planned Order Number\" IS NULL"
    },
    {
        "filename": "737c4d00c6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the percentage of cases in the 'defaultview-225' table where the column 'Last Inv. Item Cash Discount Days 1' is either NULL or has the value 0. This is done by counting the number of cases where 'Last Inv. Item Cash Discount Days 1' is NULL or 0, dividing that by the total number of cases, and multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(CASE_ID) FILTER (\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\"\n\t  \t   IS NULL\n\t\t  \tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n\t) \n/ COUNT(CASE_ID)\n*100\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(CASE_ID) FILTER (\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\"\n\t  \t   IS NULL\n\t\t  \tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n\t) \n/ COUNT(CASE_ID)\n*100\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "2a5c42276f",
        "split": "test",
        "name": "\u00d8 WIP time Assembly -> Inspection",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0030'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0020'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time difference between the first end_time of a 'Start%' event with Routing Step '0030' and the first end_time of a 'Complete%' event with Routing Step '0020' for all process instances in the 'defaultview-270' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT FIRST(end_time) FILTER (\n\t\tWHERE event_name LIKE 'Start%'\n        AND ( \"Routing Step\" = '0030' )\n)), (SELECT FIRST(end_time) FILTER (\n\t\tWHERE event_name LIKE 'Complete%'\n        AND ( \"Routing Step\" = '0020' )\n    )))\nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT FIRST(end_time) FILTER (\n\t\tWHERE event_name LIKE 'Start%'\n        AND ( \"Routing Step\" = '0030' )\n)), (SELECT FIRST(end_time) FILTER (\n\t\tWHERE event_name LIKE 'Complete%'\n        AND ( \"Routing Step\" = '0020' )\n    )))\nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "160da29779",
        "split": "test",
        "name": "Average time issue to assign first reviewer",
        "query": "SELECT \nAVG(\n\t\t(SELECT FIRST(end_time) \n\t \tWHERE event_name IN ('Assign Validator'))\n    - \t(SELECT FIRST(end_time)\n       \tWHERE event_name IN ('Change Status to Ready For Review'))\n\t)\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to Ready For Review' ~> \n    \t\t\t\t\t\t 'Change Status to In Review')",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-217' table, select the average time difference between the first occurrence of the 'Assign Validator' event and the first occurrence of the 'Change Status to Ready For Review' event for those process instances where the event sequence 'Change Status to Ready For Review' is directly followed by 'Change Status to In Review'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG\n  (\n    (\n      SELECT\n        FIRST(UTC_FINISHED) FILTER (\n          WHERE\n            EVENT_NAME IN (\n              'Assign Validator'\n            )\n        )\n    ) - (\n      SELECT\n        FIRST(UTC_FINISHED) FILTER (\n          WHERE\n            EVENT_NAME IN (\n              'Change Status to Ready For Review'\n            )\n        )\n    )\n  )\n  FILTER (\n    WHERE\n      BEHAVIOR MATCHES (\n        'Change Status to Ready For Review' ~> 'Change Status to In Review'\n      )\n  )\nFROM\n  \"defaultview-217\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG\n  (\n    (\n      SELECT\n        FIRST(UTC_FINISHED) FILTER (\n          WHERE\n            EVENT_NAME IN (\n              'Assign Validator'\n            )\n        )\n    ) - (\n      SELECT\n        FIRST(UTC_FINISHED) FILTER (\n          WHERE\n            EVENT_NAME IN (\n              'Change Status to Ready For Review'\n            )\n        )\n    )\n  )\n  FILTER (\n    WHERE\n      BEHAVIOR MATCHES (\n        'Change Status to Ready For Review' ~> 'Change Status to In Review'\n      )\n  )\nFROM\n  \"defaultview-217\""
    },
    {
        "filename": "49e3ff16c8",
        "split": "test",
        "name": "Process orders overdue for release",
        "query": "SELECT COUNT(case_id) \n\tFILTER(WHERE \"Scheduled Release Date\" < NOW() \n\tAND \"Actual Release Date\" IS NULL)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the defaultview-183 table where the value in the Scheduled Release Date column is before the current date and time (NOW()) and the value in the Actual Release Date column is empty (IS NULL).",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) FROM \"defaultview-183\"\nWHERE \"Scheduled Release Date\" < NOW() AND \"Actual Release Date\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) FROM \"defaultview-183\"\nWHERE \"Scheduled Release Date\" < NOW() AND \"Actual Release Date\" IS NULL"
    },
    {
        "filename": "b11414e427",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Released to Goods Receipt",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Goods Receipt'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average time between the last end_time of the 'Create Goods Receipt' event and the first end_time of the 'Release PO' event for all process instances in the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG ((SELECT LAST (end_time) WHERE event_name IN ('Create Goods Receipt'))\n \t-\n   \t(SELECT FIRST (end_time) WHERE event_name IN ('Release PO'))\n       )\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG ((SELECT LAST (end_time) WHERE event_name IN ('Create Goods Receipt'))\n \t-\n   \t(SELECT FIRST (end_time) WHERE event_name IN ('Release PO'))\n       )\nFROM \"defaultview-124\""
    },
    {
        "filename": "d4dfe3fb4d",
        "split": "test",
        "name": "Overdue Receivables (15+ days overdue) by Value - Top 10  Customer ",
        "query": "SELECT \"Overdue Amount\" , \"Customer\"\nFROM\n(\nSELECT SUM( \"AmountInGlobalCurrency\" ) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingDate IS NULL AND (NOW() - NetDueDate) > DURATION '15day') \n--OVER ( PARTITION BY \"AR_Customer\")\nAS \"Overdue Amount\", \n\"AR_CustomerName\" as \"Customer\"\nFROM FLATTEN(\"defaultview-222\")\n) as selections\nWHERE  \"Overdue Amount\" IS NOT NULL\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the 'Overdue Amount' and 'Customer' columns \nfrom the intermediate table called 'selections'.\nThis intermediate table is constructed by selecting the sum of the 'AmountInGlobalCurrency' column \nfrom the 'defaultview-222' table. \nFilter to only include rows where:\n- The 'EVENT_NAME' column equals 'Create Accounts Receivable'\n- The 'ClearingDate' column is null\n- The difference between the current timestamp (NOW()) and the 'NetDueDate' column is greater than 15 days.\nGroup the sum by the 'AR_CustomerName' column and alias it as 'Customer'.\nAlias the sum as 'Overdue Amount'.\nOnly include rows from 'selections' where 'Overdue Amount' is not null.\nOrder the results by the 'Overdue Amount' column in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  \"Overdue Amount\", \n  \"Customer\"\nFROM\n  (\n    SELECT \n      SUM (\"AmountInGlobalCurrency\") AS \"Overdue Amount\", \n      \"AR_CustomerName\" AS \"Customer\"\n    FROM \n      (\n        SELECT\n          SUM (\"AmountInGlobalCurrency\") \n            OVER (PARTITION BY (CASE\n                WHEN (NOW() - \"NetDueDate\") > DURATION '15day' THEN 1\n                WHEN (NOW() - \"NetDueDate\") > DURATION '8day' THEN 0\n                ELSE 2\n              END), \"AR_CustomerName\" ORDER BY \"EVENT_TIMESTAMP\" DESC)\n          AS \"FL__cumulatedAmountInGlobalCurrency\"\n        , \"AR_CustomerName\"\n        , \"EVENT_TIMESTAMP\"\n        , (\"AM_CashFlows converedBalance\" (\"AR_CustomerName\" , \"EVENT_TIMESTAMP\" ,\"OLID\"))\n          - ((SUM (\"AmountInGlobalCurrency\" ) OVER (PARTITION BY \"AR_CustomerName\" ORDER BY \"EVENT_TIMESTAMP\" ASC)) ) AS \"AmountInGlobalCurrency\"\n        FROM \"defaultview-222\"\n        WHERE \"EVENT_NAME\" = 'Create Accounts Receivable'\n          AND ClearingDate  IS NULL\n        \n      ) AS FL_query\n    WHERE \n        \"FL__cumulatedAmountInGlobalCurrency\"  IS NOT NULL\n       GROUP BY 2\n  ) AS intermediateResult1\nWHERE\n  \"Overdue Amount\" IS NOT NULL\nORDER BY\n  1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  \"Overdue Amount\", \n  \"Customer\"\nFROM\n  (\n    SELECT \n      SUM (\"AmountInGlobalCurrency\") AS \"Overdue Amount\", \n      \"AR_CustomerName\" AS \"Customer\"\n    FROM \n      (\n        SELECT\n          SUM (\"AmountInGlobalCurrency\") \n            OVER (PARTITION BY (CASE\n                WHEN (NOW() - \"NetDueDate\") > DURATION '15day' THEN 1\n                WHEN (NOW() - \"NetDueDate\") > DURATION '8day' THEN 0\n                ELSE 2\n              END), \"AR_CustomerName\" ORDER BY \"EVENT_TIMESTAMP\" DESC)\n          AS \"FL__cumulatedAmountInGlobalCurrency\"\n        , \"AR_CustomerName\"\n        , \"EVENT_TIMESTAMP\"\n        , (\"AM_CashFlows converedBalance\" (\"AR_CustomerName\" , \"EVENT_TIMESTAMP\" ,\"OLID\"))\n          - ((SUM (\"AmountInGlobalCurrency\" ) OVER (PARTITION BY \"AR_CustomerName\" ORDER BY \"EVENT_TIMESTAMP\" ASC)) ) AS \"AmountInGlobalCurrency\"\n        FROM \"defaultview-222\"\n        WHERE \"EVENT_NAME\" = 'Create Accounts Receivable'\n          AND ClearingDate  IS NULL\n        \n      ) AS FL_query\n    WHERE \n        \"FL__cumulatedAmountInGlobalCurrency\"  IS NOT NULL\n       GROUP BY 2\n  ) AS intermediateResult1\nWHERE\n  \"Overdue Amount\" IS NOT NULL\nORDER BY\n  1 DESC"
    },
    {
        "filename": "44cae3c190",
        "split": "test",
        "name": "Avg. Cycle Time per Project (20 longest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n   \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 DESC\nLIMIT 20\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the 'Project' column and calculate the average value of the 'C' column from the subquery results. \nThe subquery selects the case_id, 'Project_Description' column aliased as 'Project' and calculates the cycle time 'C' as the difference between the last end_time for the 'Close Project' event and the first end_time for the 'Start Project' event for each case. \nOrder the results by the average cycle time in descending order and limit to the top 20 results.\nThe data is from the 'defaultview-197' table which contains case_id, end_time, event_name and Project_Description columns.",
        "llm_gpt-35-turbo-0613_query": "SELECT avg(C), \"Project\"\nFROM(\nSELECT case_id, \"Project_Description\" AS \"Project\",\nLast(end_time) Filter(WHERE event_name IN ('Close Project')) - First(end_time) Filter(WHERE event_name IN ('Start Project')) AS C\nFROM \"defaultview-197\"\n)\nAS sub\nOrder By 1 Desc\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT avg(C), \"Project\"\nFROM(\nSELECT case_id, \"Project_Description\" AS \"Project\",\nLast(end_time) Filter(WHERE event_name IN ('Close Project')) - First(end_time) Filter(WHERE event_name IN ('Start Project')) AS C\nFROM \"defaultview-197\"\n)\nAS sub\nOrder By 1 Desc\nLIMIT 20"
    },
    {
        "filename": "471ccd349c",
        "split": "test",
        "name": "Order confirmation lead time",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) FILTER(WHERE event_name = 'Confirmed'))\n    -\n    (SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n\t)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-183' table, calculate the average time difference between:\n- The first occurrence of the 'Confirmed' event (using the end_time column)\n- The last occurrence of the 'Released' event (using the end_time column)",
        "llm_gpt-35-turbo-0613_query": "SELECT avg(\n\t(SELECT FIRST(end_time) \n    \tWHERE event_name IN ('Confirmed')) \n    - \n    (SELECT LAST(end_time)\n    \tWHERE event_name IN ('Released'))\n\t)\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT avg(\n\t(SELECT FIRST(end_time) \n    \tWHERE event_name IN ('Confirmed')) \n    - \n    (SELECT LAST(end_time)\n    \tWHERE event_name IN ('Released'))\n\t)\nFROM \"defaultview-183\""
    },
    {
        "filename": "f6d2878264",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Manufacturing Plant",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Manufacturing Plant\" \nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records (Cases) and calculate the average time (Cycle Time) between the Basic Finish Date and Basic Start Date columns for each Manufacturing Plant in the defaultview-183 table. Order the results by the Cases column in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n--COUNT(\"case_id\" ) AS \"Cases\",\nAVG(\"Basic Finish Date\" - \"Basic Start Date\" ) AS \"Cycle Time\",\n\"BW Manufacturing Plant Name\"\n FROM \"defaultview-183\"\n --WHERE \"Change Type Concat\" IS MATCHED AND \"Changed Object\" = 'SalesLineItem' \n--  GROUP BY 1 \nORDER BY 2 DESC\nLIMIT 100",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n--COUNT(\"case_id\" ) AS \"Cases\",\nAVG(\"Basic Finish Date\" - \"Basic Start Date\" ) AS \"Cycle Time\",\n\"BW Manufacturing Plant Name\"\n FROM \"defaultview-183\"\n --WHERE \"Change Type Concat\" IS MATCHED AND \"Changed Object\" = 'SalesLineItem' \n--  GROUP BY 1 \nORDER BY 2 DESC\nLIMIT 100"
    },
    {
        "filename": "dc64a9e81b",
        "split": "test",
        "name": "Manufacturing lead time",
        "query": "SELECT\nAVG(\n(SELECT FIRST(end_time) FILTER(WHERE event_name LIKE 'GR%'))\n-\n(SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-183' table, calculate the average time difference between:\n- The first end_time value where the event_name column starts with 'GR' \n- The last end_time value where the event_name column equals 'Released'",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time)\n\t\tWHERE event_name LIKE 'GR%')\n\t\t-\n\t(SELECT LAST(end_time)\n\t\tWHERE event_name = 'Released')\n\t)\n   \nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time)\n\t\tWHERE event_name LIKE 'GR%')\n\t\t-\n\t(SELECT LAST(end_time)\n\t\tWHERE event_name = 'Released')\n\t)\n   \nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "eaabd9dd85",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT\nAVG (\n\t(SELECT LAST (END_TIME))\n     -\n    (SELECT FIRST (END_TIME))\n\t)\n    FROM \"defaultview-525\"\nWHERE event_name MATCHES \n\t('Create Inspection Lot' 'Create Usage Decision' ILIKE 'Material Movement%')\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average duration between the first and last occurrences of events named 'Create Inspection Lot', 'Create Usage Decision' or starting with 'Material Movement' in the 'defaultview-525' table. To do this, for each event name filter, find the first end time (using FIRST) and the last end time (using LAST) and calculate the difference. Then take the average of these differences across all the filtered event names.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG((SELECT LAST (END_TIME) - FIRST (END_TIME)))\n       \nFROM \"defaultview-525\"\n\nWHERE EVENT_NAME IN ('Create Inspection Lot', 'Create Usage Decision')\nAND ( REGEXP_LIKE (\"EVENT_NAME\", 'Material Movement' ))\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG((SELECT LAST (END_TIME) - FIRST (END_TIME)))\n       \nFROM \"defaultview-525\"\n\nWHERE EVENT_NAME IN ('Create Inspection Lot', 'Create Usage Decision')\nAND ( REGEXP_LIKE (\"EVENT_NAME\", 'Material Movement' ))\n"
    },
    {
        "filename": "4906928657",
        "split": "test",
        "name": "Cancellation of goods receipts",
        "query": "SELECT COUNT(case_id) FILTER (\nWHERE (event_name MATCHES('Reverse Goods Receipt'))\nAND (event_name MATCHES('Create Goods Receipt'))\n)\n\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the 'defaultview-57' table where the event_name column contains the value 'Reverse Goods Receipt' AND the event_name column also contains the value 'Create Goods Receipt'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(DISTINCT case_id)\nFROM FLATTEN(\"defaultview-57\")\nWHERE event_name MATCHES ('Reverse Goods Receipt' ~> 'Create Goods Receipt')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(DISTINCT case_id)\nFROM FLATTEN(\"defaultview-57\")\nWHERE event_name MATCHES ('Reverse Goods Receipt' ~> 'Create Goods Receipt')"
    },
    {
        "filename": "70fa42ce9c",
        "split": "test",
        "name": "On-time delivery rate",
        "query": "SELECT COUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL AND \"Actual Delivery Date\" - \"Scheduled Finish Date\" = DURATION '0days'\n    )\n/\nCOUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL) \n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the defaultview-183 table where the Actual Delivery Date column has a non-null value and the difference between the Actual Delivery Date and Scheduled Finish Date columns is 0 days. Divide this count by the total number of case_id records where Actual Delivery Date has a non-null value and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\n\nSELECT\nCOUNT(case_id)\nFILTER (\n\tWHERE \"Actual Delivery Date\" IS NOT NULL\n\tAND (\"Actual Delivery Date\"-\"Scheduled Finish Date\") = DURATION '0days'\n\t)\n/ COUNT(case_id)\nFILTER (WHERE \"Actual Delivery Date\" IS NOT NULL)\n* 100\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\n\nSELECT\nCOUNT(case_id)\nFILTER (\n\tWHERE \"Actual Delivery Date\" IS NOT NULL\n\tAND (\"Actual Delivery Date\"-\"Scheduled Finish Date\") = DURATION '0days'\n\t)\n/ COUNT(case_id)\nFILTER (WHERE \"Actual Delivery Date\" IS NOT NULL)\n* 100\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "a24472f64b",
        "split": "test",
        "name": "Total overdue invoice amounts",
        "query": "\nSELECT\nSUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER(\n\t WHERE (\"AR_LastClearingDate\" IS NULL)\n\t\t AND \"AR_LastNetDueDate\" < DATE_TRUNC('day', NOW())\n\t)\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the AR_InvoicedAmountInGlobalCurrency column for all rows in the defaultview-222 table where the AR_LastClearingDate column is empty (NULL) and the AR_LastNetDueDate column is before today's date (truncated to the day).",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER (\n\tWHERE (\"AR_LastClearingDate\" IS NULL) \n    AND \"AR_LastNetDueDate\" < DATE_TRUNC ('day', NOW())\n\t)\nFROM \"defaultview-222\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER (\n\tWHERE (\"AR_LastClearingDate\" IS NULL) \n    AND \"AR_LastNetDueDate\" < DATE_TRUNC ('day', NOW())\n\t)\nFROM \"defaultview-222\"\n                "
    },
    {
        "filename": "0c18038530",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Material Text",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Material Text\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of process orders in the defaultview-183 table grouped by the Material Text column. Order the results by descending count of process orders. The count of process orders will be stored in the # Process Orders column.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(\"Process order Id\") AS \"# Process Orders\", \"Material Text\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(\"Process order Id\") AS \"# Process Orders\", \"Material Text\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC\n"
    },
    {
        "filename": "9b703e674b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Delivered or Technically Completed",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Delivered', 'Technically Completed')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average duration of the process instances in the 'defaultview-183' table by subtracting the earliest end_time value of the 'Create Process Order' event from the latest end_time value of either the 'Delivered' or 'Technically Completed' event for each process instance.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG((SELECT LAST(end_time)\n       WHERE event_name IN ('Delivered',\n                            'Technically Completed'))\n      - (SELECT FIRST(end_time) WHERE event_name = 'Create Process Order'))) AS \"Last end time - Created Process Order\"\n\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG((SELECT LAST(end_time)\n       WHERE event_name IN ('Delivered',\n                            'Technically Completed'))\n      - (SELECT FIRST(end_time) WHERE event_name = 'Create Process Order'))) AS \"Last end time - Created Process Order\"\n\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "afc16d1b66",
        "split": "test",
        "name": "Average number of rework on issues with rework",
        "query": "SELECT AVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1\nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "From the 'defaultview-217' table, select the average of the counts of the 'Change Status to In Progress' event minus 1. Only consider rows where the count of either 'Change Status to In Review' events is greater than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  AVG (\n    (\n      SELECT\n        AVG (event_count)\n      FROM\n        timeseries(event IN ('Change Status to In Progress')))\n    )\n     - 1) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (event_name IN ('Change Status to In Review')))\n          AND COUNT() > 1\n      )\n      AS OpenTime\nFROM\n  \"defaultview-217\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  AVG (\n    (\n      SELECT\n        AVG (event_count)\n      FROM\n        timeseries(event IN ('Change Status to In Progress')))\n    )\n     - 1) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (event_name IN ('Change Status to In Review')))\n          AND COUNT() > 1\n      )\n      AS OpenTime\nFROM\n  \"defaultview-217\""
    },
    {
        "filename": "e454fa513b",
        "split": "test",
        "name": "Percentage of products with considerable forecast override",
        "query": "SELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE( \n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) > 20\n\tOR\n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) < -20\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"Statistical Fcst Qty\" > 0\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t) * 24.98\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of distinct Product IDs from the defaultview-404 table where the percentage difference between the Consensus Demand Plan Qty and the Statistical Fcst Qty columns is greater than 20% or less than -20% for the past 320 days. Divide this count by the total number of distinct Product IDs where Statistical Fcst Qty is greater than 0 for the past 320 days and multiply the result by 24.98.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"MATERIAL_ID\" ) \nWHERE((COALESCE (\"Consensus Demand Plan Qty\" ,0)\n- \"Statistical Fcst Qty\" )/NULLIF(0,\"Statistical Fcst Qty\" )\n) > 0.2 OR\n( (COALESCE (\"Consensus Demand Plan Qty\" ,0)\n- \"Statistical Fcst Qty\" )/NULLIF(0,\"Statistical Fcst Qty\" ) ) < -0.2\n/\nCOUNT(DISTINCT \"MATERIAL_ID\" )\n*24.98\nFROM \"defaultview-404\"\nBEFORE  NOW()- DURATION '320DAYS'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"MATERIAL_ID\" ) \nWHERE((COALESCE (\"Consensus Demand Plan Qty\" ,0)\n- \"Statistical Fcst Qty\" )/NULLIF(0,\"Statistical Fcst Qty\" )\n) > 0.2 OR\n( (COALESCE (\"Consensus Demand Plan Qty\" ,0)\n- \"Statistical Fcst Qty\" )/NULLIF(0,\"Statistical Fcst Qty\" ) ) < -0.2\n/\nCOUNT(DISTINCT \"MATERIAL_ID\" )\n*24.98\nFROM \"defaultview-404\"\nBEFORE  NOW()- DURATION '320DAYS'"
    },
    {
        "filename": "8296553520",
        "split": "test",
        "name": "No. of Invoices with Multiple Payment Term Change Events",
        "query": "SELECT\nCOUNT(CASE_ID)\nFROM\n(\n SELECT\n  COUNT(CASE_ID) AS \"CASE_COUNT\", CASE_ID, EVENT_NAME\n FROM FLATTEN(\"defaultview-225\")\n WHERE\n  (\"Changed Table\" IN ('EKKO','BSEG'))\n  AND (\"Changed Field\" IN  ('ZTERM', 'ZTERM', 'ZBD1T','ZBD2T','ZBD3T', 'ZBD1P', 'ZBD2P'))\n GROUP BY 2,3\n) AS SUB1\nWHERE \"CASE_COUNT\" > 1",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases from the defaultview-225 table where the Changed Table column has a value of either EKKO or BSEG and the Changed Field column has a value of ZTERM, ZBD1T, ZBD2T, ZBD3T, ZBD1P or ZBD2P. Group the results by the CASE_ID and EVENT_NAME columns. Then filter the grouped results to only keep groups where the CASE_COUNT is greater than 1. Finally, count the number of groups that remain.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n count(1) as \"# Cases\"\n\nFROM (SELECT\n  CASE_ID,\n  EVENT_NAME,\n  COUNT(EVENT_NAME) AS CASE_COUNT\n FROM FLATTEN(\"defaultview-225\")\n WHERE\n  (\"Changed Table\" IN ('EKKO', 'BSEG'))\n  AND (\"Changed Fields\" IN ('ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', 'ZBD2P'))\nGROUP BY 1,2\n) AS sub1\nWHERE\n sub1.CASE_COUNT > 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n count(1) as \"# Cases\"\n\nFROM (SELECT\n  CASE_ID,\n  EVENT_NAME,\n  COUNT(EVENT_NAME) AS CASE_COUNT\n FROM FLATTEN(\"defaultview-225\")\n WHERE\n  (\"Changed Table\" IN ('EKKO', 'BSEG'))\n  AND (\"Changed Fields\" IN ('ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', 'ZBD2P'))\nGROUP BY 1,2\n) AS sub1\nWHERE\n sub1.CASE_COUNT > 1"
    },
    {
        "filename": "a8599a428f",
        "split": "test",
        "name": "#\u00a0Process\u00a0Orders\u00a0without\u00a0business\u00a0complete\u00a0",
        "query": "SELECT count(case_id) \nFROM \"defaultview-183\"\nWHERE not event_name MATCHES ('Confirmed')",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-183' table where the event_name column does NOT contain the value 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id)\nFROM \"defaultview-183\"\nWHERE NOT event_name MATCHES ('Confirmed')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id)\nFROM \"defaultview-183\"\nWHERE NOT event_name MATCHES ('Confirmed')"
    },
    {
        "filename": "a646885e92",
        "split": "test",
        "name": "Number of Completed SLAs",
        "query": "SELECT SUM(\"SLA Count Completed\") FROM \"defaultview-370\"",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Sum the values in the 'SLA Count Completed' column from the 'defaultview-370' table.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  SUM(\"SLA Count Completed\")\nFROM\n  \"defaultview-370\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  SUM(\"SLA Count Completed\")\nFROM\n  \"defaultview-370\"\n                "
    },
    {
        "filename": "08f340e540",
        "split": "test",
        "name": "Count of Cases per Activity",
        "query": "SELECT case_id, \"Request Type\",\n\"EVENT_NAME\" AS \"Activities\",\n(SELECT COUNT (\"EVENT_NAME\")) AS \"Number of Cases per Event\"\nFROM \"defaultview-299\"\nORDER BY 4 DESC\nLIMIT 5",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the case_id, Request Type column, and Activities column which is an alias for the EVENT_NAME column from the defaultview-299 table. Then select the count of the EVENT_NAME column as Number of Cases per Event. Order the results by the Number of Cases per Event in descending order and limit the results to the top 5 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \ncase_id,\n\"Request Type\",\nEVENT_NAME as Activities\n\nFROM FLATTEN(\"defaultview-299\") \n\nORDER BY 3 ASC\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \ncase_id,\n\"Request Type\",\nEVENT_NAME as Activities\n\nFROM FLATTEN(\"defaultview-299\") \n\nORDER BY 3 ASC\n\n\n"
    },
    {
        "filename": "7dc7833543",
        "split": "test",
        "name": "Invoices waiting for Goods Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES('Receive PO item'))\n\tAND (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice')))\n\t)\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id rows in the 'defaultview-545' table where the event_name column does NOT contain the value 'Receive PO item' AND the event_name column contains either the value 'Receive Invoice' or the value 'Reconcile Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) \nFROM \"defaultview-545\" \nWHERE NOT EVENT_NAME CONTAINS ('Receive PO item')\nAND EVENT_NAME MATCHES ('Receive Invoice'|'Reconcile Invoice')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) \nFROM \"defaultview-545\" \nWHERE NOT EVENT_NAME CONTAINS ('Receive PO item')\nAND EVENT_NAME MATCHES ('Receive Invoice'|'Reconcile Invoice')"
    },
    {
        "filename": "d7aec6e338",
        "split": "test",
        "name": "\u2300 Time before scheduled release ",
        "query": "SELECT avg(\"Scheduled Release Date\" - \"Actual Release Date\")\nFROM \"defaultview-183\"\nWHERE \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds'",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Calculate the average difference between the Scheduled Release Date and Actual Release Date columns in the defaultview-183 table for only those rows where the Scheduled Release Date is after the Actual Release Date (a positive difference). ",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG (\"Scheduled Release Date\" - \"Actual Release Date\")\nFROM \"defaultview-183\"\nWHERE (\"Scheduled Release Date\" - \"Actual Release Date\") > DURATION '0s'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG (\"Scheduled Release Date\" - \"Actual Release Date\")\nFROM \"defaultview-183\"\nWHERE (\"Scheduled Release Date\" - \"Actual Release Date\") > DURATION '0s'"
    },
    {
        "filename": "6f5fbcc69b",
        "split": "test",
        "name": "Copy of Open POs without GRN ( > 45 Days)",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\"\nFROM \"defaultview-124\"\nWHERE\n(NOW() - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')) > DURATION '45DAYS'",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the defaultview-124 table where 45 days have passed since the last end_time for an event named 'Release PO'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE \n      \t(SELECT LAST(end_time) \n        \tWHERE event_name IN ('Release PO'))\n  \t\t< LOWER(TIMESTAMP '2021-02-01 00:00:00') \n      \t)\n FROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE \n      \t(SELECT LAST(end_time) \n        \tWHERE event_name IN ('Release PO'))\n  \t\t< LOWER(TIMESTAMP '2021-02-01 00:00:00') \n      \t)\n FROM \"defaultview-124\""
    },
    {
        "filename": "c77441d9cc",
        "split": "test",
        "name": "Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id in the 'defaultview-124' table where the event_name column has at least one occurrence greater than 1. Divide this count by the total number of case_id in the table and multiply by 100 to get the percentage of cases where event_name occurs more than once.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (occurrence > 1)\n        FROM\n          UNNEST (\"$EVENT_NAME\")\n            AS event_name WITH OCCURRENCE\n      )\n  ) / COUNT (CASE_ID) * 100 AS \"Cases where event_name occurs >1\"\nFROM\n  \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (occurrence > 1)\n        FROM\n          UNNEST (\"$EVENT_NAME\")\n            AS event_name WITH OCCURRENCE\n      )\n  ) / COUNT (CASE_ID) * 100 AS \"Cases where event_name occurs >1\"\nFROM\n  \"defaultview-124\""
    },
    {
        "filename": "f030043950",
        "split": "test",
        "name": "Early Release with System / Batch User & Planned Order Reference",
        "query": "SELECT count(case_id) Filter( \nWhere \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND \"Event Created By User Type\" NOT in ('Dialog') AND event_name = 'Released' )\n/\ncount(case_id) Filter(Where \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND event_name = 'Released') *100\nFROM FLATTEN(\"defaultview-183\")\nWHERE \"Planned Order Number\" IS NOT NULL\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the FLATTEN('defaultview-183') table where 'Planned Order Number' is not null and 'Scheduled Release Date' minus 'Actual Release Date' is greater than 0 seconds and 'Event Created By User Type' is not 'Dialog' and 'event_name' equals 'Released'. Divide this count by the count of case_id records where 'Scheduled Release Date' minus 'Actual Release Date' is greater than 0 seconds and 'event_name' equals 'Released'. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) FILTER (WHERE \"Planned Order Number\" IS NOT NULL AND \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0second' AND\n \"Event Created By User Type\"  NOT IN ('Dialog') AND event_name = 'Released'  ) /\nCOUNT (CASE_ID) FILTER (WHERE \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0second' AND event_name = 'Released' ) * 100\nFROM FLATTEN('defaultview-183')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) FILTER (WHERE \"Planned Order Number\" IS NOT NULL AND \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0second' AND\n \"Event Created By User Type\"  NOT IN ('Dialog') AND event_name = 'Released'  ) /\nCOUNT (CASE_ID) FILTER (WHERE \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0second' AND event_name = 'Released' ) * 100\nFROM FLATTEN('defaultview-183')"
    },
    {
        "filename": "4f5797f512",
        "split": "test",
        "name": "Return rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE event_name IN ('Create Return Sales Order Item','Create Returns Delivery')) > 0\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of case_id records in the 'defaultview-290' table where there is at least one event of type 'Create Return Sales Order Item' or 'Create Returns Delivery'. Divide this count by the total number of case_id records in the 'defaultview-290' table and multiply by 100 to get the percentage of cases that have a return.",
        "llm_gpt-35-turbo-0613_query": "SELECT 100*(count(case_id) \nFILTER (WHERE (SELECT bool_or(event_name IN ('Create Return Sales Order Item','Create Returns Delivery'))))) / count(case_id)\nFROM \"defaultview-290\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT 100*(count(case_id) \nFILTER (WHERE (SELECT bool_or(event_name IN ('Create Return Sales Order Item','Create Returns Delivery'))))) / count(case_id)\nFROM \"defaultview-290\"\n"
    },
    {
        "filename": "f16c619f2a",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time (Receive to Approve Invoice) by PO Supplier (Top 25) - Without POs",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Approve Invoice') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive invoice')) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 25",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Select the count of CASE_ID as 'No. of Cases', the average time difference between the last END_TIME where EVENT_NAME is 'Approve Invoice' and the first END_TIME where EVENT_NAME is 'Receive invoice' as 'Avg. Cycle Time', and the PO Item Supplier ID from the defaultview-545 table. Order the results by the count of CASE_ID in descending order and limit to the top 25 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tCOUNT(CASE_ID) as \"No. of Cases\",\n    AVG((SELECT LAST(END_TIME) \n    \tWHERE EVENT_NAME = 'Approve Invoice') \n\t- (SELECT FIRST(END_TIME)\n    \tWHERE EVENT_NAME = 'Receive invoice')) AS \"Avg. Cycle Time\",\n    \"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 25",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tCOUNT(CASE_ID) as \"No. of Cases\",\n    AVG((SELECT LAST(END_TIME) \n    \tWHERE EVENT_NAME = 'Approve Invoice') \n\t- (SELECT FIRST(END_TIME)\n    \tWHERE EVENT_NAME = 'Receive invoice')) AS \"Avg. Cycle Time\",\n    \"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 25"
    },
    {
        "filename": "897f3b1354",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Item Plant",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\", \n\"PO Item Plant\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of cases ('case_id' column) in the 'defaultview-124' table. Sum the values in the 'PO Item Net Order Value' column to get the total purchase order value. Group the results by the values in the 'PO Item Plant' column. Order the results by descending count of cases.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) as \"Number of Cases\",\n\"PO Item Plant\"   as \"Plant\",\nSUM (\"PO Item Net Order Value\") as \"Purchase Order Value (Net)\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) as \"Number of Cases\",\n\"PO Item Plant\"   as \"Plant\",\nSUM (\"PO Item Net Order Value\") as \"Purchase Order Value (Net)\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC"
    },
    {
        "filename": "2952d1e1d0",
        "split": "test",
        "name": "Open Overdue Receivables by Project Manager (Top 10)",
        "query": "SELECT COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day')\nas \"#Receivables\" , \n \"Project_Manager\"  as \"Project Manager\"\nFROM FLATTEN(\"defaultview-197\")\nGROUP BY 2\nORDER By 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of unique accounts receivable records (ARUniqueKey) where:\n- The event name is 'Create Accounts Receivable'\n- There is no clearing journal entry \n- 15 days have passed since the net due date (NOW()-NetDueDate)> DURATION '15day')\nGroup the results by Project Manager\nOrder the results by the count in descending order\nLimit the results to the top 10\n",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  \"Project Manager\", \n  COUNT(DISTINCT \"ARUniqueKey\") AS \"Number of Unbooked Documents\"\nFROM \n  (\n    SELECT \n      \"Project Manager\", \n      CASE WHEN (\n          SELECT event_name WHERE event_name = 'Clear Account Receivable'\n        ) IS NULL THEN \"ARUniqueKey\" END AS \"ARUniqueKey\"\n    FROM \n      FLATTEN_PROJECT() -- Use only the current version\n  ) AS sub4\nWHERE\n  (\n    SELECT \n      COUNT(event_name) FILTER (\n        WHERE \n          (\n            (event_name = 'Create Accounts Receivable') \n            AND (\n              NEXT(\n                (\n                  SELECT \n                    NET DUE DATE + DURATION '90day' FROM AFTER GROUP\n                )\n              )\n            ) < NOW()\n            AND (AWA2  = TRUE)\n          )\n      )\n  ) > 0\n  AND \"Net Posting\" IS NULL\n  AND (\n      SELECT BOOL_OR(event_name IN (\n        \t  'Remove Reference Document' ,'Payment Run' ,'Clear Account Receivable')));\n          \n          \n          \nORDER BY \n  2 DESC NULLS FIRST\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  \"Project Manager\", \n  COUNT(DISTINCT \"ARUniqueKey\") AS \"Number of Unbooked Documents\"\nFROM \n  (\n    SELECT \n      \"Project Manager\", \n      CASE WHEN (\n          SELECT event_name WHERE event_name = 'Clear Account Receivable'\n        ) IS NULL THEN \"ARUniqueKey\" END AS \"ARUniqueKey\"\n    FROM \n      FLATTEN_PROJECT() -- Use only the current version\n  ) AS sub4\nWHERE\n  (\n    SELECT \n      COUNT(event_name) FILTER (\n        WHERE \n          (\n            (event_name = 'Create Accounts Receivable') \n            AND (\n              NEXT(\n                (\n                  SELECT \n                    NET DUE DATE + DURATION '90day' FROM AFTER GROUP\n                )\n              )\n            ) < NOW()\n            AND (AWA2  = TRUE)\n          )\n      )\n  ) > 0\n  AND \"Net Posting\" IS NULL\n  AND (\n      SELECT BOOL_OR(event_name IN (\n        \t  'Remove Reference Document' ,'Payment Run' ,'Clear Account Receivable')));\n          \n          \n          \nORDER BY \n  2 DESC NULLS FIRST\nLIMIT 10\n"
    },
    {
        "filename": "e0ae4c7960",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of invoice item changes",
        "query": "SELECT COUNT (\"event_name\") FILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n 'Change Invoice%' OR event_name LIKE 'Create Invoice Item Cancellation%' OR event_name LIKE 'Update Invoice%') AS created_with_dialog MATCHES (created_with_dialog)),\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nGROUP BY 2\norder by 1 desc\nLimit 10",
        "llm_name": "signal_description_anthropic-claude-v1",
        "description_llm": "Count the number of events where the event name starts with 'Change Invoice', 'Create Invoice Item Cancellation' or 'Update Invoice' and group the results by the customer company. Order the results descending by count and show the top 10 results. The events are from the 'defaultview-290' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (EVENT_NAME) AS \"No. of Events\", \"Customer Company\"\nFROM FLATTEN(\"defaultview-290\")\nWHERE EVENT_NAME LIKE 'Change Invoice%'\nOR \nEVENT_NAME like 'Create Invoice Item Cancellation%'\nOR\nEVENT_NAME like 'Update Invoice%'\nGROUP BY 2\nORDER BY 1 desc\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (EVENT_NAME) AS \"No. of Events\", \"Customer Company\"\nFROM FLATTEN(\"defaultview-290\")\nWHERE EVENT_NAME LIKE 'Change Invoice%'\nOR \nEVENT_NAME like 'Create Invoice Item Cancellation%'\nOR\nEVENT_NAME like 'Update Invoice%'\nGROUP BY 2\nORDER BY 1 desc\nLIMIT 10\n"
    },
    {
        "filename": "f5213b3ab3",
        "split": "test",
        "name": "Events by User Type and frequency of occurence",
        "query": "SELECT DISTINCT  event_name,\"Event Created by User Type\",count(event_name) AS A\nFROM FLATTEN (\"defaultview-59\")\nORDER BY 3  desc\nlimit 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-59', select distinct values of the 'event_name' column and the 'Event Created by User Type' column. Also count the number of occurrences of each distinct 'event_name' value and alias it as 'A'. Order the results by the 'A' column in descending order and limit the output to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nDISTINCT event_name, \n\"Event Created by User Type\" \n,A\nFROM FLATTEN ((\"defaultview-59\"))\nORDER BY 3 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nDISTINCT event_name, \n\"Event Created by User Type\" \n,A\nFROM FLATTEN ((\"defaultview-59\"))\nORDER BY 3 DESC\nLIMIT 10"
    },
    {
        "filename": "bac85808e2",
        "split": "test",
        "name": "Conformance Level",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES (\n    \t'Create PO Item'\n\t\t~> 'Release PO'\n\t\t~> 'Create Goods Receipt'\n\t\t~> ('Record Invoice Receipt'|'Create FI Invoice')\n\t\t~> 'Clear Invoice')) \n\t/ COUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Clear Invoice')) \n    * 100 AS \"Conformance Rate\"\n\nFROM \"defaultview-124\" ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-124' table, count the number of CASE_ID values where the EVENT_NAME column matches the sequence 'Create PO Item' followed by 'Release PO' followed by 'Create Goods Receipt' followed by either 'Record Invoice Receipt' or 'Create FI Invoice' followed by 'Clear Invoice', divide this count by the count of CASE_ID values where EVENT_NAME is 'Clear Invoice', and multiply the result by 100 to calculate the 'Conformance Rate'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT CASE_ID) FILTER(\n\tWHERE EVENT_NAME MATCHES(\n\t\t('Create PO Item') ~> ('Release PO') ~> ('Create Goods Receipt') \n        ~> ('Record Invoice Receipt'|'Create FI Invoice') \n        ~> 'Clear Invoice' ~>> ('Update C Clearing  Document' | 'Post Clearing')\n                )\n    ) \n/\nCOUNT(DISTINCT CASE_ID) FILTER (WHERE EVENT_NAME = 'Clear Invoice')\n* 100 \nAS \"Conformance Rate\"\nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT CASE_ID) FILTER(\n\tWHERE EVENT_NAME MATCHES(\n\t\t('Create PO Item') ~> ('Release PO') ~> ('Create Goods Receipt') \n        ~> ('Record Invoice Receipt'|'Create FI Invoice') \n        ~> 'Clear Invoice' ~>> ('Update C Clearing  Document' | 'Post Clearing')\n                )\n    ) \n/\nCOUNT(DISTINCT CASE_ID) FILTER (WHERE EVENT_NAME = 'Clear Invoice')\n* 100 \nAS \"Conformance Rate\"\nFROM \"defaultview-124\""
    },
    {
        "filename": "d9c60165f1",
        "split": "test",
        "name": "PO Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"PO Confirmation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-431', calculate the percentage of distinct 'Last Invoice Id' values where 'PO Confirmation Status' is 'Rejected' and 'PO Item Line Type' is 'Catalog' out of all distinct 'Last Invoice Id' values in the table. This is done by taking the count of distinct 'Last Invoice Id' values filtered by 'PO Confirmation Status' = 'Rejected' and 'PO Item Line Type' = 'Catalog', dividing it by the total count of distinct 'Last Invoice Id' values in the table, and multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT (\nCOUNT (DISTINCT  \"Last Invoice Id\")\nFILTER (WHERE \"PO Confirmation Status\" = 'Rejected' \nAND \"PO Item Line Type\" = 'Catalog')\n/ COUNT (DISTINCT  \"Last Invoice Id\")\n)\n* 100\nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT (\nCOUNT (DISTINCT  \"Last Invoice Id\")\nFILTER (WHERE \"PO Confirmation Status\" = 'Rejected' \nAND \"PO Item Line Type\" = 'Catalog')\n/ COUNT (DISTINCT  \"Last Invoice Id\")\n)\n* 100\nFROM \"defaultview-431\""
    },
    {
        "filename": "1c43801ce6",
        "split": "test",
        "name": "TOP 10 Customers with most Invoice Changes ",
        "query": "SELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Invoice%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query first flattens the 'defaultview-383' table. It then selects the 'SalesDocCustomerCompany' column and counts the distinct 'UniqueEventId' values where the event name contains 'Invoice' and the ChangeType is 'Update'. This count is aliased as '# Changes'. The results are grouped by 'SalesDocCustomerCompany' and ordered by the '# Changes' count in descending order. Finally, the output is limited to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT \"UniqueEventId\") FILTER(\n\tWHERE BEHAVIOUR (\n\t\t\"eventname\" MATCHES ('InvoiceCopyToDate|InvoiceActualBillingDate|Invo\niRepresentingDate')) AS AFFECTED ROWS)\nAS \"# Changes\",\n\"SalesDocCustomerCompany\"\nFROM FLATTEN(\"defaultview-383\")\nWHERE ChangeType = 'Update'\nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT \"UniqueEventId\") FILTER(\n\tWHERE BEHAVIOUR (\n\t\t\"eventname\" MATCHES ('InvoiceCopyToDate|InvoiceActualBillingDate|Invo\niRepresentingDate')) AS AFFECTED ROWS)\nAS \"# Changes\",\n\"SalesDocCustomerCompany\"\nFROM FLATTEN(\"defaultview-383\")\nWHERE ChangeType = 'Update'\nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "aef7816f49",
        "split": "test",
        "name": "On time Delivery Rate",
        "query": "SELECT COUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE (\"DeliveryGoodsMovementOnTime\" = 'Yes')) > 0\n\t)\n/ COUNT(case_id)\n* 100 \nFROM \"defaultview-43\"\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-43' table, count the number of 'case_id' values where the count of 'event_name' values is greater than 0 for rows where 'DeliveryGoodsMovementOnTime' equals 'Yes'. Divide this count by the total count of 'case_id' values in the table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (\"DeliveryGoodsMovementOnTime\" = 'Yes')\n      ) AND (\n        SELECT\n          COUNT (EVENT_NAME) FILTER (\n            WHERE\n              (SELECT BOOL_OR(\"DeliveryGoodsMovementOnTime\" = 'Yes'))\n          ) > 0\n      )\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-43\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (\"DeliveryGoodsMovementOnTime\" = 'Yes')\n      ) AND (\n        SELECT\n          COUNT (EVENT_NAME) FILTER (\n            WHERE\n              (SELECT BOOL_OR(\"DeliveryGoodsMovementOnTime\" = 'Yes'))\n          ) > 0\n      )\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-43\""
    },
    {
        "filename": "2ea60d0c15",
        "split": "test",
        "name": "Orders with SFC Activities not started",
        "query": "SELECT\n  count(\"case_id\")\nFROM\n  (\n    SELECT\n      DISTINCT case_id,\n      COUNT(DISTINCT \"event_name\") AS cnt\n    FROM\n      FLATTEN(\"defaultview-545\")\n    GROUP BY\n      1\n  ) AS T\nWHERE\n  cnt = 2",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, from the table 'defaultview-545', select distinct values of the 'case_id' column and count the distinct values in the 'event_name' column, grouping by 'case_id'. This produces a derived table T. Then, from table T, count the number of rows where the column 'cnt' equals 2.",
        "llm_gpt-35-turbo-0613_query": "\n\nSELECT\n\tCOUNT(case_id)\nFROM (\n\tSELECT\n\t\tcase_id,\n\t\tCOUNT(event_name) AS cnt\n\tFROM\n\t\t\"defaultview-545\"\n\tGROUP BY\n\t\t1\n\t) AS T\nWHERE\n\tcnt = 2\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\n\nSELECT\n\tCOUNT(case_id)\nFROM (\n\tSELECT\n\t\tcase_id,\n\t\tCOUNT(event_name) AS cnt\n\tFROM\n\t\t\"defaultview-545\"\n\tGROUP BY\n\t\t1\n\t) AS T\nWHERE\n\tcnt = 2\n\n\n"
    },
    {
        "filename": "8898300b76",
        "split": "test",
        "name": "Total Spend by PO Supplier (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-431', select the sum of the values in the 'PO Item Total Amount' column as 'Total PO Amount', the average of the difference between the last value and the first value in the 'END_TIME' column as 'Avg. Cycle Time', and the values in the 'PO Item Supplier ID' column as 'PO Supplier'. Order the results by 'Total PO Amount' in descending order and limit to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\" ,\nAVG ((SELECT LAST (\"END_TIME\") - FIRST (\"END_TIME\"))) AS \"Avg. Cycle Time\" ,\n\"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\" ,\nAVG ((SELECT LAST (\"END_TIME\") - FIRST (\"END_TIME\"))) AS \"Avg. Cycle Time\" ,\n\"PO Item Supplier ID\" AS \"PO Supplier\"\nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10\n"
    },
    {
        "filename": "adbdde6533",
        "split": "test",
        "name": "Average invoice customer process time",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) WHERE event_name IN ('Create Invoice'))\n\t-\n\t(SELECT FIRST(end_time) WHERE event_name IN ('Post Goods Issue'))\n)\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-290', calculate the average time difference between the last end_time for events with name 'Create Invoice' and the first end_time for events with name 'Post Goods Issue'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG((SELECT LAST(END_TIME) \n    WHERE EVENT_NAME = 'Create Invoice')\n-\n(SELECT FIRST(END_TIME)\n    WHERE EVENT_NAME = 'Post Goods Issue')\n)\nFROM \"defaultview-290\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG((SELECT LAST(END_TIME) \n    WHERE EVENT_NAME = 'Create Invoice')\n-\n(SELECT FIRST(END_TIME)\n    WHERE EVENT_NAME = 'Post Goods Issue')\n)\nFROM \"defaultview-290\""
    },
    {
        "filename": "abc59e9a38",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time PO Creation to PO Release ( > 3 Days)  by PO Plant",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - \n(SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg Cycle Time PO Create to PO Release\",\n\"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 20",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', select the count of 'CASE_ID' as 'No. of Cases', the average of the time difference between the last 'Release PO' event end time and the last 'Create PO Item' event end time as 'Avg Cycle Time PO Create to PO Release', and 'PO Item Plant' as 'PO Plant'. Only include rows where the time difference between 'Release PO' and 'Create PO Item' is greater than 3 days. Group the results by 'PO Plant' and order by 'No. of Cases' descending. Limit to 20 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (CASE_ID) as \"No. of Cases\", \nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg Cycle Time PO Create to PO Release\", \n\"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\nWHERE ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create PO Item') ) > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 20",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (CASE_ID) as \"No. of Cases\", \nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create PO Item')) AS \"Avg Cycle Time PO Create to PO Release\", \n\"PO Item Plant\" AS \"PO Plant\"\nFROM \"defaultview-124\"\nWHERE ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create PO Item') ) > DURATION '3DAYS'\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 20"
    },
    {
        "filename": "73a2f1f5d3",
        "split": "test",
        "name": "Number of Invoice without PO",
        "query": "SELECT \nCOUNT(DISTINCT \"Last Invoice Id\")FILTER (WHERE \"PO ID\" IS NULL) AS \"# PO without Invoice\"\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-431', count the number of unique values in the 'Last Invoice Id' column where the value in the 'PO ID' column is NULL. Alias this count as '# PO without Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT( DISTINCT \n--\"CASE_ID\", \"ACTIVITY_ID\", \n\"Last Invoice Id\" )\nAS \"# PO without Invoice\"\nFROM \"defaultview-431\"\nWHERE \n\"PO ID\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT( DISTINCT \n--\"CASE_ID\", \"ACTIVITY_ID\", \n\"Last Invoice Id\" )\nAS \"# PO without Invoice\"\nFROM \"defaultview-431\"\nWHERE \n\"PO ID\" IS NULL"
    },
    {
        "filename": "e21acbeec8",
        "split": "test",
        "name": "_Total approved hours",
        "query": "\nSELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', get the sum of all the values in the 'TSR_HoursApproved' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"TSR_HoursApproved\")\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "55cd82a6dd",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create FI Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-124\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Create FI Invoice')",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-124' table, select the average time difference between the last end time of events named 'Create FI Invoice' and the first end time of events named 'Create PO Item', for rows where the event name matches either 'Create PO Item' or 'Create FI Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT avg(\n    (SELECT LAST(end_time) \n     WHERE event_name IN \n      \t\t('Create FI Invoice'))\n     - \n     (SELECT FIRST(end_time)\n      WHERE event_name IN \n           ('Create PO Item')))\n\nFROM \"defaultview-124\"\nWHERE event_name MATCHES ('Create PO Item' | 'Create FI Invoice')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT avg(\n    (SELECT LAST(end_time) \n     WHERE event_name IN \n      \t\t('Create FI Invoice'))\n     - \n     (SELECT FIRST(end_time)\n      WHERE event_name IN \n           ('Create PO Item')))\n\nFROM \"defaultview-124\"\nWHERE event_name MATCHES ('Create PO Item' | 'Create FI Invoice')"
    },
    {
        "filename": "0f63bf2cea",
        "split": "test",
        "name": "Planning Rate",
        "query": "SELECT \nCOUNT(case_id) \n\tFILTER(WHERE \"Planned Order Number\" IS NOT NULL)\n/ \nCOUNT(case_id)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', calculate the percentage of rows where the 'Planned Order Number' column is not null. To do this: 1) Count the total number of rows. 2) Count the number of rows where 'Planned Order Number' is not null. 3) Divide the count from step 2 by the count from step 1. 4) Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\"Planned Order Number\") FILTER (WHERE 1=1) / COUNT(*) * 100\nFROM\n\"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\"Planned Order Number\") FILTER (WHERE 1=1) / COUNT(*) * 100\nFROM\n\"defaultview-183\""
    },
    {
        "filename": "a8de636039",
        "split": "test",
        "name": "SOL-1709 No-Touch Invoice Processing Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES  (('Remove Dunning Block'\n    \t\t|'Set Dunning Block'|'Change Dunning Block'|'Send 1st Overdue Notice'\n    \t\t|'Update Baseline Date'|'Update Payment Term'|'Reverse Invoice'))) \n    \tAND (event_name MATCHES('Clear Invoice'))\n\t)\n/ (COUNT(case_id) FILTER (\n\tWHERE event_name MATCHES('Clear Invoice'))\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "This query calculates the percentage of cases in the 'defaultview-59' table where the following conditions are met:\n1. The event_name column does not contain any of these values: 'Remove Dunning Block', 'Set Dunning Block', 'Change Dunning Block', 'Send 1st Overdue Notice', 'Update Baseline Date', 'Update Payment Term', 'Reverse Invoice'\nAND \n2. The event_name column contains the value 'Clear Invoice'\n\nThe percentage is calculated by:\n1. Counting the number of cases meeting the above conditions \n2. Dividing this count by the total number of cases where event_name contains 'Clear Invoice'\n3. Multiplying the result by 100\n\nSo in simple terms, this query calculates the percentage of 'Clear Invoice' events that do not have any of the specified dunning or invoice reversal events.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  count(case_id) FILTER (\n    WHERE\n      (\n        (\n          SELECT\n            BOOL_OR (MATCHES (event_name, ('Clear Invoice'))))\n        )\n        AND NOT (\n          SELECT\n            BOOL_OR (\n              MATCHES (\n                event_name,\n                'Remove Dunning Block'\n                ,'Set Dunning Block'\n                ,'Change Dunning Block'\n                ,'Send 1st Overdue Notice'\n                ,'Update Baseline Date'\n                ,'Update Payment Term'\n                ,'Reverse Invoice'))))) / count(case_id) FILTER (\n\t\tWHERE (event_name matches('~> Clear Invoice')))*100\nFROM\n  \"defaultview-59\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  count(case_id) FILTER (\n    WHERE\n      (\n        (\n          SELECT\n            BOOL_OR (MATCHES (event_name, ('Clear Invoice'))))\n        )\n        AND NOT (\n          SELECT\n            BOOL_OR (\n              MATCHES (\n                event_name,\n                'Remove Dunning Block'\n                ,'Set Dunning Block'\n                ,'Change Dunning Block'\n                ,'Send 1st Overdue Notice'\n                ,'Update Baseline Date'\n                ,'Update Payment Term'\n                ,'Reverse Invoice'))))) / count(case_id) FILTER (\n\t\tWHERE (event_name matches('~> Clear Invoice')))*100\nFROM\n  \"defaultview-59\" "
    },
    {
        "filename": "cbc696ff54",
        "split": "test",
        "name": "Overdue Receivables",
        "query": "SELECT \n \"AR_CustomerName\" ,\n\"Overdue Category\", \ncount(\"ARUniqueKey\" ) as \"#Receivables\"\nFROM FLATTEN (\"defaultview-197\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate \n \n GROUP BY 1,2\n ORDER BY  3 DESC\nLIMIT 20",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-197' table, select the 'AR_CustomerName' column, the 'Overdue Category' column, and count the distinct values in the 'ARUniqueKey' column as '#Receivables'. Only include rows where 'NetDueDate' is not null, 'event_name' is 'Create Accounts Receivable', 'ClearingDate' is null, and the current date is greater than or equal to 'NetDueDate'. Group the results by 'AR_CustomerName' and 'Overdue Category'. Order the results by '#Receivables' in descending order. Limit the results to the top 20 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"AR_CustomerName\" , \n\"Overdue Category\", \nCOUNT (DISTINCT \"ARUniqueKey\") AS \"#Receivables\"\nFROM \"defaultview-197\"\nWHERE NetDueDate is not null\nAND  event_name = 'Create Accounts Receivable'\nAND  ClearingDate is null\nAND DATE_TRUNC('day', NOW()) >= \"NetDueDate\"\nGROUP BY 1, 2\nORDER BY 3 DESC\nLIMIT 20\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"AR_CustomerName\" , \n\"Overdue Category\", \nCOUNT (DISTINCT \"ARUniqueKey\") AS \"#Receivables\"\nFROM \"defaultview-197\"\nWHERE NetDueDate is not null\nAND  event_name = 'Create Accounts Receivable'\nAND  ClearingDate is null\nAND DATE_TRUNC('day', NOW()) >= \"NetDueDate\"\nGROUP BY 1, 2\nORDER BY 3 DESC\nLIMIT 20\n"
    },
    {
        "filename": "c6d0126e8f",
        "split": "test",
        "name": "Monthly average number of reworks per case",
        "query": "SELECT \nDATE_TRUNC('month', \n                   (SELECT FIRST(end_time) \n                    WHERE event_name \n                    IN ('Change Status to Closed')\n                   )\n          ) AS \"Month\",\nAVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1 AS \"Rework ratio per case\" \nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1\n  AND \"ResolutionStatus\" IS NOT NULL\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "1. From the table 'defaultview-217', select the truncated month of the first occurrence of the event 'Change Status to Closed' as 'Month'. \n\n2. Also from 'defaultview-217', for rows where the event 'Change Status to In Review' occurs more than once and 'ResolutionStatus' is not null, calculate the average number of occurrences of the event 'Change Status to In Progress' minus 1 as 'Rework ratio per case'.\n\n3. Group the results by 'Month' and order by 'Month'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  DATE_TRUNC(\n    'month',\n    (\n      SELECT\n        FIRST_OCCURRENCE(end_time) FILTER (\n          WHERE\n            event_name = 'Change Status to Closed'\n        )\n    )\n  ) AS \"Month\",\n  AVG(\n    (\n      SELECT\n        COUNT(event_name) FILTER (\n          WHERE\n            event_name IN ('Change Status to In Progress')\n        )\n    ) - 1\n  ) FILTER (\n    WHERE\n      EVENT_NAME (\n        SELECT\n          FIRST (EVENT_NAME)\n      ) = 'Change Status to In Review' \n      AND (SELECT LAST(RESOLUTIONSTATUS) WHERE RESOLUTIONSTATUS IS NOT NULL) IS NOT NULL\n  ) AS \"Rework ratio per case\"\nFROM\n  \"defaultview-217\"\nGROUP BY\n  1\nORDER BY\n  1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  DATE_TRUNC(\n    'month',\n    (\n      SELECT\n        FIRST_OCCURRENCE(end_time) FILTER (\n          WHERE\n            event_name = 'Change Status to Closed'\n        )\n    )\n  ) AS \"Month\",\n  AVG(\n    (\n      SELECT\n        COUNT(event_name) FILTER (\n          WHERE\n            event_name IN ('Change Status to In Progress')\n        )\n    ) - 1\n  ) FILTER (\n    WHERE\n      EVENT_NAME (\n        SELECT\n          FIRST (EVENT_NAME)\n      ) = 'Change Status to In Review' \n      AND (SELECT LAST(RESOLUTIONSTATUS) WHERE RESOLUTIONSTATUS IS NOT NULL) IS NOT NULL\n  ) AS \"Rework ratio per case\"\nFROM\n  \"defaultview-217\"\nGROUP BY\n  1\nORDER BY\n  1"
    },
    {
        "filename": "1f62e5a6ab",
        "split": "test",
        "name": "Average number of reworks per case",
        "query": "\nSELECT\nAVG((SELECT COUNT(event_name) - COUNT(DISTINCT event_name)))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-545', calculate the average of the following subquery: For each row, count the total number of values in the 'event_name' column, and subtract from that the number of distinct values in the 'event_name' column. This gives the number of duplicate 'event_name' values for each row.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\n(SELECT COUNT(event_name))- \n  (SELECT COUNT(DISTINCT event_name)) \n  )\n  FROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\n(SELECT COUNT(event_name))- \n  (SELECT COUNT(DISTINCT event_name)) \n  )\n  FROM \"defaultview-545\""
    },
    {
        "filename": "0d0de12fc7",
        "split": "test",
        "name": "Invoice Open Amount",
        "query": "SELECT SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\" ) \n+ SUM(\"AR_ClearedAmountInCompanyCodeCurrency\" )\nFROM \"defaultview-197\"\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', sum the values in the 'AR_InvoicedAmountInCompanyCodeCurrency' column and the values in the 'AR_ClearedAmountInCompanyCodeCurrency' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\"), SUM(\"AR_ClearedAmountInCompanyCodeCurrency\") \nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"AR_InvoicedAmountInCompanyCodeCurrency\"), SUM(\"AR_ClearedAmountInCompanyCodeCurrency\") \nFROM \"defaultview-197\""
    },
    {
        "filename": "6777a222c9",
        "split": "test",
        "name": "Rate of Cases executed in a given timeframe",
        "query": "SELECT \n\tCOUNT (CASE_ID) FILTER (\n    \tWHERE (SELECT LAST (END_TIME) FILTER (\n        \tWHERE EVENT_NAME IN ('Clear Invoice')) \n\t- FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))) \n        \t< DURATION '14days') \n\t/ COUNT (CASE_ID) * 100\n    \nFROM \"defaultview-225\" ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-225' table, calculate the percentage of CASE_ID rows where the time difference between the last END_TIME for 'Clear Invoice' events and the first END_TIME for 'Post Invoice' events is less than 14 days. To calculate the percentage: Count the number of CASE_ID rows that meet the time difference filter criteria, divide this by the total number of CASE_ID rows, and multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (FILTER (\n\tWHERE (SELECT LAST (END_TIME)\n        \tWHERE EVENT_NAME IN ('Clear Invoice'))\n\t- (SELECT FIRST (END_TIME)\n         \tWHERE EVENT_NAME IN ('Post Invoice'))\n    ) <= DURATION '14days'\n) \n/ COUNT (CASE_ID) \n* 100\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (FILTER (\n\tWHERE (SELECT LAST (END_TIME)\n        \tWHERE EVENT_NAME IN ('Clear Invoice'))\n\t- (SELECT FIRST (END_TIME)\n         \tWHERE EVENT_NAME IN ('Post Invoice'))\n    ) <= DURATION '14days'\n) \n/ COUNT (CASE_ID) \n* 100\nFROM \"defaultview-225\""
    },
    {
        "filename": "ec2c5da4a8",
        "split": "test",
        "name": "<<Placeholder>>",
        "query": "SELECT MIN(1) FROM \"defaultview-124\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', get the minimum value of the constant 1.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nMIN (1)\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nMIN (1)\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "a77c1ac911",
        "split": "test",
        "name": "SOL-1742 Cases at compliance risk",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (NOT event_name MATCHES('Create Invoice' \t~> 'Post Invoice' \t~> 'Clear Invoice' \t~> 'Due Date passed')\n\tAND (SELECT BOOL_OR( event_name IN ('Post Invoice')))\n\tAND (SELECT\n\t\tLAST(end_time) FILTER (WHERE event_name IN ('Clear Invoice'))\n\t\t-\n\t\tFIRST(end_time) FILTER (WHERE event_name IN ('Create Invoice'))\n\t) < DURATION '25days'\n\t)\n)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Count the number of case_id values from the table 'defaultview-59' where the following conditions are met:\n- The event sequence for the case does not match the pattern 'Create Invoice' followed by 'Post Invoice' followed by 'Clear Invoice' followed by 'Due Date passed'. \n- There is at least one event with name 'Post Invoice'.\n- The time duration between the first event named 'Create Invoice' and the last event named 'Clear Invoice' is less than 25 days.\n",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES ('Create Invoice' 'Post Invoice'\n\t\t'Clear Invoice' 'Due Date passed')) = FALSE\n\t\tAND \"Any Match (event_name) -> ('Post Invoice') (CASE_SENSITIVE)\"\n\t\tAND ((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Clear Invoice'\n\t\t\t\tAND DATEDIFF (DAY, FIRST (END_TIME)\n\t\t\t\t\t\tWHERE EVENT_NAME IN ('Create Invoice')) > 25)))\n  )\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES ('Create Invoice' 'Post Invoice'\n\t\t'Clear Invoice' 'Due Date passed')) = FALSE\n\t\tAND \"Any Match (event_name) -> ('Post Invoice') (CASE_SENSITIVE)\"\n\t\tAND ((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Clear Invoice'\n\t\t\t\tAND DATEDIFF (DAY, FIRST (END_TIME)\n\t\t\t\t\t\tWHERE EVENT_NAME IN ('Create Invoice')) > 25)))\n  )\nFROM \"defaultview-59\""
    },
    {
        "filename": "27e7e22e07",
        "split": "test",
        "name": "Payment Terms Differences where PO is better",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n\t\t< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \n\tELSE \"PO Cash Discount Days 1\" END))\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-57', count the number of 'case_id' values where the value in the 'Last FI Invoice Item Cash Discount Days 1' column is less than the value in the 'PO Cash Discount Days 1' column if 'PO Cash Discount Days 1' is not null, otherwise use 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\"case_id\")\nFILTER (\n\tWHERE (SELECT FIRST (\"PO Cash Discount Days 1\") >= FIRST (\"Last FI Invoice Item Cash Discount Days 1\"))  ) +\n\t\t(SELECT FIRST(\"PO Cash Discount Days 1\")\n\t\t WHERE\n         (SELECT LAST(\"PO Cash Discount Days 1\")) IS NULL \n\t\tAND (SELECT LAST (\"Last FI Invoice Item Cash Discount Days 1\")) IS NOT NULL)\n\t<> \t-- the above is just to define when an order is \"punctually\"\n         (SELECT FIRST(\"PO Cash Discount Days 1\")\n\t\t WHERE\n         (SELECT LAST(\"PO Cash Discount Days 1\")) IS NOT NULL \n\t\tAND (SELECT LAST (\"Last FI Invoice Item Cash Discount Days 1\")) IS NULL)\n\t--> Cases where the order is canceled after delivery\n) \nFROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\"case_id\")\nFILTER (\n\tWHERE (SELECT FIRST (\"PO Cash Discount Days 1\") >= FIRST (\"Last FI Invoice Item Cash Discount Days 1\"))  ) +\n\t\t(SELECT FIRST(\"PO Cash Discount Days 1\")\n\t\t WHERE\n         (SELECT LAST(\"PO Cash Discount Days 1\")) IS NULL \n\t\tAND (SELECT LAST (\"Last FI Invoice Item Cash Discount Days 1\")) IS NOT NULL)\n\t<> \t-- the above is just to define when an order is \"punctually\"\n         (SELECT FIRST(\"PO Cash Discount Days 1\")\n\t\t WHERE\n         (SELECT LAST(\"PO Cash Discount Days 1\")) IS NOT NULL \n\t\tAND (SELECT LAST (\"Last FI Invoice Item Cash Discount Days 1\")) IS NULL)\n\t--> Cases where the order is canceled after delivery\n) \nFROM \"defaultview-57\""
    },
    {
        "filename": "fd2419de53",
        "split": "test",
        "name": "Open Overdue Invoices by Company Code (Top-10)",
        "query": "SELECT \n\"Inv. Company Code Text\" AS \"Company Code Name\"\n,SUM (\"Inv. Converted USD Amount\") AS \"Invoice Amount in $\"\n,COUNT(case_id) AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n  AND \"Last Inv. Item Due Date\" < DATE_TRUNC('day', NOW()) \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-225', select the 'Inv. Company Code Text' column and alias it as 'Company Code Name'. Also select the sum of the 'Inv. Converted USD Amount' column and alias it as 'Invoice Amount in $', and the count of case_id as 'No. of Invoices'. Filter the data where 'Last Inv. Item Clearing Date' is null and 'Last Inv. Item Due Date' is before the current date. Group the results by 'Company Code Name' and order them by 'Invoice Amount in $' descending. Finally, limit the results to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"Inv. Company Code Text\" AS \"Company Code Name\",\nsum(\"Inv. Converted USD Amount\") AS \"Invoice Amount in $\",\ncount(case_id) AS \"No. of Invoices\"\nFROM \"defaultview-225\"\n\nWHERE \n(\"Last Inv. Item Clearing Date\" IS NULL)\nAND \ndate(\"Last Inv. Item Due Date\") < DATE_TRUNC('day', NOW())\n\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"Inv. Company Code Text\" AS \"Company Code Name\",\nsum(\"Inv. Converted USD Amount\") AS \"Invoice Amount in $\",\ncount(case_id) AS \"No. of Invoices\"\nFROM \"defaultview-225\"\n\nWHERE \n(\"Last Inv. Item Clearing Date\" IS NULL)\nAND \ndate(\"Last Inv. Item Due Date\") < DATE_TRUNC('day', NOW())\n\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n"
    },
    {
        "filename": "05eb19e4de",
        "split": "test",
        "name": "Number of idle cases",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOW() - (SELECT LAST(end_time)) > DURATION '21days'\n\t\tAND (SELECT FIRST(event_name) FILTER (\n\t\t\tWHERE event_name IN ('Update Opportunity Stage to: Closed Won',\n'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n'Update Opportunity Stage to: Closed Lost',\n'Update Opportunity Stage to: Dead',\n'Update Opportunity Stage to: Dead - No Opportunity',\n'Update Opportunity Stage to: Dead - No Decision',\n'Update Opportunity Stage to: Dead - Duplicate',\n'Update Opportunity Stage to: 00 Dead - Lost',\n'Update Lead Status to: Archive',\n'Reject Quote'))) IS NULL\n   )\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Count the number of case_id values from the table 'defaultview-545' where the following conditions are met:\n- The time difference between NOW() and the LAST end_time value is greater than 21 days \n- The FIRST event_name value is NULL, filtering only events with names in the list:\n  'Update Opportunity Stage to: Closed Won', \n  'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n  'Update Opportunity Stage to: Closed Lost',\n  'Update Opportunity Stage to: Dead', \n  'Update Opportunity Stage to: Dead - No Opportunity',\n  'Update Opportunity Stage to: Dead - No Decision',\n  'Update Opportunity Stage to: Dead - Duplicate',\n  'Update Opportunity Stage to: 00 Dead - Lost',\n  'Update Lead Status to: Archive',\n  'Reject Quote'",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        NOW() - (\n          SELECT\n            LAST(end_time)\n          )\n      ) > DURATION '21day' \n    AND (\n      SELECT\n        FIRST(event_name) FILTER (\n          WHERE\n            event_name IN (\n              'Update Opportunity Stage to: Closed Won',\n              'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n              'Update Opportunity Stage to: Closed Lost',\n              'Update Opportunity Stage to: Dead',\n              'Update Opportunity Stage to: Dead - No Opportunity',\n              'Update Opportunity Stage to: Dead - No Decision',\n              'Update Opportunity Stage to: Dead - Duplicate',\n              'Update Opportunity Stage to: 00 Dead - Lost',\n              'Update Lead Status to: Archive',\n              'Reject Quote'\n            )\n        )\n      ) IS NULL\n  )\nFROM\n  \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        NOW() - (\n          SELECT\n            LAST(end_time)\n          )\n      ) > DURATION '21day' \n    AND (\n      SELECT\n        FIRST(event_name) FILTER (\n          WHERE\n            event_name IN (\n              'Update Opportunity Stage to: Closed Won',\n              'Update Opportunity Stage to: 06 Closed Won (Onboarding)',\n              'Update Opportunity Stage to: Closed Lost',\n              'Update Opportunity Stage to: Dead',\n              'Update Opportunity Stage to: Dead - No Opportunity',\n              'Update Opportunity Stage to: Dead - No Decision',\n              'Update Opportunity Stage to: Dead - Duplicate',\n              'Update Opportunity Stage to: 00 Dead - Lost',\n              'Update Lead Status to: Archive',\n              'Reject Quote'\n            )\n        )\n      ) IS NULL\n  )\nFROM\n  \"defaultview-545\""
    },
    {
        "filename": "40f1d116ed",
        "split": "test",
        "name": "Invoice Open Overdue Amount",
        "query": "SELECT \nSUM(\"AmountInGlobalCurrency\" )  \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND NOW() >= NetDueDate )\nAS \"Amount\"\nFROM  FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-222' table, select the sum of the 'AmountInGlobalCurrency' column where the 'EVENT_NAME' is 'Create Accounts Receivable' and 'ClearingJournalEntry' is null and the current date is greater than or equal to 'NetDueDate'. Alias the sum as 'Amount'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tSUM(\"AmountInGlobalCurrency\") FILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' AND \"ClearingJournalEntry\" IS NULL AND \"NetDueDate\" <= (NOW())))\nAS \"Amount\"\nFROM \"defaultview-222\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tSUM(\"AmountInGlobalCurrency\") FILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' AND \"ClearingJournalEntry\" IS NULL AND \"NetDueDate\" <= (NOW())))\nAS \"Amount\"\nFROM \"defaultview-222\""
    },
    {
        "filename": "dbf5719713",
        "split": "test",
        "name": "Last PO Terms of Payment Key",
        "query": "SELECT \"Last PO Terms of Payment Key\" AS \"Last PO Terms of Payment Key\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table named 'defaultview-225', select the column 'Last PO Terms of Payment Key' and rename it to 'Last PO Terms of Payment Key'. Also select the column 'Inv. Accounting Document Number', count the values in this column and rename the count to 'No. of Invoices'. Group the results by 'Last PO Terms of Payment Key' and order the final results by 'No. of Invoices' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Last PO Terms of Payment Key\" AS \"Terms of Payment\",\nCOUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nORDER BY 2 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Last PO Terms of Payment Key\" AS \"Terms of Payment\",\nCOUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM \"defaultview-225\"\nORDER BY 2 DESC"
    },
    {
        "filename": "3ca9a3a9b0",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference grouped by Plant",
        "query": "SELECT COUNT (CASE_ID), \"Plant\"\nFROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL\nGROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', select the count of CASE_ID and the 'Plant' column. Only include rows where the 'Actual Finish Date' equals the 'Scheduled Finish Date' and the 'Planned Order Number' is null. Group the results by the 'Plant' column. Order the results by the count of CASE_ID in descending order. Only return the top 10 results.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (CASE_ID) AS \"Count of Orders\",\n\"Plant\"\nFROM \"defaultview-183\"\nWhere \"Scheduled Finish Date\" = \"Actual Finish Date\" \nAND \"Planned Order Number\" IS NULL\nGROUP BY 2\norder by 1 desc\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (CASE_ID) AS \"Count of Orders\",\n\"Plant\"\nFROM \"defaultview-183\"\nWhere \"Scheduled Finish Date\" = \"Actual Finish Date\" \nAND \"Planned Order Number\" IS NULL\nGROUP BY 2\norder by 1 desc\nLIMIT 10"
    },
    {
        "filename": "efb87ebe9e",
        "split": "test",
        "name": "Market forecast override rate",
        "query": "SELECT\nCOUNT(case_id) FILTER(\n\tWHERE(\n\t\t(SELECT FIRST(\"end_time\")\n\t\t\tWHERE event_name IN ('Review Marketing Forecast') \n\t\t)IS NOT NULL\n\t)\n)\n/\nCOUNT(case_id) FILTER(\n\tWHERE \"Marketing Forecast Qty\" <> 0\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-404' table, calculate the percentage of cases where the following is true:\n- The case has a non-zero value for the 'Marketing Forecast Qty' column\n- The case has an 'end_time' value for the 'Review Marketing Forecast' event\nTo calculate this:\n1. Count the number of cases where 'Review Marketing Forecast' event has a non-null 'end_time' value. This is the numerator.\n2. Count the number of cases where 'Marketing Forecast Qty' is not equal to 0. This is the denominator. \n3. Divide the numerator by the denominator and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) FILTER \n    (WHERE \"end_time\" ('Review Marketing Forecast')  IS NOT NULL)\t\n/ \nCOUNT (CASE_ID) FILTER \n    (WHERE \"Marketing Forecast Qty\" <> 0)\t\t\t\n* 100\n\nFROM \"defaultview-404\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) FILTER \n    (WHERE \"end_time\" ('Review Marketing Forecast')  IS NOT NULL)\t\n/ \nCOUNT (CASE_ID) FILTER \n    (WHERE \"Marketing Forecast Qty\" <> 0)\t\t\t\n* 100\n\nFROM \"defaultview-404\"\n"
    },
    {
        "filename": "bead32ea3f",
        "split": "test",
        "name": "$ of Invoices with its PT better than Vendor Master data",
        "query": "SELECT SUM(\"Inv. Converted USD Amount\") FILTER(\n\t\tWHERE (\"Last Inv. Item Cash Discount Days 1\") < \n    \t  (\"Last Inv. Item Vendor Master CD 1\") OR \n          (\"Last Inv. Item Cash Discount Days 2\") < \n    \t  (\"Last Inv. Item Vendor Master CD 2\") OR \n          (\"Last Inv. Item Net Payment Terms Period\") <\n          (\"Last Inv. Item Vendor Master NDD\"))\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Calculate the sum of the 'Inv. Converted USD Amount' column from the 'defaultview-225' table, only including rows where either:\n- The value in the 'Last Inv. Item Cash Discount Days 1' column is less than the value in the 'Last Inv. Item Vendor Master CD 1' column, or \n- The value in the 'Last Inv. Item Cash Discount Days 2' column is less than the value in the 'Last Inv. Item Vendor Master CD 2' column, or\n- The value in the 'Last Inv. Item Net Payment Terms Period' column is less than the value in the 'Last Inv. Item Vendor Master NDD' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"Inv. Converted USD Amount\" ) \nFILTER (WHERE (\"Last Inv. Item Cash Discount Days 1\" < \"Last Inv. Item Vendor Master CD 1\" OR\n\"Last Inv. Item Cash Discount Days 2\" < \"Last Inv. Item Vendor Master CD 2\" OR\n\"Last Inv. Item Net Payment Terms Period\" < \"Last Inv. Item Vendor Master NDD\")))\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"Inv. Converted USD Amount\" ) \nFILTER (WHERE (\"Last Inv. Item Cash Discount Days 1\" < \"Last Inv. Item Vendor Master CD 1\" OR\n\"Last Inv. Item Cash Discount Days 2\" < \"Last Inv. Item Vendor Master CD 2\" OR\n\"Last Inv. Item Net Payment Terms Period\" < \"Last Inv. Item Vendor Master NDD\")))\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "e9674c4a5e",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of delivery item changes ",
        "query": "SELECT COUNT (\"event_name\") \n\tFILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n\t\t'Change Delivery%' OR event_name LIKE 'Update Delivery%') \n        AS created_with_dialog MATCHES (created_with_dialog))\n    ,\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nWHERE SalesDocCustomerCompany IS NOT NULL\nGROUP BY 2\nORDER BY 1 DESC\nLimit 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Count the number of events where the event name contains 'Change Delivery' or 'Update Delivery' and where the event was created with a dialog, grouped by the SalesDocCustomerCompany column, ordered descending by the count, limited to the top 10 results from the 'defaultview-290' table where SalesDocCustomerCompany is not null.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (EVENT_NAME) \nFILTER (WHERE EVENT_NAME LIKE '%Change Delivery%'\n\t\tOR EVENT_NAME LIKE '%Update Delivery%') \n\t\tFROM FLATTEN(\"defaultview-290\", 'defaultview-290\"_index') \nWHERE DURATION (BEFORE FIRST (END_EVENT(START_TIME)))) > DURATION ('1 seconds') \nAND (\"defaultview-290\".\"SalesDocCustomerCompany\" IS NOT NULL)\nAND BE (EVENT_CREATED_WITH_NAME = 'Dialog')\n\norder by 1 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (EVENT_NAME) \nFILTER (WHERE EVENT_NAME LIKE '%Change Delivery%'\n\t\tOR EVENT_NAME LIKE '%Update Delivery%') \n\t\tFROM FLATTEN(\"defaultview-290\", 'defaultview-290\"_index') \nWHERE DURATION (BEFORE FIRST (END_EVENT(START_TIME)))) > DURATION ('1 seconds') \nAND (\"defaultview-290\".\"SalesDocCustomerCompany\" IS NOT NULL)\nAND BE (EVENT_CREATED_WITH_NAME = 'Dialog')\n\norder by 1 DESC\nLIMIT 10\n"
    },
    {
        "filename": "a9ef667704",
        "split": "test",
        "name": "Average Payment Time",
        "query": "SELECT \nAVG (\"ClearingDate\"   - \"CreationDate\"  ) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \nAs \"AVG Clearing Time\"\nFROM FLATTEN(\"defaultview-222\")\nWHERE \"ClearingDate\" IS NOT NULL AND \"NetDueDate\" IS NOT NULL",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query selects the average time difference between the ClearingDate and CreationDate columns from the defaultview-222 table. It calculates the average only for rows where the EVENT_NAME value starts with 'Clear'. The query filters for rows where ClearingDate and NetDueDate are not null. The average time difference is aliased as 'AVG Clearing Time'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t\t(CASE WHEN ClearingDate IS NOT NULL THEN ClearingDate ELSE NetDueDate END)\n \t  -\t(CASE WHEN ClearingDate IS NOT NULL THEN CreationDate ELSE NULL END)\n   ) AS \"AVG Clearing Time\" \nFROM \"defaultview-222\"\nWHERE event_name LIKE 'Clear%'\nAND ClearingDate IS NOT NULL OR NetDueDate IS NOT NULL\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t\t(CASE WHEN ClearingDate IS NOT NULL THEN ClearingDate ELSE NetDueDate END)\n \t  -\t(CASE WHEN ClearingDate IS NOT NULL THEN CreationDate ELSE NULL END)\n   ) AS \"AVG Clearing Time\" \nFROM \"defaultview-222\"\nWHERE event_name LIKE 'Clear%'\nAND ClearingDate IS NOT NULL OR NetDueDate IS NOT NULL\n                "
    },
    {
        "filename": "0f07aff629",
        "split": "test",
        "name": "_Percentage of projects in execution",
        "query": "\nSELECT\n(\nCOUNT(case_id) FILTER (WHERE Project_StageText = 'In Execution')\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', calculate the percentage of cases where the value in the 'Project_StageText' column equals 'In Execution'. To do this: 1) Count the total number of rows in the 'case_id' column. 2) Filter the 'case_id' column to only include rows where 'Project_StageText' equals 'In Execution', and count the number of rows. 3) Divide the filtered count by the total count. 4) Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (SELECT\n         LAST(\"Project_StageText\")) = 'In Execution') / COUNT(case_id) * 100\nFROM\n  \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (SELECT\n         LAST(\"Project_StageText\")) = 'In Execution') / COUNT(case_id) * 100\nFROM\n  \"defaultview-197\""
    },
    {
        "filename": "3f84ef5334",
        "split": "test",
        "name": "Early Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Due Date\" - \"Last Inv. Item Clearing Date\" > DURATION '5days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-225' table, count the number of case_id values where the difference between the 'Last Inv. Item Due Date' and 'Last Inv. Item Clearing Date' columns is greater than 5 days. Divide this count by the count of case_id values where 'Last Inv. Item Clearing Date' is not null. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM ((SELECT COUNT (CASE_ID) FILTER (\n\t\tWHERE DATEDIFF (DAY,\n        (SELECT LAST (\"Last Inv. Item Due Date\")),\n        (SELECT LAST (\"Last Inv. Item Clearing Date\"))\n       ))> 5 ))\n   ) \n        \n/ SUM ((SELECT COUNT (CASE_ID) FILTER (\n\t\tWHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n      )))\n) * 100\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM ((SELECT COUNT (CASE_ID) FILTER (\n\t\tWHERE DATEDIFF (DAY,\n        (SELECT LAST (\"Last Inv. Item Due Date\")),\n        (SELECT LAST (\"Last Inv. Item Clearing Date\"))\n       ))> 5 ))\n   ) \n        \n/ SUM ((SELECT COUNT (CASE_ID) FILTER (\n\t\tWHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n      )))\n) * 100\nFROM \"defaultview-225\""
    },
    {
        "filename": "cd37fa8683",
        "split": "test",
        "name": "Avg. Cycle Time (Create PO to Release PO)",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')\n- (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item'))\nAS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', calculate the average time difference between the last end time of the 'Release PO' event and the first end time of the 'Create PO Item' event for each case. Alias this as 'Avg. Cycle Time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG ((SELECT LAST (END_TIME) \n    \tWHERE EVENT_NAME IN ('Release PO'))) - AVG ((SELECT FIRST (END_TIME) \n    \tWHERE EVENT_NAME IN ('Create PO Item')))\n   \tAS \"Avg. Cycle Time\"\n        \nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG ((SELECT LAST (END_TIME) \n    \tWHERE EVENT_NAME IN ('Release PO'))) - AVG ((SELECT FIRST (END_TIME) \n    \tWHERE EVENT_NAME IN ('Create PO Item')))\n   \tAS \"Avg. Cycle Time\"\n        \nFROM \"defaultview-124\""
    },
    {
        "filename": "4cc4a0017e",
        "split": "test",
        "name": "SOL-1742 Average cycle time for cases affected by rework",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t)\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-59', calculate the average duration of the process instances. Only include process instances that have occurred more than once, by filtering out process instances where the boolean OR of the occurrence being greater than 1 is false.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\"DURATION\" ) FILTER (\n\tWHERE BE OCCURRENCE > 1\n)\nFROM \"defaultview-59\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\"DURATION\" ) FILTER (\n\tWHERE BE OCCURRENCE > 1\n)\nFROM \"defaultview-59\"\n                "
    },
    {
        "filename": "7003c60890",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Type",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Type\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', select the count of values in the 'case_id' column as 'No. of Cases', the sum of values in the 'PO Item Net Order Value' column as 'Total PO Value', and the values in the 'PO Type' column. Order the results by 'No. of Cases' in descending order and limit to the top 50 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tcount(\"case_id\") AS \"No. of Cases\", \n    sum(\"PO Item Net Order Value\") AS \"Total PO Value\", \n   \"PO Type\"\n\nFROM \"defaultview-124\"\nORDER By 1 desc\nLimit 50\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tcount(\"case_id\") AS \"No. of Cases\", \n    sum(\"PO Item Net Order Value\") AS \"Total PO Value\", \n   \"PO Type\"\n\nFROM \"defaultview-124\"\nORDER By 1 desc\nLimit 50\n"
    },
    {
        "filename": "da7eeb3527",
        "split": "test",
        "name": "%Manually created Process orders grouped by Business Line",
        "query": "SELECT \ncount(Distinct case_id) as \"#Process Orders\",\n(COUNT (EVENT_NAME) FILTER \n(WHERE \"Event Created By User Type\" IN ('Dialog'))) / (COUNT (EVENT_NAME))* 100 \nas \"Manual rate\",\n\"Division\"\nFROM FLATTEN(\"defaultview-183\")\nWHERE EVENT_NAME = 'Create Process Order'\norder by 1 desc\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query first selects the count of distinct case_id values and aliases it as '#Process Orders'. It then calculates the percentage of events where 'Event Created By User Type' is 'Dialog' out of all events, and aliases this as 'Manual rate'. Finally, it selects the 'Division' column. All of this is done on the 'defaultview-183' table, filtered to only include rows where EVENT_NAME is 'Create Process Order'. The results are ordered by '#Process Orders' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (DISTINCT case_id)   AS \"#Process Orders\",\nCOUNT (DISTINCT event_name) AS \"#Events\",\n(COUNT (DISTINCT event_name) \nFILTER (WHERE \"Event Created By User Type\" = 'Dialog') / \nCOUNT (DISTINCT EVENT_NAME)*100) AS \"Manual rate\",\n\"Division\"\nFROM \"defaultview-183\"\nWHERE EVENT_NAME = 'Create Process Order'\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (DISTINCT case_id)   AS \"#Process Orders\",\nCOUNT (DISTINCT event_name) AS \"#Events\",\n(COUNT (DISTINCT event_name) \nFILTER (WHERE \"Event Created By User Type\" = 'Dialog') / \nCOUNT (DISTINCT EVENT_NAME)*100) AS \"Manual rate\",\n\"Division\"\nFROM \"defaultview-183\"\nWHERE EVENT_NAME = 'Create Process Order'\nORDER BY 1 DESC"
    },
    {
        "filename": "505cfbf1ae",
        "split": "test",
        "name": "Cleared Amount",
        "query": "SELECT SUM(\"AmountInGlobalCurrency\" )\nFROM FLATTEN(\"defaultview-222\")\nWHERE event_name LIKE 'Clear%'",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-222', get the sum of the values in the 'AmountInGlobalCurrency' column for all rows where the value in the 'event_name' column starts with 'Clear'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"AmountInGlobalCurrency\" ) FILTER (\n\tWHERE event_name LIKE 'Clear%')\nFROM \"defaultview-222\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"AmountInGlobalCurrency\" ) FILTER (\n\tWHERE event_name LIKE 'Clear%')\nFROM \"defaultview-222\"\n                "
    },
    {
        "filename": "0761bcb1e5",
        "split": "test",
        "name": "Open Overdue Amount (15+ Days)",
        "query": "SELECT SUM(\"AmountInCompanyCodeCurrency\"  ) \nFROM FLATTEN(\"defaultview-197\")\nWHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day'",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', select the sum of the 'AmountInCompanyCodeCurrency' column where the 'EVENT_NAME' is 'Create Accounts Receivable' and 'ClearingJournalEntry' is null and the difference between the current time and 'NetDueDate' is greater than 15 days.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nSUM (\"AmountInCompanyCodeCurrency\") FILTER (\n\tWHERE (EVENT_NAME = 'Create Accounts Receivable')\n\tAND ClearingJournalEntry IS NULL\n\tAND (NOW() - \"NetDueDate\") > DURATION '15days'\n)\nFROM \"defaultview-197\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nSUM (\"AmountInCompanyCodeCurrency\") FILTER (\n\tWHERE (EVENT_NAME = 'Create Accounts Receivable')\n\tAND ClearingJournalEntry IS NULL\n\tAND (NOW() - \"NetDueDate\") > DURATION '15days'\n)\nFROM \"defaultview-197\"\n"
    },
    {
        "filename": "707fa40cc4",
        "split": "test",
        "name": "AVG Cycle Time for On-Time Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" > \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-431' table, calculate the average time difference between the last end time of the 'Pay Invoice' activity and the first end time of the 'Receive Invoice' activity, for those process instances where the event 'Receive Invoice' is followed by the event 'Pay Invoice' and where the 'Last Invoice Due Date' is greater than the 'Last Invoice Payment Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG((SELECT LAST(end_time) \nWHERE event_name = 'Pay Invoice') - (SELECT FIRST(end_time) \nWHERE event_name = 'Receive Invoice')) \nFILTER (WHERE (SELECT LAST (\"Last Invoice Due Date\")) - (SELECT LAST (\"Last Invoice Payment Date\")) > DURATION '0day' )\nFROM \"defaultview-431\"\nWHERE event_name\nMATCHES ('Receive Invoice'~>'Pay Invoice')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG((SELECT LAST(end_time) \nWHERE event_name = 'Pay Invoice') - (SELECT FIRST(end_time) \nWHERE event_name = 'Receive Invoice')) \nFILTER (WHERE (SELECT LAST (\"Last Invoice Due Date\")) - (SELECT LAST (\"Last Invoice Payment Date\")) > DURATION '0day' )\nFROM \"defaultview-431\"\nWHERE event_name\nMATCHES ('Receive Invoice'~>'Pay Invoice')"
    },
    {
        "filename": "d6c10482e1",
        "split": "test",
        "name": "Combinations with understocking",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (\"Inventory Target\" > \"Stock on Hand\") \n\tAND DATE_TRUNC('month', NOW()) = \"MONTH\"\n)\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-404', count the number of 'case_id' values where the 'Inventory Target' column value is greater than the 'Stock on Hand' column value and the month extracted from the current date matches the value in the 'MONTH' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER (WHERE \"Inventory Target\" > \"Stock on Hand\" )\nFROM \"defaultview-404\"\nWhere DATE_TRUNC('month', NOW() ) = \"MONTH\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER (WHERE \"Inventory Target\" > \"Stock on Hand\" )\nFROM \"defaultview-404\"\nWhere DATE_TRUNC('month', NOW() ) = \"MONTH\"\n"
    },
    {
        "filename": "6ec4e9c927",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Type",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Process Order Type\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', group the rows by the 'Process Order Type' column. For each group, count the number of rows and store this count in a column named '# Process Orders'. Then sort the groups in descending order by the '# Process Orders' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (\"Process Order\") AS \"# Process Orders\"\n, \"Process Order Type\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 desc NULLS LAST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (\"Process Order\") AS \"# Process Orders\"\n, \"Process Order Type\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 desc NULLS LAST"
    },
    {
        "filename": "cf2c703ad2",
        "split": "test",
        "name": "No. of Cases by PO Vendor & PO Plant City",
        "query": "SELECT \nCOUNT (\"CASE_ID\") AS \"No. of Cases\", \n\"PO Vendor Name\" AS \"PO Vendor\", \n\"PO Item Plant City\" AS \"PO Plant City\"\nFROM \"defaultview-124\"\n--WHERE (EVENT_NAME MATCHES ('Clear Invoice') AND EVENT_NAME MATCHES ('Create PR Item'))\nORDER BY 1 DESC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', select the count of values in the 'CASE_ID' column as 'No. of Cases', the values in the 'PO Vendor Name' column as 'PO Vendor', and the values in the 'PO Item Plant City' column as 'PO Plant City'. Order the results by 'No. of Cases' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tCOUNT(CASE_ID) as \"No. of Cases\", \n    \"PO Vendor Name\" AS \"PO Vendor\", \n   \"PO Item Plant City\" AS \"PO Plant City\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tCOUNT(CASE_ID) as \"No. of Cases\", \n    \"PO Vendor Name\" AS \"PO Vendor\", \n   \"PO Item Plant City\" AS \"PO Plant City\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC"
    },
    {
        "filename": "2b513712ff",
        "split": "test",
        "name": "Number of Billing Documents Cancelled",
        "query": "SELECT \nCOUNT(DISTINCT \"BillingDocument\") FILTER (\n\tWHERE event_name ='Cancel Billing Document')\n\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-222', get the distinct count of 'BillingDocument' column values where the 'event_name' column value is 'Cancel Billing Document'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(distinct \"BillingDocument\") FILTER (WHERE event_name = 'Cancel Billing Document') \nFROM FLATTEN (\"defaultview-222\")\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(distinct \"BillingDocument\") FILTER (WHERE event_name = 'Cancel Billing Document') \nFROM FLATTEN (\"defaultview-222\")\n"
    },
    {
        "filename": "b3e2ffc236",
        "split": "test",
        "name": "Production quantity accuracy ",
        "query": "SELECT \nAVG(\n\t\"Produced Delivered Quantity\"/\"Total Order Quantity\")\n\tFILTER(WHERE \"Delivery Completed\" IS NOT NULL)\n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', calculate the average of the ratio between the 'Produced Delivered Quantity' and 'Total Order Quantity' columns, only for rows where the 'Delivery Completed' column is not null. Multiply this average by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(DeliveredQuantity / OrderTotalQuantity)\nFILTER (\n\tWHERE \"Order\"DeliveryCompleted IS NOT NULL\n     )\n* 100\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(DeliveredQuantity / OrderTotalQuantity)\nFILTER (\n\tWHERE \"Order\"DeliveryCompleted IS NOT NULL\n     )\n* 100\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "d7a764fe04",
        "split": "test",
        "name": "AVG Cycle Time for Late Payments",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Pay Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice')))) \n\nFROM \"defaultview-431\" \nWHERE event_name Matches ('Receive Invoice' ~> 'Pay Invoice')\n    AND (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\") ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-431' table, calculate the average time difference between the last end time of the 'Pay Invoice' activity and the first end time of the 'Receive Invoice' activity, for those process instances where the event 'Receive Invoice' is followed by the event 'Pay Invoice' and the 'Last Invoice Due Date' is before the 'Last Invoice Payment Date'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG ((SELECT LAST (END_TIME) FILTER (\n\t\tWHERE\n\t\t\t(EVENT_NAME = 'Pay Invoice')) \n\t\t\t- FIRST (END_TIME) FILTER (\n\t\tWHERE\n\t\t\t(EVENT_NAME = 'Receive Invoice'))))) FILTER (\n\tWHERE\n\t\t\"SIR_NUMBER\" MATCHES (LAST (\"Last Invoice Due Date\") < \"Last Invoice Payment Date\"))\nFROM\n\t\"defaultview-431\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG ((SELECT LAST (END_TIME) FILTER (\n\t\tWHERE\n\t\t\t(EVENT_NAME = 'Pay Invoice')) \n\t\t\t- FIRST (END_TIME) FILTER (\n\t\tWHERE\n\t\t\t(EVENT_NAME = 'Receive Invoice'))))) FILTER (\n\tWHERE\n\t\t\"SIR_NUMBER\" MATCHES (LAST (\"Last Invoice Due Date\") < \"Last Invoice Payment Date\"))\nFROM\n\t\"defaultview-431\" "
    },
    {
        "filename": "7cda2249c2",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-545' table, count the number of case_id rows where the 'Last Invoice Due Date' column value is less than the 'Last Invoice Payment Date' column value, divide this by the count of all case_id rows where the 'Last Invoice Payment Date' column is not null, and multiply the result by 100. This calculates the percentage of invoices paid late.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NOT NULL))\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NOT NULL))\n* 100\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "b1511789a0",
        "split": "test",
        "name": "Current status - what was the last activity",
        "query": "SELECT \nCOUNT(case_id) AS \"Affected Invoice Volume\"\n,LAST(event_name) AS \"Last Activity\"\n,\"Last FI Invoice Item Due Date\"- DATE_TRUNC('day', NOW()) AS \"Days until Due\"\n\nFROM FLATTEN(\"defaultview-57\")\nWHERE (\"Last FI Invoice Item Clearing Date\" IS NULL)\nAND \"Last FI Invoice ID\" IS NOT NULL\nORDER BY 1 desc",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-57' table, select the count of 'case_id' column values as 'Affected Invoice Volume', the last value of the 'event_name' column as 'Last Activity', and calculate the number of days until the due date by subtracting the current date truncated to the day from the 'Last FI Invoice Item Due Date' column as 'Days until Due'. Only include rows where 'Last FI Invoice Item Clearing Date' is null and 'Last FI Invoice ID' is not null. Order the results by 'Affected Invoice Volume' in descending order.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT(\"case_id\") AS \"Affected Invoice Volume\",\n  LAST (event_name) AS \"Last Activity\",\n  DATE_TRUNC('day', NOW()) - \"Last FI Invoice Item Due Date\" AS \"Days until Due\"\nFROM\n  \"defaultview-57\"\nWHERE\n  \"Last FI Invoice Item Clearing Date\" IS NULL\n  AND \"Last FI Invoice ID\" IS NOT NULL\nORDER BY\n  1 DESC\n  \n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT(\"case_id\") AS \"Affected Invoice Volume\",\n  LAST (event_name) AS \"Last Activity\",\n  DATE_TRUNC('day', NOW()) - \"Last FI Invoice Item Due Date\" AS \"Days until Due\"\nFROM\n  \"defaultview-57\"\nWHERE\n  \"Last FI Invoice Item Clearing Date\" IS NULL\n  AND \"Last FI Invoice ID\" IS NOT NULL\nORDER BY\n  1 DESC\n  \n\n\n"
    },
    {
        "filename": "9667cec47a",
        "split": "test",
        "name": "AVG Cycle Time",
        "query": "SELECT AVG((SELECT LAST(end_time))\n\t\t- (SELECT FIRST(end_time)))\nAS \"AVG Cycle Time\"\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-545', calculate the average difference between the last end_time value and the first end_time value for each record, and return this average difference as 'AVG Cycle Time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG ((SELECT last(end_time)) - (SELECT first(end_time))))  AS \"AVG Cycle Time\"\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG ((SELECT last(end_time)) - (SELECT first(end_time))))  AS \"AVG Cycle Time\"\nFROM \"defaultview-545\""
    },
    {
        "filename": "a864b7d746",
        "split": "test",
        "name": "Number Created Receivables over Time",
        "query": "SELECT  \n\tDATE_TRUNC('Day', \"end_time\" )  AS \"Creation Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-222' table, get the day truncated date value from the 'end_time' column and alias it as 'Creation Date'. Also get the distinct count of values from the 'ARUniqueKey' column and alias it as '# Receivables'. Only include rows where the 'EVENT_NAME' column value starts with 'Create Accounts Receivable'. Group the results by 'Creation Date' and order them in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nDATE_TRUNC('day', end_time) AS \"Creation Date\"\n, COUNT (Distinct \"ARUniqueKey\" ) AS \"# Receivables\" \nFROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME MATCHES ('Create Accounts Receivable*')\nGROUP BY 1\nORDER BY 1 ASC NULLS FIRST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nDATE_TRUNC('day', end_time) AS \"Creation Date\"\n, COUNT (Distinct \"ARUniqueKey\" ) AS \"# Receivables\" \nFROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME MATCHES ('Create Accounts Receivable*')\nGROUP BY 1\nORDER BY 1 ASC NULLS FIRST"
    },
    {
        "filename": "ed8e83eb28",
        "split": "test",
        "name": "Number of changes in invoice items",
        "query": "SELECT COUNT(\"event_name\") \n\tFILTER(WHERE BEHAVIOR (\n           event_name LIKE 'Change Invoice%' \n           OR event_name LIKE 'Create Invoice Cancellation%' \n           OR event_name LIKE 'Update Invoice%'\n           ) AS created_with_dialog MATCHES (created_with_dialog))\nFROM FLATTEN(\"defaultview-290\")\n\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query is selecting the count of 'event_name' column from the 'defaultview-290' table. It filters the rows where the 'event_name' value starts with 'Change Invoice', 'Create Invoice Cancellation' or 'Update Invoice'. The filter checks if the 'created_with_dialog' behavior matches the value 'created_with_dialog'.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(event_name) \nFROM \"defaultview-290\"\nWHERE ((event_name LIKE 'Change Invoice%') OR (event_name LIKE 'Create Invoice Cancellation%') OR (event_name LIKE 'Update Invoice%'))\nAND created_with_dialog MATCHES ('created_with_dialog')\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(event_name) \nFROM \"defaultview-290\"\nWHERE ((event_name LIKE 'Change Invoice%') OR (event_name LIKE 'Create Invoice Cancellation%') OR (event_name LIKE 'Update Invoice%'))\nAND created_with_dialog MATCHES ('created_with_dialog')\n"
    },
    {
        "filename": "33b740656c",
        "split": "test",
        "name": "% Cases Started Late WITHOUT planned order reference",
        "query": "SELECT (count(case_id)\nFILTER (WHERE \"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\n \n  FROM \"defaultview-183\"\n\nWHERE \"Planned Order Number\" IS NULL\n\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-183' table, select all rows where the 'Planned Order Number' column is NULL. From those rows, calculate the percentage of cases where the 'Actual Start Date' column value is greater than the 'Scheduled Start Date' column value. To calculate the percentage: Count the number of cases where 'Actual Start Date' - 'Scheduled Start Date' is greater than 0 seconds. Divide this by the total number of case IDs. Multiply the result by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT ((COUNT(CASE_ID) FILTER\n(WHERE (\"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds')))\n/ \n(COUNT(CASE_ID))) * 100\nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT ((COUNT(CASE_ID) FILTER\n(WHERE (\"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds')))\n/ \n(COUNT(CASE_ID))) * 100\nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL "
    },
    {
        "filename": "093ba34496",
        "split": "test",
        "name": "JSM Average Closing Time",
        "query": "\nSELECT\nAVG(\n\tIF(\"Issue Type\" = '[System] Change',\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Canceled','Issue status change: Completed','Issue status change: Failed'))\n\t\t-(\"Issue Created Date\" ),\n\t\t(SELECT LAST(end_time) WHERE event_name IN ('Issue status change: Closed','Issue status change: Done'))\n\t\t-(\"Issue Created Date\" ))\n   )\nFROM \"defaultview-370\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-370', for each row, check if the value in the 'Issue Type' column is '[System] Change'. If it is, calculate the difference between the 'Issue Created Date' and the latest 'end_time' where 'event_name' is either 'Issue status change: Canceled', 'Issue status change: Completed', or 'Issue status change: Failed'. If 'Issue Type' is not '[System] Change', calculate the difference between 'Issue Created Date' and the latest 'end_time' where 'event_name' is either 'Issue status change: Closed' or 'Issue status change: Done'. Finally, take the average of all these duration differences.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\nAVG\n(\nCASE \n\tWHEN \"Issue Type\" = '[System] Change' THEN\n    \t(SELECT LAST(end_time)\n        WHERE event_name IN ('Issue status change: Canceled', 'Issue status change: Completed', 'Issue status change: Failed')) - \"Issue Created Date\"\n    \t\n    WHEN \"Issue Type\" != '[System] Change' THEN\n    \t(SELECT LAST(end_time)\n        WHERE event_name IN ('Issue status change: Closed', 'Issue status change: Done')) - \"Issue Created Date\"\n        \nEND ) \n\nFROM \"defaultview-370\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\nAVG\n(\nCASE \n\tWHEN \"Issue Type\" = '[System] Change' THEN\n    \t(SELECT LAST(end_time)\n        WHERE event_name IN ('Issue status change: Canceled', 'Issue status change: Completed', 'Issue status change: Failed')) - \"Issue Created Date\"\n    \t\n    WHEN \"Issue Type\" != '[System] Change' THEN\n    \t(SELECT LAST(end_time)\n        WHERE event_name IN ('Issue status change: Closed', 'Issue status change: Done')) - \"Issue Created Date\"\n        \nEND ) \n\nFROM \"defaultview-370\""
    },
    {
        "filename": "a9f69086c6",
        "split": "test",
        "name": "POs created after Invoice Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER\n\t(WHERE (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice') ~> 'Create PO Item')))\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-545', count the number of case_id values where the event_name column contains the sequence 'Receive Invoice' or 'Reconcile Invoice' directly followed by 'Create PO Item'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE event_name MATCHES ('Receive Invoice'~> 'Reconcile Invoice' ~> 'Create PO Item'))\n)\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE event_name MATCHES ('Receive Invoice'~> 'Reconcile Invoice' ~> 'Create PO Item'))\n)\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "4ed73943d3",
        "split": "test",
        "name": "Number of Invoices ",
        "query": "SELECT\n  COUNT( case_id)\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Count the number of rows from the 'case_id' column in the table named 'defaultview-545'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  count(\"case_id\")\nFROM\n  \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  count(\"case_id\")\nFROM\n  \"defaultview-545\"\n                "
    },
    {
        "filename": "88d017c4a6",
        "split": "test",
        "name": "Total PO discount Amount on Catalog item",
        "query": "SELECT -SUM(\"PO Amount Discount\") AS \"Total PO discount Amount\"\nFROM \"defaultview-431\"\nWHERE \"PO Item Line Type\" = 'Catalog'",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-431', select the sum of the negative values in the 'PO Amount Discount' column and alias it as 'Total PO discount Amount'. Only include rows where the value in the 'PO Item Line Type' column equals 'Catalog'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tSUM(\"PO Item Line Type\" MATCHES ('Catalog') THEN \"PO Amount Discount\" ELSE 0)\n\t-- COUNT(\"PO Amount Discount if > 0\")\n    \nFROM \n\t\"defaultview-431\"\n    \n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tSUM(\"PO Item Line Type\" MATCHES ('Catalog') THEN \"PO Amount Discount\" ELSE 0)\n\t-- COUNT(\"PO Amount Discount if > 0\")\n    \nFROM \n\t\"defaultview-431\"\n    \n\n"
    },
    {
        "filename": "7701541719",
        "split": "test",
        "name": "Average Cycle Time Over Time",
        "query": "SELECT\n    DATE_TRUNC('month', (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"PO Creation Date\",\n    \n    AVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Receive Invoice')))\n   \t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item')))) AS \"Average cycle time\"\n    \nFROM \"defaultview-545\"\nWHERE event_name MATCHES ('Create PO Item' 'Receive Invoice')\nORDER BY 1 ASC NULLS FIRST\nFILL TIMESERIES('MONTH'), NULL",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-545' table, select the first day of the month of the earliest 'end_time' for events with 'event_name' = 'Create PO Item' as 'PO Creation Date'. Also select the average of the difference between the latest 'end_time' for events with 'event_name' = 'Receive Invoice' and the earliest 'end_time' for events with 'event_name' = 'Create PO Item' as 'Average cycle time'. Only include rows where 'event_name' matches 'Create PO Item' or 'Receive Invoice', order the results by 'PO Creation Date' ascending with nulls first, fill in missing months in the time series with null values.",
        "llm_gpt-35-turbo-0613_query": "SELECT DATE_TRUNC('month', (SELECT FIRST(end_time)))) AS \"PO Creation Date\", \nAVG((SELECT LAST(end_time) FILTER ( WHERE event_name = 'Receive Invoice')) - (SELECT FIRST(end_time) FILTER ( WHERE event_name = 'Create PO Item')) FILTER (WHERE EVENT_NAME MATCHES ('Create PO Item'~> 'Receive Invoice')) ) AS \"Average cycle time\"\nFROM \"defaultview-545\"\norder by 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT DATE_TRUNC('month', (SELECT FIRST(end_time)))) AS \"PO Creation Date\", \nAVG((SELECT LAST(end_time) FILTER ( WHERE event_name = 'Receive Invoice')) - (SELECT FIRST(end_time) FILTER ( WHERE event_name = 'Create PO Item')) FILTER (WHERE EVENT_NAME MATCHES ('Create PO Item'~> 'Receive Invoice')) ) AS \"Average cycle time\"\nFROM \"defaultview-545\"\norder by 1"
    },
    {
        "filename": "ce0a335a7b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Set Deletion Flag WITHOUT planned order reference",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Deletion Flag')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query is calculating the average time difference between the 'Deletion Flag' and 'Create Process Order' events for rows in the 'defaultview-183' table where the 'Planned Order Number' column is NULL. \n\nIt does this by:\n\n1. Selecting the last end_time for 'Deletion Flag' events \n2. Selecting the first end_time for 'Create Process Order' events\n3. Subtracting the first end_time from the last end_time\n4. Averaging these time differences\n5. Filtering to only include rows where 'Planned Order Number' is NULL in the 'defaultview-183' table",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG ((SELECT LAST (END_TIME)\n     WHERE EVENT_NAME IN ('Deletion Flag')))\n-\n(SELECT FIRST (END_TIME)\nWHERE EVENT_NAME IN ('Create Process Order'))) AS \"Avg time between creation of process order and deletion flag\"\n\nFROM \"defaultview-183\"\n\nWHERE \"Planned Order Number\" IS NULL\n\n\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG ((SELECT LAST (END_TIME)\n     WHERE EVENT_NAME IN ('Deletion Flag')))\n-\n(SELECT FIRST (END_TIME)\nWHERE EVENT_NAME IN ('Create Process Order'))) AS \"Avg time between creation of process order and deletion flag\"\n\nFROM \"defaultview-183\"\n\nWHERE \"Planned Order Number\" IS NULL\n\n\n                "
    },
    {
        "filename": "7d57352489",
        "split": "test",
        "name": "Late Delivery after on-time release",
        "query": "SELECT (count(case_id)\nFILTER (\nWHERE \"Actual Delivery Date\" - \"Scheduled Finish Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\nFROM \"defaultview-183\"\nWhere \"Actual Release Date\" - \"Scheduled Release Date\" = DURATION '0seconds'\nAND \"Actual Finish Date\" is not null\nAND \"Scheduled Finish Date\" is not null\nAND \"Actual Start Date\" is not null\nAND \"Scheduled Start Date\" is not null\n\n\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-183' table, select all rows where the 'Actual Release Date' equals the 'Scheduled Release Date', the 'Actual Finish Date' is not null, the 'Scheduled Finish Date' is not null, the 'Actual Start Date' is not null, and the 'Scheduled Start Date' is not null. Then, calculate the percentage of cases where the 'Actual Delivery Date' is greater than the 'Scheduled Finish Date' by more than 0 seconds out of all the selected cases. Return this percentage value.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(CASE_ID)\nFROM\n  \"defaultview-183\"\nWHERE\n  \"Actual Release Date\" = \"Scheduled Release Date\" AND \"Actual Finish Date\" IS NOT NULL AND \"Scheduled Finish Date\" IS NOT NULL AND \"Actual Start Date\" IS NOT NULL AND \"Scheduled Start Date\" IS NOT NULL\nAND \"Actual Delivery Date\" > \"Scheduled Finish Date\"\n \n                 /SELECT\n                     COUNT(CASE_ID)\n                 *100\n                 FROM\n                  \"defaultview-183\"\n          WHERE\n  \"Actual Release Date\" = \"Scheduled Release Date\" AND \"Actual Finish Date\" IS NOT NULL AND \"Scheduled Finish Date\" IS NOT NULL AND \"Actual Start Date\" IS NOT NULL AND \"Scheduled Start Date\" IS NOT NULL\n  ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(CASE_ID)\nFROM\n  \"defaultview-183\"\nWHERE\n  \"Actual Release Date\" = \"Scheduled Release Date\" AND \"Actual Finish Date\" IS NOT NULL AND \"Scheduled Finish Date\" IS NOT NULL AND \"Actual Start Date\" IS NOT NULL AND \"Scheduled Start Date\" IS NOT NULL\nAND \"Actual Delivery Date\" > \"Scheduled Finish Date\"\n \n                 /SELECT\n                     COUNT(CASE_ID)\n                 *100\n                 FROM\n                  \"defaultview-183\"\n          WHERE\n  \"Actual Release Date\" = \"Scheduled Release Date\" AND \"Actual Finish Date\" IS NOT NULL AND \"Scheduled Finish Date\" IS NOT NULL AND \"Actual Start Date\" IS NOT NULL AND \"Scheduled Start Date\" IS NOT NULL\n  "
    },
    {
        "filename": "7afbed3e6c",
        "split": "test",
        "name": "Avg. Cycle Time (GRN to Post Invoice) by PO Purchasing Group",
        "query": "SELECT \nCOUNT(CASE_ID) as \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\",\n\"PO Purchasing Group Text\" AS \"Purchasing Group\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-124' table, group the rows by the 'PO Purchasing Group Text' column. For each group, calculate the following: Count the number of distinct 'CASE_ID' values and store this count as 'No. of Cases'. Calculate the average time difference between the last 'Create Goods Receipt' event and the last 'Create FI Invoice' event for each case, and store this as 'Avg. Cycle Time'. Return the 'Purchasing Group', 'No. of Cases' and 'Avg. Cycle Time' for the top 50 groups ordered by 'No. of Cases' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \"PURCHASING GROUP TEXT\" AS \"Purchasing Group\" ,\nCOUNT(DISTINCT CASE_ID) AS \"No. of Cases\" ,\n\nAVG ((SELECT LAST (\"end_time\") \n\t WHERE EVENT_NAME = 'Create FI Invoice') \n\t - (SELECT LAST (\"end_time\") \n\t    WHERE EVENT_NAME = 'Create Goods Receipt'))\nAS \"Avg. Cycle Time\"\n\nFROM \"defaultview-124\"\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 50\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \"PURCHASING GROUP TEXT\" AS \"Purchasing Group\" ,\nCOUNT(DISTINCT CASE_ID) AS \"No. of Cases\" ,\n\nAVG ((SELECT LAST (\"end_time\") \n\t WHERE EVENT_NAME = 'Create FI Invoice') \n\t - (SELECT LAST (\"end_time\") \n\t    WHERE EVENT_NAME = 'Create Goods Receipt'))\nAS \"Avg. Cycle Time\"\n\nFROM \"defaultview-124\"\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 50\n"
    },
    {
        "filename": "ebfb4c5190",
        "split": "test",
        "name": "_Average timesheet approval time",
        "query": "\nSELECT\nSUM(\"TSR_AVGCreationTillApprovalTime\" * \"TSR_Count\")\n/\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', calculate the sum of the product of the 'TSR_AVGCreationTillApprovalTime' column and the 'TSR_Count' column, divided by the sum of the 'TSR_Count' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM (TSR_Count * TSR_AVGCreationTillApprovalTime) / SUM (TSR_Count) \nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM (TSR_Count * TSR_AVGCreationTillApprovalTime) / SUM (TSR_Count) \nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "d62720137d",
        "split": "test",
        "name": "Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\")\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last FI Invoice Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-57\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-57' table, count the number of 'case_id' values where 'Last FI Invoice Item Due Date' is less than 'Last FI Invoice Item Clearing Date'. Divide this by the count of 'case_id' values where 'Last FI Invoice Item Clearing Date' is not null. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\t\tWHERE (\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"))\n/ COUNT(case_id)\nFILTER (WHERE \"Last FI Invoice Item Clearing Date\" IS NOT NULL)\n* 100\nFROM \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\t\tWHERE (\"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"))\n/ COUNT(case_id)\nFILTER (WHERE \"Last FI Invoice Item Clearing Date\" IS NOT NULL)\n* 100\nFROM \"defaultview-57\"\n                "
    },
    {
        "filename": "aa7861486e",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-133\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-133', select the sum of the values in the 'Inv. Converted USD Amount' column where the value in the 'Last Inv. Item Clearing Date' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT sum(\"Inv. Converted USD Amount\") \nFROM \"defaultview-133\"\nWHERE \"Last Inv. Item Clearing Date\" is null",
        "llm_gpt-35-turbo-0613_full_output": "SELECT sum(\"Inv. Converted USD Amount\") \nFROM \"defaultview-133\"\nWHERE \"Last Inv. Item Clearing Date\" is null"
    },
    {
        "filename": "935da015df",
        "split": "test",
        "name": "Percentage of not Approved Timesheets by Activity Type",
        "query": "SELECT\n(\nCount(distinct TimesheetRecord) \nFILTER \n(WHERE event_name = 'Create Timesheet Record')\n-\n Count(distinct TimesheetRecord) \nFILTER \n(WHERE event_name IN ('Approve Timesheet Record', 'Auto-Approve Timesheet Record', 'Cancel Timesheet Record'))\n)\n/ Count(distinct TimesheetRecord) * 100 AS \"% of not Approved Timesheets\",\n\n\"ActivityType\"  AS \"Activity Type\"\n\n\nFROM FLATTEN(\"defaultview-197\")\n\nORDER BY 1 DESC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-197' table:\n1. Count the distinct 'TimesheetRecord's where the 'event_name' is 'Create Timesheet Record'. \n2. Count the distinct 'TimesheetRecord's where the 'event_name' is 'Approve Timesheet Record', 'Auto-Approve Timesheet Record', or 'Cancel Timesheet Record'.\n3. Subtract the count in step 2 from the count in step 1. \n4. Divide the result of step 3 by the total count of distinct 'TimesheetRecord's and multiply by 100 to calculate the percentage of timesheets that are not approved. Alias this as '% of not Approved Timesheets'.\n5. Select the 'ActivityType' column and alias it as 'Activity Type'.\n6. Order the results by '% of not Approved Timesheets' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"TimesheetRecord\") FILTER \n(WHERE event_name IN ('Create Timesheet Record'))  \n/ COUNT(DISTINCT \"TimesheetRecord\")   \n\tCOUNT (DISTINCT \"TimesheetRecord\") * 100 \nAS \"% of not Approved Timesheets\",\n\"ActivityType\" AS \"Activity Type\"\nORDER BY 1 DESC\nFROM FLATTEN(\"defaultview-197\") ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"TimesheetRecord\") FILTER \n(WHERE event_name IN ('Create Timesheet Record'))  \n/ COUNT(DISTINCT \"TimesheetRecord\")   \n\tCOUNT (DISTINCT \"TimesheetRecord\") * 100 \nAS \"% of not Approved Timesheets\",\n\"ActivityType\" AS \"Activity Type\"\nORDER BY 1 DESC\nFROM FLATTEN(\"defaultview-197\") "
    },
    {
        "filename": "fdbbf9f7fc",
        "split": "test",
        "name": "% of automatic delivery items changes",
        "query": "SELECT\n    COUNT(\"event_name\") FILTER (\n        WHERE BEHAVIOR (\n              \"EventCreatedByUserType\"  IN ('System','Service','Batch Job')\n            ) AS created_with_dialog MATCHES (created_with_dialog)\n    ) / COUNT(\"event_name\") * 100\nFROM FLATTEN(\"defaultview-290\")\nWHERE (event_name LIKE 'Change Delivery%' \n\tOR event_name LIKE 'Update Delivery%')",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-290' table, get the percentage of events where the event name starts with 'Change Delivery' or 'Update Delivery', and where the 'EventCreatedByUserType' column value is 'System', 'Service', or 'Batch Job'. To calculate the percentage: Count the number of events matching the name filter, then count the number of those events where 'EventCreatedByUserType' matches the specified values, divide the second count by the first count, and multiply by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n WHERE EVENT_NAME matches ('%Change Delivery%' OR '%Update Delivery%')\n   )\n/\nCOUNT (CASE_ID) FILTER (\n \tWHERE \"EventCreatedByUserType\" IN ('System', 'Service', 'Batch Job')\n   )\n* 100\nFROM \"defaultview-290\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n WHERE EVENT_NAME matches ('%Change Delivery%' OR '%Update Delivery%')\n   )\n/\nCOUNT (CASE_ID) FILTER (\n \tWHERE \"EventCreatedByUserType\" IN ('System', 'Service', 'Batch Job')\n   )\n* 100\nFROM \"defaultview-290\"\n                "
    },
    {
        "filename": "d1bd2930bd",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', calculate the average of the difference between the 'Basic Finish Date' column and the 'Basic Start Date' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tAVG (\"Basic Finish Date\" - \"Basic Start Date\" ) \nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tAVG (\"Basic Finish Date\" - \"Basic Start Date\" ) \nFROM \"defaultview-183\""
    },
    {
        "filename": "005b27854f",
        "split": "test",
        "name": "Top 10 Customers with highest Open Receivables Amounts",
        "query": "SELECT\n     \"AR_CustomerName\"  AS \"Customer\",\n    SUM(\"AmountInCompanyCodeCurrency\" ) as \"Amount\"\nFROM FLATTEN(\"defaultview-197\")\nWHERE \"ClearingDate\"  IS NULL\nAND event_name =  'Create Accounts Receivable' \nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', select the 'AR_CustomerName' column and alias it as 'Customer'. Sum the values in the 'AmountInCompanyCodeCurrency' column and alias it as 'Amount'. Only include rows where 'ClearingDate' is null and 'event_name' is 'Create Accounts Receivable'. Group the results by 'Customer' and order them descending by 'Amount'. Only return the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \n\"AR_CustomerName\" AS \"Customer\",  \nSUM (\"AmountInCompanyCodeCurrency\") AS \"Amount\"\nFROM \"defaultview-197\"\nWHERE ClearingDate is NULL \nAND event_name = 'Create Accounts Receivable' \nGROUP BY 1 \nORDER BY 2 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \n\"AR_CustomerName\" AS \"Customer\",  \nSUM (\"AmountInCompanyCodeCurrency\") AS \"Amount\"\nFROM \"defaultview-197\"\nWHERE ClearingDate is NULL \nAND event_name = 'Create Accounts Receivable' \nGROUP BY 1 \nORDER BY 2 DESC\nLIMIT 10"
    },
    {
        "filename": "4f97b966fc",
        "split": "test",
        "name": "Top Vendors with worse Payments Terms on their invoice",
        "query": "SELECT \nSUM (\"Last FI Invoice Item Gross Amount in USD\") \nFILTER (WHERE (\"Last FI Invoice Item Cash Discount Days 1\") \n< (CASE WHEN \"PO Cash Discount Days 1\" IS NULL THEN 0 \nELSE \"PO Cash Discount Days 1\" END)) AS \"Payment Terms Differences where PO is better (Amount)\"\n,\"PO Vendor Name\"\nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-124' table, select the 'PO Vendor Name' column. Also calculate the sum of the 'Last FI Invoice Item Gross Amount in USD' column, but only include rows where the value in the 'Last FI Invoice Item Cash Discount Days 1' column is less than the value in the 'PO Cash Discount Days 1' column (or 0 if 'PO Cash Discount Days 1' is null). Alias this sum as 'Payment Terms Differences where PO is better (Amount)'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"PO Vendor Name\",\nSUM(\"Last FI Invoice Item Gross Amount in USD\")\n- SUM (\n\tCASE \n    WHEN \"Last FI Invoice Item Cash Discount Days 1\" \n    \t< coalesce (\"PO Cash Discount Days 1\", 0)   \t\n\t\tTHEN 0.01  * \"Last FI Invoice Item Net Amount in LC\" \n\t\t\t* (\"PO Line Item Unit Price\" * (1 - (\"PO Line Item Item Disc. Percent\" / 100)))\n\t\tELSE 0\n\tEND\n)\nFILTER (WHERE EVENT_NAME = 'PO_CreateEventModel' AND PO_DELIVERY_COMPLETED = 0 \n\tAND PO_DELIVERY_DELETED = 0 AND PO_CONFIRMED_FLAG = 0) \nAS \"Payment Terms Differences where PO is better (Amount)\"\nFROM \"defaultview-124\"\nGROUP BY 1\nORDER BY 2 DESC, 1 ASC NULLS LAST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"PO Vendor Name\",\nSUM(\"Last FI Invoice Item Gross Amount in USD\")\n- SUM (\n\tCASE \n    WHEN \"Last FI Invoice Item Cash Discount Days 1\" \n    \t< coalesce (\"PO Cash Discount Days 1\", 0)   \t\n\t\tTHEN 0.01  * \"Last FI Invoice Item Net Amount in LC\" \n\t\t\t* (\"PO Line Item Unit Price\" * (1 - (\"PO Line Item Item Disc. Percent\" / 100)))\n\t\tELSE 0\n\tEND\n)\nFILTER (WHERE EVENT_NAME = 'PO_CreateEventModel' AND PO_DELIVERY_COMPLETED = 0 \n\tAND PO_DELIVERY_DELETED = 0 AND PO_CONFIRMED_FLAG = 0) \nAS \"Payment Terms Differences where PO is better (Amount)\"\nFROM \"defaultview-124\"\nGROUP BY 1\nORDER BY 2 DESC, 1 ASC NULLS LAST"
    },
    {
        "filename": "59a5b5c1d4",
        "split": "test",
        "name": "Projects by Project Profile",
        "query": "SELECT count(case_id) AS \"# Projects\", \nProject_ProfileCode AS \"Project Profile\"\nFROM \"defaultview-197\"\nORDER BY 1 DESC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', select the count of 'case_id' values and give it the alias '# Projects'. Also select the 'Project_ProfileCode' column and give it the alias 'Project Profile'. Group the results by 'Project Profile' and order the final results by '# Projects' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) AS \"# Projects\",\n\"Project_ProfileCode\" AS \"Project Profile\"\nFROM \"defaultview-197\"\nGROUP BY 2\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) AS \"# Projects\",\n\"Project_ProfileCode\" AS \"Project Profile\"\nFROM \"defaultview-197\"\nGROUP BY 2\nORDER BY 1 DESC"
    },
    {
        "filename": "defa1f2d35",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Business Line",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Division\"\nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', select the count of 'case_id' values as 'Cases', the average of the difference between 'Basic Finish Date' and 'Basic Start Date' as 'Cycle Time', and the 'Division' column. Order the results by the 'Cases' column in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(\"case_id\") AS \"Cases\",\nAVG (\"Basic Finish Date\"-\"Basic Start Date\" )  AS \"Cycle Time\",\n\"Division\" AS \"Division\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(\"case_id\") AS \"Cases\",\nAVG (\"Basic Finish Date\"-\"Basic Start Date\" )  AS \"Cycle Time\",\n\"Division\" AS \"Division\"\nFROM \"defaultview-183\"\nORDER BY 1 DESC"
    },
    {
        "filename": "92022651c1",
        "split": "test",
        "name": "SOL-1682 Late payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n        WHERE (SELECT COUNT(event_name)\n                        WHERE (\"Last Inv. Item Clearing Date\" > \"Last Inv. Item Due Date\")) > 0\n        )\n/ COUNT (case_id) * 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-59' table, count the number of case_id values where the number of event_name values where 'Last Inv. Item Clearing Date' is greater than 'Last Inv. Item Due Date' is greater than 0. Divide this count by the total number of case_id values in the table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) \nFILTER (WHERE (SELECT count(event_name)\n                WHERE \"Last Interest Calculation Date\" > event_end_ts\n               ) > 0)\n/ COUNT(case_id) * 100\n FROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) \nFILTER (WHERE (SELECT count(event_name)\n                WHERE \"Last Interest Calculation Date\" > event_end_ts\n               ) > 0)\n/ COUNT(case_id) * 100\n FROM \"defaultview-59\""
    },
    {
        "filename": "ef3533bece",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Controlling Area",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Controlling Area\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', group the rows by the 'Controlling Area' column. For each group, count the number of rows and store this count in a column named '# Process Orders'. Then sort the groups in descending order by the '# Process Orders' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT count (CASE_ID ) as \"# Event\" , \"CoCd Text\" AS \"Controlling Area\"\n,\"OrgUnit as Cost.Center\" AS \"Cost Center\"\n,\"PR as Order Type\"\nFROM \"defaultview-183\"\nORDER BY 2 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count (CASE_ID ) as \"# Event\" , \"CoCd Text\" AS \"Controlling Area\"\n,\"OrgUnit as Cost.Center\" AS \"Cost Center\"\n,\"PR as Order Type\"\nFROM \"defaultview-183\"\nORDER BY 2 ASC"
    },
    {
        "filename": "7a820c8c23",
        "split": "test",
        "name": "Ratio of tickets with rework",
        "query": "SELECT COUNT(case_id) \nFILTER (\n\tWHERE (SELECT count(event_name) WHERE event_name = 'Change Status to In Progress' ) > 1 )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-217\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-217' table, count the number of 'case_id' values where there is more than one 'event_name' value equal to 'Change Status to In Progress'. Divide this count by the total number of 'case_id' values in the table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) FILTER (WHERE (\n\tSELECT COUNT(event_name) \n\t\tWHERE event_name = 'Change Status to In Progress') > 1)\n/COUNT(case_id) *100 \nFROM \"defaultview-217\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) FILTER (WHERE (\n\tSELECT COUNT(event_name) \n\t\tWHERE event_name = 'Change Status to In Progress') > 1)\n/COUNT(case_id) *100 \nFROM \"defaultview-217\""
    },
    {
        "filename": "57824bbefa",
        "split": "test",
        "name": "First call resolution ratio",
        "query": "\nSELECT\nCOUNT(case_id) FILTER(\n\tWHERE (SELECT COUNT(DISTINCT event_name)) = (SELECT COUNT(event_name))\n\t)\n/ COUNT(case_id)\n*100\n\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-545', calculate the percentage of case IDs where the number of distinct event names equals the total number of event names. To do this:\n\n1. Count the total number of case IDs in the table. Call this total_count.\n\n2. Count the number of case IDs where:\n   2a. Count the distinct event names for that case ID. Call this distinct_count. \n   2b. Count the total event names for that case ID. Call this event_count.\n   2c. Only include the case ID if distinct_count equals event_count. Call this filtered_count.\n\n3. Calculate the percentage by dividing filtered_count by total_count and multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tCOUNT(case_id) FILTER(\n    \tWHERE (\n        \t(\n                SELECT COUNT(DISTINCT event_name)\n                )\n            \t= \n            \t(\n                SELECT COUNT(event_name)\n                )\n           \t)\n    \t) AS \"filtered_count\"\n    ,COUNT(case_id) AS \"total_count\"\n    ,(\n    SELECT COUNT(DISTINCT event_name)\n    \t) AS \"distinct_count\"\n    ,(\n    SELECT COUNT(event_name)\n    \t) AS \"event_count\"\n\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tCOUNT(case_id) FILTER(\n    \tWHERE (\n        \t(\n                SELECT COUNT(DISTINCT event_name)\n                )\n            \t= \n            \t(\n                SELECT COUNT(event_name)\n                )\n           \t)\n    \t) AS \"filtered_count\"\n    ,COUNT(case_id) AS \"total_count\"\n    ,(\n    SELECT COUNT(DISTINCT event_name)\n    \t) AS \"distinct_count\"\n    ,(\n    SELECT COUNT(event_name)\n    \t) AS \"event_count\"\n\nFROM \"defaultview-545\""
    },
    {
        "filename": "c428caeb29",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Plant",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Plant\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', group the rows by the 'Plant' column. For each group, count the number of rows and store this count in a column named '# Process Orders'. Then order the resulting rows in descending order by the '# Process Orders' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(DISTINCT \"CASE_ID\") AS \"# Process Orders\",\n\"Plant\" AS \"No. of Plants\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 DESC\n ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(DISTINCT \"CASE_ID\") AS \"# Process Orders\",\n\"Plant\" AS \"No. of Plants\"\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 DESC\n "
    },
    {
        "filename": "1898593acc",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))      \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item' 'Receive Invoice')",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query is calculating the average time difference between the last end time of the 'Receive Invoice' event and the first end time of the 'Create PO Item' event for cases where both events exist. It is doing this calculation over the 'defaultview-431' table. The filter clauses ensure only the first 'Create PO Item' and last 'Receive Invoice' events are used for each case.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG (\n\t(SELECT LAST (END_TIME)\n\t\tWHERE EVENT_NAME IN ('Receive Invoice'))\n\t-(SELECT FIRST (END_TIME)\n\t\tWHERE EVENT_NAME IN ('Create PO Item'))\n\t)\nFROM \"defaultview-431\"\nWHERE EVENT_NAME MATCHES ('Create PO Item' ~> 'Receive Invoice')\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG (\n\t(SELECT LAST (END_TIME)\n\t\tWHERE EVENT_NAME IN ('Receive Invoice'))\n\t-(SELECT FIRST (END_TIME)\n\t\tWHERE EVENT_NAME IN ('Create PO Item'))\n\t)\nFROM \"defaultview-431\"\nWHERE EVENT_NAME MATCHES ('Create PO Item' ~> 'Receive Invoice')\n                "
    },
    {
        "filename": "ec1afff845",
        "split": "test",
        "name": "Number of invoices with \"Last Inv. Item Terms of Payment Key\" column is NULL",
        "query": "SELECT COUNT(case_id), \"Last Inv. Item Terms of Payment Key\"\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Terms of Payment Key\" IS NULL",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-225', count the number of rows where the column 'Last Inv. Item Terms of Payment Key' is null. Return the count along with the column name 'Last Inv. Item Terms of Payment Key'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id) AS \"Count Last Invoce Item Payment Key\",\n  \"Last Inv. Item Terms of Payment Key\"\nFROM\n  \"defaultview-225\"\nWHERE\n  (\"Last Inv. Item Terms of Payment Key\" IS NULL)",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id) AS \"Count Last Invoce Item Payment Key\",\n  \"Last Inv. Item Terms of Payment Key\"\nFROM\n  \"defaultview-225\"\nWHERE\n  (\"Last Inv. Item Terms of Payment Key\" IS NULL)"
    },
    {
        "filename": "717545c103",
        "split": "test",
        "name": "\u00d8 Automation Rate of Payment Events",
        "query": "SELECT\n  SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            (\n              \"Event Created By User Type\" IN ('System', 'Service')\n              AND (event_name LIKE '%Payment%')\n            )\n        )\n    )\n  ) / SUM(\n    (\n      SELECT\n        COUNT(case_id) FILTER (\n          WHERE\n            event_name LIKE '%Payment%' AND \"Event Created By User Type\" IS NOT NULL\n        )\n    )\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-225' table, calculate the percentage of payment events created by 'System' or 'Service' users out of all payment events where 'Event Created By User Type' is not null, by:\n1. Counting all payment events (where event_name contains 'Payment') created by 'System' or 'Service' users. \n2. Counting all payment events (where event_name contains 'Payment') where 'Event Created By User Type' is not null.\n3. Dividing the first count by the second count and multiplying by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (event_name) FILTER (\n    WHERE\n      (\"Event Created By User Type\" IN ('System','Service'))\n      AND event_name LIKE '%Payment%'\n  ) / COUNT (event_name) FILTER (\n    WHERE\n      (\"Event Created By User Type\" IS NOT NULL)\n      AND event_name LIKE '%Payment%'\n  ) * 100\nFROM\n  \"defaultview-225\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (event_name) FILTER (\n    WHERE\n      (\"Event Created By User Type\" IN ('System','Service'))\n      AND event_name LIKE '%Payment%'\n  ) / COUNT (event_name) FILTER (\n    WHERE\n      (\"Event Created By User Type\" IS NOT NULL)\n      AND event_name LIKE '%Payment%'\n  ) * 100\nFROM\n  \"defaultview-225\"\n"
    },
    {
        "filename": "aef1c8c1d7",
        "split": "test",
        "name": "Top 10 Customers with highest Invoiced Amounts",
        "query": "SELECT\n    AR_CustomerName AS \"Customer\",\n    SUM(\"AR_InvoicedAmountInGlobalCurrency\") AS \"Amount\"\nFROM \"defaultview-222\"\nWHERE AR_CustomerName IS NOT NULL\n\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-222', select the 'AR_CustomerName' column and alias it as 'Customer'. Also select the sum of the 'AR_InvoicedAmountInGlobalCurrency' column and alias it as 'Amount'. Only include rows where 'AR_CustomerName' is not null. Group the results by 'Customer' and order them descending by 'Amount'. Only return the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Customer\", SUM (\"Amount\") \nFROM (\nSELECT  \"AR_CustomerName\" AS \"Customer\", \"AR_InvoicedAmountInGlobalCurrency\" AS \"Amount\"\nFROM \"defaultview-222\"\nWHERE AR_CustomerName is not null\n)\n as aa\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Customer\", SUM (\"Amount\") \nFROM (\nSELECT  \"AR_CustomerName\" AS \"Customer\", \"AR_InvoicedAmountInGlobalCurrency\" AS \"Amount\"\nFROM \"defaultview-222\"\nWHERE AR_CustomerName is not null\n)\n as aa\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 10\n"
    },
    {
        "filename": "8092de898c",
        "split": "test",
        "name": "Manual Change Rate by Top 10 Material",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocItemMaterial\" AS \"SD Material\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "This query selects from the table 'defaultview-383' the following:\n1. The count of distinct 'case_id' values as '# of SDs'. \n2. The percentage of cases where the 'EventCreatedByUserType' is 'Dialog' and 'ChangeType' is 'Update', calculated as the count of cases matching this filter divided by the total count of distinct 'case_id' values, multiplied by 100. This is labeled as 'Change rate'.\n3. The 'SalesDocItemMaterial' column value as 'SD Material'.\n\nThe results are ordered by the first column descending and limited to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(DISTINCT(case_id)) as \"# of SDs\", \nCOUNT(DISTINCT(case_id)) FILTER (\n\tWHERE (SELECT BOOL_OR(\"ChangeType\" = 'Update') AS \"dialog started\"))\n\t\t/ COUNT(DISTINCT(case_id)) IFILTER (WHERE EventCreatedByUserType IN ('Dialog')))\n\t* 100\nas \"Change rate\",  \"SD Material\" \nFROM \"defaultview-383\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(DISTINCT(case_id)) as \"# of SDs\", \nCOUNT(DISTINCT(case_id)) FILTER (\n\tWHERE (SELECT BOOL_OR(\"ChangeType\" = 'Update') AS \"dialog started\"))\n\t\t/ COUNT(DISTINCT(case_id)) IFILTER (WHERE EventCreatedByUserType IN ('Dialog')))\n\t* 100\nas \"Change rate\",  \"SD Material\" \nFROM \"defaultview-383\"\nORDER BY 1 DESC\nLIMIT 10"
    },
    {
        "filename": "487549492d",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term'))))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-59' table, calculate the percentage of cases where any event name is 'Update Payment Term'. To do this:\n1. Count the total number of case_id values in the table. \n2. Count the number of case_id values where any event_name is 'Update Payment Term'. \n3. Divide the count from step 2 by the count from step 1.\n4. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term')))\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term')))\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\""
    },
    {
        "filename": "8deb242ea5",
        "split": "test",
        "name": "_Invoice cancellation rate",
        "query": "\nSELECT\n(\nSUM(\"BillingDoc_TotalCancelled\")\n/\nSUM(\"BillingDoc_TotalCount\")\n)\n* 100\n\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', calculate the percentage of cancelled billing documents out of the total billing documents by: 1) Taking the sum of the 'BillingDoc_TotalCancelled' column, 2) Taking the sum of the 'BillingDoc_TotalCount' column, 3) Dividing the sum of 'BillingDoc_TotalCancelled' by the sum of 'BillingDoc_TotalCount', and 4) Multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n(SUM(\"BillingDoc_TotalCancelled\") / SUM(\"BillingDoc_TotalCount\")) * 100\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n(SUM(\"BillingDoc_TotalCancelled\") / SUM(\"BillingDoc_TotalCount\")) * 100\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "df5561bb21",
        "split": "test",
        "name": "Confirmed process orders",
        "query": "SELECT COUNT(event_name)\n    FILTER(WHERE event_name MATCHES ('Confirmed'))\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', count the number of rows where the value in the 'event_name' column matches 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(event_name) \nFROM \"defaultview-183\"\nWHERE event_name = 'Confirmed'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(event_name) \nFROM \"defaultview-183\"\nWHERE event_name = 'Confirmed'"
    },
    {
        "filename": "6ff4a8f764",
        "split": "test",
        "name": "Late deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-57', count the number of 'case_id' values where the truncated day portion of the 'Last GR Creation Date' column is greater than the 'PO Item Last Requested Delivery Date' column and the 'PO Item Delivery Completed' column equals 'Yes'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n COUNT (case_id)\nFROM\n \"defaultview-57\"\nWHERE\n DATE_TRUNC('DAY', \"Last GR Creation Date\")\n> \"PO Item Last Requested Delivery Date\"\nAND \"PO Item Delivery Completed\" = 'Yes'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n COUNT (case_id)\nFROM\n \"defaultview-57\"\nWHERE\n DATE_TRUNC('DAY', \"Last GR Creation Date\")\n> \"PO Item Last Requested Delivery Date\"\nAND \"PO Item Delivery Completed\" = 'Yes'"
    },
    {
        "filename": "6ad1f0922e",
        "split": "test",
        "name": "\u00d8 SFC Initial Quantity",
        "query": "SELECT AVG(\"SFC Initial Quantity\") FROM \"defaultview-270\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Calculate the average value of the column 'SFC Initial Quantity' from the table 'defaultview-270'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG\n\t(\n\t\"SFC Initial Quantity\"\n\t)\nFROM\n\t\"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG\n\t(\n\t\"SFC Initial Quantity\"\n\t)\nFROM\n\t\"defaultview-270\"\n                "
    },
    {
        "filename": "b371622da1",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Requested Delivery Date\"\n\t\tAND \"PO Delivery Status\" = 'Received'\n\t)\n/\nCOUNT(case_id) FILTER (\n\tWHERE \"PO Delivery Status\" = 'Received'\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-545' table, calculate the percentage of cases where the truncated 'Last GR Creation Date' is after the 'PO Requested Delivery Date' and the 'PO Delivery Status' is 'Received', out of all cases where the 'PO Delivery Status' is 'Received'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (CASE_ID) FILTER (\n\tWHERE DATE_TRUNC('DAY', \"Last GR Creation Date\") > \"PO Requested Delivery Date\" \n\tAND \"PO Delivery Status\" IN ('Received'))) \n/ COUNT (CASE_ID) FILTER (\n\tWHERE \"PO Delivery Status\" IN ('Received')) \n* 100\nFROM \"defaultview-545\"\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (CASE_ID) FILTER (\n\tWHERE DATE_TRUNC('DAY', \"Last GR Creation Date\") > \"PO Requested Delivery Date\" \n\tAND \"PO Delivery Status\" IN ('Received'))) \n/ COUNT (CASE_ID) FILTER (\n\tWHERE \"PO Delivery Status\" IN ('Received')) \n* 100\nFROM \"defaultview-545\"\n\n"
    },
    {
        "filename": "8977266362",
        "split": "test",
        "name": "WC Impact of Invoices with immediate payment terms",
        "query": "\nSELECT\nSUM(\"Last FI Invoice Item Gross Amount in USD\") FILTER(\n\tWHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) *15*0.04/365\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', select the sum of the column 'Last FI Invoice Item Gross Amount in USD' only for those rows where the value in column 'Last FI Invoice Item Cash Discount Days 1' is null or 0. Multiply this sum by 15 and then multiply by 0.04. Finally, divide the result by 365.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nABS(SUM(\"Last FI Invoice Item Gross Amount in USD\") * 15 * .04)\n/365\nFROM \"defaultview-124\"\nWHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\nOR \"Last FI Invoice Item Cash Discount Days 1\" = 0",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nABS(SUM(\"Last FI Invoice Item Gross Amount in USD\") * 15 * .04)\n/365\nFROM \"defaultview-124\"\nWHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL\nOR \"Last FI Invoice Item Cash Discount Days 1\" = 0"
    },
    {
        "filename": "b3b2c64a6b",
        "split": "test",
        "name": "Number of Billing Requests rejected",
        "query": "SELECT \nCOUNT(DISTINCT \"SalesDocument\") FILTER (\n\tWHERE event_name LIKE 'Reject Billing Request%')\nFROM FLATTEN(\"defaultview-197\")",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', count the number of distinct values in the 'SalesDocument' column only for rows where the 'event_name' column value starts with 'Reject Billing Request'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(DISTINCT \"SalesDocument\") \nFROM   FLATTEN(\"defaultview-197\")\nWhere  event_name = 'Reject Billing Request';\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(DISTINCT \"SalesDocument\") \nFROM   FLATTEN(\"defaultview-197\")\nWhere  event_name = 'Reject Billing Request';\n\n\n"
    },
    {
        "filename": "f8140fe8c4",
        "split": "test",
        "name": "Number of Tickets Completed/Rejected",
        "query": "SELECT \n\tDATE_TRUNC('month', \n    \t(SELECT FIRST(end_time) \n        WHERE event_name IN ('Change Status to Closed'))) AS \"Month when Issue Closed\",\n\tCOUNT(case_id) \n    FILTER (WHERE event_name MATCHES(('Change Status to Closed'))) AS \"# Cases\"\nFROM \"defaultview-217\"\nGROUP BY 1\nORDER BY 1",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-217' table, group the records by truncating the date of the first end_time to month granularity where the event_name is 'Change Status to Closed'. Count the number of case_id's where the event_name matches 'Change Status to Closed' and alias it as '# Cases'. Select the truncated date as 'Month when Issue Closed' and the count of case_id's. Order the results by the truncated date.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tDATE_TRUNC('month', \n    \t(SELECT FIRST (end_time) \n        \tWHERE event_name = 'Change Status to Closed')) AS \"Month when Issue Closed\",\n    COUNT (CASE_ID) AS \"# Cases\"\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to Closed')\n\nORDER BY 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tDATE_TRUNC('month', \n    \t(SELECT FIRST (end_time) \n        \tWHERE event_name = 'Change Status to Closed')) AS \"Month when Issue Closed\",\n    COUNT (CASE_ID) AS \"# Cases\"\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to Closed')\n\nORDER BY 1"
    },
    {
        "filename": "a6cf9b8367",
        "split": "test",
        "name": "Immediate WC Impact grouped by PO Vendor Name",
        "query": "SELECT SUM (\"Last FI Invoice Item Gross Amount Document Curr.\") \nFILTER (WHERE \"Last FI Invoice Item Cash Discount Days 1\" IS NULL \nOR \"Last FI Invoice Item Cash Discount Days 1\" = 0) * 15 * 0.04 / 365 \nAS \"WC Impact of Invoices with immediate payment terms\", \"PO Vendor Name\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 30",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "This query calculates the working capital impact of invoices with immediate payment terms from the 'defaultview-124' table. It sums the 'Last FI Invoice Item Gross Amount Document Curr.' column for rows where 'Last FI Invoice Item Cash Discount Days 1' is NULL or 0. It multiplies this sum by 15 and 0.04/365 to calculate the working capital impact in days. The query aliases this as 'WC Impact of Invoices with immediate payment terms'. It also selects the 'PO Vendor Name' column. The results are ordered by 'WC Impact of Invoices with immediate payment terms' descending and limited to the top 30 rows.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n    SUM(\"Last FI Invoice Item Gross Amount Document Curr.\") FILTER (\n        WHERE (\"Last FI Invoice Item Cash Discount Days 1\" IS NULL \n        OR \"Last FI Invoice Item Cash Discount Days 1\" = 0) \n    ) * 15 * 0.04/365 AS \"WC Impact of Invoices with immediate payment terms\",\n    \n    \"PO Vendor Name\"    \nFROM \"defaultview-124\"\n\norder by 1 DESC\nLIMIT 30\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n    SUM(\"Last FI Invoice Item Gross Amount Document Curr.\") FILTER (\n        WHERE (\"Last FI Invoice Item Cash Discount Days 1\" IS NULL \n        OR \"Last FI Invoice Item Cash Discount Days 1\" = 0) \n    ) * 15 * 0.04/365 AS \"WC Impact of Invoices with immediate payment terms\",\n    \n    \"PO Vendor Name\"    \nFROM \"defaultview-124\"\n\norder by 1 DESC\nLIMIT 30\n                "
    },
    {
        "filename": "8411df93d4",
        "split": "test",
        "name": "Automation Rate Technically completed",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Technically completed'\n\n\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the flattened 'defaultview-183' table, select the percentage of 'Technically completed' events where 'Event Created By User Type' is not 'Dialog'. To calculate the percentage: Take the count of all 'Technically completed' events and divide it by the count of 'Technically completed' events where 'Event Created By User Type' is not 'Dialog', then multiply by 100.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE \"Technically completed\" = TRUE\n      AND (\"Event Created By User Type\" NOT IN ('Dialog'))\n  ) \n  /\n  COUNT(case_id) FILTER (\n      WHERE \"Technically completed\" = TRUE\n  )\n  * 100\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE \"Technically completed\" = TRUE\n      AND (\"Event Created By User Type\" NOT IN ('Dialog'))\n  ) \n  /\n  COUNT(case_id) FILTER (\n      WHERE \"Technically completed\" = TRUE\n  )\n  * 100\nFROM \"defaultview-183\""
    },
    {
        "filename": "e9259d68f7",
        "split": "test",
        "name": "Olap Table",
        "query": "SELECT case_id, \n\"Planned Release Date\", \n\"Scheduled Release date\",\n\"Actual Release Date\", \n\"Scheduled Start Date\", \n\"Actual Start Date\",     \n\"Scheduled Finish Date\", \n\"Confirmed Finish Date\",\n\"Actual Finish Date\", \n\"Basic Start Date\",\n--\"Basic End Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",   \n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"\nFROM \"defaultview-183\"\nLimit 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query selects the first 10 rows from the 'defaultview-183' table. It retrieves the following columns: case_id, Planned Release Date, Scheduled Release date, Actual Release Date, Scheduled Start Date, Actual Start Date, Scheduled Finish Date, Confirmed Finish Date, Actual Finish Date, Basic Start Date, Planned Order Opening Date, Planned Order Start Date, Actual Delivery Date, Planned Order Actual Delivery Date, Basic Finish Date.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\"case_id\",\n\"Planned Release Date\",\n\"Scheduled Release date\",\n\"Actual Release Date\",\n\"Scheduled Start Date\",\n\"Actual Start Date\",\n\"Scheduled Finish Date\",\n\"Confirmed Finish Date\",\n\"Actual Finish Date\",\n\"Basic Start Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",\n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"       \nFROM \"defaultview-183\" \nLIMIT 10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\"case_id\",\n\"Planned Release Date\",\n\"Scheduled Release date\",\n\"Actual Release Date\",\n\"Scheduled Start Date\",\n\"Actual Start Date\",\n\"Scheduled Finish Date\",\n\"Confirmed Finish Date\",\n\"Actual Finish Date\",\n\"Basic Start Date\",\n\"Planned Order Opening Date\",\n\"Planned Order Start Date\",\n\"Actual Delivery Date\",\n\"Planned Order Actual Delivery Date\",\n\"Basic Finish Date\"       \nFROM \"defaultview-183\" \nLIMIT 10"
    },
    {
        "filename": "88033c5325",
        "split": "test",
        "name": "Total Spend by PO Material (Top 10)",
        "query": "SELECT \nSUM (\"PO Item Total Amount\") AS \"Total PO Amount\", \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) AS \"Avg. Cycle Time\",\n\"PO Material Number\" \nFROM \"defaultview-431\"\nORDER BY 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-431', select the sum of the 'PO Item Total Amount' column as 'Total PO Amount', the average of the difference between the last value of the 'END_TIME' column and the first value of the 'END_TIME' column as 'Avg. Cycle Time', and the 'PO Material Number' column. Order the results by 'Total PO Amount' in descending order and limit to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  SUM(\"PO Item Total Amount\") AS \"Total PO Amount\",\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME)) - (\n      SELECT\n        FIRST (END_TIME))\n  ) AS \"Avg. Cycle Time\",\n  \"PO Material Number\"\nFROM\n  \"defaultview-431\"\nORDER BY\n  1 DESC\nLIMIT\n  10",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  SUM(\"PO Item Total Amount\") AS \"Total PO Amount\",\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME)) - (\n      SELECT\n        FIRST (END_TIME))\n  ) AS \"Avg. Cycle Time\",\n  \"PO Material Number\"\nFROM\n  \"defaultview-431\"\nORDER BY\n  1 DESC\nLIMIT\n  10"
    },
    {
        "filename": "125e48fc10",
        "split": "test",
        "name": "Avg. Cycle Time per Case ID (20 shortest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n    \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) \n              AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 ASC\nLIMIT 20\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-197' table, select the case_id and Project_Description column values and alias the Project_Description as 'Project'. Then, for each case_id, calculate the time difference between the last end_time for the 'Close Project' event and the first end_time for the 'Start Project' event. Alias this time difference as C. After that, group the results by the 'Project' column and calculate the average value of C for each project. Order the results by the average cycle time in ascending order and return the top 20 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT case_id, \n\"Project_Description\"\nAS Project\n, \n     LAST(end_time) FILTER\n     (WHERE event_name = 'Close Project') - FIRST(end_time) FILTER\n     (WHERE event_name = 'Start Project') AS C\nFROM FLATTEN(\"defaultview-197\") \nGROUP BY 2\nORDER BY 3 ASC\nLIMIT 20\n    ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT case_id, \n\"Project_Description\"\nAS Project\n, \n     LAST(end_time) FILTER\n     (WHERE event_name = 'Close Project') - FIRST(end_time) FILTER\n     (WHERE event_name = 'Start Project') AS C\nFROM FLATTEN(\"defaultview-197\") \nGROUP BY 2\nORDER BY 3 ASC\nLIMIT 20\n    "
    },
    {
        "filename": "d1ef7aa5cf",
        "split": "test",
        "name": "Table",
        "query": "SELECT\nIF (bucket_id > 20, -1, (bucket_id * 50) + 0) AS bucket_end,\n\"ClientCount\"\nFROM (\nSELECT\nBUCKET(EventCount, 0, 50, 20) as bucket_id,\nCOUNT(CASE_ID) AS \"ClientCount\" FROM\n(\nSELECT CASE_ID, \nCOUNT(EVENT_NAME) as EventCount\nFROM FLATTEN(\"defaultview-124\")\n) AS sq1\n) AS sq2\nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, from the 'defaultview-124' table, select the CASE_ID column and count the number of EVENT_NAME values for each CASE_ID. This gives us a table with columns CASE_ID and EventCount. Next, bucket the EventCount values into buckets of size 50, with bucket ids from 0 to 20. For any EventCount value greater than 1000 (which would be in bucket id > 20), set the bucket_end value to -1. Otherwise, calculate the bucket_end as (bucket_id * 50). Finally, select the bucket_end and ClientCount (which is the count of distinct CASE_ID per bucket) and order by bucket_end.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  \t(CASE COUNT (\"EventCount\") WHEN 1001 THEN -1 ELSE \"bucket_id\" * 50 END) AS \"bucket_end\",\n  \tCOUNT(CASE_ID ) AS \"ClientCount\"\n-- INTO \"defaultview-585\"\nFROM (\n  \tSELECT\n    \tCASE_ID,\n    \t--START_TIMESTAMP - \n    \t--FIRST_VALUE(\"start_timestamp\") OVER (PARTITION BY CASE_ID ORDER BY \"end_timestamp\") \n        --AS \"Duration\",\n        EVENT_NAME AS \"EndEvent\", \n        COUNT(EVENT_NAME) AS \"EventCount\",\n        --\"end_timestamp\" - FIRST(\"end_timestamp\") OVER (PARTITION BY CASE_ID ORDER BY \"end_timestamp\")\n        --AS \"end_timestamp\"\n  \tFROM FLATTEN(\"defaultview-124\")\n) AS Counter\n--INTO CountByEvents\nWHERE \"EventCount\" <= 1000\nORDER BY 1\n--FILL SPACE\n--ORDER BY END_TIMESTAMP ASC NULLS FIRST\n-- FILL SPACE",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  \t(CASE COUNT (\"EventCount\") WHEN 1001 THEN -1 ELSE \"bucket_id\" * 50 END) AS \"bucket_end\",\n  \tCOUNT(CASE_ID ) AS \"ClientCount\"\n-- INTO \"defaultview-585\"\nFROM (\n  \tSELECT\n    \tCASE_ID,\n    \t--START_TIMESTAMP - \n    \t--FIRST_VALUE(\"start_timestamp\") OVER (PARTITION BY CASE_ID ORDER BY \"end_timestamp\") \n        --AS \"Duration\",\n        EVENT_NAME AS \"EndEvent\", \n        COUNT(EVENT_NAME) AS \"EventCount\",\n        --\"end_timestamp\" - FIRST(\"end_timestamp\") OVER (PARTITION BY CASE_ID ORDER BY \"end_timestamp\")\n        --AS \"end_timestamp\"\n  \tFROM FLATTEN(\"defaultview-124\")\n) AS Counter\n--INTO CountByEvents\nWHERE \"EventCount\" <= 1000\nORDER BY 1\n--FILL SPACE\n--ORDER BY END_TIMESTAMP ASC NULLS FIRST\n-- FILL SPACE"
    },
    {
        "filename": "431e0f5dc2",
        "split": "test",
        "name": "Percent of Cases with Rework",
        "query": "SELECT COUNT (CASE_ID) \n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1) \n    \tFROM (SELECT OCCURRENCE(EVENT_NAME) AS occurrence) AS sub)) \n/ COUNT (CASE_ID) * 100\nFROM \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, from the table 'defaultview-545', count the number of unique CASE_ID values. Then, count how many of those CASE_ID values have an EVENT_NAME that occurs more than once for that CASE_ID. Divide the second count by the first count, and multiply by 100 to get a percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME)\n        ) > 1\n    ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          COUNT (EVENT_NAME)\n        ) > 1\n    ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-545\""
    },
    {
        "filename": "7524851a3d",
        "split": "test",
        "name": "Percentage of products touched by IO",
        "query": "\nSELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE (\n\t\tSELECT SUM(\"Recommended Safety Stock\") = 0\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n* 100\nFROM \"defaultview-404\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Count the number of distinct Product IDs where the sum of the Recommended Safety Stock is 0, the MONTH is greater than or equal to the start of the current month, and the MONTH is within the last 320 days. Divide this count by the total number of distinct Product IDs where the MONTH is greater than or equal to the start of the current month and within the last 320 days. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT \"Product ID\") \nFILTER (\n\tWHERE (\n\t\tSELECT SUM(\"Recommended Safety Stock\") \n\t\t\tWHERE EVENT_NAME = 'MRP recalculation'\n\t\t) = 0\n\t) \n\t/\n\tCOUNT(DISTINCT \"Product ID\") FILTER (\n\t\tWHERE DATE_TRUNC('MONTH', NOW()) <=  \"month\"\n\t\t)\n* 100\nFROM \"DefaultProcess\"\nWHERE (\"event_name\" ='End MRP PDCA' OR event_name='MRP recalculation')\n\tAND \"month\" >= DATE_TRUNC('MONTH', NOW()) - INTERVAL '320DAYS'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT \"Product ID\") \nFILTER (\n\tWHERE (\n\t\tSELECT SUM(\"Recommended Safety Stock\") \n\t\t\tWHERE EVENT_NAME = 'MRP recalculation'\n\t\t) = 0\n\t) \n\t/\n\tCOUNT(DISTINCT \"Product ID\") FILTER (\n\t\tWHERE DATE_TRUNC('MONTH', NOW()) <=  \"month\"\n\t\t)\n* 100\nFROM \"DefaultProcess\"\nWHERE (\"event_name\" ='End MRP PDCA' OR event_name='MRP recalculation')\n\tAND \"month\" >= DATE_TRUNC('MONTH', NOW()) - INTERVAL '320DAYS'"
    },
    {
        "filename": "28105fe921",
        "split": "test",
        "name": "First time fix rate",
        "query": "\nSELECT\n(COUNT (case_id) FILTER(WHERE ((SELECT COUNT (event_name) FILTER (WHERE event_name IN ('Technically Completed')) < 2) ))\n/ \nCOUNT (case_id) )*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-545', calculate the percentage of case_id's where the count of events with name 'Technically Completed' is less than 2. To do this:\n1. Count the total number of case_id's in the table. \n2. Count the number of case_id's where the count of events named 'Technically Completed' is less than 2. \n3. Divide the count from step 2 by the count from step 1.\n4. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name) \n    \tWHERE event_name = 'Technically Completed') < 2)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name) \n    \tWHERE event_name = 'Technically Completed') < 2)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-545\""
    },
    {
        "filename": "a043407a7a",
        "split": "test",
        "name": "4. Percentage of Payments Manually processed (out of all clearly allocated payments ('SA','DZ'))",
        "query": "SELECT\n(count(DISTINCT \"ARUniqueKey\"  ) FILTER\n(WHERE event_name = 'Clear Accounts Receivable' and \"AutomationFlag\" is null)\n/ \ncount(DISTINCT \"ARUniqueKey\"  ) FILTER \n(WHERE event_name IN \n('Clear Accounts Receivable')\n)\n) \n* 100\n FROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-222' table, get the distinct count of 'ARUniqueKey' values where 'event_name' is 'Clear Accounts Receivable' and 'AutomationFlag' is null, divide this by the distinct count of 'ARUniqueKey' values where 'event_name' is 'Clear Accounts Receivable', multiply the result by 100. This calculates the percentage of 'Clear Accounts Receivable' events where 'AutomationFlag' is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT \"ARUniqueKey\")\nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable' AND \"AutomationFlag\" IS NULL)\n/ \nCOUNT(DISTINCT \"ARUniqueKey\")\nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable')\n*100\nFROM FLATTEN(\"defaultview-222\")\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT \"ARUniqueKey\")\nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable' AND \"AutomationFlag\" IS NULL)\n/ \nCOUNT(DISTINCT \"ARUniqueKey\")\nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable')\n*100\nFROM FLATTEN(\"defaultview-222\")\n"
    },
    {
        "filename": "aade6751ff",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Clear Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Post Invoice'))))      \nFROM \"defaultview-133\" \nWHERE EVENT_NAME MATCHES ('Post Invoice' 'Clear Invoice')",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query is calculating the average time difference between the end time of the 'Clear Invoice' activity and the end time of the 'Post Invoice' activity for cases in the 'defaultview-133' table where the event name matches either 'Post Invoice' or 'Clear Invoice'. \n\nIt does this by:\n\n1. Selecting the last end time value for 'Clear Invoice' events \n2. Selecting the first end time value for 'Post Invoice' events\n3. Calculating the difference between the two times\n4. Averaging this time difference across all matching cases in the table\n\nSo in plain language, it is finding the average time it takes to clear an invoice after it has been posted, for the cases in the 'defaultview-133' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT avg ((SELECT last (END_TIME)) - \n(SELECT first (END_TIME)) WHERE EVENT_NAME IN ('Clear Invoice'))\nFROM \"defaultview-133\" \nMATCHES (EVENT_NAME IN ('Post Invoice', 'Clear Invoice'))",
        "llm_gpt-35-turbo-0613_full_output": "SELECT avg ((SELECT last (END_TIME)) - \n(SELECT first (END_TIME)) WHERE EVENT_NAME IN ('Clear Invoice'))\nFROM \"defaultview-133\" \nMATCHES (EVENT_NAME IN ('Post Invoice', 'Clear Invoice'))"
    },
    {
        "filename": "d39c3be180",
        "split": "test",
        "name": "Overdue payment rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL AND \"Last Invoice Due Date\" < DATE_TRUNC('day', NOW()))\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Invoice Payment Date\" IS NULL)\n\t)\n* 100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-545' table, count the number of case_id values where the 'Last Invoice Payment Date' column is NULL and the 'Last Invoice Due Date' column is before today's date. Divide this count by the count of all case_id values where the 'Last Invoice Payment Date' column is NULL. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\"Last Invoice Payment Date\") IS NULL\n      AND (\"Last Invoice Due Date\"\n        <\n        DATE_TRUNC('day', NOW()))\n  ) / COUNT (CASE_ID) FILTER (\n    WHERE\n      (\"Last Invoice Payment Date\") IS NULL\n  ) * 100\nFROM\n  \"defaultview-545\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      (\"Last Invoice Payment Date\") IS NULL\n      AND (\"Last Invoice Due Date\"\n        <\n        DATE_TRUNC('day', NOW()))\n  ) / COUNT (CASE_ID) FILTER (\n    WHERE\n      (\"Last Invoice Payment Date\") IS NULL\n  ) * 100\nFROM\n  \"defaultview-545\""
    },
    {
        "filename": "c6857d95da",
        "split": "test",
        "name": "% Process Orders Released Early  grouped by most relevant Business Lines",
        "query": "SELECT \ncount(case_id) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') AS \"# Process Orders released early\",\nCOUNT (CASE_ID) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') / COUNT (CASE_ID)* 100 AS \"% Released Early\",\n\"Division\"\nFROM \"defaultview-183\"\n-- GROUP BY 2\nORDER BY 1 desc\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-183' table, select the 'Division' column. Count the number of 'case_id' values where the 'Actual Release Date' is less than the 'Scheduled Release Date' and alias this count as '# Process Orders released early'. Calculate the percentage of 'case_id' values where 'Actual Release Date' is less than 'Scheduled Release Date' out of the total number of 'case_id' values and alias this as '% Released Early'. Order the results by '# Process Orders released early' in descending order and limit to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n Division\n,COUNT (CASE_ID) FILTER (\n\tWHERE (\"Actual Release Date\" > \"Scheduled Release Date\"))\n     AS \"# Process Orders released early\"\n,  (COUNT (CASE_ID) FILTER (\n\tWHERE (\"Actual Release Date\" > \"Scheduled Release Date\")) \n    / COUNT (CASE_ID) ) * 100 AS \"% Released Early\"\nFROM \"defaultview-183\" \nORDER BY 2 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n Division\n,COUNT (CASE_ID) FILTER (\n\tWHERE (\"Actual Release Date\" > \"Scheduled Release Date\"))\n     AS \"# Process Orders released early\"\n,  (COUNT (CASE_ID) FILTER (\n\tWHERE (\"Actual Release Date\" > \"Scheduled Release Date\")) \n    / COUNT (CASE_ID) ) * 100 AS \"% Released Early\"\nFROM \"defaultview-183\" \nORDER BY 2 DESC\nLIMIT 10\n"
    },
    {
        "filename": "5cc0dd8c2b",
        "split": "test",
        "name": "SOL-1742 Fraction of total average cycle time spent on rework",
        "query": "\nSELECT\n((AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t)\n\tFILTER (WHERE (SELECT BOOL_OR (occurrence > 1)\n\t\tFROM (SELECT OCCURRENCE(event_name) AS occurrence) AS sub)\n\t\t))\n-\n(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\n)\n/(AVG(\n\t(SELECT LAST(end_time) - FIRST(end_time))\n\t))\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "1. From the table 'defaultview-59', calculate the average duration of each process instance. This is done by taking the last end_time minus the first end_time for each instance.\n2. From the table 'defaultview-59', calculate the average duration of each process instance that has occurred more than once. This is done by filtering for instances where the occurrence of the event name is greater than 1, and then taking the last end_time minus the first end_time for each instance.  \n3. Subtract the average duration of all instances (from step 1) from the average duration of recurring instances (from step 2).\n4. Divide the result of step 3 by the average duration of all instances (from step 1).\nThis calculates the relative increase in average duration for recurring process instances compared to all instances.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nAVG (\n  (\n    SELECT\n      LAST (end_time)\n        - FIRST (end_time)\n           FILTER (\n            WHERE\n              OCCURRENCE > 1 )\n  )\n) / AVG (\n   (   \n    SELECT\n      LAST (end_time)\n        - FIRST (end_time) ) ) \n  filter (\n  WHERE\n    OCCURRENCE > 1 )\nFROM\n  \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nAVG (\n  (\n    SELECT\n      LAST (end_time)\n        - FIRST (end_time)\n           FILTER (\n            WHERE\n              OCCURRENCE > 1 )\n  )\n) / AVG (\n   (   \n    SELECT\n      LAST (end_time)\n        - FIRST (end_time) ) ) \n  filter (\n  WHERE\n    OCCURRENCE > 1 )\nFROM\n  \"defaultview-59\""
    },
    {
        "filename": "df00ed7208",
        "split": "test",
        "name": "\u00d8 Cycle Time (Full Process)",
        "query": "SELECT AVG (\n\t(SELECT LAST (END_TIME)) \n  - (SELECT FIRST (END_TIME))) AS \"Average cycle time\"\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-270', calculate the average of the difference between the last value of the 'END_TIME' column and the first value of the 'END_TIME' column. Alias this as 'Average cycle time'.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\n\t(SELECT LAST(\"END_TIME\") - FIRST(\"END_TIME\")) AS \"Average cycle time\"\n)\nFROM \"defaultview-270\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\n\t(SELECT LAST(\"END_TIME\") - FIRST(\"END_TIME\")) AS \"Average cycle time\"\n)\nFROM \"defaultview-270\""
    },
    {
        "filename": "4d015ef6e5",
        "split": "test",
        "name": "No. of Invoices Paid Late",
        "query": "SELECT \nCOUNT(DISTINCT CASE_ID) AS \"Case Count\"\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', count the number of distinct CASE_ID values where the value in the 'Last FI Invoice Item Due Date' column is less than the value in the 'Last FI Invoice Item Clearing Date' column. Alias the count result as 'Case Count'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT(DISTINCT CASE_ID) AS \"Case Count\"\nFROM\n  \"defaultview-124\"\nWHERE\n  (\n    \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n  )\n  AND \"Last FI Invoice Item Clearing Date\" IS NOT NULL\n  AND \"Last FI Invoice Item Due Date\" IS NOT NULL\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT(DISTINCT CASE_ID) AS \"Case Count\"\nFROM\n  \"defaultview-124\"\nWHERE\n  (\n    \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n  )\n  AND \"Last FI Invoice Item Clearing Date\" IS NOT NULL\n  AND \"Last FI Invoice Item Due Date\" IS NOT NULL\n"
    },
    {
        "filename": "73e9b28d90",
        "split": "test",
        "name": "Number of Orders delayed in completion",
        "query": "\nSELECT\ncount(case_id) FILTER(\n\tWHERE \"Order Actual Start\" IS NOT NULL\n\tAND \"Order Actual Completion\" - \"Order Scheduled Completion\" > DURATION '0minutes') \nFROM \"defaultview-538\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-538', count the number of case_id values where the 'Order Actual Start' column is not null and the difference between the 'Order Actual Completion' and 'Order Scheduled Completion' column values is greater than 0 minutes.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tcount(case_id) \nFILTER(\n\t\tWHERE\n\t(\"Order Actual Start\" IS NOT NULL)\n\tAND\n\t(\"Order Actual Completion\" - \"Order Scheduled Completion\" ) > DURATION '0minutes'\n\t)\nFROM \"defaultview-538\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tcount(case_id) \nFILTER(\n\t\tWHERE\n\t(\"Order Actual Start\" IS NOT NULL)\n\tAND\n\t(\"Order Actual Completion\" - \"Order Scheduled Completion\" ) > DURATION '0minutes'\n\t)\nFROM \"defaultview-538\" "
    },
    {
        "filename": "7896255b68",
        "split": "test",
        "name": "Number Created Receivables over Time Posting",
        "query": "SELECT  \n\t\"PostingDate\"   AS \"Posting Date\" ,\n\tCOUNT (DISTINCT ARUniqueKey) as \"# Receivables\" \n   \n   FROM FLATTEN(\"defaultview-222\")\n \nWHERE EVENT_NAME LIKE 'Create Accounts Receivable' \nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-222', select the 'PostingDate' column and alias it as 'Posting Date'. Also select the distinct count of 'ARUniqueKey' values and alias it as '# Receivables'. Only include rows where 'EVENT_NAME' contains 'Create Accounts Receivable'. Group the results by 'Posting Date' and sort them in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  \"PostingDate\" AS \"Posting Date\",\n  COUNT(DISTINCT \"ARUniqueKey\") AS \"# Receivables\"\nFROM\n  (\n    SELECT\n      \"ARUniqueKey\",\n      DATE_TRUNC('DAY', 'PostingDate') AS \"PostingDate\"\n    FROM\n      \"defaultview-222\"\n    WHERE\n      EVENT_NAME MATCHES ('Create Accounts Receivable')\n      AND \"Acc. Doc. Condition type\" = 'ZFB1'\n  ) AS subQueryAlias\nGROUP BY\n  1\nORDER BY\n  1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  \"PostingDate\" AS \"Posting Date\",\n  COUNT(DISTINCT \"ARUniqueKey\") AS \"# Receivables\"\nFROM\n  (\n    SELECT\n      \"ARUniqueKey\",\n      DATE_TRUNC('DAY', 'PostingDate') AS \"PostingDate\"\n    FROM\n      \"defaultview-222\"\n    WHERE\n      EVENT_NAME MATCHES ('Create Accounts Receivable')\n      AND \"Acc. Doc. Condition type\" = 'ZFB1'\n  ) AS subQueryAlias\nGROUP BY\n  1\nORDER BY\n  1 ASC"
    },
    {
        "filename": "ae803079ca",
        "split": "test",
        "name": "Sources of Change (Table) - # Events",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\", \"Changed Table\"\nFROM FLATTEN((SELECT \"case_id\", \"event_name\", \"end_time\", \"Change New Value\", \"Change Old Value\", \"Change Type\", \"Changed Field\", \"Changed Object Id\", \"Changed Table\", \"Event Created By User Id\", \"Event Created By User Type\"\nFROM \"defaultview-124\") AS sub)\nWHERE \"Changed Table\" IS NOT NULL\norder by 1 desc\nLIMIT 500",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query first flattens the subquery selecting columns 'case_id', 'event_name', 'end_time', 'Change New Value', 'Change Old Value', 'Change Type', 'Changed Field', 'Changed Object Id', 'Changed Table', 'Event Created By User Id', 'Event Created By User Type' from the 'defaultview-124' table. It then counts the number of distinct 'case_id' values and groups the results by the 'Changed Table' column, filtering for only rows where 'Changed Table' is not null. The counts are aliased as 'Cases'. The results are ordered by the counts descending and limited to the first 500 rows.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT \nCOUNT( DISTINCT case_id) AS \"Cases\", \n\"Changed Table\" AS \"Table\"\nFROM\n(FLATTEN(\n\"Case Id\"\n, (SELECT \"event_name\", \"end_time\", \"event_attribute_value_new\" AS \"Change New Value\", \"event_attribute_value_old\" AS \"Change Old Value\", \"event_attribute_name\" AS \"Changed Field\", \"event_attribute_object_id\" AS \"Changed Object Id\", \"event_attribute_table\" AS \"Changed Table\", \"Event Created By User Id\", \"Event Created By User Type\" FROM \n  (SELECT\n     case_id AS \"Case Id\",\n     event_name,\n     end_time,\n     event_attribute_name,\n     event_attribute_value_new,\n     event_attribute_value_old,\n     event_attribute_object_id,\n\t event_attribute_table,\n\t \"Event Created By User Id\",\n     \"Event Created By User Type\" \n \tFROM FLATTEN(\"defaultview-124\")\n   )\n) AS \"events\")) AS \"events\", 'case_id'\n) AS sub_query\nWHERE sub_query.\"Changed Table\" IS NOT NULL\n\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 500\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT \nCOUNT( DISTINCT case_id) AS \"Cases\", \n\"Changed Table\" AS \"Table\"\nFROM\n(FLATTEN(\n\"Case Id\"\n, (SELECT \"event_name\", \"end_time\", \"event_attribute_value_new\" AS \"Change New Value\", \"event_attribute_value_old\" AS \"Change Old Value\", \"event_attribute_name\" AS \"Changed Field\", \"event_attribute_object_id\" AS \"Changed Object Id\", \"event_attribute_table\" AS \"Changed Table\", \"Event Created By User Id\", \"Event Created By User Type\" FROM \n  (SELECT\n     case_id AS \"Case Id\",\n     event_name,\n     end_time,\n     event_attribute_name,\n     event_attribute_value_new,\n     event_attribute_value_old,\n     event_attribute_object_id,\n\t event_attribute_table,\n\t \"Event Created By User Id\",\n     \"Event Created By User Type\" \n \tFROM FLATTEN(\"defaultview-124\")\n   )\n) AS \"events\")) AS \"events\", 'case_id'\n) AS sub_query\nWHERE sub_query.\"Changed Table\" IS NOT NULL\n\nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 500\n\n"
    },
    {
        "filename": "812a094000",
        "split": "test",
        "name": "# PO confirmed",
        "query": "SELECT count(case_id) FILTER (WHERE event_name MATCHES ('Confirmed')) FROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', count the number of rows where the value in the 'event_name' column contains the text 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT count (1) as \"Confirmed Bookings\" \nFROM \"defaultview-183\"\nWHERE\nevent_name MATCHES ('Confirmed')\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count (1) as \"Confirmed Bookings\" \nFROM \"defaultview-183\"\nWHERE\nevent_name MATCHES ('Confirmed')\n"
    },
    {
        "filename": "427922cb53",
        "split": "test",
        "name": "Number of PRs",
        "query": "SELECT count(DISTINCT \"Last PR Id\") FROM \"defaultview-431\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Count the number of unique values in the 'Last PR Id' column from the 'defaultview-431' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(distinct \"Last PR Id\") \nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(distinct \"Last PR Id\") \nFROM \"defaultview-431\""
    },
    {
        "filename": "ba61aabb1a",
        "split": "test",
        "name": "Event: Update Payment Term (PO)",
        "query": "SELECT\n    count(event_name) / 1000\nFROM\n    FLATTEN(\"defaultview-225\")\nWHERE\n    event_name IN ('Update PO Payment Terms')",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-225', get the count of rows where the column 'event_name' has the value 'Update PO Payment Terms', divide this count by 1000, and return the result.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n (COUNT(1) FILTER \n  (WHERE \"event_name\" = 'Update PO Payment Terms')\n )/1000\nFROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n (COUNT(1) FILTER \n  (WHERE \"event_name\" = 'Update PO Payment Terms')\n )/1000\nFROM \"defaultview-225\""
    },
    {
        "filename": "f17c42daff",
        "split": "test",
        "name": "Open Invoice Value",
        "query": "SELECT \nSUM(\"Inv. Converted USD Amount\")  FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\n\t)\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-225', select the sum of the values in the 'Inv. Converted USD Amount' column where the value in the 'Last Inv. Item Clearing Date' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"Inv. Converted USD Amount\")\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Clearing Date\" IS NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"Inv. Converted USD Amount\")\nFROM \"defaultview-225\"\nWHERE \"Last Inv. Item Clearing Date\" IS NULL"
    },
    {
        "filename": "54c0f08366",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Production Scheduler Profile",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', group the rows by the 'Production Scheduler Profile' column. For each group, count the number of distinct values in the 'CASE_ID' column and store this count as a new column named '# Process Orders'. Finally, order the resulting rows by the '# Process Orders' column in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(distinct \"Case_ID\") \nas \"# Process Orders\", \n\"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nORDER By 1 Desc",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(distinct \"Case_ID\") \nas \"# Process Orders\", \n\"Production Scheduler Profile\"\nFROM \"defaultview-183\"\nORDER By 1 Desc"
    },
    {
        "filename": "9a9d898912",
        "split": "test",
        "name": "Invoice Rejection Rate on Catalog Items",
        "query": "SELECT count(distinct \"Last Invoice Id\" ) \nFILTER (WHERE \"Last Invoice Reconciliation Status\"  = 'Rejected'\nAND \"PO Item Line Type\" = 'Catalog')/\ncount(distinct \"Last Invoice Id\" ) * 100\nFROM \"defaultview-431\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-431', calculate the percentage of distinct 'Last Invoice Id' values where 'Last Invoice Reconciliation Status' is 'Rejected' and 'PO Item Line Type' is 'Catalog' out of all distinct 'Last Invoice Id' values.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(DISTINCT \"Last Invoice Id\")\nFILTER(\n\tWHERE \"Last Invoice Reconciliation Status\" = 'Rejected'\n    AND \"PO Item Line Type\" = 'Catalog'\n)\n/\nCOUNT(DISTINCT \"Last Invoice Id\")\n\nFROM \"defaultview-431\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(DISTINCT \"Last Invoice Id\")\nFILTER(\n\tWHERE \"Last Invoice Reconciliation Status\" = 'Rejected'\n    AND \"PO Item Line Type\" = 'Catalog'\n)\n/\nCOUNT(DISTINCT \"Last Invoice Id\")\n\nFROM \"defaultview-431\""
    },
    {
        "filename": "5f9ce977a7",
        "split": "test",
        "name": "Automation Rate Deletion Flag",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Deletion Flag'\n\n\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the flattened table 'defaultview-183', select all rows where the 'event_name' column equals 'Deletion Flag'. Then count the number of rows where 'Event Created By User Type' is not 'Dialog', divide that by the total number of rows, and multiply by 100. This calculates the percentage of 'Deletion Flag' events not created by the 'Dialog' user type.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \nCOUNT ( \"Event ID\"  )  FILTER (WHERE \"Event Created By User Type\" NOT IN ( 'Dialog' )) \n/  COUNT (EVENT_NAME)  FILTER (WHERE  EVENT_NAME  IN ('Deletion Flag'))  * 100\nFROM FLATTEN(\"defaultview-183\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \nCOUNT ( \"Event ID\"  )  FILTER (WHERE \"Event Created By User Type\" NOT IN ( 'Dialog' )) \n/  COUNT (EVENT_NAME)  FILTER (WHERE  EVENT_NAME  IN ('Deletion Flag'))  * 100\nFROM FLATTEN(\"defaultview-183\")"
    },
    {
        "filename": "9676e5663d",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Creation to PO Release",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create PO Item'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', calculate the average time difference between the last end_time for events with name 'Release PO' and the first end_time for events with name 'Create PO Item'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n\tAVG ((SELECT LAST (end_time) \n    \t    WHERE event_name = 'Release PO') \n        - (SELECT FIRST (end_time)\n        \tWHERE event_name = 'Create PO Item')) \n        \nFROM \"defaultview-124\"\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n\tAVG ((SELECT LAST (end_time) \n    \t    WHERE event_name = 'Release PO') \n        - (SELECT FIRST (end_time)\n        \tWHERE event_name = 'Create PO Item')) \n        \nFROM \"defaultview-124\"\n"
    },
    {
        "filename": "dfc90845e4",
        "split": "test",
        "name": "Average Invoice Clearing Time",
        "query": "SELECT\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Pay Invoice')\n        )\n    ) - (\n      SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME IN ('Receive Invoice')\n        )\n    )\n  ) AS PaymentTime\nFROM\n  \"defaultview-545\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-545' table, calculate the average time between the following events for each case: Get the last end time of the 'Pay Invoice' activity and subtract the first end time of the 'Receive Invoice' activity. This gives the payment time for each case. Finally, average the payment times across all cases.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(\n\tSELECT LAST(end_time) FILTER (\n\t\tWHERE\n\t\t(activity_name = 'Pay Invoice')\n\t\t)\n\t)-(SELECT FIRST(end_time) FILTER (\n\t\tWHERE\n\t\t(activity_name = 'Receive Invoice')\n\t\t))\n\t)\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(\n\tSELECT LAST(end_time) FILTER (\n\t\tWHERE\n\t\t(activity_name = 'Pay Invoice')\n\t\t)\n\t)-(SELECT FIRST(end_time) FILTER (\n\t\tWHERE\n\t\t(activity_name = 'Receive Invoice')\n\t\t))\n\t)\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "bfb506743e",
        "split": "test",
        "name": "% of ODO Items w/o WTs",
        "query": "\nSELECT\nCOUNT(\nCASE WHEN event_name MATCHES('Create Warehouse Task') THEN null\nELSE case_id\nEND)\n/\nCOUNT(case_id)\n*100\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-545', calculate the percentage of cases where the event_name does not match 'Create Warehouse Task' out of all cases by: 1) Counting the number of cases where event_name does not match 'Create Warehouse Task' by checking if event_name matches 'Create Warehouse Task', and if so replacing the case_id with null, else keeping the case_id. 2) Counting the total number of case_id values. 3) Dividing the count from step 1 by the count from step 2 and multiplying by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID \n       ) FILTER (WHERE NOT event_name MATCHES ('Create Warehouse Task' ~> (NULL AS case_id) OR NULL) )\n/\nCOUNT (CASE_ID )\n* 100\n\nFROM \"defaultview-545\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID \n       ) FILTER (WHERE NOT event_name MATCHES ('Create Warehouse Task' ~> (NULL AS case_id) OR NULL) )\n/\nCOUNT (CASE_ID )\n* 100\n\nFROM \"defaultview-545\"\n                "
    },
    {
        "filename": "bdf1b3383d",
        "split": "test",
        "name": "SOL-1742 Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query first selects the case_id column from the table 'defaultview-59'. It then counts the number of rows in this case_id column. \n\nIt then does a subquery that counts the occurrence of each distinct value in the event_name column of 'defaultview-59' and checks if any of those occurrence counts are greater than 1 using BOOL_OR. \n\nFinally, it divides the number of case_id values where the event_name column has duplicate values by the total number of case_id values, and multiplies by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n    COUNT(case_id) FILTER (WHERE Duplicates > 0) / COUNT(case_id) * 100 AS \"Cases with Duplicate Events\"\nFROM (\n    SELECT \n        case_id, \n        BOOL_OR(OccurrenceCount > 1) AS Duplicates\n    FROM (\n        SELECT\n            case_id, \n            event_name,\n            COUNT(event_name) OVER(PARTITION BY case_id, event_name) AS OccurrenceCount\n        FROM  \"defaultview-59\"\n    ) AS sub1\n) AS sub2",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n    COUNT(case_id) FILTER (WHERE Duplicates > 0) / COUNT(case_id) * 100 AS \"Cases with Duplicate Events\"\nFROM (\n    SELECT \n        case_id, \n        BOOL_OR(OccurrenceCount > 1) AS Duplicates\n    FROM (\n        SELECT\n            case_id, \n            event_name,\n            COUNT(event_name) OVER(PARTITION BY case_id, event_name) AS OccurrenceCount\n        FROM  \"defaultview-59\"\n    ) AS sub1\n) AS sub2"
    },
    {
        "filename": "547ec2c903",
        "split": "test",
        "name": "No. of Mat. Invoices (Create to Clear Invoice Time > 18 Days) by Inv. Payment Term",
        "query": "SELECT \nCOUNT (CASE_ID) AS \"No. of Cases\", \nSUM(\"Last FI Invoice Item Gross Amount Local Curr.\") AS \"Total Inv. Amount\",\n\"Last FI Invoice Item Terms of Payment Key\"\nFROM \"defaultview-124\"\nWHERE (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') > DURATION '18DAYS'\nGROUP BY 3\nORDER BY 1 DESC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', select the count of distinct CASE_ID values as 'No. of Cases', the sum of the 'Last FI Invoice Item Gross Amount Local Curr.' column as 'Total Inv. Amount', and the 'Last FI Invoice Item Terms of Payment Key' column. Only include rows where the time between the end of the 'Clear Invoice' event and the end of the 'Create FI Invoice' event for that case is greater than 18 days. Group the results by 'Last FI Invoice Item Terms of Payment Key' and order by 'No. of Cases' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID) AS \"No. of Cases\",\n\tSUM (\"Last FI Invoice Item Gross Amount Local Curr.\") AS \"Total Inv. Amount\", \n  \"Last FI Invoice Item Terms of Payment Key\" AS \"Inv. Terms of Payment\"\nFROM \"defaultview-124\"\nWHERE DURATION (\n\t\tEND OF (\n\t\t\t(SELECT FIRST (EVENT_NAME) FILTER (\n\t\t\t\tWHERE EVENT_NAME IN ('Clear Invoice' ))) \n\t\t\t)\n\t\t) > DURATION '18DAYS'\nGROUP BY 3\nORDER BY 1 DESC\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID) AS \"No. of Cases\",\n\tSUM (\"Last FI Invoice Item Gross Amount Local Curr.\") AS \"Total Inv. Amount\", \n  \"Last FI Invoice Item Terms of Payment Key\" AS \"Inv. Terms of Payment\"\nFROM \"defaultview-124\"\nWHERE DURATION (\n\t\tEND OF (\n\t\t\t(SELECT FIRST (EVENT_NAME) FILTER (\n\t\t\t\tWHERE EVENT_NAME IN ('Clear Invoice' ))) \n\t\t\t)\n\t\t) > DURATION '18DAYS'\nGROUP BY 3\nORDER BY 1 DESC\n"
    },
    {
        "filename": "82093ccee6",
        "split": "test",
        "name": "_Number of  timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', get the sum of all values in the 'TSR_Count' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSUM(\"TSR_Count\")\nFROM \"defaultview-197\""
    },
    {
        "filename": "2dd9d9b679",
        "split": "test",
        "name": "Number of goods receipts",
        "query": "SELECT SUM((\n\tSELECT COUNT(event_name)\n\tFILTER(WHERE event_name LIKE 'GR%')))\nFROM \"defaultview-183\"\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', get the sum of the counts of events where the event name starts with 'GR'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tSUM (COUNT) \nFROM \"defaultview-183\"\nWHERE EVENT_NAME MATCHES ('^GR')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tSUM (COUNT) \nFROM \"defaultview-183\"\nWHERE EVENT_NAME MATCHES ('^GR')"
    },
    {
        "filename": "852ec656c8",
        "split": "test",
        "name": "Number of events",
        "query": "SELECT COUNT(event_name) FROM \"defaultview-124\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Count the number of rows in the 'event_name' column of the 'defaultview-124' table.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(event_name) FROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(event_name) FROM \"defaultview-124\""
    },
    {
        "filename": "496950a757",
        "split": "test",
        "name": "Average Payment Time Over Time and Company Codes",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\",\n    AR_CompanyCode\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-222', select the month truncation of the 'end_time' column as 'Clearing Date', the average of the difference between the 'ClearingDate' and 'CreationDate' columns filtered for rows where 'EVENT_NAME' contains 'Clear' as 'AVG Clearing Time', and the 'AR_CompanyCode' column. Filter the rows where 'EVENT_NAME' contains 'Clear'. Order the results by 'Clearing Date' in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n   DATE_TRUNC('month', (SELECT FIRST (end_time)))) AS \"Clearing Date\",\n\tAVG (\n    \t(SELECT FIRST(end_time) FILTER (\n        \tWHERE event_name IN ('Clearing')) )\n        - (SELECT FIRST(end_time) FILTER (\n        \tWHERE event_name IN ('Creation') ) ) )\n    ) FILTER (WHERE event_name MATCHES ('Clear')) AS \"AVG Clearing Time\", \n   \t\"AR_CompanyCode\"\n    --INTO RE\n  FROM \"defaultview-222\"\n  WHERE event_name MATCHES('Clear')\n  ORDER BY 1 ASC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n   DATE_TRUNC('month', (SELECT FIRST (end_time)))) AS \"Clearing Date\",\n\tAVG (\n    \t(SELECT FIRST(end_time) FILTER (\n        \tWHERE event_name IN ('Clearing')) )\n        - (SELECT FIRST(end_time) FILTER (\n        \tWHERE event_name IN ('Creation') ) ) )\n    ) FILTER (WHERE event_name MATCHES ('Clear')) AS \"AVG Clearing Time\", \n   \t\"AR_CompanyCode\"\n    --INTO RE\n  FROM \"defaultview-222\"\n  WHERE event_name MATCHES('Clear')\n  ORDER BY 1 ASC"
    },
    {
        "filename": "c8419a5887",
        "split": "test",
        "name": "Number of accounts receivables documents paid late",
        "query": "\nSELECT\nSUM(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-222', get the sum of all values in the 'AR_PaidLateCount' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nsum(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nsum(\"AR_PaidLateCount\")\nFROM \"defaultview-222\"\n                "
    },
    {
        "filename": "1049f58d89",
        "split": "test",
        "name": "Manual Change Rate by SD Customer Country ",
        "query": "SELECT\n  COUNT(DISTINCT case_id) AS \"# of SDs\",\n  (\n    COUNT(DISTINCT case_id) FILTER (\n      WHERE\n        BEHAVIOR (\n          \"EventCreatedByUserType\" IN ('Dialog')\n          AND ChangeType = 'Update'\n        ) AS created_with_dialog MATCHES (created_with_dialog)\n    )\n  ) / COUNT(DISTINCT \"case_id\") * 100 AS \"Change rate\",\n  \"SalesDocCustomerCountry\" AS \"SD Customer Country\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-383', select the number of distinct case IDs as '# of SDs'. Also select the percentage of case IDs where the 'EventCreatedByUserType' is 'Dialog' and 'ChangeType' is 'Update', labeled as 'Change rate'. Additionally, select the 'SalesDocCustomerCountry' column as 'SD Customer Country'. Order the results by the '# of SDs' column in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\nCOUNT(DISTINCT \"case_id\") as \"# of SDs\"\n\n,COUNT (CASE_ID) FILTER (\n\tWHERE EVENT CREATED BY USER IS \"Dialog\"\n    AND \"ChangeType\" = 'Update') \n    \t/ \nCOUNT (CASE_ID) \n  * 100 as \"Change rate\"\n\n\n,\"SalesDocCustomerCountry\" AS \"SD Customer Country\"\nFROM FLATTEN (\"defaultview-383\")\nORDER BY 1 DESC\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\nCOUNT(DISTINCT \"case_id\") as \"# of SDs\"\n\n,COUNT (CASE_ID) FILTER (\n\tWHERE EVENT CREATED BY USER IS \"Dialog\"\n    AND \"ChangeType\" = 'Update') \n    \t/ \nCOUNT (CASE_ID) \n  * 100 as \"Change rate\"\n\n\n,\"SalesDocCustomerCountry\" AS \"SD Customer Country\"\nFROM FLATTEN (\"defaultview-383\")\nORDER BY 1 DESC\n\n\n"
    },
    {
        "filename": "d5bcc67962",
        "split": "test",
        "name": "Overdue deliveries cases",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', NOW()) > \"PO Item Last Requested Delivery Date\"\n    \tAND \"PO Item Delivery Completed\" IS NULL\n      ) \nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-57', count the number of 'case_id' values where the truncated current date is greater than the 'PO Item Last Requested Delivery Date' column value and the 'PO Item Delivery Completed' column value is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id)  FILTER (\n    WHERE DATE_TRUNC('day', NOW()) > \"PO Item Last Requested Delivery Date\"\n    AND \"PO Item Delivery Completed\" IS NULL\n    )\nFROM \"defaultview-57\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id)  FILTER (\n    WHERE DATE_TRUNC('day', NOW()) > \"PO Item Last Requested Delivery Date\"\n    AND \"PO Item Delivery Completed\" IS NULL\n    )\nFROM \"defaultview-57\"\n"
    },
    {
        "filename": "76aa55b92b",
        "split": "test",
        "name": "Table",
        "query": "SELECT title, case_id, \"IssueType\"  FROM \"defaultview-217\"\nWHERE title LIKE '%Support%'",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-217', select the columns 'title', 'case_id', and 'IssueType'. Only include rows where the value in the 'title' column contains the text 'Support'.",
        "llm_gpt-35-turbo-0613_query": "SELECT title, case_id, \"IssueType\"\nFROM \"defaultview-217\"\nWHERE title LIKE '%Support%'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT title, case_id, \"IssueType\"\nFROM \"defaultview-217\"\nWHERE title LIKE '%Support%'"
    },
    {
        "filename": "acf8aac40c",
        "split": "test",
        "name": "SOL-1709 Late Payment Rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days')\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n\t)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-59' table, count the number of case_id values where the difference between the 'Last Inv. Item Clearing Date' and 'Last Inv. Item Due Date' columns is greater than 1 day, divide this by the count of case_id values where 'Last Inv. Item Clearing Date' is not null, and multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT first(\"Last Inv. Item Clearing Date\") - \"Last Inv. Item Due Date\"\n            \tWHERE event_name = 'Inv. Item Cancellation (Sub)') > DURATION '1day'\n    )\n/ COUNT(case_id) FILTER (WHERE (SELECT first (\"Last Inv. Item Clearing Date\")) IS NOT NULL) * 100\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT first(\"Last Inv. Item Clearing Date\") - \"Last Inv. Item Due Date\"\n            \tWHERE event_name = 'Inv. Item Cancellation (Sub)') > DURATION '1day'\n    )\n/ COUNT(case_id) FILTER (WHERE (SELECT first (\"Last Inv. Item Clearing Date\")) IS NOT NULL) * 100\nFROM \"defaultview-59\""
    },
    {
        "filename": "4688181a90",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Vendor Name",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n\"PO Item Material Group Text\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', select the count of values in the 'case_id' column as 'No. of Cases', the sum of values in the 'PO Item Net Order Value' column as 'Total PO Value', and the values in the 'PO Item Material Group Text' column. Order the results by 'No. of Cases' in descending order and limit to the top 50 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(\"case_id\") AS \"No. of Cases\", \nSUM (\"PO Item Net Order Value\") AS \"Total PO Value\", \n\"PO Item Material Group Text\" AS \"Material Group\"\n\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(\"case_id\") AS \"No. of Cases\", \nSUM (\"PO Item Net Order Value\") AS \"Total PO Value\", \n\"PO Item Material Group Text\" AS \"Material Group\"\n\nFROM \"defaultview-124\"\nORDER BY 1 DESC\nLIMIT 50\n"
    },
    {
        "filename": "baf597ad20",
        "split": "test",
        "name": "Percentage of products with at least one period (month) where demand is not fulfilled",
        "query": "SELECT\nCOUNT(\"case_id\") FILTER(\n\tWHERE(\n\t\"Consensus Demand Delivered\" <> \"Consensus Demand\"\n\t)\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n    AND \"Consensus Demand\" > 0 \n)\n/\nCOUNT(\"case_id\") FILTER(\n\tWHERE \"Consensus Demand\" > 0\n    AND \"MONTH\" >= (DATE_TRUNC('month', NOW()))    \n    AND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n) * 100\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, filter the 'defaultview-404' table to only include rows where:\n- The 'MONTH' column value is greater than or equal to the first day of the current month \n- The 'MONTH' column value is less than 320 days after the first day of the current month\n- The 'Consensus Demand' column value is greater than 0\n\nThen, count the number of 'case_id' values in this filtered table. Call this Count 1.\n\nNext, further filter the table to only include rows where:\n- The 'Consensus Demand Delivered' column does not equal the 'Consensus Demand' column\n- The same 'MONTH' and 'Consensus Demand' filters as above\n\nCount the number of 'case_id' values in this doubly filtered table. Call this Count 2.\n\nFinally, divide Count 2 by Count 1 and multiply by 100 to calculate the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER( WHERE ( \"Consensus Demand Delivered\" / \"Consensus Demand\"   ) IS NOT NULL) \n/ Count(case_id)\n* 100\n\nFROM \n\n\t(\nSELECT\n  case_id,\n  \"Consensus Demand Delivered\",\n  \"Consensus Demand\",\n  Log_FIN_ORD_BookDateToDate_diff_MONTH (DATE_TRUNC('month', NOW())) AS \"MONTH\"\nFROM \"defaultview-404\"\nWHERE\n  \"MONTH\" >= DATE_TRUNC('month', NOW())\n  AND \"MONTH\" < DATE_TRUNC('month', NOW()) + INTERVAL '320 DAYS'\n  AND \"Consensus Demand\" > 0 \n\t)AS a\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER( WHERE ( \"Consensus Demand Delivered\" / \"Consensus Demand\"   ) IS NOT NULL) \n/ Count(case_id)\n* 100\n\nFROM \n\n\t(\nSELECT\n  case_id,\n  \"Consensus Demand Delivered\",\n  \"Consensus Demand\",\n  Log_FIN_ORD_BookDateToDate_diff_MONTH (DATE_TRUNC('month', NOW())) AS \"MONTH\"\nFROM \"defaultview-404\"\nWHERE\n  \"MONTH\" >= DATE_TRUNC('month', NOW())\n  AND \"MONTH\" < DATE_TRUNC('month', NOW()) + INTERVAL '320 DAYS'\n  AND \"Consensus Demand\" > 0 \n\t)AS a\n"
    },
    {
        "filename": "b4ef96ed37",
        "split": "test",
        "name": "AVG Eckenddatum \u2013 Eckstartdatum",
        "query": "SELECT avg(\n\"Basic Finish Date\" - \"Basic Start Date\" \n) \nFROM \"defaultview-183\"\t",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', calculate the average of the difference between the 'Basic Finish Date' column and the 'Basic Start Date' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\"Basic Finish Date\" - \"Basic Start Date\") \n\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\"Basic Finish Date\" - \"Basic Start Date\") \n\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "eb31f2d40f",
        "split": "test",
        "name": "_Average project start to end time",
        "query": "\nSELECT\nAVG(Project_StartToEndTime)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', calculate the average of all values in the 'Project_StartToEndTime' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\tAVG(\"Project_StartToEndTime\")\n    \nFROM \"defaultview-197\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\tAVG(\"Project_StartToEndTime\")\n    \nFROM \"defaultview-197\"\n"
    },
    {
        "filename": "511c40d335",
        "split": "test",
        "name": "Last PO Vendor Name (too much null...not worthy)",
        "query": "SELECT \"Last PO Vendor Name\" AS \"Last PO Vendor Name\", COUNT(\"Inv. Accounting Document Number\") AS \"No. of Invoices\" \nFROM \"defaultview-225\"\nGROUP BY 1\nORDER BY 2 DESC\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-225', select the column 'Last PO Vendor Name' and rename it to 'Last PO Vendor Name'. Also select the column 'Inv. Accounting Document Number', count the number of rows for each unique value in this column, and rename this count to 'No. of Invoices'. Group the results by 'Last PO Vendor Name' and order the final results by 'No. of Invoices' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \"Last PO Vendor Name\" as \"Last PO Vendor Name\" ,  \n       count(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM   \"defaultview-225\"\nGROUP BY 1\norder by 2 Desc\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \"Last PO Vendor Name\" as \"Last PO Vendor Name\" ,  \n       count(\"Inv. Accounting Document Number\") AS \"No. of Invoices\"\nFROM   \"defaultview-225\"\nGROUP BY 1\norder by 2 Desc\n\n"
    },
    {
        "filename": "11f85b95e3",
        "split": "test",
        "name": "Case Count & Cycle Time (PR Approval to Create PO) by PO Business Unit",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME = 'Create PO Item')) - (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME = 'Approve PR item'))) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\", \n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 100",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-545' table, select the count of CASE_ID as 'No. of Cases', the average time difference between the last END_TIME where EVENT_NAME is 'Create PO Item' and the first END_TIME where EVENT_NAME is 'Approve PR item' as 'Avg. Cycle Time (PR Apprvl to Crt PO)', and 'PO Business Unit'. Order the results by 'No. of Cases' in descending order and limit to the first 100 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT (CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create PO Item') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Approve PR item')) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\",\n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 100\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT (CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Create PO Item') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Approve PR item')) AS \"Avg. Cycle Time (PR Apprvl to Crt PO)\",\n\"PO Business Unit\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC NULLS LAST\nLIMIT 100\n"
    },
    {
        "filename": "1387d29cf3",
        "split": "test",
        "name": "\u00d8 WIP time Painting -> Assembly",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0020'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0010'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-270', calculate the average time difference between the following: Get the first end_time value where the event_name starts with 'Start' and the 'Routing Step' is '0020'. Subtract from this the first end_time value where the event_name starts with 'Complete' and the 'Routing Step' is '0010'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG ((SELECT FIRST (end_time) \n    \tWHERE event_name LIKE 'Start%' \n        AND \"Routing Step\" = '0020') \n    - (SELECT FIRST (end_time) \n        WHERE event_name LIKE 'Complete%'\n        AND \"Routing Step\" = '0010'))) \n        \nAS \"Average Time\"\nFROM \"defaultview-270\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG ((SELECT FIRST (end_time) \n    \tWHERE event_name LIKE 'Start%' \n        AND \"Routing Step\" = '0020') \n    - (SELECT FIRST (end_time) \n        WHERE event_name LIKE 'Complete%'\n        AND \"Routing Step\" = '0010'))) \n        \nAS \"Average Time\"\nFROM \"defaultview-270\""
    },
    {
        "filename": "ebc0a9dc87",
        "split": "test",
        "name": "Automation Rate Goods Issue",
        "query": "SELECT SUM(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE (\"Event Created By User Type\" IN ('System','Batch Job','Service') \n        AND event_name IN ('GI for order'))\n\t)\n   ))\n/ SUM((SELECT COUNT(event_name)\n\tFILTER (\n\t\tWHERE (event_name IN ('GI for order')))))\n* 100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, from the 'defaultview-183' table, count the number of 'GI for order' events where the 'Event Created By User Type' is 'System', 'Batch Job', or 'Service'. Then, count the total number of 'GI for order' events. Divide the first count by the second count, and multiply by 100 to calculate the percentage of 'GI for order' events created by 'System', 'Batch Job', or 'Service'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(\"Event Name\" ) FILTER (\n    WHERE\n      \"Event User Type\" IN ('System' , 'Batch Job' , 'Service')\n  ) / COUNT(\"Event Name\" ) FILTER (\n    WHERE\n      \"Event Name\"  = 'GI for order'\n  ) * 100\nFROM\n  \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(\"Event Name\" ) FILTER (\n    WHERE\n      \"Event User Type\" IN ('System' , 'Batch Job' , 'Service')\n  ) / COUNT(\"Event Name\" ) FILTER (\n    WHERE\n      \"Event Name\"  = 'GI for order'\n  ) * 100\nFROM\n  \"defaultview-183\""
    },
    {
        "filename": "4ac3ebb383",
        "split": "test",
        "name": "Invoices with immediate PT",
        "query": "SELECT COUNT(case_id) FILTER(\n\tWHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0) \nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-225', count the number of rows where the value in the 'Last Inv. Item Cash Discount Days 1' column is either NULL or 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(*)\nFilter (\n\tWHERE\n\t\t(\"Last Inv. Item Cash Discount Days 1\" \n\t\t\t\tIS NULL)\n        OR\n        (\"Last Inv. Item Cash Discount Days 1\" \n        \t\t= 0)   \n        ) \nFROM \"defaultview-225\"\n-- 178",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(*)\nFilter (\n\tWHERE\n\t\t(\"Last Inv. Item Cash Discount Days 1\" \n\t\t\t\tIS NULL)\n        OR\n        (\"Last Inv. Item Cash Discount Days 1\" \n        \t\t= 0)   \n        ) \nFROM \"defaultview-225\"\n-- 178"
    },
    {
        "filename": "67ee27564b",
        "split": "test",
        "name": "Number of Quotation Changes over time",
        "query": "SELECT\n  DATE_TRUNC('month', end_time) AS \"Change Date\",\n  COUNT (DISTINCT \"UniqueEventId\") AS \"# Changes\"\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  EVENT_NAME LIKE '%Quotation%'\n  AND ChangeType = 'Update'\nORDER BY\n  1 ASC NULLS FIRST FILL TIMESERIES('Month'),\n  NULL",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query is selecting the month truncated end_time column aliased as 'Change Date' and counting the distinct 'UniqueEventId' values aliased as '# Changes'. It is selecting these values from the 'defaultview-383' table after flattening it. The query filters the rows where EVENT_NAME contains 'Quotation' and ChangeType is 'Update'. It orders the results by 'Change Date' in ascending order with nulls first and fills in any missing months in the time series with null values. Finally, it returns the '# Changes' per 'Change Date' month.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  DATE_TRUNC('month', end_time) AS \"Change Date\",\n  COUNT(DISTINCT UniqueEventId) AS \"# Changes\"\nFROM FLATTEN(\"defaultview-383\")\nWHERE\n  EVENT_NAME MATCHES ('%Quotation%') AND ChangeType='Update'\nORDER BY\n  1 ASC NULLS FIRST FILL TIMESERIES 'MONTH',\n  NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  DATE_TRUNC('month', end_time) AS \"Change Date\",\n  COUNT(DISTINCT UniqueEventId) AS \"# Changes\"\nFROM FLATTEN(\"defaultview-383\")\nWHERE\n  EVENT_NAME MATCHES ('%Quotation%') AND ChangeType='Update'\nORDER BY\n  1 ASC NULLS FIRST FILL TIMESERIES 'MONTH',\n  NULL"
    },
    {
        "filename": "835c24ddd6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-225' table, calculate the percentage of rows where the 'Last Inv. Item Cash Discount Days 1' column is either NULL or 0. To do this:\n\n1. Count the total number of 'case_id' values in the table. This gives the denominator.\n\n2. Count the number of 'case_id' values where 'Last Inv. Item Cash Discount Days 1' is NULL or 0. This gives the numerator. \n\n3. Divide the numerator by the denominator.\n\n4. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\" IS NULL\n\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n\t)\n/\nCOUNT(case_id)\n* 100\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\" IS NULL\n\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n\t)\n/\nCOUNT(case_id)\n* 100\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "900d4e70c5",
        "split": "test",
        "name": "Avg. Cycle Time of Cases with Late Payment",
        "query": "SELECT \nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME)))\nFROM \n\"defaultview-124\"\nWHERE \"Last FI Invoice Item Due Date\" < \"Last FI Invoice Item Clearing Date\"\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', select the average value of the difference between the last end time and the first end time, only for the rows where the value in the 'Last FI Invoice Item Due Date' column is less than the value in the 'Last FI Invoice Item Clearing Date' column.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) FILTER (\n\tWHERE \"Last FI Invoice Item Due Date\"\n    \t< \"Last FI Invoice Item Clearing Date\") \nFROM \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG((SELECT LAST(END_TIME)) - (SELECT FIRST(END_TIME))) FILTER (\n\tWHERE \"Last FI Invoice Item Due Date\"\n    \t< \"Last FI Invoice Item Clearing Date\") \nFROM \"defaultview-124\""
    },
    {
        "filename": "5ac5c83f16",
        "split": "test",
        "name": "_Number of timesheets",
        "query": "\nSELECT\nSUM(\"TSR_Count\")\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', get the sum of all values in the 'TSR_Count' column.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nSUM(\"TSR_Count\" )\nFROM \"defaultview-197\"\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nSUM(\"TSR_Count\" )\nFROM \"defaultview-197\"\n"
    },
    {
        "filename": "202dcc39f3",
        "split": "test",
        "name": "AVG Payment Time",
        "query": "SELECT  \n\tDATE_TRUNC('month', end_time)  AS \"Clearing Date\" ,\n    \n\tAVG (\"ClearingDate\"   - \"CreationDate\"  ) \n\tFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n\tAs \"AVG Clearing Time\"\n       \n     FROM FLATTEN(\"defaultview-222\")\nWHERE EVENT_NAME LIKE 'Clear%'\nORDER BY 1 ASC",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-222' table, select the month truncated end_time column aliased as 'Clearing Date' and the average of the difference between the 'ClearingDate' and 'CreationDate' columns filtered for rows where EVENT_NAME contains 'Clear' aliased as 'AVG Clearing Time'. Order the results by 'Clearing Date' in ascending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nDATE_TRUNC('month', (SELECT LAST (END_TIME)))) AS \"Clearing Date\", \nAVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME LIKE 'Clear%'))\n\t- (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME LIKE 'Create%')))\n\tAS \"AVG Clearing Time\"\n\nFROM \"defaultview-222\"\nORDER BY 1 ASC NULLS FIRST\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nDATE_TRUNC('month', (SELECT LAST (END_TIME)))) AS \"Clearing Date\", \nAVG ((SELECT LAST (END_TIME) FILTER (WHERE EVENT_NAME LIKE 'Clear%'))\n\t- (SELECT FIRST (END_TIME) FILTER (WHERE EVENT_NAME LIKE 'Create%')))\n\tAS \"AVG Clearing Time\"\n\nFROM \"defaultview-222\"\nORDER BY 1 ASC NULLS FIRST\n"
    },
    {
        "filename": "4229e2c517",
        "split": "test",
        "name": "Table",
        "query": "SELECT count(case_id), event_name, \"Change Old Value\", \"Change New Value\"  \nFROM FLATTEN(\"defaultview-57\")\nWHERE Event_name ILIKE '%Update%'\nORDER BY 1 desc\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-57', select the count of case_id, event_name, 'Change Old Value' and 'Change New Value' columns where the event_name contains the text 'Update' (case insensitive). Order the results by the count of case_id in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id), event_name, new_value as \"Change Old Value\"\n,CASE WHEN new_value <> '' AND new_value <> NULL THEN new_value ELSE old_value END AS \"Change New Value\"\nFROM FLATTEN(\"defaultview-57\")\nWHERE event_name MATCHES (ILIKE '%Update%')\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id), event_name, new_value as \"Change Old Value\"\n,CASE WHEN new_value <> '' AND new_value <> NULL THEN new_value ELSE old_value END AS \"Change New Value\"\nFROM FLATTEN(\"defaultview-57\")\nWHERE event_name MATCHES (ILIKE '%Update%')\nORDER BY 1 DESC"
    },
    {
        "filename": "0a048d6ae2",
        "split": "test",
        "name": "Avg. Cycle Time (Create to Clear Invoice)",
        "query": "SELECT\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Clear Invoice') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice')) AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', calculate the average time difference between the last end time of the 'Clear Invoice' event and the first end time of the 'Create FI Invoice' event for each case. Alias this as 'Avg. Cycle Time'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  AVG(\n    (SELECT\n       LAST(end_time) FILTER (\n         WHERE event_name IN ('Clear Invoice')) - FIRST(end_time) FILTER (\n         WHERE event_name IN ('Create FI Invoice')))\n     )\n  AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  AVG(\n    (SELECT\n       LAST(end_time) FILTER (\n         WHERE event_name IN ('Clear Invoice')) - FIRST(end_time) FILTER (\n         WHERE event_name IN ('Create FI Invoice')))\n     )\n  AS \"Avg. Cycle Time\"\nFROM \"defaultview-124\"\n                "
    },
    {
        "filename": "d56a723b4e",
        "split": "test",
        "name": "_Number of completed projects",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE \"Project_StageText\" = 'Completed'\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', count the number of rows where the value in the 'Project_StageText' column equals 'Completed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(case_id) Filter(where \"Project_StageText\" IN ('Completed')))\nFROM \"defaultview-197\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(case_id) Filter(where \"Project_StageText\" IN ('Completed')))\nFROM \"defaultview-197\""
    },
    {
        "filename": "1052a139b9",
        "split": "test",
        "name": "_Percentage of projects created after start date",
        "query": "\nSELECT\n(\nSUM(\"Project_CreationAfterStartFlag\" )\n/\nCOUNT(case_id)\n)\n* 100\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', calculate the percentage of cases where the value of the 'Project_CreationAfterStartFlag' column is 1, by taking the sum of all the values in the 'Project_CreationAfterStartFlag' column, dividing it by the total number of rows in the table, and multiplying the result by 100.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n (SUM(\"Project_CreationAfterStartFlag\" MATCHES (1))/COUNT(*)*100)\nFROM \"defaultview-197\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n (SUM(\"Project_CreationAfterStartFlag\" MATCHES (1))/COUNT(*)*100)\nFROM \"defaultview-197\"\n                "
    },
    {
        "filename": "b20189ef80",
        "split": "test",
        "name": "Late deliveries rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n      WHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n      AND \"PO Item Delivery Completed\" = 'Yes'\n      )\n  /\n  COUNT(case_id) FILTER (\n      WHERE \"PO Item Delivery Completed\" = 'Yes'\n      )\n  * 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-57' table, calculate the percentage of cases where the truncated 'Last GR Creation Date' is after the 'PO Item Last Requested Delivery Date' and 'PO Item Delivery Completed' is 'Yes', out of all cases where 'PO Item Delivery Completed' is 'Yes'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n    COUNT(\"PO Item Id\" ) FILTER (\n    \tWHERE (DATE_TRUNC('day', \"Last GR Creation Date\" )) >  \"PO Item Last Requested Delivery Date\" \n    \t\tAND \"PO Item Delivery Completed\"  = 'Yes' \n    )\n\t/ COUNT(case_id) FILTER (\n    \tWHERE \"PO Item Delivery Completed\"  = 'Yes' \n    )\n\t* 100\nFROM \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n    COUNT(\"PO Item Id\" ) FILTER (\n    \tWHERE (DATE_TRUNC('day', \"Last GR Creation Date\" )) >  \"PO Item Last Requested Delivery Date\" \n    \t\tAND \"PO Item Delivery Completed\"  = 'Yes' \n    )\n\t/ COUNT(case_id) FILTER (\n    \tWHERE \"PO Item Delivery Completed\"  = 'Yes' \n    )\n\t* 100\nFROM \"defaultview-57\"\n                "
    },
    {
        "filename": "c0ee4f416c",
        "split": "test",
        "name": "PTP_DB_On-Time Delivery Rate",
        "query": "\nSELECT\n(1 - \n\tCOUNT(case_id) FILTER (\n\t\tWHERE DATE_TRUNC('day', \"Last GR Creation Date\") > \"PO Item Last Requested Delivery Date\"\n\t\t\tAND \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n\t/\n\tCOUNT(case_id) FILTER (\n\t\tWHERE \"PO Item Delivery Completed\" = 'Yes'\n\t\t)\n)\n* 100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-124' table, calculate the percentage of cases where the date truncated to day of the 'Last GR Creation Date' column is greater than the 'PO Item Last Requested Delivery Date' column and the 'PO Item Delivery Completed' column equals 'Yes', out of all the cases where the 'PO Item Delivery Completed' column equals 'Yes'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (CASE_ID) FILTER (WHERE \"PO Item Delivery Completed\" = 'Yes' ) \n/\nCOUNT (CASE_ID) FILTER (WHERE (\"PO Item Delivery Completed\" IN ('Yes','No')  ))\n\n*\n100\n\n\nFROM \"defaultview-124\" \n     WHERE DATE_TRUNC('day',\"Last GR Creation Date\" ) > \"PO Item Last Requested Delivery Date\" \n     \nAND (\"PO Item Delivery Completed\" = 'Yes')  ;",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (CASE_ID) FILTER (WHERE \"PO Item Delivery Completed\" = 'Yes' ) \n/\nCOUNT (CASE_ID) FILTER (WHERE (\"PO Item Delivery Completed\" IN ('Yes','No')  ))\n\n*\n100\n\n\nFROM \"defaultview-124\" \n     WHERE DATE_TRUNC('day',\"Last GR Creation Date\" ) > \"PO Item Last Requested Delivery Date\" \n     \nAND (\"PO Item Delivery Completed\" = 'Yes')  ;"
    },
    {
        "filename": "8f6fbc2031",
        "split": "test",
        "name": "Cancellation rate of purchase orders",
        "query": "SELECT COUNT(case_id) FILTER (\n    WHERE (SELECT FIRST(event_name) FILTER (\n            WHERE event_name IN ('Delete PO Item'))) IS NOT NULL\n    )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-57' table, calculate the percentage of cases where the event 'Delete PO Item' occurred at least once, by:\n1. Counting the total number of case_id values in the table. \n2. Filtering to only those cases where the event 'Delete PO Item' occurred at least once for that case (using a subquery to find the first occurrence of that event name for each case).\n3. Counting the number of cases where 'Delete PO Item' occurred.\n4. Dividing the count of cases where the event occurred by the total count of cases.\n5. Multiplying the result by 100 to get a percentage value.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  count(case_id) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\n            \"event_name\" IN ('Delete PO Item')\n          )\n      ) AS \"MyColumn\"\n  ) / count(case_id) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\n            \"event_name\" IN ('Create PO Item','Change PO Item','Delete PO Item')\n          )\n      )\n  ) * 100 AS \"% PO Items Changed\"\nFROM\n  \"defaultview-57\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  count(case_id) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\n            \"event_name\" IN ('Delete PO Item')\n          )\n      ) AS \"MyColumn\"\n  ) / count(case_id) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR(\n            \"event_name\" IN ('Create PO Item','Change PO Item','Delete PO Item')\n          )\n      )\n  ) * 100 AS \"% PO Items Changed\"\nFROM\n  \"defaultview-57\"\n                "
    },
    {
        "filename": "d2566dc5b5",
        "split": "test",
        "name": "Top 5 Variants ranked by 90th Percentile Cycle Time",
        "query": "SELECT event_name AS \"Variant\", \n\t  PERCENTILE_DISC(0.9) WITHIN GROUP(ORDER BY (SELECT LAST(end_time) - FIRST(end_time))) AS \"90th Percentile Cycle Time per Variant\"\n  FROM \"defaultview-9\"\n GROUP BY 1\n ORDER BY 2 DESC\n LIMIT 5",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-9', select the column 'event_name' and alias it as 'Variant'. Also select the 90th percentile of the cycle time per variant, calculated as the difference between the last and first values of the 'end_time' column, and alias it as '90th Percentile Cycle Time per Variant'. Group the results by 'Variant' and order them by descending '90th Percentile Cycle Time per Variant'. Finally, limit the results to the top 5 variants.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nevent_name AS \"Variant\",\n            PERCENTILE_CONT (0.9) OVER (PARTITION BY event_name) * 1\n                (LAST (end_time) - FIRST (end_time)) AS \"90th Percentile Cycle Time per Variant\"\nFROM \"defaultview-9\"\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 5\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nevent_name AS \"Variant\",\n            PERCENTILE_CONT (0.9) OVER (PARTITION BY event_name) * 1\n                (LAST (end_time) - FIRST (end_time)) AS \"90th Percentile Cycle Time per Variant\"\nFROM \"defaultview-9\"\nGROUP BY 1\nORDER BY 2 DESC\nLIMIT 5\n\n\n"
    },
    {
        "filename": "c2922a0092",
        "split": "test",
        "name": "SOL-1742 Percentage of cases with manual changes",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Update Payment Term')) AND BOOL_OR(\"Event Created By User Type\" = 'Dialog')))\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-59\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-59' table, count the number of case_id rows where any event_name is 'Update Payment Term' AND any 'Event Created By User Type' is 'Dialog'. Divide this count by the total number of case_id rows in the table. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name) FILTER (WHERE event_name IN ('Update Payment Term'))\n\tAND (\"Event Created By User Type\" IN('Dialog')))) \n/ COUNT(case_id) * 100\nFROM \"defaultview-59\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name) FILTER (WHERE event_name IN ('Update Payment Term'))\n\tAND (\"Event Created By User Type\" IN('Dialog')))) \n/ COUNT(case_id) * 100\nFROM \"defaultview-59\""
    },
    {
        "filename": "9c5586849c",
        "split": "test",
        "name": "_Number of projects with costs after end date",
        "query": "\nSELECT\nCOUNT (case_id) FILTER (\n\tWHERE (\"CostDoc_EnterDocAfterProjectClosingCount\" > 0)\n\t)\nFROM \"defaultview-197\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', count the number of rows where the value in the 'CostDoc_EnterDocAfterProjectClosingCount' column is greater than 0.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n   COUNT(1)\n   \nFROM\n  \"defaultview-197\"\nWHERE\n  (\"CostDoc_EnterDocAfterProjectClosingCount\" ) > 0\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n   COUNT(1)\n   \nFROM\n  \"defaultview-197\"\nWHERE\n  (\"CostDoc_EnterDocAfterProjectClosingCount\" ) > 0\n"
    },
    {
        "filename": "b412cf1c81",
        "split": "test",
        "name": "Number of Closed Projects",
        "query": "SELECT COUNT(DISTINCT case_id)\nFROM \"defaultview-197\"\nWHERE \"Project_Stage\"  IN ('P005')\n\n--SELECT COUNT(DISTINCT case_id)\n--FROM FLATTEN(\"defaultview-197\")\n--WHERE event_name = ('Close Project')\n--AND end_time < NOW()",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-197', select the distinct count of 'case_id' where 'Project_Stage' is equal to 'P005'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \ncount(DISTINCT case_id) FILTER \n(\n\tWHERE (EVENT_NAME = 'Update project Stage' AND \"Project_Stage\" = 'P005')\n)\n\nFROM FLATTEN(\"defaultview-197\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \ncount(DISTINCT case_id) FILTER \n(\n\tWHERE (EVENT_NAME = 'Update project Stage' AND \"Project_Stage\" = 'P005')\n)\n\nFROM FLATTEN(\"defaultview-197\")"
    },
    {
        "filename": "1b5cdb573c",
        "split": "test",
        "name": "Value",
        "query": "SELECT\nSUM(\n\t(SELECT COUNT(CASE_ID) FILTER (\n \tWHERE (EVENT_NAME IN ('Personal Data Change WF Initiated'))))) \n/ COUNT (CASE_ID) \n*100\nFROM \"defaultview-299\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-299', calculate the percentage of cases where the event 'Personal Data Change WF Initiated' occurred by: 1) Taking the sum of counts of case IDs where the event name is 'Personal Data Change WF Initiated'. 2) Dividing that sum by the total count of case IDs in the table. 3) Multiplying the result by 100 to get a percentage value.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n(SUM((SELECT COUNT(event_name) FILTER (WHERE event_name = 'Personal Data Change WF Initiated') )) ) \n/ (SUM((SELECT COUNT(event_name) ))) * 100\nFROM \"defaultview-299\" ",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n(SUM((SELECT COUNT(event_name) FILTER (WHERE event_name = 'Personal Data Change WF Initiated') )) ) \n/ (SUM((SELECT COUNT(event_name) ))) * 100\nFROM \"defaultview-299\" "
    },
    {
        "filename": "208336c2e5",
        "split": "test",
        "name": "Automation Rate Material availability checked",
        "query": "SELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" NOT IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Check Material Availability'\n\n\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', select all rows where the 'event_name' column equals 'Check Material Availability'. Then count the number of rows where the 'Event Created By User Type' column does not contain 'Dialog', and divide this by the total number of rows. Finally, multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE NOT (\"Event Created By User Type\" LIKE '%Dialog%')) \n/ COUNT(case_id)\n* 100\nFROM \"defaultview-183\"\nWHERE event_name = 'Check Material Availability'\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (WHERE NOT (\"Event Created By User Type\" LIKE '%Dialog%')) \n/ COUNT(case_id)\n* 100\nFROM \"defaultview-183\"\nWHERE event_name = 'Check Material Availability'\n                "
    },
    {
        "filename": "e048ff1b2f",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT \n\tAVG ((SELECT LAST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Receive Invoice'))) \n\t- (SELECT FIRST (END_TIME) FILTER (\n    \tWHERE EVENT_NAME IN ('Create PO Item'))))\n        \nFROM \"defaultview-431\" \nWHERE EVENT_NAME MATCHES ('Create PO Item'  'Receive Invoice')\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query is selecting the average time difference between the last end time of the 'Receive Invoice' event and the first end time of the 'Create PO Item' event. It is calculating this average time difference only for process instances from the 'defaultview-431' table that contain both the 'Create PO Item' and 'Receive Invoice' events.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \n  \tAVG\n    \t((SELECT LAST (END_TIME) \n        \tWHERE EVENT_NAME = 'Receive Invoice')\n        - (SELECT FIRST (END_TIME)\n         \tWHERE EVENT_NAME = 'Create PO Item')\n        \t)\n        \tFILTER (WHERE \n\t\t\t\t(SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create PO Item') IS NOT NULL\n            \tAND (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Receive Invoice') IS NOT NULL\n             \t)\nFROM \"defaultview-431\"\nFILL TIMESERIES('1 Day'), 0",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \n  \tAVG\n    \t((SELECT LAST (END_TIME) \n        \tWHERE EVENT_NAME = 'Receive Invoice')\n        - (SELECT FIRST (END_TIME)\n         \tWHERE EVENT_NAME = 'Create PO Item')\n        \t)\n        \tFILTER (WHERE \n\t\t\t\t(SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Create PO Item') IS NOT NULL\n            \tAND (SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Receive Invoice') IS NOT NULL\n             \t)\nFROM \"defaultview-431\"\nFILL TIMESERIES('1 Day'), 0"
    },
    {
        "filename": "8dc7922da6",
        "split": "test",
        "name": "PO Item changes rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES(ILIKE '%Update%')))\n\t/\n\tCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES('Create PO Item'))\n\t)\n\t* 100\n    \n    -- ILIKE '%Update%'\n    \n    \nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-124' table, calculate the percentage of cases where the event_name contains 'Update' out of the total cases where the event_name is 'Create PO Item', by:\n1. Counting the number of cases where the event_name contains 'Update' (using ILIKE '%Update%' to match case-insensitively). \n2. Counting the number of cases where the event_name is exactly 'Create PO Item'.\n3. Dividing the first count by the second count.\n4. Multiplying the result by 100 to get a percentage value.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      BEHAVIOUR ILIKE '%Update%'\n  ) / COUNT (CASE_ID) FILTER (\n    WHERE\n      EVENT_NAME = 'Create PO Item'\n  ) * 100\nFROM\n  \"defaultview-124\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      BEHAVIOUR ILIKE '%Update%'\n  ) / COUNT (CASE_ID) FILTER (\n    WHERE\n      EVENT_NAME = 'Create PO Item'\n  ) * 100\nFROM\n  \"defaultview-124\""
    },
    {
        "filename": "4d107651fe",
        "split": "test",
        "name": "Volume of cancelled orders",
        "query": "SELECT SUM(\"PO Item Net Order Value in USD\") FILTER (\n\tWHERE event_name MATCHES('Delete PO Item')\n\t)\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-57', select the sum of the values in the 'PO Item Net Order Value in USD' column only for rows where the value in the 'event_name' column matches 'Delete PO Item'.",
        "llm_gpt-35-turbo-0613_query": "SELECT SUM(\"PO Item Net Order Value in USD\") FROM \"defaultview-57\" WHERE event_name MATCHES('Delete PO Item')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT SUM(\"PO Item Net Order Value in USD\") FROM \"defaultview-57\" WHERE event_name MATCHES('Delete PO Item')"
    },
    {
        "filename": "e0aec295eb",
        "split": "test",
        "name": "Late Payment Rate",
        "query": "SELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      (\n        \"Last Inv. Item Clearing Date\" - \"Last Inv. Item Due Date\" > DURATION '1days'\n      )\n  ) / COUNT(case_id) FILTER (\n    WHERE\n      (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n  ) * 100\nFROM\n  \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-225' table, count the number of case_id values where the difference between the 'Last Inv. Item Clearing Date' and 'Last Inv. Item Due Date' columns is greater than 1 day. Divide this count by the count of case_id values where 'Last Inv. Item Clearing Date' is not null. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n100 * \nCOUNT(case_id) FILTER (\n    WHERE (SELECT LAST(\"Last Inv. Item Clearing Date\") - \"Last Inv. Item Due Date\" \n    \tWHERE EVENTNAME = 'Invoice Item'):> DURATION '1day') \n/ COUNT(case_id) FILTER (WHERE (\"Last Inv. Item Clearing Date\") IS NOT NULL))\n  FROM \"defaultview-225\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n100 * \nCOUNT(case_id) FILTER (\n    WHERE (SELECT LAST(\"Last Inv. Item Clearing Date\") - \"Last Inv. Item Due Date\" \n    \tWHERE EVENTNAME = 'Invoice Item'):> DURATION '1day') \n/ COUNT(case_id) FILTER (WHERE (\"Last Inv. Item Clearing Date\") IS NOT NULL))\n  FROM \"defaultview-225\""
    },
    {
        "filename": "488b42c7bc",
        "split": "test",
        "name": "Company code and its latest changes ",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query selects the following columns from the flattened 'defaultview-225' table:\n- 'Inv. Company code': The company code from the invoice\n- 'Most recent Inv.': The most recent accounting document date for each case_id \n- 'Last Inv. Item Terms of Payment Key': The terms of payment key from the last invoice item \n- 'Last Inv. Item Vendor Master Payment Terms': The vendor master payment terms from the last invoice item\n\nTo get this, the query first flattens the 'defaultview-225' table. It then selects the desired columns, using LAST() to get the most recent value for certain columns.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nLAST(\"Inv. Company code\") FILTER (WHERE event_name = 'Create accounting document') AS \"Inv. Company code\",\nMAX(\"Most recent Inv.\") AS \"Most recent Inv.\", \n\n\"LKP Last Inv. Item Terms of Payment Key\" AS \"Last Inv. Item Terms of Payment Key\",\nMAX(\"LKP Last Inv. Item Vendor Master Payment Terms\") AS \"Last Inv. Item Vendor Master Payment Terms\"\n\nFROM\n(\n  SELECT \n    FIRST(\"Company code\") FILTER (WHERE (Event_name = 'Create billing document' OR Event_name = 'Cancel billing document')) AS \"Inv. Company code\",\n    (\"First Inv.\" IF FIRST(AB.event_name) IN ('Reverse accounting document'\n    , 'Reset cleared item', 'D (+) Reverse FI posting'), NULL) AS \"Most recent Inv.\", \n    (Event_end_time - Event_start_time) AS \"Invoice post time\",\n \n\"Event Log Order\", \"Event_name\" AS \"FL_event_name\", \"Payload\" AS \"FL_Payload\"\n\n    FROM FLATTEN (\"defaultview-225\")\n)\nAS SUB_Q_FLATTEN\nWHERE (fl_event_name = 'Clear accounting document' OR fl_event_name = 'Reset cleared item FI documents' OR fl_event_name = 'Post outgoing payment') AND (\"Last Inv. Item Terms of Payment Key\" IS NOT NULL)\nORDER BY 1 DESC NULLS LAST\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nLAST(\"Inv. Company code\") FILTER (WHERE event_name = 'Create accounting document') AS \"Inv. Company code\",\nMAX(\"Most recent Inv.\") AS \"Most recent Inv.\", \n\n\"LKP Last Inv. Item Terms of Payment Key\" AS \"Last Inv. Item Terms of Payment Key\",\nMAX(\"LKP Last Inv. Item Vendor Master Payment Terms\") AS \"Last Inv. Item Vendor Master Payment Terms\"\n\nFROM\n(\n  SELECT \n    FIRST(\"Company code\") FILTER (WHERE (Event_name = 'Create billing document' OR Event_name = 'Cancel billing document')) AS \"Inv. Company code\",\n    (\"First Inv.\" IF FIRST(AB.event_name) IN ('Reverse accounting document'\n    , 'Reset cleared item', 'D (+) Reverse FI posting'), NULL) AS \"Most recent Inv.\", \n    (Event_end_time - Event_start_time) AS \"Invoice post time\",\n \n\"Event Log Order\", \"Event_name\" AS \"FL_event_name\", \"Payload\" AS \"FL_Payload\"\n\n    FROM FLATTEN (\"defaultview-225\")\n)\nAS SUB_Q_FLATTEN\nWHERE (fl_event_name = 'Clear accounting document' OR fl_event_name = 'Reset cleared item FI documents' OR fl_event_name = 'Post outgoing payment') AND (\"Last Inv. Item Terms of Payment Key\" IS NOT NULL)\nORDER BY 1 DESC NULLS LAST\n"
    },
    {
        "filename": "a58ec89c7f",
        "split": "test",
        "name": "Table",
        "query": "SELECT \"Inv. Company code\"\n, LAST(\"Most recent Inv.\")\n, \"Last Inv. Item Terms of Payment Key\"\n, \"Last Inv. Item Vendor Master Payment Terms\"\nFROM\n(SELECT\ncase_id,\n\"Inv. Company Code\"\n,\"Inv. Company Code Text\" \n,LAST(\"Inv. Accounting Document Date\") as \"Most recent Inv.\"\n,\"Last Inv. Item Terms of Payment Key\"\n,\"Last Inv. Item Vendor Master Payment Terms\"\nFROM FLATTEN(\"defaultview-225\")) AS Temp",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query selects the following columns from the flattened 'defaultview-225' table:\n- 'Inv. Company code': The company code from the invoice\n- 'Most recent Inv.': The most recent accounting document date for each case_id \n- 'Last Inv. Item Terms of Payment Key': The terms of payment key from the last invoice item for each case_id\n- 'Last Inv. Item Vendor Master Payment Terms': The vendor master payment terms from the last invoice item for each case_id\n\nTo get this, the query first flattens the 'defaultview-225' table. It then selects the desired columns, using LAST() to get the latest value for certain columns per case_id.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\t\"Inv. Company code\" ,\n    (SELECT LAST (\"Most recent Inv. Accounting document date\") ) AS \"Most recent Inv.\" ,\n    (SELECT LAST(\"Last Inv. Item Terms of Payment Key\")) AS \"Key of last item term of payment\",\n    (SELECT LAST (\"Last Inv. Item Vendor Master Payment Terms\")) AS \"Terms Payment of Last Invoice Item\"\n    \n    \n \nFROM FLATTEN(\"defaultview-225\")\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\t\"Inv. Company code\" ,\n    (SELECT LAST (\"Most recent Inv. Accounting document date\") ) AS \"Most recent Inv.\" ,\n    (SELECT LAST(\"Last Inv. Item Terms of Payment Key\")) AS \"Key of last item term of payment\",\n    (SELECT LAST (\"Last Inv. Item Vendor Master Payment Terms\")) AS \"Terms Payment of Last Invoice Item\"\n    \n    \n \nFROM FLATTEN(\"defaultview-225\")\n"
    },
    {
        "filename": "72e24c5831",
        "split": "test",
        "name": " Time difference planned vs actual end date without planned order",
        "query": "SELECT avg(\n\"Scheduled Finish Date\" - \"Actual Finish Date\" \n)\nFROM \"defaultview-183\"\nWhere \"Planned Order Number\" is null",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', select the average of the difference between the 'Scheduled Finish Date' and 'Actual Finish Date' columns, only for the rows where the value in the 'Planned Order Number' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\n\"Scheduled Finish Date\" - \n\"Actual Finish Date\" \n) \n--AVG(EndDate - CreatedOn)\nFILTER(WHERE \"Planned Order Number\" is null)\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\n\"Scheduled Finish Date\" - \n\"Actual Finish Date\" \n) \n--AVG(EndDate - CreatedOn)\nFILTER(WHERE \"Planned Order Number\" is null)\nFROM \"defaultview-183\""
    },
    {
        "filename": "0df706fd5d",
        "split": "test",
        "name": "Work Order Backlog",
        "query": "SELECT count(case_id) \n\t\tFILTER( WHERE(\n        \tSELECT count(event_name)\n            WHERE event_name = 'Order: REL - Released') < 1)\n\nFROM \"defaultview-95\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-95', count the number of case_id values where the count of event_name values equal to 'Order: REL - Released' is less than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT COUNT(case_id) FROM \"defaultview-95\"\n\nWHERE (SELECT COUNT(event_name) WHERE event_name = 'Order: REL - Released') < 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT COUNT(case_id) FROM \"defaultview-95\"\n\nWHERE (SELECT COUNT(event_name) WHERE event_name = 'Order: REL - Released') < 1"
    },
    {
        "filename": "e0ceb3aa5d",
        "split": "test",
        "name": "Total No. of Cases",
        "query": "SELECT COUNT(CASE_ID) \nFROM \"defaultview-124\"\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "Count the number of rows from the 'defaultview-124' table where the value in the 'CASE_ID' column is not null.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(case_id)\nFROM\n  \"defaultview-124\"\nWHERE\n  case_id IS NOT NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(case_id)\nFROM\n  \"defaultview-124\"\nWHERE\n  case_id IS NOT NULL"
    },
    {
        "filename": "0e70ef39a0",
        "split": "test",
        "name": "Late Payment Rate  (by Volume)",
        "query": "SELECT (\nCOUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' \nAND (ClearingDate   - NetDueDate)  > DURATION '1day')  \n/ COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear%' ) \n) * 100\nFROM FLATTEN(\"defaultview-222\")",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-222' table, get the percentage of distinct ARUniqueKey values where the EVENT_NAME starts with 'Clear' and the ClearingDate is more than 1 day after the NetDueDate, out of all the distinct ARUniqueKey values where the EVENT_NAME starts with 'Clear'.",
        "llm_gpt-35-turbo-0613_query": "SELECT (COUNT (DISTINCT ARUniqueKey) \nFILTER (\n\tWHERE EVENT_NAME LIKE 'Clear%'\n    AND (ClearingDate - NetDueDate) > DURATION '1day') )  /\n    (COUNT (DISTINCT ARUniqueKey) \n    FILTER (\n\tWHERE EVENT_NAME LIKE 'Clear%')) * 100\nFROM \"defaultview-222\"\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT (COUNT (DISTINCT ARUniqueKey) \nFILTER (\n\tWHERE EVENT_NAME LIKE 'Clear%'\n    AND (ClearingDate - NetDueDate) > DURATION '1day') )  /\n    (COUNT (DISTINCT ARUniqueKey) \n    FILTER (\n\tWHERE EVENT_NAME LIKE 'Clear%')) * 100\nFROM \"defaultview-222\"\n"
    },
    {
        "filename": "3ffcebe83b",
        "split": "test",
        "name": "Late Payments by Company Code",
        "query": "SELECT\n  \"Accounting Company Code\"  AS \"Company Code\",\n  SUM (\"Last Invoice Item Amount\" ) AS \"Invoice Amount\",\n  COUNT(case_id) AS \"Number of Invoices\"\nFROM\n  \"defaultview-545\"\nWHERE\n  (\n    \"Last Invoice Due Date\" < \"Last Invoice Payment Date\"\n  )\nORDER BY\n  2 DESC\nNULLS LAST",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-545' table, select the 'Accounting Company Code' column and alias it as 'Company Code', calculate the sum of the 'Last Invoice Item Amount' column and alias it as 'Invoice Amount', and count the number of rows and alias it as 'Number of Invoices'. Only include rows where the 'Last Invoice Due Date' is less than the 'Last Invoice Payment Date'. Order the results by the 'Invoice Amount' column in descending order, with null values last.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  \"Accounting Company Code\" AS \"Company Code\",\n  SUM(\"Last Invoice Item Amount\") AS \"Invoice Amount\",\n  COUNT(1) AS \"Number of Invoices\"\nFROM\n  \"defaultview-545\"\nWHERE\n  (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\nORDER BY\n  2 DESC NULLS LAST",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  \"Accounting Company Code\" AS \"Company Code\",\n  SUM(\"Last Invoice Item Amount\") AS \"Invoice Amount\",\n  COUNT(1) AS \"Number of Invoices\"\nFROM\n  \"defaultview-545\"\nWHERE\n  (\"Last Invoice Due Date\" < \"Last Invoice Payment Date\")\nORDER BY\n  2 DESC NULLS LAST"
    },
    {
        "filename": "a399be4a32",
        "split": "test",
        "name": "Process Orders where actual finish date = scheduled finish date WITHOUT planned order reference",
        "query": "SELECT count(case_id) FROM \"defaultview-183\"\nWHERE \"Actual Finish Date\" = \"Scheduled Finish Date\" AND \"Planned Order Number\" IS NULL",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', count the number of rows where the value in the 'Actual Finish Date' column equals the value in the 'Scheduled Finish Date' column and the value in the 'Planned Order Number' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) Filter(\n\tWHERE \n\t\"Actual Finish Date\" = \"Scheduled Finish Date\"\n\t\tAND \"Planned Order Number\" Is NULL\n    )\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) Filter(\n\tWHERE \n\t\"Actual Finish Date\" = \"Scheduled Finish Date\"\n\t\tAND \"Planned Order Number\" Is NULL\n    )\nFROM \"defaultview-183\""
    },
    {
        "filename": "737c4d00c6",
        "split": "test",
        "name": "% of invoices with immediate PT",
        "query": "SELECT \n\nCOUNT(case_id) FILTER ( WHERE \"Last Inv. Item Cash Discount Days 1\" IS NULL\n\t\tOR \"Last Inv. Item Cash Discount Days 1\" = 0)\n/COUNT(case_id) * 100\n\nFROM \"defaultview-225\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-225' table, calculate the percentage of rows where the 'Last Inv. Item Cash Discount Days 1' column is either NULL or 0. To do this:\n\n1. Count the total number of 'case_id' values in the table. This gives the denominator.\n\n2. Count the number of 'case_id' values where 'Last Inv. Item Cash Discount Days 1' is NULL or 0. This gives the numerator. \n\n3. Divide the numerator by the denominator.\n\n4. Multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\" IS NULL\n    OR \"Last Inv. Item Cash Discount Days 1\" = 0)\n    )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-225\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (\"Last Inv. Item Cash Discount Days 1\" IS NULL\n    OR \"Last Inv. Item Cash Discount Days 1\" = 0)\n    )\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-225\"\n                "
    },
    {
        "filename": "2a5c42276f",
        "split": "test",
        "name": "\u00d8 WIP time Assembly -> Inspection",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0030'))\n- (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0020'))\n)\nFROM \"defaultview-270\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-270', calculate the average of the following: Take the first end_time where event_name starts with 'Start' and 'Routing Step' is '0030', subtract the first end_time where event_name starts with 'Complete' and 'Routing Step' is '0020'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time) \n\t\tWHERE event_name LIKE 'Start%' \n        \tAND \"Routing Step\" = '0030')\n         \n   - (SELECT FIRST(end_time) \n\t\tWHERE event_name LIKE 'Complete%'  \n        \tAND \"Routing Step\" = '0020')      \n\t) \n          \n        \nFROM \"defaultview-270\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time) \n\t\tWHERE event_name LIKE 'Start%' \n        \tAND \"Routing Step\" = '0030')\n         \n   - (SELECT FIRST(end_time) \n\t\tWHERE event_name LIKE 'Complete%'  \n        \tAND \"Routing Step\" = '0020')      \n\t) \n          \n        \nFROM \"defaultview-270\"\n                "
    },
    {
        "filename": "160da29779",
        "split": "test",
        "name": "Average time issue to assign first reviewer",
        "query": "SELECT \nAVG(\n\t\t(SELECT FIRST(end_time) \n\t \tWHERE event_name IN ('Assign Validator'))\n    - \t(SELECT FIRST(end_time)\n       \tWHERE event_name IN ('Change Status to Ready For Review'))\n\t)\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to Ready For Review' ~> \n    \t\t\t\t\t\t 'Change Status to In Review')",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-217' table, select the average time difference between the following events for process instances where the event 'Change Status to Ready For Review' is directly followed by the event 'Change Status to In Review':\n- Find the end time of the first occurrence of the 'Assign Validator' event \n- Find the end time of the first occurrence of the 'Change Status to Ready For Review' event\nSubtract the second time from the first time to get the time difference for each process instance.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG(\n (SELECT LAST(END_TIME) \n   WHERE EVENT_NAME IN ('Assign Validator'))\n-\n (SELECT LAST(END_TIME) \n   WHERE EVENT_NAME IN ('Change Status to Ready For Review'))\n\t)\nFROM \"defaultview-217\"\nWHERE EVENT_NAME MATCHES ('Change Status to Ready For Review' ~> 'Change Status to In Review')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG(\n (SELECT LAST(END_TIME) \n   WHERE EVENT_NAME IN ('Assign Validator'))\n-\n (SELECT LAST(END_TIME) \n   WHERE EVENT_NAME IN ('Change Status to Ready For Review'))\n\t)\nFROM \"defaultview-217\"\nWHERE EVENT_NAME MATCHES ('Change Status to Ready For Review' ~> 'Change Status to In Review')"
    },
    {
        "filename": "49e3ff16c8",
        "split": "test",
        "name": "Process orders overdue for release",
        "query": "SELECT COUNT(case_id) \n\tFILTER(WHERE \"Scheduled Release Date\" < NOW() \n\tAND \"Actual Release Date\" IS NULL)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', count the number of rows where the value in the 'Scheduled Release Date' column is less than the current date/time AND the value in the 'Actual Release Date' column is null.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(\"Scheduled Release Date\") FILTER (\n\tWHERE (\"Scheduled Release Date\" < NOW()) \n\tAND \"Actual Release Date\" IS NULL)\nFROM \"defaultview-183\"\n--Default view - Missing Dates",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(\"Scheduled Release Date\") FILTER (\n\tWHERE (\"Scheduled Release Date\" < NOW()) \n\tAND \"Actual Release Date\" IS NULL)\nFROM \"defaultview-183\"\n--Default view - Missing Dates"
    },
    {
        "filename": "b11414e427",
        "split": "test",
        "name": "PTP_DB_Average Cycle Time from PO Released to Goods Receipt",
        "query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Goods Receipt'))) \n\t- (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Release PO'))\n   )\n)\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', calculate the average time difference between the last end_time for events with name 'Create Goods Receipt' and the first end_time for events with name 'Release PO'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG((SELECT LAST(end_time)))\n-\nAVG((SELECT FIRST(end_time) WHERE event_name IN ('Release PO'))))\n\nFROM \"defaultview-124\"\n\n\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG((SELECT LAST(end_time)))\n-\nAVG((SELECT FIRST(end_time) WHERE event_name IN ('Release PO'))))\n\nFROM \"defaultview-124\"\n\n\n\n\n"
    },
    {
        "filename": "d4dfe3fb4d",
        "split": "test",
        "name": "Overdue Receivables (15+ days overdue) by Value - Top 10  Customer ",
        "query": "SELECT \"Overdue Amount\" , \"Customer\"\nFROM\n(\nSELECT SUM( \"AmountInGlobalCurrency\" ) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingDate IS NULL AND (NOW() - NetDueDate) > DURATION '15day') \n--OVER ( PARTITION BY \"AR_Customer\")\nAS \"Overdue Amount\", \n\"AR_CustomerName\" as \"Customer\"\nFROM FLATTEN(\"defaultview-222\")\n) as selections\nWHERE  \"Overdue Amount\" IS NOT NULL\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-222' table, select the 'AR_CustomerName' column and alias it as 'Customer'. Also calculate the sum of 'AmountInGlobalCurrency' for events where 'EVENT_NAME' is 'Create Accounts Receivable' and 'ClearingDate' is null and the number of days between 'NOW()' and 'NetDueDate' is greater than 15 days. Alias this sum as 'Overdue Amount'. After flattening the table, filter the results to only include rows where 'Overdue Amount' is not null. Finally, sort the results by 'Overdue Amount' in descending order and select the 'Overdue Amount' and 'Customer' columns.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nSum(case_id) as \"case id\",\n\"AR_CustomerName\" as \"Customer\",\nSUM(\"AmountInGlobalCurrency\") as \"Overdue Amount\"\nFROM \"defaultview-222-flat\"\nwhere EVENT_NAME = 'Create Accounts Receivable' and ClearingDate is null and (NOW()-NetDueDate) > DURATION '15day'\nORDER BY 3 desc\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nSum(case_id) as \"case id\",\n\"AR_CustomerName\" as \"Customer\",\nSUM(\"AmountInGlobalCurrency\") as \"Overdue Amount\"\nFROM \"defaultview-222-flat\"\nwhere EVENT_NAME = 'Create Accounts Receivable' and ClearingDate is null and (NOW()-NetDueDate) > DURATION '15day'\nORDER BY 3 desc\n"
    },
    {
        "filename": "44cae3c190",
        "split": "test",
        "name": "Avg. Cycle Time per Project (20 longest running)",
        "query": "SELECT\n    \"Project\",\n    AVG(C) AS \"Avg Cycle Time\"\nFROM (\n\tSELECT \n        case_id,\n        \"Project_Description\"  as \"Project\",\n   \t(SELECT LAST(end_time) FILTER (WHERE event_name = 'Close Project') \n    \t      - FIRST(end_time) FILTER (WHERE event_name = 'Start Project')) AS C\n\tFROM \"defaultview-197\"\n) AS sub\nORDER BY 2 DESC\nLIMIT 20\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, from the 'defaultview-197' table, select the case_id and Project_Description column values and alias the Project_Description column as 'Project'. Then, for each case_id, calculate the cycle time C as the difference between the last end_time for the 'Close Project' event and the first end_time for the 'Start Project' event. \n\nNext, select the 'Project' and the average of C alias as 'Avg Cycle Time' from the derived table. Order the results by descending 'Avg Cycle Time' and limit to the top 20 rows.\n\nThis summarizes the key steps of the query: starting from the 'defaultview-197' table, calculating the cycle time C, averaging C by project, ordering and limiting the result set.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n  case_id, \n  Project_Description AS \"Project\"\n   --,end_time-start_time AS \"diff\"\n   ,(\n   SELECT LAST(end_time) FILTER (\n       WHERE event_name IN ('Close Project'))\n    - FIRST(end_time) FILTER (\n       WHERE event_name IN ('Start Project'))\n    ) AS c\nINTO \"defaultview-202\"\nFROM FLATTEN(\"defaultview-197\")",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n  case_id, \n  Project_Description AS \"Project\"\n   --,end_time-start_time AS \"diff\"\n   ,(\n   SELECT LAST(end_time) FILTER (\n       WHERE event_name IN ('Close Project'))\n    - FIRST(end_time) FILTER (\n       WHERE event_name IN ('Start Project'))\n    ) AS c\nINTO \"defaultview-202\"\nFROM FLATTEN(\"defaultview-197\")"
    },
    {
        "filename": "471ccd349c",
        "split": "test",
        "name": "Order confirmation lead time",
        "query": "SELECT AVG(\n\t(SELECT FIRST(end_time) FILTER(WHERE event_name = 'Confirmed'))\n    -\n    (SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n\t)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', calculate the average time difference between the following events for each case:\n- Get the first end_time value where event_name equals 'Confirmed' \n- Get the last end_time value where event_name equals 'Released'\nSubtract the last end_time from the first end_time to get the time difference for each case. \nFinally, calculate the average of these time differences across all cases.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time) \n\t\tWHERE event_name = 'Confirmed') \n\t- (SELECT LAST(end_time)\n\t\tWHERE event_name = 'Released'))\n  FROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time) \n\t\tWHERE event_name = 'Confirmed') \n\t- (SELECT LAST(end_time)\n\t\tWHERE event_name = 'Released'))\n  FROM \"defaultview-183\"\n                "
    },
    {
        "filename": "f6d2878264",
        "split": "test",
        "name": "\u2300 Basic End Date - Basic Start Date by Manufacturing Plant",
        "query": "SELECT count(case_id) as Cases, avg(\n\"Basic Finish Date\"  - \"Basic Start Date\" \n) as \"Cycle Time\", \"Manufacturing Plant\" \nFROM \"defaultview-183\"\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', select the count of 'case_id' values as 'Cases', the average of the difference between 'Basic Finish Date' and 'Basic Start Date' as 'Cycle Time', and the 'Manufacturing Plant' column. Order the results by the 'Cases' column in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT count(case_id) as \"Cases\",\nAVG (\"Basic Finish Date\" - \"Basic Start Date\" ) AS \"Cycle Time\"\n,\"Manufacturing Plant\"\nFROM \"defaultview-183-180\"\nORDER BY 1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT count(case_id) as \"Cases\",\nAVG (\"Basic Finish Date\" - \"Basic Start Date\" ) AS \"Cycle Time\"\n,\"Manufacturing Plant\"\nFROM \"defaultview-183-180\"\nORDER BY 1 DESC"
    },
    {
        "filename": "dc64a9e81b",
        "split": "test",
        "name": "Manufacturing lead time",
        "query": "SELECT\nAVG(\n(SELECT FIRST(end_time) FILTER(WHERE event_name LIKE 'GR%'))\n-\n(SELECT LAST(end_time) FILTER(WHERE event_name = 'Released'))\n)\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', calculate the average time difference between the following:\n   - The first end_time where event_name starts with 'GR'\n   - The last end_time where event_name is 'Released'\nThis average time difference is calculated by subtracting the last end_time where event_name is 'Released' from the first end_time where event_name starts with 'GR'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time)\n\t\tWHERE event_name IN ('Released')\n\t)\n\t-\n\t(SELECT FIRST(end_time)\n\t\tWHERE event_name LIKE 'GR%')\n   )\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT FIRST(end_time)\n\t\tWHERE event_name IN ('Released')\n\t)\n\t-\n\t(SELECT FIRST(end_time)\n\t\tWHERE event_name LIKE 'GR%')\n   )\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "eaabd9dd85",
        "split": "test",
        "name": "Average Cycle Time",
        "query": "SELECT\nAVG (\n\t(SELECT LAST (END_TIME))\n     -\n    (SELECT FIRST (END_TIME))\n\t)\n    FROM \"defaultview-525\"\nWHERE event_name MATCHES \n\t('Create Inspection Lot' 'Create Usage Decision' ILIKE 'Material Movement%')\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-525', select the average value of the difference between the last END_TIME and the first END_TIME for all rows where the event_name matches 'Create Inspection Lot', 'Create Usage Decision', or starts with 'Material Movement' (case insensitive).",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG\n (\n   (\n     SELECT\n        LAST (END_TIME) FILTER (\n           WHERE  (\n           event_name IN  ('Create Inspection Lot','Create Usage Decision')\n          OR event_name ILIKE  'Material Movement%')\n)\n  ) - \n  (\n     SELECT\n        FIRST (END_TIME) FILTER (\n           WHERE  (\n           LOWER(event_name) ILIKE  'create inspection lot%'\n          OR LOWER(event_name) ILIKE  'create usage decision%'\n         OR LOWER(event_name) LIKE 'material movement%')\n)\n  )\n )\nFROM\n\"defaultview-525\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG\n (\n   (\n     SELECT\n        LAST (END_TIME) FILTER (\n           WHERE  (\n           event_name IN  ('Create Inspection Lot','Create Usage Decision')\n          OR event_name ILIKE  'Material Movement%')\n)\n  ) - \n  (\n     SELECT\n        FIRST (END_TIME) FILTER (\n           WHERE  (\n           LOWER(event_name) ILIKE  'create inspection lot%'\n          OR LOWER(event_name) ILIKE  'create usage decision%'\n         OR LOWER(event_name) LIKE 'material movement%')\n)\n  )\n )\nFROM\n\"defaultview-525\""
    },
    {
        "filename": "4906928657",
        "split": "test",
        "name": "Cancellation of goods receipts",
        "query": "SELECT COUNT(case_id) FILTER (\nWHERE (event_name MATCHES('Reverse Goods Receipt'))\nAND (event_name MATCHES('Create Goods Receipt'))\n)\n\nFROM \"defaultview-57\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-57', count the number of 'case_id' values where the 'event_name' column contains both the text 'Reverse Goods Receipt' and 'Create Goods Receipt'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(case_id) Filter (WHERE event_name MATCHES ('Reverse Goods Receipt' ~> 'Create Goods Receipt'))\nFROM \"defaultview-57\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(case_id) Filter (WHERE event_name MATCHES ('Reverse Goods Receipt' ~> 'Create Goods Receipt'))\nFROM \"defaultview-57\""
    },
    {
        "filename": "70fa42ce9c",
        "split": "test",
        "name": "On-time delivery rate",
        "query": "SELECT COUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL AND \"Actual Delivery Date\" - \"Scheduled Finish Date\" = DURATION '0days'\n    )\n/\nCOUNT(case_id) FILTER( \n\tWHERE \"Actual Delivery Date\" IS NOT NULL) \n*100\nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-183' table, calculate the percentage of cases where the actual delivery date is not null and equals the scheduled finish date, out of all cases where the actual delivery date is not null:\n\n1. Count the number of case IDs where the 'Actual Delivery Date' column is not null and equals the 'Scheduled Finish Date' column. \n\n2. Count the number of case IDs where the 'Actual Delivery Date' column is not null.\n\n3. Divide the first count by the second count and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n\nCOUNT (CASE_ID) FILTER (\n    WHERE \"Actual Delivery Date\" = \"Scheduled Finish Date\"\n    AND \"Actual Delivery Date\" IS NOT NULL)\n/ COUNT (CASE_ID) FILTER (\n    WHERE \"Actual Delivery Date\" IS NOT NULL)\n    * 100\nFROM \"defaultview-183\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n\nCOUNT (CASE_ID) FILTER (\n    WHERE \"Actual Delivery Date\" = \"Scheduled Finish Date\"\n    AND \"Actual Delivery Date\" IS NOT NULL)\n/ COUNT (CASE_ID) FILTER (\n    WHERE \"Actual Delivery Date\" IS NOT NULL)\n    * 100\nFROM \"defaultview-183\""
    },
    {
        "filename": "a24472f64b",
        "split": "test",
        "name": "Total overdue invoice amounts",
        "query": "\nSELECT\nSUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER(\n\t WHERE (\"AR_LastClearingDate\" IS NULL)\n\t\t AND \"AR_LastNetDueDate\" < DATE_TRUNC('day', NOW())\n\t)\nFROM \"defaultview-222\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-222', select the sum of the 'AR_InvoicedAmountInGlobalCurrency' column where 'AR_LastClearingDate' is null and 'AR_LastNetDueDate' is before the truncated current date. This sums the invoiced amounts for open invoices.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  SUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER (\n    WHERE\n      \"AR_LastClearingDate\" IS NULL\n      AND \"AR_LastNetDueDate\" < DATE_TRUNC('day', NOW()) )\nFROM\n  \"defaultview-222\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  SUM(\"AR_InvoicedAmountInGlobalCurrency\") FILTER (\n    WHERE\n      \"AR_LastClearingDate\" IS NULL\n      AND \"AR_LastNetDueDate\" < DATE_TRUNC('day', NOW()) )\nFROM\n  \"defaultview-222\""
    },
    {
        "filename": "0c18038530",
        "split": "test",
        "name": "Number\u00a0of\u00a0Process\u00a0orders\u00a0\u200b grouped by PO Material Text",
        "query": "SELECT COUNT (CASE_ID) AS \"# Process Orders\", \"Material Text\"\nFROM \"defaultview-183\"\nGROUP BY 2\norder by 1 desc",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', group the rows by the 'Material Text' column. For each group, count the number of rows and store this count in a column named '# Process Orders'. Then sort the groups in descending order by the '# Process Orders' column and return the '# Process Orders' and 'Material Text' columns.",
        "llm_gpt-35-turbo-0613_query": "SELECT \ncount(case_id) as \"# Process Orders\",\n\"Material Text\"\n\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 desc\n\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \ncount(case_id) as \"# Process Orders\",\n\"Material Text\"\n\nFROM \"defaultview-183\"\nGROUP BY 2\nORDER BY 1 desc\n\n\n"
    },
    {
        "filename": "9b703e674b",
        "split": "test",
        "name": "\u2300 Create Process \u00a0\u2192 Delivered or Technically Completed",
        "query": "SELECT avg(\n(Select last(end_time) Filter(\nWhere event_name IN ('Delivered', 'Technically Completed')))\n-\n(Select first(end_time) Filter(\nWhere event_name IN ('Create Process Order')))\n) \nFROM \"defaultview-183\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', calculate the average time difference between the last end_time when the event_name is 'Delivered' or 'Technically Completed', and the first end_time when the event_name is 'Create Process Order'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) WHERE event_name IN ('Delivered', 'Technically Completed')))\n-\n(SELECT FIRST(end_time) WHERE event_name IN ('Create Process Order'))\nFROM \"defaultview-183\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nAVG(\n\t(SELECT LAST(end_time) WHERE event_name IN ('Delivered', 'Technically Completed')))\n-\n(SELECT FIRST(end_time) WHERE event_name IN ('Create Process Order'))\nFROM \"defaultview-183\"\n                "
    },
    {
        "filename": "afc16d1b66",
        "split": "test",
        "name": "Average number of rework on issues with rework",
        "query": "SELECT AVG(\n\t(SELECT COUNT(event_name) \n     WHERE event_name = 'Change Status to In Progress')\n   ) -1\nFROM \"defaultview-217\"\nWHERE (SELECT count(event_name) WHERE event_name IN ('Change Status to In Review')) >1",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-217', calculate the average of the following: Count the number of rows where the 'event_name' column equals 'Change Status to In Progress', then subtract 1 from that count. Only include rows where the count of rows with 'event_name' equal to 'Change Status to In Review' is greater than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nAVG((SELECT COUNT(NULL)\n\tFILTER (WHERE event_name = 'Change Status to In Progress'))\n-1)\nFROM \"defaultview-217\"\nWHERE (SELECT COUNT(event_name) FILTER (\n\t\t\tWHERE event_name = 'Change Status to In Review')) > 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nAVG((SELECT COUNT(NULL)\n\tFILTER (WHERE event_name = 'Change Status to In Progress'))\n-1)\nFROM \"defaultview-217\"\nWHERE (SELECT COUNT(event_name) FILTER (\n\t\t\tWHERE event_name = 'Change Status to In Review')) > 1"
    },
    {
        "filename": "e454fa513b",
        "split": "test",
        "name": "Percentage of products with considerable forecast override",
        "query": "SELECT\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE( \n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) > 20\n\tOR\n\t\t(((\"Consensus Demand Plan Qty\" - \"Statistical Fcst Qty\") \n\t\t/\n\t\t\"Statistical Fcst Qty\") * 100\n\t\t) < -20\n\t)\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"Statistical Fcst Qty\" > 0\n\tAND \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t) * 24.98\nFROM \"defaultview-404\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-404', calculate the percentage of distinct 'Product ID' values where the absolute percentage difference between 'Consensus Demand Plan Qty' and 'Statistical Fcst Qty' is greater than 20% for 'MONTH' values between the current month and 320 days from now. Divide this by the count of distinct 'Product ID' values where 'Statistical Fcst Qty' is greater than 0 for the same 'MONTH' range, and multiply the result by 24.98.",
        "llm_gpt-35-turbo-0613_query": "SELECT  \nCOUNT(DISTINCT \"Product ID\") FILTER (WHERE \n(ABS ((SELECT LAST(\"Product-SStatistical Fcst Qty\") \nWHERE event_name = 'Statistical FCST Update') \n- (SELECT LAST(\"Product-SConsensus Demand Plan Qty\") \nWHERE event_name = 'Statistical FCST Update')) \n/ (SELECT LAST(\"Product-SStatistical Fcst Qty\") \nWHERE event_name = 'Statistical FCST Update')) \n>= 0.2 AND \"CountInMonths\" < 4 * 80 \nAS \"4-4mths\"  \n) / COUNT(DISTINCT \"Product ID\") FILTER (  \n\tWHERE  (\"Product-SStatistical Fcst Qty\" \n    > 0) AND (\"CountInMonths\" < 4 * 80)\n   ) * 24.98\nFROM \"defaultview-404\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT  \nCOUNT(DISTINCT \"Product ID\") FILTER (WHERE \n(ABS ((SELECT LAST(\"Product-SStatistical Fcst Qty\") \nWHERE event_name = 'Statistical FCST Update') \n- (SELECT LAST(\"Product-SConsensus Demand Plan Qty\") \nWHERE event_name = 'Statistical FCST Update')) \n/ (SELECT LAST(\"Product-SStatistical Fcst Qty\") \nWHERE event_name = 'Statistical FCST Update')) \n>= 0.2 AND \"CountInMonths\" < 4 * 80 \nAS \"4-4mths\"  \n) / COUNT(DISTINCT \"Product ID\") FILTER (  \n\tWHERE  (\"Product-SStatistical Fcst Qty\" \n    > 0) AND (\"CountInMonths\" < 4 * 80)\n   ) * 24.98\nFROM \"defaultview-404\""
    },
    {
        "filename": "8296553520",
        "split": "test",
        "name": "No. of Invoices with Multiple Payment Term Change Events",
        "query": "SELECT\nCOUNT(CASE_ID)\nFROM\n(\n SELECT\n  COUNT(CASE_ID) AS \"CASE_COUNT\", CASE_ID, EVENT_NAME\n FROM FLATTEN(\"defaultview-225\")\n WHERE\n  (\"Changed Table\" IN ('EKKO','BSEG'))\n  AND (\"Changed Field\" IN  ('ZTERM', 'ZTERM', 'ZBD1T','ZBD2T','ZBD3T', 'ZBD1P', 'ZBD2P'))\n GROUP BY 2,3\n) AS SUB1\nWHERE \"CASE_COUNT\" > 1",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, from the table 'defaultview-225', select the columns CASE_ID and EVENT_NAME where Changed Table is either 'EKKO' or 'BSEG' and Changed Field is one of 'ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', or 'ZBD2P'. Group the results by CASE_ID and EVENT_NAME and count the number of rows for each group, storing the count as CASE_COUNT. Then, from these grouped results, count the number of groups where CASE_COUNT is greater than 1.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tcount(CASE_NAME)\nFROM\n(\nSELECT \n\tCASE_ID, \n\t\"Changed Field\",\n    EVENT_NAME, \n    CASE_NAME,\n    COUNT(EVENT_NAME) OVER (PARTITION BY CASE_NAME) as \"Case Count\"\nFROM FLATTEN(\"defaultview-225\")\n-- WHERE \"Case Count\" > 1\nWHERE (\"Changed Table\" IN ('EKKO', 'BSEG'))\nAND (\"Changed Field\" IN('ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', 'ZBD2P')))\nAS cases\nWHERE \"Case Count\" > 1",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tcount(CASE_NAME)\nFROM\n(\nSELECT \n\tCASE_ID, \n\t\"Changed Field\",\n    EVENT_NAME, \n    CASE_NAME,\n    COUNT(EVENT_NAME) OVER (PARTITION BY CASE_NAME) as \"Case Count\"\nFROM FLATTEN(\"defaultview-225\")\n-- WHERE \"Case Count\" > 1\nWHERE (\"Changed Table\" IN ('EKKO', 'BSEG'))\nAND (\"Changed Field\" IN('ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', 'ZBD2P')))\nAS cases\nWHERE \"Case Count\" > 1"
    },
    {
        "filename": "a8599a428f",
        "split": "test",
        "name": "#\u00a0Process\u00a0Orders\u00a0without\u00a0business\u00a0complete\u00a0",
        "query": "SELECT count(case_id) \nFROM \"defaultview-183\"\nWHERE not event_name MATCHES ('Confirmed')",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', count the number of rows where the value in the 'event_name' column does not contain the text 'Confirmed'.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT(event_name) FILTER (\n\tWHERE event_name NOT LIKE '%Confirmed%'\n)\nFROM \"defaultview-183\"\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT(event_name) FILTER (\n\tWHERE event_name NOT LIKE '%Confirmed%'\n)\nFROM \"defaultview-183\"\n"
    },
    {
        "filename": "a646885e92",
        "split": "test",
        "name": "Number of Completed SLAs",
        "query": "SELECT SUM(\"SLA Count Completed\") FROM \"defaultview-370\"",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-370', get the sum of all values in the column 'SLA Count Completed'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \n\tSUM(\"SLA Count Completed\")\nFROM \"defaultview-370\"",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \n\tSUM(\"SLA Count Completed\")\nFROM \"defaultview-370\""
    },
    {
        "filename": "08f340e540",
        "split": "test",
        "name": "Count of Cases per Activity",
        "query": "SELECT case_id, \"Request Type\",\n\"EVENT_NAME\" AS \"Activities\",\n(SELECT COUNT (\"EVENT_NAME\")) AS \"Number of Cases per Event\"\nFROM \"defaultview-299\"\nORDER BY 4 DESC\nLIMIT 5",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-299', select the columns 'case_id', 'Request Type', and 'EVENT_NAME' aliased as 'Activities'. Also select the count of 'EVENT_NAME' aliased as 'Number of Cases per Event'. Order the results by 'Number of Cases per Event' in descending order and limit to the top 5 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT case_id, \"FORMAT\", EVENT_NAME AS \"Activities\",\nCOUNT(event_name) OVER () AS \"Number of Cases per Event\"\nFROM FLATTEN(\"defaultview-299\")\nORDER BY 4 DESC\nLIMIT 5\n\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT case_id, \"FORMAT\", EVENT_NAME AS \"Activities\",\nCOUNT(event_name) OVER () AS \"Number of Cases per Event\"\nFROM FLATTEN(\"defaultview-299\")\nORDER BY 4 DESC\nLIMIT 5\n\n"
    },
    {
        "filename": "7dc7833543",
        "split": "test",
        "name": "Invoices waiting for Goods Receipt",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE NOT (event_name MATCHES('Receive PO item'))\n\tAND (event_name MATCHES(('Receive Invoice'|'Reconcile Invoice')))\n\t)\nFROM \"defaultview-545\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-545', count the number of case_id values where the event_name does not match 'Receive PO item' and the event_name matches either 'Receive Invoice' or 'Reconcile Invoice'.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (CASE_ID)\nFROM \"defaultview-545\"\nWHERE\nevent_name NOT MATCHES ('Receive PO item') \nAND event_name MATCHES ('Receive Invoice'| 'Reconcile Invoice')",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (CASE_ID)\nFROM \"defaultview-545\"\nWHERE\nevent_name NOT MATCHES ('Receive PO item') \nAND event_name MATCHES ('Receive Invoice'| 'Reconcile Invoice')"
    },
    {
        "filename": "d7aec6e338",
        "split": "test",
        "name": "\u2300 Time before scheduled release ",
        "query": "SELECT avg(\"Scheduled Release Date\" - \"Actual Release Date\")\nFROM \"defaultview-183\"\nWHERE \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds'",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-183', select the average of the difference between the 'Scheduled Release Date' and 'Actual Release Date' columns, but only for rows where the difference is greater than 0 seconds.",
        "llm_gpt-35-turbo-0613_query": "SELECT AVG(\n\t\"Scheduled Release Date\" - \"Actual Release Date\") \n   \nFROM \"defaultview-183\"\nWHERE(\"Scheduled Release Date\" - \"Actual Release Date\") > DURATION '0seconds'",
        "llm_gpt-35-turbo-0613_full_output": "SELECT AVG(\n\t\"Scheduled Release Date\" - \"Actual Release Date\") \n   \nFROM \"defaultview-183\"\nWHERE(\"Scheduled Release Date\" - \"Actual Release Date\") > DURATION '0seconds'"
    },
    {
        "filename": "6f5fbcc69b",
        "split": "test",
        "name": "Copy of Open POs without GRN ( > 45 Days)",
        "query": "SELECT COUNT (\"case_id\") AS \"Cases\"\nFROM \"defaultview-124\"\nWHERE\n(NOW() - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO')) > DURATION '45DAYS'",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', count the number of unique values in the 'case_id' column and alias it as 'Cases'. Only include rows where the current date/time minus 45 days is greater than the latest 'END_TIME' value where 'EVENT_NAME' equals 'Release PO'.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT(DISTINCT case_id) AS \"Cases\"\nFROM \"defaultview-124\"\nWHERE\n(SELECT (NOW()) - (SELECT (NOW()) WHERE EVENT_NAME = 'Release PO') FILTER\n(WHERE (SELECT (NOW()) WHERE EVENT_NAME = 'Release PO') IS NOT NULL))\n> DURATION '45DAYS'\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT(DISTINCT case_id) AS \"Cases\"\nFROM \"defaultview-124\"\nWHERE\n(SELECT (NOW()) - (SELECT (NOW()) WHERE EVENT_NAME = 'Release PO') FILTER\n(WHERE (SELECT (NOW()) WHERE EVENT_NAME = 'Release PO') IS NOT NULL))\n> DURATION '45DAYS'\n"
    },
    {
        "filename": "c77441d9cc",
        "split": "test",
        "name": "Percent of cases affected by rework",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM(SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100\nFROM \"defaultview-124\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, from the table 'defaultview-124', count the total number of case_id values. Then, check if there are any event_name values that occur more than once, by using a subquery to count the occurrence of each event_name and seeing if any are greater than 1. If there are any event_names occurring more than once, return true. Use BOOL_OR to check if any of these subquery checks returned true. Finally, filter the initial case_id count to only those rows where the event_name occurrence check returned true. Divide this filtered count by the total case_id count and multiply by 100 to get the percentage of cases where an event occurred more than once.",
        "llm_gpt-35-turbo-0613_query": "\nWITH \n\"Cases\" AS (\nSELECT\nCOUNT(\"case_id\") as \"Total cases\"\nFROM \"defaultview-124\"\n),\n\n\"Events\" AS (SELECT\nCOUNT (\"event_name\") FILTER (\n\tWHERE (SELECT COUNT (\"event_name\") > 1)) / COUNT (\"event_name\") * 100\n\n\t\tAS \"Cases where event occured more than once\"\n\nFROM\n(SELECT DISTINCT \"event_name\",\n                 (SELECT COUNT(\"event_name\")) AS \"Counter\"\n\t\t FROM FLATTEN(\"defaultview-124\" , \"event_name\")\n\t\t ) AS FLATTEN_sub\n),\n\n\n\"Cases where event occured more than once\" AS (\nSELECT \n\"Cases where event occured more than once\"\nFROM \"Events\"\n)\n\nSELECT\n\"Total cases\" / NULLIF(\"Cases where event occured more than once\", 0) * 100\nFROM \"Cases\", \"Cases where event occured more than once\"\n                    \n    \n                    \n    \n                    \n    \n                    \n    \n                    ",
        "llm_gpt-35-turbo-0613_full_output": "\nWITH \n\"Cases\" AS (\nSELECT\nCOUNT(\"case_id\") as \"Total cases\"\nFROM \"defaultview-124\"\n),\n\n\"Events\" AS (SELECT\nCOUNT (\"event_name\") FILTER (\n\tWHERE (SELECT COUNT (\"event_name\") > 1)) / COUNT (\"event_name\") * 100\n\n\t\tAS \"Cases where event occured more than once\"\n\nFROM\n(SELECT DISTINCT \"event_name\",\n                 (SELECT COUNT(\"event_name\")) AS \"Counter\"\n\t\t FROM FLATTEN(\"defaultview-124\" , \"event_name\")\n\t\t ) AS FLATTEN_sub\n),\n\n\n\"Cases where event occured more than once\" AS (\nSELECT \n\"Cases where event occured more than once\"\nFROM \"Events\"\n)\n\nSELECT\n\"Total cases\" / NULLIF(\"Cases where event occured more than once\", 0) * 100\nFROM \"Cases\", \"Cases where event occured more than once\"\n                    \n    \n                    \n    \n                    \n    \n                    \n    \n                    "
    },
    {
        "filename": "f030043950",
        "split": "test",
        "name": "Early Release with System / Batch User & Planned Order Reference",
        "query": "SELECT count(case_id) Filter( \nWhere \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND \"Event Created By User Type\" NOT in ('Dialog') AND event_name = 'Released' )\n/\ncount(case_id) Filter(Where \"Scheduled Release Date\" - \"Actual Release Date\" > DURATION '0seconds' AND event_name = 'Released') *100\nFROM FLATTEN(\"defaultview-183\")\nWHERE \"Planned Order Number\" IS NOT NULL\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, from the 'defaultview-183' table where 'Planned Order Number' column is not null, filter the rows where the difference between 'Scheduled Release Date' and 'Actual Release Date' columns is greater than 0 seconds and 'Event Created By User Type' column value is not 'Dialog' and 'event_name' column value is 'Released'. Count the 'case_id' values in this filtered resultset. \n\nSecond, from the 'defaultview-183' table where 'Planned Order Number' column is not null, filter the rows where the difference between 'Scheduled Release Date' and 'Actual Release Date' columns is greater than 0 seconds and 'event_name' column value is 'Released'. Count the 'case_id' values in this filtered resultset.\n\nFinally, divide the first count by the second count, and multiply by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT (case_id) \nFILTER (WHERE (\n\t\t\"Scheduled Release Date\" - \"Actual Release Date\") \n\t\t> DURATION '0seconds' \n        AND \"Event Created By User Type\" <> 'Dialog'\n        AND event_name = 'Released') \n/ \nCOUNT (case_id) \nFILTER (WHERE (\n\t\t\"Scheduled Release Date\" - \"Actual Release Date\") \n\t\t> DURATION '0seconds' \n        AND event_name = 'Released') \n* 100\nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NOT NULL",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT (case_id) \nFILTER (WHERE (\n\t\t\"Scheduled Release Date\" - \"Actual Release Date\") \n\t\t> DURATION '0seconds' \n        AND \"Event Created By User Type\" <> 'Dialog'\n        AND event_name = 'Released') \n/ \nCOUNT (case_id) \nFILTER (WHERE (\n\t\t\"Scheduled Release Date\" - \"Actual Release Date\") \n\t\t> DURATION '0seconds' \n        AND event_name = 'Released') \n* 100\nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NOT NULL"
    },
    {
        "filename": "4f5797f512",
        "split": "test",
        "name": "Return rate",
        "query": "\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE event_name IN ('Create Return Sales Order Item','Create Returns Delivery')) > 0\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-290\"\n                ",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-290' table, count the number of 'case_id' values where the count of 'event_name' values that are 'Create Return Sales Order Item' or 'Create Returns Delivery' is greater than 0, divide this count by the total count of 'case_id' values, and multiply the result by 100 to get the percentage.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (SELECT COUNT (EVENT_NAME)\n    \tWHERE EVENT_NAME IN (\n        \t'Create Return Sales Order Item',\n            'Create Returns Delivery')) > 0)\n\t) /\n\t\nCOUNT (CASE_ID)\n*100\nFROM \"defaultview-290\"\n                ",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\nCOUNT (CASE_ID) FILTER (\n\tWHERE (SELECT COUNT (EVENT_NAME)\n    \tWHERE EVENT_NAME IN (\n        \t'Create Return Sales Order Item',\n            'Create Returns Delivery')) > 0)\n\t) /\n\t\nCOUNT (CASE_ID)\n*100\nFROM \"defaultview-290\"\n                "
    },
    {
        "filename": "f16c619f2a",
        "split": "test",
        "name": "No. of Cases & Avg. Cycle Time (Receive to Approve Invoice) by PO Supplier (Top 25) - Without POs",
        "query": "SELECT \nCOUNT(CASE_ID) AS \"No. of Cases\",\nAVG ((SELECT LAST (END_TIME) WHERE EVENT_NAME = 'Approve Invoice') - (SELECT FIRST (END_TIME) WHERE EVENT_NAME = 'Receive invoice')) AS \"Avg. Cycle Time\",\n\"PO Item Supplier ID\"\nFROM \"defaultview-545\"\nORDER BY 1 DESC\nLIMIT 25",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "First, from the 'defaultview-545' table, select the COUNT of CASE_ID column and name it 'No. of Cases'. Also select the AVG of the difference between the LAST END_TIME where EVENT_NAME is 'Approve Invoice' and the FIRST END_TIME where EVENT_NAME is 'Receive invoice'. Name this column 'Avg. Cycle Time'. Finally, select the 'PO Item Supplier ID' column. Order the results by 'No. of Cases' in descending order and limit to the top 25 rows.",
        "llm_gpt-35-turbo-0613_query": "\nSELECT\n  COUNT (CASE_ID) AS \"No. of Cases\",\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME = 'Approve Invoice')\n      - SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME = 'Receive invoice')\n    )\n  ) AS \"Avg. Cycle Time\",\n  \"PO Item Supplier ID\" \nFROM\n  \"defaultview-545\"\nORDER BY\n  1 DESC\nLIMIT\n  25\n  OFFSET 0\n",
        "llm_gpt-35-turbo-0613_full_output": "\nSELECT\n  COUNT (CASE_ID) AS \"No. of Cases\",\n  AVG (\n    (\n      SELECT\n        LAST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME = 'Approve Invoice')\n      - SELECT\n        FIRST (END_TIME) FILTER (\n          WHERE\n            EVENT_NAME = 'Receive invoice')\n    )\n  ) AS \"Avg. Cycle Time\",\n  \"PO Item Supplier ID\" \nFROM\n  \"defaultview-545\"\nORDER BY\n  1 DESC\nLIMIT\n  25\n  OFFSET 0\n"
    },
    {
        "filename": "897f3b1354",
        "split": "test",
        "name": "No. of Open POs (without GRN) & PO Value by PO Item Plant",
        "query": "SELECT \nCOUNT (\"case_id\") AS \"No. of Cases\", \nSUM(\"PO Item Net Order Value\") AS \"Total PO Value\", \n\"PO Item Plant\"\nFROM \"defaultview-124\"\nORDER BY 1 DESC\n",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the table 'defaultview-124', select the count of values in the 'case_id' column as 'No. of Cases', the sum of values in the 'PO Item Net Order Value' column as 'Total PO Value', and the values in the 'PO Item Plant' column. Order the results by 'No. of Cases' in descending order.",
        "llm_gpt-35-turbo-0613_query": "SELECT\n  COUNT(\"case_id\") AS \"No. of Cases\",\n  SUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n  \"PO Item Plant\"\nFROM\n  \"defaultview-124\"\nORDER BY\n  1 DESC",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\n  COUNT(\"case_id\") AS \"No. of Cases\",\n  SUM(\"PO Item Net Order Value\") AS \"Total PO Value\",\n  \"PO Item Plant\"\nFROM\n  \"defaultview-124\"\nORDER BY\n  1 DESC"
    },
    {
        "filename": "2952d1e1d0",
        "split": "test",
        "name": "Open Overdue Receivables by Project Manager (Top 10)",
        "query": "SELECT COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME = 'Create Accounts Receivable' \nAND ClearingJournalEntry IS NULL\nAND (NOW()-NetDueDate)> DURATION '15day')\nas \"#Receivables\" , \n \"Project_Manager\"  as \"Project Manager\"\nFROM FLATTEN(\"defaultview-197\")\nGROUP BY 2\nORDER By 1 DESC\nLIMIT 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "From the 'defaultview-197' table, select the count of distinct ARUniqueKey values where EVENT_NAME is 'Create Accounts Receivable' and ClearingJournalEntry is null and the difference between NOW() and NetDueDate is greater than 15 days. Alias this count as '#Receivables'. Also select the 'Project_Manager' column and alias it as 'Project Manager'. Group the results by 'Project Manager' and order them descending by '#Receivables'. Limit the results to the top 10 rows.",
        "llm_gpt-35-turbo-0613_query": "SELECT \nCOUNT (DISTINCT \"ARUniqueKey\") AS \"#Receivables\", \n\"Project_Manager\" AS \"Project Manager\"\nFROM \"defaultview-197\"\nWHERE EVENT_NAME ='Create Accounts Receivable' AND ClearingJournalEntry IS NULL\nAND (NOW() - NetDueDate) > DURATION '15days'  \nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT \nCOUNT (DISTINCT \"ARUniqueKey\") AS \"#Receivables\", \n\"Project_Manager\" AS \"Project Manager\"\nFROM \"defaultview-197\"\nWHERE EVENT_NAME ='Create Accounts Receivable' AND ClearingJournalEntry IS NULL\nAND (NOW() - NetDueDate) > DURATION '15days'  \nGROUP BY 2\nORDER BY 1 DESC\nLIMIT 10\n"
    },
    {
        "filename": "e0ae4c7960",
        "split": "test",
        "name": "Top 10 Customers with the highest amount of invoice item changes",
        "query": "SELECT COUNT (\"event_name\") FILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n 'Change Invoice%' OR event_name LIKE 'Create Invoice Item Cancellation%' OR event_name LIKE 'Update Invoice%') AS created_with_dialog MATCHES (created_with_dialog)),\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nGROUP BY 2\norder by 1 desc\nLimit 10",
        "llm_name": "signal_description_anthropic-claude-v2",
        "description_llm": "The query is selecting the count of event_name column from the defaultview-290 table where the event_name value matches the pattern 'Change Invoice%', 'Create Invoice Item Cancellation%' or 'Update Invoice%'. It groups the results by the SalesDocCustomerCompany column and orders the counts in descending order. Only the top 10 results are returned.",
        "llm_gpt-35-turbo-0613_query": "SELECT\nCOUNT(event_name) \nFILTER (WHERE event_name \n    MATCHES('Change Invoice%'\n    OR 'Create Invoice Item Cancellation%'\n    OR'Update Invoice%')\n))\n\nAS \"Invoice Changes\", \n\"SalesDocCustomerCompany\"\n\nFROM \"defaultview-290\"\nORDER BY 1 DESC\nLIMIT 10\n",
        "llm_gpt-35-turbo-0613_full_output": "SELECT\nCOUNT(event_name) \nFILTER (WHERE event_name \n    MATCHES('Change Invoice%'\n    OR 'Create Invoice Item Cancellation%'\n    OR'Update Invoice%')\n))\n\nAS \"Invoice Changes\", \n\"SalesDocCustomerCompany\"\n\nFROM \"defaultview-290\"\nORDER BY 1 DESC\nLIMIT 10\n"
    }
]