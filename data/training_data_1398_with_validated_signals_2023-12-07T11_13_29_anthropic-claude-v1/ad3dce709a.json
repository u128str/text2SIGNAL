{"signal_description": "Calculate the average number of 'Update Payment Term' events across all process instances in the 'defaultview-59' table. This is done by first counting the number of 'Update Payment Term' events for each process instance using a subquery. The subquery filters to only count events where the event_name is 'Update Payment Term'. The counts from each process instance are then averaged to get the final result.", "llm_output": " {\n\"signal_description\": \"Calculate the average number of 'Update Payment Term' events across all process instances in the 'defaultview-59' table. This is done by first counting the number of 'Update Payment Term' events for each process instance using a subquery. The subquery filters to only count events where the event_name is 'Update Payment Term'. The counts from each process instance are then averaged to get the final result.\" \n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\nAVG(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE event_name IN ('Update Payment Term'))))\nFROM \"defaultview-59\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}