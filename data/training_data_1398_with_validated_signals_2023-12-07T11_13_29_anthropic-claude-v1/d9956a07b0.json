{"signal_description": "Count all the cases in the table 'defaultview-545' where the column 'PO Item Line Type' has the value 'Catalog'. Store this count in a column named '% of Catalog Puchases'. To get this count, first select all distinct case IDs from the table and store them in a column named 'All Cases'. Then, select only those case IDs where the column 'PO Item Line Type' has the value 'Catalog' and store them in a column named 'Catalog Cases'. Finally, divide the count of 'Catalog Cases' by the count of 'All Cases' and multiply by 100 to get the percentage.", "llm_output": " {\n\"signal_description\": \"Count all the cases in the table 'defaultview-545' where the column 'PO Item Line Type' has the value 'Catalog'. Store this count in a column named '% of Catalog Puchases'. To get this count, first select all distinct case IDs from the table and store them in a column named 'All Cases'. Then, select only those case IDs where the column 'PO Item Line Type' has the value 'Catalog' and store them in a column named 'Catalog Cases'. Finally, divide the count of 'Catalog Cases' by the count of 'All Cases' and multiply by 100 to get the percentage.\"  \n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n(COUNT(\"Catalog Cases\")/COUNT(\"All Cases\")) * 100 AS \"% of Catalog Puchases\"\nFROM\n(\n SELECT DISTINCT\n  \"CASE_ID\" AS \"All Cases\",\n  CASE WHEN \"PO Item Line Type\" = 'NonCatalog' THEN \"CASE_ID\" ELSE NULL END AS \"Catalog Cases\"\n FROM FLATTEN(\"defaultview-545\")\n)AS SUB\n--WHERE ((SELECT LAST (DATE_TRUNC('DAY', END_TIME))) >= DATE '2022-01-01' AND (SELECT FIRST (DATE_TRUNC('DAY', END_TIME))) <= DATE '2022-06-30') AND (\"PO Item Line Type\" IN ('Catalog'))\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}