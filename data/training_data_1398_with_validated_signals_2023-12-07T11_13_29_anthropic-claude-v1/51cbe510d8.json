{"signal_description": "Select distinct rows from the defaultview-222 table where the event_name column contains values starting with 'Clear'. \nFor each row, calculate the row number within each unique case_id value and store it in the # column. \nAlso select the case_id, AR_Customer, AR_CustomerName, end_time, AccountingDocument, ClearingDate - DocumentDate as Clearing Time, \nand a Late Payment Category column which will be 'Paid Late' if ClearingDate - NetDueDate is greater than 1 day, else 'Paid On Time'.\nSelect NetDueDate - DocumentDate as Net Payment Terms, ClearingDate - NetDueDate as Paid Late Days, \nAccountingDocumentItem, LedgerGLLineItem, CompanyCode, FiscalYear, AmountInTransactionCurrency, TransactionCurrency, \nAmountInCompanyCodeCurrency, CompanyCodeCurrency, NetDueDate, CreationDateTime, DocumentDate, PostingDate, ClearingDate, \nClearingJournalEntry, ClearingJournalEntryFiscalYear, and BillingDocument columns.\nOrder the results by case_id and #.", "llm_output": " {\n\"signal_description\": \"Select distinct rows from the defaultview-222 table where the event_name column contains values starting with 'Clear'. \nFor each row, calculate the row number within each unique case_id value and store it in the # column. \nAlso select the case_id, AR_Customer, AR_CustomerName, end_time, AccountingDocument, ClearingDate - DocumentDate as Clearing Time, \nand a Late Payment Category column which will be 'Paid Late' if ClearingDate - NetDueDate is greater than 1 day, else 'Paid On Time'.\nSelect NetDueDate - DocumentDate as Net Payment Terms, ClearingDate - NetDueDate as Paid Late Days, \nAccountingDocumentItem, LedgerGLLineItem, CompanyCode, FiscalYear, AmountInTransactionCurrency, TransactionCurrency, \nAmountInCompanyCodeCurrency, CompanyCodeCurrency, NetDueDate, CreationDateTime, DocumentDate, PostingDate, ClearingDate, \nClearingJournalEntry, ClearingJournalEntryFiscalYear, and BillingDocument columns.\nOrder the results by case_id and #.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT  DISTINCT \nrow_number(AccountingDocument) OVER (PARTITION BY case_id) AS \"#\"\n    ,\"case_id\" , \n    \"AR_Customer\" as \"Customer Number\", \n    \"AR_CustomerName\" AS \"Customer\",\n    \"end_time\"  as \"Creation Time\",\n    AccountingDocument,\n    \"ClearingDate\" - \"DocumentDate\" \nAs \"Clearing Time\",\nCASE WHEN  (ClearingDate   - NetDueDate)  > DURATION '1day' THEN 'Paid Late'\nELSE 'Paid On Time' END AS \"Late Payment Category\",\n\n\"NetDueDate\" - \"DocumentDate\" As \"Net Payment Terms\",\n\n\"ClearingDate\" - \"NetDueDate\" AS \"Paid Late Days\",\n    AccountingDocumentItem,\n    LedgerGLLineItem,\n    CompanyCode,\n    FiscalYear,\n   \n   AmountInTransactionCurrency,\n    TransactionCurrency,\n    AmountInCompanyCodeCurrency,\n    CompanyCodeCurrency,\n    NetDueDate,\n    CreationDateTime,\n    DocumentDate,\n  \"PostingDate\" ,\n    ClearingDate,\n    ClearingJournalEntry,\n    ClearingJournalEntryFiscalYear,\n    \n      BillingDocument\nFROM FLATTEN(\"defaultview-222\")\nWHERE event_name LIKE 'Clear%'\nORDER BY 2,1 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}