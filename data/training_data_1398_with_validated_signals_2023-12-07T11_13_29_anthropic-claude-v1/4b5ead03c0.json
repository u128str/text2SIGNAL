{"signal_description": "Count the number of process orders created in the defaultview-183 table. Group the count by Plant column values. For each Plant value, show the count of process orders created with a Planned Order Number and without a Planned Order Number. Order the results by the count in descending order and show the top 10 rows.", "llm_output": " {\n\"signal_description\": \"Count the number of process orders created in the defaultview-183 table. Group the count by Plant column values. For each Plant value, show the count of process orders created with a Planned Order Number and without a Planned Order Number. Order the results by the count in descending order and show the top 10 rows.\" \n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT count(event_name) AS \"# Created Process Orders\" ,\n\"Plant\" ,\nif(\"Planned Order Number\" IS NULL, 'Without PO', 'With PO')\nFROM FLATTEN(\"defaultview-183\")\nWHERE  EVENT_NAME = 'Create Process Order'\nORDER BY 1 desc\nLIMIT 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}