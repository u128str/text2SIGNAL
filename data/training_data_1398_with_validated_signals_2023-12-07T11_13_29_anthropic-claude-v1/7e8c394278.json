{"signal_description": "For the table 'defaultview-222' with columns 'NetDueDate', 'AmountInGlobalCurrency' and 'event_name':\n\nCheck if the current date (NOW()) equals the NetDueDate. If so, set the 'Overdue Category' to '1. Due' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.\n\nElse, check if the current date minus the NetDueDate is between 0 and 7 days. If so, set the 'Overdue Category' to '2. 0-7 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.  \n\nElse, check if the current date minus the NetDueDate is between 8 and 14 days. If so, set the 'Overdue Category' to '3. 8-14 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.\n\nElse, check if the current date minus the NetDueDate is between 15 and 30 days. If so, set the 'Overdue Category' to '4. 15-30 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.  \n\nElse, check if the current date minus the NetDueDate is between 31 and 60 days. If so, set the 'Overdue Category' to '5. 31-60 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.  \n\nElse, check if the current date minus the NetDueDate is between 61 and 90 days. If so, set the 'Overdue Category' to '6. 61-90 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.  \n\nElse, set the 'Overdue Category' to '7. >90 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.\n\nOrder the results by the 'Overdue Category' in ascending order.", "llm_output": " {\n\"signal_description\": \"For the table 'defaultview-222' with columns 'NetDueDate', 'AmountInGlobalCurrency' and 'event_name':\n\nCheck if the current date (NOW()) equals the NetDueDate. If so, set the 'Overdue Category' to '1. Due' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.\n\nElse, check if the current date minus the NetDueDate is between 0 and 7 days. If so, set the 'Overdue Category' to '2. 0-7 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.  \n\nElse, check if the current date minus the NetDueDate is between 8 and 14 days. If so, set the 'Overdue Category' to '3. 8-14 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.\n\nElse, check if the current date minus the NetDueDate is between 15 and 30 days. If so, set the 'Overdue Category' to '4. 15-30 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.  \n\nElse, check if the current date minus the NetDueDate is between 31 and 60 days. If so, set the 'Overdue Category' to '5. 31-60 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.  \n\nElse, check if the current date minus the NetDueDate is between 61 and 90 days. If so, set the 'Overdue Category' to '6. 61-90 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.  \n\nElse, set the 'Overdue Category' to '7. >90 days' and sum the AmountInGlobalCurrency, storing the result in '#Receivables'.\n\nOrder the results by the 'Overdue Category' in ascending order.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \nCASE \n\nWHEN \n\t\t NOW() = NetDueDate THEN '1. Due'\n              \nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '0day'\n        AND  (NOW()-NetDueDate)<= DURATION '7day'\n        THEN '2. 0-7 days'\n        \nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '7day'\n        AND  (NOW()-NetDueDate)<= DURATION '14day'\n        THEN '3. 8-14 days'\nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '14day'\n        AND  (NOW()-NetDueDate)<= DURATION '30day'\n        THEN '4. 15-30 days'\nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '30day'\n        AND  (NOW()-NetDueDate)<= DURATION '60day'\n        THEN '5. 31-60 days'\n        \nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '60day'\n        AND  (NOW()-NetDueDate)<= DURATION '90day'\n        THEN '6. 61-90 days'\n        \nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '90day'\n        THEN '7. >90 days'\n        \nEND AS \"Overdue Category\",  SUM(\"AmountInGlobalCurrency\"  ) as \"#Receivables\"\nFROM FLATTEN (\"defaultview-222\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate \n ORDER BY 1 ASC\n  \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}