{"signal_description": "Select distinct rows from the defaultview-222 table where the event_name column has the value 'Create Accounts Receivable' and the ClearingJournalEntry column is null. For each row, calculate the row number within each case_id partition and return it as #. \nReturn the following columns:\nCompanyCode \ncase_id\nAR_Customer as Customer Number\nAR_CustomerName as Customer\nAR_CustomerPaymentTerms as Customer Payment Terms\nAR_TradingPartner as Trading Partner\nend_time as Creation Time\nAccountingDocument\nNetDueDate - DocumentDate as Net Payment Terms\n1 as Overdue? if Overdue Category != '0. Not Due' else null\nOverdue Category\nAccountingDocumentItem\nLedgerGLLineItem\nFiscalYear\nAmountInTransactionCurrency\nTransactionCurrency\nAmountInCompanyCodeCurrency\nCompanyCodeCurrency\nAmountInGlobalCurrency\nGlobalCurrency\nCreationDateTime\nDocumentDate\nNetDueDate\nBillingDocument\nClearingJournalEntry\nClearingDate\nOrder the results by the Net Payment Terms column in ascending order.", "llm_output": " {\n\"signal_description\": \"Select distinct rows from the defaultview-222 table where the event_name column has the value 'Create Accounts Receivable' and the ClearingJournalEntry column is null. For each row, calculate the row number within each case_id partition and return it as #. \nReturn the following columns:\nCompanyCode \ncase_id\nAR_Customer as Customer Number\nAR_CustomerName as Customer\nAR_CustomerPaymentTerms as Customer Payment Terms\nAR_TradingPartner as Trading Partner\nend_time as Creation Time\nAccountingDocument\nNetDueDate - DocumentDate as Net Payment Terms\n1 as Overdue? if Overdue Category != '0. Not Due' else null\nOverdue Category\nAccountingDocumentItem\nLedgerGLLineItem\nFiscalYear\nAmountInTransactionCurrency\nTransactionCurrency\nAmountInCompanyCodeCurrency\nCompanyCodeCurrency\nAmountInGlobalCurrency\nGlobalCurrency\nCreationDateTime\nDocumentDate\nNetDueDate\nBillingDocument\nClearingJournalEntry\nClearingDate\nOrder the results by the Net Payment Terms column in ascending order.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n    DISTINCT \n\trow_number(AccountingDocument) OVER (PARTITION BY case_id) AS \"#\",\n\tCompanyCode,\n    \"case_id\" , \n    \"AR_Customer\" AS \"Customer Number\",\n    \"AR_CustomerName\" AS \"Customer\",\n    \"AR_CustomerPaymentTerms\"  AS \"Customer Payment Terms\",\n     AR_TradingPartner as \"Trading Partner\",\n    \"end_time\"  as \"Creation Time\",\n    AccountingDocument,\n    \"NetDueDate\" - \"DocumentDate\" As \"Net Payment Terms\",\n    CASE WHEN \"Overdue Category\" != '0. Not Due' THEN 1 ELSE NULL END AS \"Overdue?\",\n    \"Overdue Category\",\n    AccountingDocumentItem,\n    LedgerGLLineItem,\n    FiscalYear,\n    AmountInTransactionCurrency,\n    TransactionCurrency,\n    AmountInCompanyCodeCurrency,\n    CompanyCodeCurrency,\n    \"AmountInGlobalCurrency\" ,\n    \"GlobalCurrency\" ,\n    CreationDateTime,\n    DocumentDate,\n\tNetDueDate,\n    BillingDocument,\n    ClearingJournalEntry,\n    ClearingDate\n   \nFROM FLATTEN(\"defaultview-222\")\nWHERE event_name = 'Create Accounts Receivable'\nAND ClearingJournalEntry IS NULL\nORDER BY  13 ASC \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}