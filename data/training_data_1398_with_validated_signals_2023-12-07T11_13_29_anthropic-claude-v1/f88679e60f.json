{"signal_description": "For the table 'defaultview-217':\n\n1. Calculate the average time between the last event 'Change Status to In Progress' and the first event 'Create Issue'. \n2. Calculate the average time between the last event 'Change Status to Closed' and the first event 'Create Issue'.\n3. Divide the result of step 1 by the result of step 2 and multiply by 100. Name this column 'Create => In Progress'.\n\n4. Calculate the average time between the last event 'Change Status to Ready for Review' and the last event 'Change Status to In Progress'.\n5. Calculate the average time between the last event 'Change Status to Closed' and the first event 'Create Issue'. \n6. Divide the result of step 4 by the result of step 5 and multiply by 100. Name this column 'In Progress => Ready for Review'.\n\n7. Calculate the average time between the last event 'Change Status to In Review' and the last event 'Change Status to Ready for Review'.\n8. Calculate the average time between the last event 'Change Status to Closed' and the first event 'Create Issue'.\n9. Divide the result of step 7 by the result of step 8 and multiply by 100. Name this column 'Ready for Review => In Review'.\n\n10. Calculate the average time between the last event 'Change Status to Closed' and the last event 'Change Status to In Review'.\n11. Calculate the average time between the last event 'Change Status to Closed' and the first event 'Create Issue'.\n12. Divide the result of step 10 by the result of step 11 and multiply by 100. Name this column 'In Review => Closed'.", "llm_output": " {\n\"signal_description\": \"For the table 'defaultview-217':\n\n1. Calculate the average time between the last event 'Change Status to In Progress' and the first event 'Create Issue'. \n2. Calculate the average time between the last event 'Change Status to Closed' and the first event 'Create Issue'.\n3. Divide the result of step 1 by the result of step 2 and multiply by 100. Name this column 'Create => In Progress'.\n\n4. Calculate the average time between the last event 'Change Status to Ready for Review' and the last event 'Change Status to In Progress'.\n5. Calculate the average time between the last event 'Change Status to Closed' and the first event 'Create Issue'. \n6. Divide the result of step 4 by the result of step 5 and multiply by 100. Name this column 'In Progress => Ready for Review'.\n\n7. Calculate the average time between the last event 'Change Status to In Review' and the last event 'Change Status to Ready for Review'.\n8. Calculate the average time between the last event 'Change Status to Closed' and the first event 'Create Issue'.\n9. Divide the result of step 7 by the result of step 8 and multiply by 100. Name this column 'Ready for Review => In Review'.\n\n10. Calculate the average time between the last event 'Change Status to Closed' and the last event 'Change Status to In Review'.\n11. Calculate the average time between the last event 'Change Status to Closed' and the first event 'Create Issue'.\n12. Divide the result of step 10 by the result of step 11 and multiply by 100. Name this column 'In Review => Closed'.\" \n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Progress')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) /\n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) * 100 AS \"Create => In Progress\",\n\n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Ready for Review')))\n    - (SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Progress')))) / \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) * 100 AS \"In Progress => Ready for Review\",\n        \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Review')))\n    - (SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Ready for Review')))) / \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) * 100 AS \"Ready for Review => In Review\",\n        \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Review')))) / \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) * 100 AS \"In Review => Closed\"\n\nFROM \"defaultview-217\"  \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}