{"signal_description": "Select the event_name as Variant, count the total number of events in the table as 'Number of Events', count the total number of cases as 'Number of Cases'. \nCalculate the average time between the last event of 'Change Status to In Progress' and the first event of 'Create Issue' as 'Create => In Progress'.\nCalculate the average time between the last event of 'Change Status to Ready for Review' and the first event of 'Change Status to In Progress' as 'In Progress => Ready for Review'.\nCalculate the average time between the last event of 'Change Status to Closed' and the first event of 'Change Status to Ready for Review' as 'In Review => Closed'.\nOrder the results by the 'Number of Cases' in descending order and limit to top 5 rows.", "llm_output": " {\n\"signal_description\": \"Select the event_name as Variant, count the total number of events in the table as 'Number of Events', count the total number of cases as 'Number of Cases'. \nCalculate the average time between the last event of 'Change Status to In Progress' and the first event of 'Create Issue' as 'Create => In Progress'.\nCalculate the average time between the last event of 'Change Status to Ready for Review' and the first event of 'Change Status to In Progress' as 'In Progress => Ready for Review'.\nCalculate the average time between the last event of 'Change Status to Closed' and the first event of 'Change Status to Ready for Review' as 'In Review => Closed'.\nOrder the results by the 'Number of Cases' in descending order and limit to top 5 rows.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\tevent_name AS Variant,\n    \n    (SELECT count(1)) AS \"Number of Events\",\n    count(1) AS \"Number of Cases\",\n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Progress')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) AS \"Create => In Progress\",\n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Ready for Review')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Progress')))) AS \"In Progress => Ready for Review\",\n        \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Ready for Review')))) AS \"In Review => Closed\"\n\nFROM \"defaultview-217\" \nORDER BY 3 DESC \nLIMIT 5 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}