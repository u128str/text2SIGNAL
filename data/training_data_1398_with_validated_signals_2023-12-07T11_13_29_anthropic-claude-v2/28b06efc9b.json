{"signal_description": "From the 'defaultview-222' table, select the 'AR_CompanyCode' column as 'Company Code', the 'AR_CustomerName' column as 'Customer', count the distinct 'ARUniqueKey' values as '# Overdue Receivables', case when the difference between NOW() and 'AR_CustomerLastDunningDate' is between 0 and 7 days then '2. 0-7 days', when between 8 and 14 days then '3. 8-14 days', when between 15 and 30 days then '4. 15-30 days', when between 31 and 60 days then '5. 31-60 days', when between 61 and 90 days then '6. 61-90 days', when greater than 90 days then '7. >90 days', else '1.No Dunning' end as 'Last Dunning Aging Category', the 'AR_CustomerLastDunningDate' column as 'Last Dunning Date' where 'NetDueDate' is not null and 'event_name' is 'Create Accounts Receivable' and 'ClearingDate' is null and NOW() is greater than or equal to 'NetDueDate', order by '# Overdue Receivables' descending and 'Customer' descending.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-222' table, select the 'AR_CompanyCode' column as 'Company Code', the 'AR_CustomerName' column as 'Customer', count the distinct 'ARUniqueKey' values as '# Overdue Receivables', case when the difference between NOW() and 'AR_CustomerLastDunningDate' is between 0 and 7 days then '2. 0-7 days', when between 8 and 14 days then '3. 8-14 days', when between 15 and 30 days then '4. 15-30 days', when between 31 and 60 days then '5. 31-60 days', when between 61 and 90 days then '6. 61-90 days', when greater than 90 days then '7. >90 days', else '1.No Dunning' end as 'Last Dunning Aging Category', the 'AR_CustomerLastDunningDate' column as 'Last Dunning Date' where 'NetDueDate' is not null and 'event_name' is 'Create Accounts Receivable' and 'ClearingDate' is null and NOW() is greater than or equal to 'NetDueDate', order by '# Overdue Receivables' descending and 'Customer' descending.\"\n}\n\nTo generate this summary, I first identified the main clauses of the SIGNAL query - the SELECT, FROM, WHERE, and ORDER BY clauses. I then summarized each clause in plain language, referring to the specific column names and values used. For the CASE expression, I spelled out each condition and result. I assembled the overall summary by combining the plain language descriptions of each clause into a coherent sentence.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\"AR_CompanyCode\" AS \"Company Code\",\nAR_CustomerName AS \"Customer\",\ncount(DISTINCT \"ARUniqueKey\" ) as \"# Overdue Receivables\",\nCASE \n\nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '0day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '7day'\n        THEN '2. 0-7 days'\n        \nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '7day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '14day'\n        THEN '3. 8-14 days'\nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '14day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '30day'\n        THEN '4. 15-30 days'\nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '30day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '60day'\n        THEN '5. 31-60 days'\n        \nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '60day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '90day'\n        THEN '6. 61-90 days'\n        \nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '90day'\n        THEN '7. >90 days'\nELSE '1.No Dunning'        \nEND AS \"Last Dunning Aging Category\"\n,AR_CustomerLastDunningDate AS \"Last Dunning Date\"\nFROM FLATTEN (\"defaultview-222\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate\n ORDER BY 3 DESC, 2 DESC \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}