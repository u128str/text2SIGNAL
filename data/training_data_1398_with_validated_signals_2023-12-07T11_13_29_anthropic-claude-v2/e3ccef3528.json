{"signal_description": "From the 'defaultview-183' table, select all rows where the 'Planned Order Number' column is not null. Then, count the number of rows where the value in the 'Actual Delivery Date' column is greater than the value in the 'Scheduled Finish Date' column. Divide this count by the total number of rows. Multiply the result by 100 to get the percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-183' table, select all rows where the 'Planned Order Number' column is not null. Then, count the number of rows where the value in the 'Actual Delivery Date' column is greater than the value in the 'Scheduled Finish Date' column. Divide this count by the total number of rows. Multiply the result by 100 to get the percentage.\"  \n}\n\nTo generate this summary, I first analyzed the FROM clause to get the table name 'defaultview-183'. \n\nI looked at the WHERE clause to see it is filtering for rows where 'Planned Order Number' is not null.\n\nIn the SELECT clause, I broke down the count/count expression. The numerator counts rows where 'Actual Delivery Date' - 'Scheduled Finish Date' is greater than 0 seconds. The denominator counts all rows.\n\nDividing these gives the percentage of rows meeting that condition. Multiplying by 100 converts this to a percentage value.\n\nSo in plain language, it is calculating the percentage of rows where the actual delivery date was later than the scheduled finish date, only considering rows where 'Planned Order Number' is not null.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT (count(case_id)\nFILTER (WHERE \"Actual Delivery Date\" - \"Scheduled Finish Date\" > DURATION '0seconds')\n /\n count(case_id)) \n *100\n \n  FROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NOT NULL\n\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}