{"signal_description": "From the 'defaultview-183' table, count the number of case_id values where the EVENT_NAME column does not contain 'Technically completed', and store this count as '# of Process Orders without TECO'. Also calculate the percentage of case_id values where EVENT_NAME does not contain 'Technically completed' out of the total number of case_id values, and store this percentage as '% of Process Orders without TECO'. Select the 'Plant' column. Order the results by the '# of Process Orders without TECO' column in descending order. Limit the results to 10 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-183' table, count the number of case_id values where the EVENT_NAME column does not contain 'Technically completed', and store this count as '# of Process Orders without TECO'. Also calculate the percentage of case_id values where EVENT_NAME does not contain 'Technically completed' out of the total number of case_id values, and store this percentage as '% of Process Orders without TECO'. Select the 'Plant' column. Order the results by the '# of Process Orders without TECO' column in descending order. Limit the results to 10 rows.\" \n}\n\nTo generate this summary, I first analyzed the SELECT, FROM, WHERE, ORDER BY and LIMIT clauses to understand what the query is doing:\n\n- The FROM clause specifies the table name as 'defaultview-183'. \n\n- The SELECT clause calculates two derived columns:\n  - '# of Process Orders without TECO' counts the case_id values where EVENT_NAME does not contain 'Technically completed'.\n  - '% of Process Orders without TECO' calculates the percentage of the above count out of the total number of case_id values.\n\n- The SELECT clause also specifies selecting the 'Plant' column.\n\n- The WHERE clause filters for case_id values where EVENT_NAME does not match 'Technically completed'. \n\n- The ORDER BY clause sorts the results by the '# of Process Orders without TECO' column in descending order.\n\n- The LIMIT clause limits the results to 10 rows.\n\nI then summarized these key details from the query clauses in plain language to explain what the query is doing.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \ncount (case_id) FILTER (WHERE NOT EVENT_NAME MATCHES ('Technically completed')) AS \"# of Process Orders without TECO\",\nCOUNT (CASE_ID) FILTER (WHERE NOT EVENT_NAME MATCHES ('Technically completed')) / COUNT (CASE_ID) * 100 AS \"% of Process Orders without TECO\",\n\"Plant\" \nFROM \"defaultview-183\"\n-- GROUP BY 2\nORDER BY 1 desc\nLIMIT 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}