{"signal_description": "1. From the table 'defaultview-225', select the columns 'Automation rate in %' and 'Company'. \n\n2. 'Automation rate in %' is calculated as the percentage of events where 'Event Created By User Type' is 'System' or 'Service' out of all events where 'Event Created By User Type' is not null. This is done by:\n- Calculating the sum of counts of events where 'Event Created By User Type' is 'System' or 'Service' \n- Calculating the sum of counts of all events where 'Event Created By User Type' is not null\n- Dividing the first sum by the second sum and multiplying by 100 to get a percentage\n\n3. 'Company' is set to the value of 'Inv. Company Code Text'. \n\n4. Only include rows where 'Inv. Company Code Text' is not null.\n\n5. Order the results by 'Automation rate in %' in descending order, with nulls last. \n\n6. Return only the first 20 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"1. From the table 'defaultview-225', select the columns 'Automation rate in %' and 'Company'. \n\n2. 'Automation rate in %' is calculated as the percentage of events where 'Event Created By User Type' is 'System' or 'Service' out of all events where 'Event Created By User Type' is not null. This is done by:\n- Calculating the sum of counts of events where 'Event Created By User Type' is 'System' or 'Service' \n- Calculating the sum of counts of all events where 'Event Created By User Type' is not null\n- Dividing the first sum by the second sum and multiplying by 100 to get a percentage\n\n3. 'Company' is set to the value of 'Inv. Company Code Text'. \n\n4. Only include rows where 'Inv. Company Code Text' is not null.\n\n5. Order the results by 'Automation rate in %' in descending order, with nulls last. \n\n6. Return only the first 20 rows.\"\n}\n\nTo generate this summary, I parsed the SIGNAL query to identify the key clauses like SELECT, FROM, WHERE, ORDER BY, and LIMIT. I looked at the column names, calculations, and filters used to understand what data was being queried. I then translated the technical query logic into plain language instructions that describe the intent and steps of the query.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\tSUM((SELECT COUNT (EVENT_NAME) FILTER (\n    \tWHERE (\"Event Created By User Type\" IN ('System','Service'))))) \n\t/ SUM ((SELECT COUNT (EVENT_NAME) FILTER (\n    \tWHERE (\"Event Created By User Type\" IS NOT NULL)))) * 100 AS \"Automation rate in %\",\n    \"Inv. Company Code Text\" AS \"Company\"\n\nFROM \"defaultview-225\"\nWHERE \"Inv. Company Code Text\" IS NOT NULL\nORDER BY 1 DESC NULLS LAST \nLIMIT 20\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}