{"signal_description": "1. Select the table 'defaultview-383'. \n\n2. Filter the rows where event_name contains 'Quotation' and ChangeType is 'Update'.\n\n3. Count the number of distinct UniqueEventId values where EventCreatedByUserType is 'System', 'Service' or 'Batch Job'. Call this count 'created_auto'.\n\n4. Count the total number of distinct UniqueEventId values. \n\n5. Calculate the percentage of rows where UniqueEventId was created automatically by dividing 'created_auto' by the total count and multiplying by 100.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"1. Select the table 'defaultview-383'. \n\n2. Filter the rows where event_name contains 'Quotation' and ChangeType is 'Update'.\n\n3. Count the number of distinct UniqueEventId values where EventCreatedByUserType is 'System', 'Service' or 'Batch Job'. Call this count 'created_auto'.\n\n4. Count the total number of distinct UniqueEventId values. \n\n5. Calculate the percentage of rows where UniqueEventId was created automatically by dividing 'created_auto' by the total count and multiplying by 100.\"\n}\n\nTo generate this summary, I first analyzed the FROM, WHERE, SELECT and FILTER clauses to understand which table is being queried, which conditions are applied, and what calculations are being performed. I then described each major step in plain language, referring to column names and values directly referenced in the query.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT(DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOR (\n        \"EventCreatedByUserType\" IN ('System', 'Service', 'Batch Job')\n        AND (\n          event_name LIKE '%Quotation%'\n          AND ChangeType = 'Update'\n        )\n      ) AS created_auto MATCHES (created_auto)\n  ) / COUNT(DISTINCT \"UniqueEventId\") * 100\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  (\n    event_name LIKE '%Quotation%'\n    AND ChangeType = 'Update'\n  ) \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}