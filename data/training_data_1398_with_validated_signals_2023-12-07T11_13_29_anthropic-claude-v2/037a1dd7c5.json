{"signal_description": "From the 'defaultview-124' table, calculate the percentage of events created by 'System' or 'Service' users out of all events as follows: Take the sum of counts of events where 'Event Created By User Type' is 'System' or 'Service', divide it by the sum of counts of all events, and multiply the result by 100.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the 'defaultview-124' table, calculate the percentage of events created by 'System' or 'Service' users out of all events as follows: Take the sum of counts of events where 'Event Created By User Type' is 'System' or 'Service', divide it by the sum of counts of all events, and multiply the result by 100.\"\n}\n\nTo generate this description, I first analyzed the SIGNAL query to understand that it is calculating a percentage based on a condition on the \"Event Created By User Type\" column. I then described each part of the query in simple terms:\n- Referenced the table name \"defaultview-124\" \n- Explained that it calculates a percentage \n- Summarized the condition on \"Event Created By User Type\" column and respective values 'System' and 'Service'\n- Explained the math operations (sum, divide, multiply by 100) to calculate the percentage", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\nSUM(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE (\"Event Created By User Type\" IN ('System', 'Service')))\n\t)\n   )\n/ SUM((SELECT COUNT(event_name)))\n* 100\nFROM \"defaultview-124\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}