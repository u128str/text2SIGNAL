{"signal_description": "The query first selects the case_id column from the table named 'defaultview-225'. It then counts the number of rows where the EVENT_NAME column contains the text 'Update' or 'Change'. This count is divided by the total number of rows in the case_id column and multiplied by 100 to calculate the percentage of rows matching the filter criteria.", "llm_output": " Here is the human-readable summary of the given SIGNAL query in JSON format:\n\n{\n  \"signal_description\": \"The query first selects the case_id column from the table named 'defaultview-225'. It then counts the number of rows where the EVENT_NAME column contains the text 'Update' or 'Change'. This count is divided by the total number of rows in the case_id column and multiplied by 100 to calculate the percentage of rows matching the filter criteria.\"  \n}\n\nTo generate this summary, I looked at each part of the SIGNAL query:\n- The FROM clause specifies the table name \"defaultview-225\"\n- The SELECT clause counts the case_id column \n- The FILTER WHERE clause looks for rows where EVENT_NAME contains 'Update' or 'Change' using ILIKE\n- The outer COUNT and division/multiplication calculate the percentage of rows matching the filter\n\nI then translated each part into plain language, referencing the specific table and column names used in the query.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT (case_id) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (\n            EVENT_NAME ILIKE '%Update%'\n            OR EVENT_NAME ILIKE '%Change%'\n          )\n      )\n  ) / COUNT (CASE_ID) * 100\nFROM\n  \"defaultview-225\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}