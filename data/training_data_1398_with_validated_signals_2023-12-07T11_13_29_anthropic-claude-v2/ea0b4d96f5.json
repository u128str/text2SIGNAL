{"signal_description": "The query is selecting the count of event_name column from the defaultview-290 table where the event_name value matches either 'Change Quotation%' or 'Update Quotation%'. It filters the rows where this condition is true into a column alias called created_with_dialog. \n\nIt then groups the results by the SalesDocCustomerCompany column and orders the counts in descending order. Finally it limits the output to the top 10 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"The query is selecting the count of event_name column from the defaultview-290 table where the event_name value matches either 'Change Quotation%' or 'Update Quotation%'. It filters the rows where this condition is true into a column alias called created_with_dialog. \n\nIt then groups the results by the SalesDocCustomerCompany column and orders the counts in descending order. Finally it limits the output to the top 10 rows.\"  \n}\n\nTo generate this description, I first analyzed the SELECT, FROM, WHERE, GROUP BY, ORDER BY and LIMIT clauses to understand what the query is doing. I then summarized each part in plain language, referring to the specific column names and filter values used. The description aims to explain the logical flow of operations in the query and highlight the key elements like filters, groupings and sort orders.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT (\"event_name\") FILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n\n'Change Quotation%' OR event_name LIKE 'Update Quotation%') AS created_with_dialog MATCHES (created_with_dialog)),\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nGROUP BY 2\norder by 1 desc\nLimit 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}