{"signal_description": "1. Select the table 'defaultview-383'. 2. Filter the rows where event_name contains 'Quotation' and ChangeType is 'Update'. 3. Count the number of distinct UniqueEventId values where EventCreatedByUserType is 'Dialog' and event_name contains 'Quotation' and ChangeType is 'Update'. Call this count 'created_with_dialog'. 4. Count the total number of distinct UniqueEventId values. 5. Calculate the percentage of the first count divided by the second count and multiply by 100.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"1. Select the table 'defaultview-383'. 2. Filter the rows where event_name contains 'Quotation' and ChangeType is 'Update'. 3. Count the number of distinct UniqueEventId values where EventCreatedByUserType is 'Dialog' and event_name contains 'Quotation' and ChangeType is 'Update'. Call this count 'created_with_dialog'. 4. Count the total number of distinct UniqueEventId values. 5. Calculate the percentage of the first count divided by the second count and multiply by 100.\" \n}\n\nTo generate this summary, I first analyzed the FROM, WHERE, SELECT and FILTER clauses to understand which table is being queried, which conditions are filtering the rows, which values are being counted, and how the percentage is being calculated. I then translated this into plain English instructions that reference the specific table name, column names, conditions, and values used in the query.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT(DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOR (\n        \"EventCreatedByUserType\" IN ('Dialog')\n        AND (\n          event_name LIKE '%Quotation%'\n          AND ChangeType = 'Update'\n        )\n      ) AS created_with_dialog MATCHES (created_with_dialog)\n  ) / COUNT(DISTINCT \"UniqueEventId\") * 100\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  (\n    event_name LIKE '%Quotation%'\n    AND ChangeType = 'Update'\n  ) \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}