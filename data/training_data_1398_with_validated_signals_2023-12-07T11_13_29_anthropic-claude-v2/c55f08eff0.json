{"signal_description": "This query calculates the percentage of distinct UniqueEventId values where the following conditions are true:\n1. The EventCreatedByUserType column value is 'System' or 'Service' \n2. The event_name column value contains 'Sales'\n3. The ChangeType column value is 'Update'\nThis is done by:\n1. Counting the number of distinct UniqueEventId values where the above conditions are true. This count is assigned to the created_auto variable.\n2. Counting the total number of distinct UniqueEventId values where EventCreatedByUserType is not null. \n3. Dividing the first count by the second count and multiplying by 100 to get a percentage value.\n\nThe query filters the defaultview-383 table to only include rows where event_name contains 'Sales' and ChangeType is 'Update'. It then applies the logic described above to calculate the percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"This query calculates the percentage of distinct UniqueEventId values where the following conditions are true:\n1. The EventCreatedByUserType column value is 'System' or 'Service' \n2. The event_name column value contains 'Sales'\n3. The ChangeType column value is 'Update'\nThis is done by:\n1. Counting the number of distinct UniqueEventId values where the above conditions are true. This count is assigned to the created_auto variable.\n2. Counting the total number of distinct UniqueEventId values where EventCreatedByUserType is not null. \n3. Dividing the first count by the second count and multiplying by 100 to get a percentage value.\n\nThe query filters the defaultview-383 table to only include rows where event_name contains 'Sales' and ChangeType is 'Update'. It then applies the logic described above to calculate the percentage.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT(DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOR (\n        \"EventCreatedByUserType\" IN ('System', 'Service')\n        AND (\n          event_name LIKE '%Sales%'\n          AND ChangeType = 'Update'\n        )\n      ) AS created_auto MATCHES (created_auto)\n  ) / COUNT(DISTINCT \"UniqueEventId\") FILTER (\n          WHERE\n(\"EventCreatedByUserType\" IS NOT NULL)\n        )\n    * 100\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  (\n    event_name LIKE '%Sales%'\n    AND ChangeType = 'Update'\n  ) \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}