{"signal_description": "From the defaultview-197 table, select the AR_Customer column as 'Customer Number', the AR_CustomerName column as 'Customer', the count of distinct case_id values as '# of Projects', the count of distinct ARUniqueKey values where the EVENT_NAME is 'Clear Accounts Receivable' as '# Cleared Receivables', the sum of AmountInCompanyCodeCurrency values where the EVENT_NAME is 'Clear Accounts Receivable' as 'Cleared Amount', the count of distinct ARUniqueKey values where the EVENT_NAME is 'Clear Accounts Receivable' and the ClearingDate is more than 1 day after the NetDueDate divided by the count of distinct ARUniqueKey values where the EVENT_NAME is 'Clear Accounts Receivable' multiplied by 100 as 'Late Payment Rate %', the average of NetDueDate - DocumentDate where the EVENT_NAME is 'Clear Accounts Receivable' as 'AVG Net Payment Terms', the average of ClearingDate - DocumentDate where the EVENT_NAME is 'Clear Accounts Receivable' as 'AVG Payment Time', the average of ClearingDate - NetDueDate where the EVENT_NAME is 'Clear Accounts Receivable' if it is greater than 0 days otherwise null as 'AVG Paid Late Days'. After flattening the table, filter where ClearingDate and NetDueDate are not null. Then order the results descending by '# of Projects' and 'Cleared Amount'.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the defaultview-197 table, select the AR_Customer column as 'Customer Number', the AR_CustomerName column as 'Customer', the count of distinct case_id values as '# of Projects', the count of distinct ARUniqueKey values where the EVENT_NAME is 'Clear Accounts Receivable' as '# Cleared Receivables', the sum of AmountInCompanyCodeCurrency values where the EVENT_NAME is 'Clear Accounts Receivable' as 'Cleared Amount', the count of distinct ARUniqueKey values where the EVENT_NAME is 'Clear Accounts Receivable' and the ClearingDate is more than 1 day after the NetDueDate divided by the count of distinct ARUniqueKey values where the EVENT_NAME is 'Clear Accounts Receivable' multiplied by 100 as 'Late Payment Rate %', the average of NetDueDate - DocumentDate where the EVENT_NAME is 'Clear Accounts Receivable' as 'AVG Net Payment Terms', the average of ClearingDate - DocumentDate where the EVENT_NAME is 'Clear Accounts Receivable' as 'AVG Payment Time', the average of ClearingDate - NetDueDate where the EVENT_NAME is 'Clear Accounts Receivable' if it is greater than 0 days otherwise null as 'AVG Paid Late Days'. After flattening the table, filter where ClearingDate and NetDueDate are not null. Then order the results descending by '# of Projects' and 'Cleared Amount'.\"\n}\n\nThis summary explains the key elements of the query - the table name, columns selected, filter conditions, aggregate calculations, case expression and order by clauses. It describes in plain language how the query constructs its output.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n\"AR_Customer\" AS \"Customer Number\",\n\"Customer\" ,\n\"# of Projects\",\n\"# Cleared Receivables\", \n\"Cleared Amount\",\n--\"Late Payment Rate %\",\nCASE\n    WHEN (avg(\"Late Payment Rate %\") % 1) >= 0.5 \n    THEN avg(\"Late Payment Rate %\") - \n(avg(\"Late Payment Rate %\") % 1) + 1\n    ELSE avg(\"Late Payment Rate %\") - \n(avg(\"Late Payment Rate %\") % 1)\nEND AS \"Late Payment Rate % (rounded)\",\n\n\"AVG Net Payment Terms\",\n\"AVG Payment Time\",\n\"AVG Paid Late Days\"\n\nFROM (\nSELECT \n\"AR_CustomerName\" AS \"Customer\",\nCOUNT(DISTINCT \"case_id\" ) AS \"# of Projects\",\nCOUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable' ) \nAs \"# Cleared Receivables\", \nSUM(\"AmountInCompanyCodeCurrency\" )\nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable' )\nAs \"Cleared Amount\",\n(\nCOUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable' \nAND (ClearingDate   - NetDueDate)  > DURATION '1day')  \n/ COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable' ) \n) * 100\nAS \"Late Payment Rate %\",\n\nAVG (\"NetDueDate\" - \"DocumentDate\" ) \nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable' ) \nAs \"AVG Net Payment Terms\",\n\nAVG (\"ClearingDate\" - \"DocumentDate\" ) \nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable' ) \nAs \"AVG Payment Time\",\n\nCASE \nWHEN AVG (\"ClearingDate\" - \"NetDueDate\") < DURATION '0day' \nTHEN NULL\nELSE\nAVG (\"ClearingDate\" - \"NetDueDate\")\nFILTER (WHERE EVENT_NAME = 'Clear Accounts Receivable' )\nEND AS \"AVG Paid Late Days\",\n\"AR_Customer\" \n\nFROM FLATTEN(\"defaultview-197\")\nWHERE \"ClearingDate\" IS NOT NULL AND \"NetDueDate\" IS NOT NULL\n) as selections\nORDER BY 3 DESC, 5 DESC \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}