{"signal_description": "From the table 'defaultview-217', select the columns 'case_id', 'Title', 'IssueType', 'LastEpic'. Also select the count of events where 'event_name' equals 'Change Status to In Progress' as 'Count of reworks'. Order the results by 'Count of reworks' in descending order and limit to the top 10 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the table 'defaultview-217', select the columns 'case_id', 'Title', 'IssueType', 'LastEpic'. Also select the count of events where 'event_name' equals 'Change Status to In Progress' as 'Count of reworks'. Order the results by 'Count of reworks' in descending order and limit to the top 10 rows.\"\n}\n\nTo generate this summary, I first identified the main query components:\n\n- The SELECT clause specifies the columns and aggregate functions to retrieve. This includes case_id, several column names, and a count of events filtered by a specific event name. \n\n- The FROM clause specifies the table name 'defaultview-217'.\n\n- The WHERE clause inside the aggregate function filters the count by a specific event_name value.\n\n- The ORDER BY and LIMIT clauses specify sorting and row limits on the results.\n\nI then translated each component into a human-readable sentence, referring explicitly to column names, values, and table names used in the query. The final summary combines these component descriptions into a coherent paragraph that summarizes the overall query purpose and structure.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\ncase_id ,\"Title\" ,\"IssueType\" , \"LastEpic\" ,\nCOUNT(event_name) FILTER (\nWHERE  event_name = 'Change Status to In Progress'  )\nas \"Count of reworks\"\n/*\nCOUNT(case_id) \nFILTER (\n\tWHERE (SELECT count(event_name) WHERE event_name = 'Change Status to In Progress' ) > 1 )\n/ COUNT(case_id) FILTER (\nWHERE (SELECT count(event_name) \n\nWHERE event_name = 'Change Status to In Progress' ) > 0 )\n* 100 as \"Rework\"*/\nFROM FLATTEN(\"defaultview-217\")\nORDER BY 5 DESC\nLIMIT 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}