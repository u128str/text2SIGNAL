{"signal_description": "From the 'defaultview-217' table:\n1. Calculate the average time between 'Create Issue' and 'Change Status to In Progress' events. \n2. Calculate the average time between 'Create Issue' and 'Change Status to Closed' events.\n3. Divide the result from step 1 by the result from step 2 and multiply by 100. Name this column 'Create => In Progress'.\n\n4. Calculate the average time between 'Change Status to In Progress' and 'Change Status to Ready for Review' events.\n5. Divide the result from step 4 by the result from step 2 and multiply by 100. Name this column 'In Progress => Ready for Review'.\n\n6. Calculate the average time between 'Change Status to Ready for Review' and 'Change Status to In Review' events.\n7. Divide the result from step 6 by the result from step 2 and multiply by 100. Name this column 'Ready for Review => In Review'.\n\n8. Calculate the average time between 'Change Status to In Review' and 'Change Status to Closed' events.  \n9. Divide the result from step 8 by the result from step 2 and multiply by 100. Name this column 'In Review => Closed'.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-217' table:\n1. Calculate the average time between 'Create Issue' and 'Change Status to In Progress' events. \n2. Calculate the average time between 'Create Issue' and 'Change Status to Closed' events.\n3. Divide the result from step 1 by the result from step 2 and multiply by 100. Name this column 'Create => In Progress'.\n\n4. Calculate the average time between 'Change Status to In Progress' and 'Change Status to Ready for Review' events.\n5. Divide the result from step 4 by the result from step 2 and multiply by 100. Name this column 'In Progress => Ready for Review'.\n\n6. Calculate the average time between 'Change Status to Ready for Review' and 'Change Status to In Review' events.\n7. Divide the result from step 6 by the result from step 2 and multiply by 100. Name this column 'Ready for Review => In Review'.\n\n8. Calculate the average time between 'Change Status to In Review' and 'Change Status to Closed' events.  \n9. Divide the result from step 8 by the result from step 2 and multiply by 100. Name this column 'In Review => Closed'.\"\n}\n\nTo summarize:\n- The query calculates average percentages of time spent between different status changes, relative to the total time from 'Create Issue' to 'Change Status to Closed'. \n- It uses nested SELECT statements with FILTER clauses to calculate the time between specific events.\n- The results are named using aliases to indicate the status change steps.\n- The percentages show the relative time spent in each step of the workflow.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Progress')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) /\n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) * 100 AS \"Create => In Progress\",\n\n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Ready for Review')))\n    - (SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Progress')))) / \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) * 100 AS \"In Progress => Ready for Review\",\n        \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Review')))\n    - (SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Ready for Review')))) / \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) * 100 AS \"Ready for Review => In Review\",\n        \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to In Review')))) / \n\tAVG((SELECT LAST(end_time) FILTER (\n    \tWHERE event_name IN ('Change Status to Closed')))\n    - (SELECT FIRST(end_time) FILTER (\n    \tWHERE event_name IN ('Create Issue')))) * 100 AS \"In Review => Closed\"\n\nFROM \"defaultview-217\"  \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}