{"signal_description": "First, from the 'defaultview-124' table, select the CASE_ID, EVENT_NAME, and 'PO Purchasing Group' column aliased as 'Purchasing Group'. Then, in a subquery, check if the EVENT_NAME is in a list of specific update events, and set CHANGES to 1 if true, else set to NULL. Next, in another subquery, count the distinct CASE_ID to get the 'Total No. of Cases', and count the distinct CASE_ID where CHANGES = 1 to get 'Cases with Changes'. Finally, group by 'Purchasing Group' and order the results by 'Total No. of Cases' descending, limiting to 20 rows. This summarizes the number of total cases and cases with changes for each purchasing group.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"First, from the 'defaultview-124' table, select the CASE_ID, EVENT_NAME, and 'PO Purchasing Group' column aliased as 'Purchasing Group'. Then, in a subquery, check if the EVENT_NAME is in a list of specific update events, and set CHANGES to 1 if true, else set to NULL. Next, in another subquery, count the distinct CASE_ID to get the 'Total No. of Cases', and count the distinct CASE_ID where CHANGES = 1 to get 'Cases with Changes'. Finally, group by 'Purchasing Group' and order the results by 'Total No. of Cases' descending, limiting to 20 rows. This summarizes the number of total cases and cases with changes for each purchasing group.\"  \n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\nCOUNT(DISTINCT CASE_ID) AS \"Total No. of Cases\",\nCOUNT(DISTINCT IF(CHANGES = 1, CASE_ID, NULL)) AS \"Cases with Changes\",\n\"Purchasing Group\"\nFROM\n(\n SELECT\n   CASE_ID,\n   IF(EVENT_NAME IN ('Update Contract Net Price' ,'Update Contract Target Quantity' ,'Update Order Confirmation' ,'Update PO Confirmed Delivery Date' ,'Update PO Currency' ,'Update PO Item Material' ,'Update PO Item Net Price' ,'Update PO Item Plant' ,'Update PO Item Quantity' ,'Update PO Payment Terms' ,'Update PO Vendor' ,'Update PR Delivery Date' ,'Update PR Material' ,'Update PR Net Price' ,'Update PR Quantity'),1,NULL) AS CHANGES,\n   \"Purchasing Group\"\n FROM\n  (\n     SELECT\n        CASE_ID,\n        EVENT_NAME,\n        \"PO Purchasing Group\" AS \"Purchasing Group\"\n     FROM FLATTEN(\"defaultview-124\")\n     --WHERE \"PO Purchasing Group\" IS NOT NULL\n    ) AS SUB1\n) AS SUB2\nORDER BY 1 DESC\nLIMIT 20 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}