{"signal_description": "From the table 'defaultview-124', calculate the percentage of cases where any event name contains the text 'Update'. To do this:\n1. Count the total number of case_id values in the table. This gives the denominator.\n2. Count the number of case_id values where any event name contains 'Update'. This gives the numerator. \n3. Divide the numerator by the denominator and multiply by 100 to calculate the percentage.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the table 'defaultview-124', calculate the percentage of cases where any event name contains the text 'Update'. To do this:\n1. Count the total number of case_id values in the table. This gives the denominator.\n2. Count the number of case_id values where any event name contains 'Update'. This gives the numerator. \n3. Divide the numerator by the denominator and multiply by 100 to calculate the percentage.\"  \n}\n\nTo generate this summary, I first analyzed the SIGNAL query to understand its overall purpose and logic. The main clues were:\n- The query is calculating a percentage based on a COUNT aggregate and division. \n- The FILTER clause and ILIKE condition check for event names containing 'Update'.\n- The query references a single table 'defaultview-124'.\n\nI then described in simple human language each major step:\n1) Counting total cases \n2) Filtering and counting cases meeting a condition\n3) Dividing and converting to a percentage\n\nI also explicitly called out the table name and referenced checking event name values.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name ILIKE '%Update%')))\n/\nCOUNT(case_id) * 100\nFROM \"defaultview-124\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}