{"signal_description": "From the flattened defaultview-197 table, calculate the percentage of rejected billing documents by taking the count of distinct BillingDocument events where the event name contains 'Reject Billing Request' divided by the count of distinct BillingDocument events where the event name is 'Create Billing Document', multiplied by 100. Alias this as 'Percentage of Billing Documents rejected'. Also select the WBSE_ProjectType column and alias it as 'Project Type'. Then round the 'Percentage of Billing Documents rejected' to the nearest integer. Finally, order the results by the percentage column in descending order.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the flattened defaultview-197 table, calculate the percentage of rejected billing documents by taking the count of distinct BillingDocument events where the event name contains 'Reject Billing Request' divided by the count of distinct BillingDocument events where the event name is 'Create Billing Document', multiplied by 100. Alias this as 'Percentage of Billing Documents rejected'. Also select the WBSE_ProjectType column and alias it as 'Project Type'. Then round the 'Percentage of Billing Documents rejected' to the nearest integer. Finally, order the results by the percentage column in descending order.\"  \n}\n\nTo generate this summary, I first analyzed the overall structure of the query - it is selecting two columns, one calculated and one direct. The first column does a calculation on events related to billing documents, so I explained that calculation in detail. The second column directly selects the WBSE_ProjectType column. \n\nThen I looked at the FROM clause to see the source of the data, a derived table flattening the defaultview-197 table. \n\nFor the rounding logic, I explained how it rounds the percentage to the nearest integer based on the CASE expression.\n\nFinally, I noted the ORDER BY clause at the end to order the final results. By going through each component, I was able to construct a human-readable summary explaining the full query logic.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT --\"Percentage of Billing Documents rejected\" ,\n\tCASE\n    WHEN ((\"Percentage of Billing Documents rejected\") % 1) >= 0.5 \n    THEN (\"Percentage of Billing Documents rejected\") - \n\t((\"Percentage of Billing Documents rejected\") % 1) + 1\n    ELSE (\"Percentage of Billing Documents rejected\") - \n\t((\"Percentage of Billing Documents rejected\") % 1)\n\tEND AS \"Percentage of Billing Documents rejected\",\n\t\n    \"Project Type\"\n\nFROM\n(SELECT COUNT (DISTINCT \"BillingDocument\") \nFILTER (WHERE EVENT_NAME LIKE 'Reject Billing Request%') /\nCOUNT (DISTINCT \"BillingDocument\") \nFILTER (WHERE EVENT_NAME = 'Create Billing Document') \n* 100 as \"Percentage of Billing Documents rejected\"\n, WBSE_ProjectType AS \"Project Type\"\nFROM FLATTEN(\"defaultview-197\") ) as selections\nORDER BY 1 DESC\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}