{"signal_description": "From the 'defaultview-124' table, group the rows by the 'Last FI Invoice Item Terms of Payment Key' column. For each group, calculate the count of 'CASE_ID' values as 'No. of Cases', the average time difference between the last 'Create Goods Receipt' event and the last 'Create FI Invoice' event as 'Avg. Cycle Time', and take the 'Last FI Invoice Item Terms of Payment Key' value as 'Invoice Payment Term'. Order the results by 'No. of Cases' in descending order and return the top 50 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-124' table, group the rows by the 'Last FI Invoice Item Terms of Payment Key' column. For each group, calculate the count of 'CASE_ID' values as 'No. of Cases', the average time difference between the last 'Create Goods Receipt' event and the last 'Create FI Invoice' event as 'Avg. Cycle Time', and take the 'Last FI Invoice Item Terms of Payment Key' value as 'Invoice Payment Term'. Order the results by 'No. of Cases' in descending order and return the top 50 rows.\"  \n}\n\nTo generate this summary, I first analyzed the SELECT, FROM, GROUP BY, ORDER BY and LIMIT clauses to understand what the query is calculating and from which table. I looked at the column names, aggregate functions like COUNT and AVG, and the subqueries to determine what data was being aggregated. I referenced the explicit column names and values used in the query. Finally, I summarized it in plain language, explaining the high level intent and operations of the query.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \nCOUNT(CASE_ID) as \"No. of Cases\",\nAVG((SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create FI Invoice') - (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Create Goods Receipt')) AS \"Avg. Cycle Time\",\n\"Last FI Invoice Item Terms of Payment Key\" AS \"Invoice Payment Term\"\nFROM \"defaultview-124\"\nGROUP BY 3\nORDER BY 1 DESC\nLIMIT 50\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}