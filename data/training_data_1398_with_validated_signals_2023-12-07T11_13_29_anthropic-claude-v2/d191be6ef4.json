{"signal_description": "From the table 'defaultview-59', calculate the percentage of cases that have no duplicate event names by: 1) Counting the total number of case IDs. 2) Counting the number of case IDs where there is any event name that occurs more than once, using a subquery to check for duplicate event names. 3) Subtracting the number of cases with duplicates from the total number of cases. 4) Dividing that result by the total number of cases. 5) Multiplying by 100 to get a percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the table 'defaultview-59', calculate the percentage of cases that have no duplicate event names by: 1) Counting the total number of case IDs. 2) Counting the number of case IDs where there is any event name that occurs more than once, using a subquery to check for duplicate event names. 3) Subtracting the number of cases with duplicates from the total number of cases. 4) Dividing that result by the total number of cases. 5) Multiplying by 100 to get a percentage.\"  \n}\n\nTo generate this summary, I:\n- Identified the table name 'defaultview-59' and the column 'case_id' used in the query\n- Analyzed the logic of the query to calculate a percentage metric related to duplicate event names per case\n- Summarized the main steps in plain language, referring to the table, columns, and their values as needed\n- Formatted the summary as a human-readable set of instructions explaining how the percentage is calculated from the given table", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\n100 - (COUNT(case_id) FILTER (WHERE\n\t(SELECT BOOL_OR (occurrence > 1)\n\t\tFROM (SELECT OCCURRENCE(event_name) AS occurrence) AS sub\n)\n)/COUNT(case_id)*100)\nFROM \"defaultview-59\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}