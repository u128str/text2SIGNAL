{"signal_description": "From the table 'defaultview-59', count the number of rows where the value in the 'event_name' column is not 'Create Billing Document' followed by 'Create Invoice'.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the table 'defaultview-59', count the number of rows where the value in the 'event_name' column is not 'Create Billing Document' followed by 'Create Invoice'.\"\n}\n\nTo generate this summary:\n- The query performs a COUNT aggregation on the 'case_id' column \n- The FILTER clause indicates this count should only consider rows meeting a certain condition\n- The condition checks the 'event_name' column for values not matching the pattern 'Create Billing Document' followed by 'Create Invoice'\n- The FROM clause specifies the table name 'defaultview-59' that the query acts on", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\nCOUNT(case_id) FILTER (\n    WHERE event_name \n    MATCHES(NOT 'Create Billing Document'~> 'Create Invoice'))\nFROM \"defaultview-59\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}