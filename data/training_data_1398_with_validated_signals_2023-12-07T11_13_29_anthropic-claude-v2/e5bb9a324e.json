{"signal_description": "First, from the table 'defaultview-217', count the number of case_id's where the following conditions are met: There are no events with name 'Assign Reviewer', and the value of the 'ResolutionStatus' column is 'Done'. Then, also count the number of case_id's from 'defaultview-217' where 'ResolutionStatus' is 'Done'. Divide the first count by the second count, and multiply by 100 to get a percentage value.", "llm_output": " Here is the human-readable summary of the given SIGNAL query in JSON format:\n\n{\n  \"signal_description\": \"First, from the table 'defaultview-217', count the number of case_id's where the following conditions are met: There are no events with name 'Assign Reviewer', and the value of the 'ResolutionStatus' column is 'Done'. Then, also count the number of case_id's from 'defaultview-217' where 'ResolutionStatus' is 'Done'. Divide the first count by the second count, and multiply by 100 to get a percentage value.\"  \n}\n\nTo generate this summary, I first analyzed the SIGNAL query to understand that it is calculating a percentage based on two counts from the 'defaultview-217' table. \n\nThe first count filters for cases where there are no 'Assign Reviewer' events and 'ResolutionStatus' is 'Done'. \n\nThe second count filters only for 'ResolutionStatus' 'Done'. \n\nDividing the first count by the second gives a ratio, which is then multiplied by 100 to represent a percentage value.\n\nI summarized this in plain language, explicitly mentioning the table name, column names, and filter values used in the query.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT count(case_id) \n\tFILTER (WHERE (SELECT count(event_name) WHERE event_name = 'Assign Reviewer' ) < 1 AND \"ResolutionStatus\" = 'Done')\n    / count(case_id) FILTER (WHERE \"ResolutionStatus\" = 'Done') *100\nFROM \"defaultview-217\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}