{"signal_description": "From the table 'defaultview-57', select the count of case_id, event_name, 'Change Old Value' and 'Change New Value' columns where the event_name contains the text 'Update' (case insensitive). Order the results by the count of case_id in descending order.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the table 'defaultview-57', select the count of case_id, event_name, 'Change Old Value' and 'Change New Value' columns where the event_name contains the text 'Update' (case insensitive). Order the results by the count of case_id in descending order.\"\n}\n\nTo generate this summary, I first identified the key components of the SIGNAL query:\n\n- The SELECT clause specifies the columns to return: count(case_id), event_name, \"Change Old Value\", \"Change New Value\". \n\n- The FROM clause specifies the table name: \"defaultview-57\".\n\n- The WHERE clause filters for event_name values containing 'Update' (case insensitive match). \n\n- The ORDER BY clause sorts the results by the count of case_id in descending order.\n\nI then translated these components into natural language, explicitly mentioning the table name, column names, and filter values used. The result is a human-readable summary that explains what the query is doing in plain terms.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT count(case_id), event_name, \"Change Old Value\", \"Change New Value\"  \nFROM FLATTEN(\"defaultview-57\")\nWHERE Event_name ILIKE '%Update%'\nORDER BY 1 desc\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}