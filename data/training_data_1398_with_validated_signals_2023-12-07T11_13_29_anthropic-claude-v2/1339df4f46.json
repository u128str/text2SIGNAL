{"signal_description": "First, select the columns 'case_id', 'event_name', 'end_time', 'Change New Value', 'Change Old Value', 'Change Type', 'Changed Field', 'Changed Object Id', 'Changed Table', 'Event Created By User Id', 'Event Created By User Type' from the table 'defaultview-124'. Then flatten the results into a subquery alias 'sub'. Next, filter the rows where 'Changed Table' is not null. After that, select the count of distinct 'case_id' values as 'Cases' and the column 'Changed Field'. Finally, order the results by 'Cases' descending and limit to 500 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"First, select the columns 'case_id', 'event_name', 'end_time', 'Change New Value', 'Change Old Value', 'Change Type', 'Changed Field', 'Changed Object Id', 'Changed Table', 'Event Created By User Id', 'Event Created By User Type' from the table 'defaultview-124'. Then flatten the results into a subquery alias 'sub'. Next, filter the rows where 'Changed Table' is not null. After that, select the count of distinct 'case_id' values as 'Cases' and the column 'Changed Field'. Finally, order the results by 'Cases' descending and limit to 500 rows.\"  \n}\n\nTo generate this summary, I first analyzed the SIGNAL query to understand the high-level steps:\n\n1. Select columns from a table \n2. Flatten into a subquery\n3. Filter rows on a condition\n4. Select aggregate count and a column\n5. Order and limit results\n\nThen I described each step in plain language, referring to the specific table name, column names, filter values, etc used in the query. The result is a human-readable set of instructions that explains what the query is doing.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT (\"case_id\") AS \"Cases\", \"Changed Field\"\nFROM FLATTEN((SELECT \"case_id\", \"event_name\", \"end_time\", \"Change New Value\", \"Change Old Value\", \"Change Type\", \"Changed Field\", \"Changed Object Id\", \"Changed Table\", \"Event Created By User Id\", \"Event Created By User Type\"\nFROM \"defaultview-124\") AS sub)\nWHERE \"Changed Table\" IS NOT NULL\norder by 1 desc\nLIMIT 500 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}