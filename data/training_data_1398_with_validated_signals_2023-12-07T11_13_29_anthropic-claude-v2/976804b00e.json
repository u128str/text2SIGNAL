{"signal_description": "From the table 'defaultview-431':\n\n1. Count the number of distinct 'PO ID' values where 'Last Invoice Created Date' is NULL, and store the result in '# PO without Invoice'. \n\n2. Count the number of distinct 'PO ID' values where 'Last PR Id' is NULL, and store the result in '# PO without PR'.\n\n3. Count the number of distinct 'Last Invoice Id' values where 'PO ID' is NULL, and store the result in '# Invoice without PO'.\n\n4. Count the number of distinct 'Last Invoice Id' values where 'Last Invoice Item Discount Amount' equals 0, and store the result in '# Invoice without discount'.\n\n5. Count the number of 'case_id' values where EVENT_NAME matches the sequence 'Create PO Item' followed by 'Create PR Item', and store the result in '# Create PO Item -> Create PR Item'.\n\n6. Count the number of 'case_id' values where EVENT_NAME matches the sequence 'Deny PR Item' followed by 'Order PR Item', and store the result in '# Deny PR -> Order PR'. \n\n7. Count the number of 'case_id' values where EVENT_NAME matches the sequence 'Receive Invoice' followed by 'Create PO Item', and store the result in '# Receive Invoice -> Create PO Item'.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the table 'defaultview-431':\n\n1. Count the number of distinct 'PO ID' values where 'Last Invoice Created Date' is NULL, and store the result in '# PO without Invoice'. \n\n2. Count the number of distinct 'PO ID' values where 'Last PR Id' is NULL, and store the result in '# PO without PR'.\n\n3. Count the number of distinct 'Last Invoice Id' values where 'PO ID' is NULL, and store the result in '# Invoice without PO'.\n\n4. Count the number of distinct 'Last Invoice Id' values where 'Last Invoice Item Discount Amount' equals 0, and store the result in '# Invoice without discount'.\n\n5. Count the number of 'case_id' values where EVENT_NAME matches the sequence 'Create PO Item' followed by 'Create PR Item', and store the result in '# Create PO Item -> Create PR Item'.\n\n6. Count the number of 'case_id' values where EVENT_NAME matches the sequence 'Deny PR Item' followed by 'Order PR Item', and store the result in '# Deny PR -> Order PR'. \n\n7. Count the number of 'case_id' values where EVENT_NAME matches the sequence 'Receive Invoice' followed by 'Create PO Item', and store the result in '# Receive Invoice -> Create PO Item'.\"\n}\n\nThis summary was constructed by examining the SELECT statement and each expression in the query, identifying the column names referenced, the aggregate functions and filters applied, and translating it to a human-readable set of instructions for counting specific values from the 'defaultview-431' table.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \nCOUNT(DISTINCT \"PO ID\")FILTER (WHERE \"Last Invoice Created Date\" IS NULL) AS \"# PO without Invoice\",\nCOUNT(DISTINCT \"PO ID\")FILTER (WHERE \"Last PR Id\" IS NULL) AS \"# PO without PR\",\nCOUNT(DISTINCT \"Last Invoice Id\")FILTER (WHERE \"PO ID\" IS NULL) AS \"# Invoice without PO\",\nCOUNT(DISTINCT \"Last Invoice Id\")FILTER (WHERE \"Last Invoice Item Discount Amount\" = 0) AS \"# Invoice without discount\",\nCOUNT(case_id) FILTER (WHERE EVENT_NAME MATCHES ('Create PO Item' ~> 'Create PR Item')) AS \"# Create PO Item -> Create PR Item\",\nCOUNT(case_id) FILTER (WHERE EVENT_NAME MATCHES ('Deny PR Item' ~> 'Order PR Item')) AS \"# Deny PR -> Order PR\",\nCOUNT(case_id) FILTER (WHERE EVENT_NAME MATCHES ('Receive Invoice' ~> 'Create PO Item')) AS \"# Receive Invoice -> Create PO Item\"\nFROM \"defaultview-431\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}