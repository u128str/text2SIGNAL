{"signal_description": "From the table 'defaultview-124', select the count of 'event_name' as 'cases', the 'event_name' column aliased as 'Event Name', and a case statement that checks the 'Event Created By User Type' column. If it equals 'Dialog', return 'Manual', if it is in ('System', 'Service'), return 'Automated', else return 'undefined' aliased as 'Automation'. Group the results by 'Event Name' and 'Automation', order by 'cases' descending, and limit to 20 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the table 'defaultview-124', select the count of 'event_name' as 'cases', the 'event_name' column aliased as 'Event Name', and a case statement that checks the 'Event Created By User Type' column. If it equals 'Dialog', return 'Manual', if it is in ('System', 'Service'), return 'Automated', else return 'undefined' aliased as 'Automation'. Group the results by 'Event Name' and 'Automation', order by 'cases' descending, and limit to 20 rows.\"\n}\n\nTo generate this summary, I first identified the main query components:\n- The SELECT clause to understand what columns are being retrieved\n- The FROM clause to know the table being queried \n- The CASE statement to summarize the logic for the 'Automation' column\n- The GROUP BY and ORDER BY clauses for how the results are aggregated and sorted\n- The LIMIT to restrict the number of rows returned\n\nUsing this information, I constructed simple English sentences to describe each component in a human-readable way, while explicitly calling out the table name, column names, and column values used.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT(event_name) as \"cases\"\n,\"event_name\" AS \"Event Name\"\n,CASE \n\tWHEN \"Event Created By User Type\" = 'Dialog' THEN 'Manual'\n\tWHEN \"Event Created By User Type\" IN ('System','Service') THEN 'Automated'\nELSE 'undefined' END AS \"Automation\"\nFROM FLATTEN(\"defaultview-124\")\nGROUP BY 2,3\norder by 1 desc\nLIMIT 20 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}