{"signal_description": "First, from the 'defaultview-404' table, select the count of distinct 'Product ID' values where the following two conditions are met: 1) The sum of 'Receipts' is 0 for rows where 'MONTH' is within the last 320 days. 2) The sum of 'Projected Stock' is 0 for rows where 'MONTH' is within the last 320 days. Then, select the count of distinct 'Product ID' values where 'MONTH' is within the last 320 days. Finally, divide the first count by the second count and multiply by 100 to calculate the percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"First, from the 'defaultview-404' table, select the count of distinct 'Product ID' values where the following two conditions are met: 1) The sum of 'Receipts' is 0 for rows where 'MONTH' is within the last 320 days. 2) The sum of 'Projected Stock' is 0 for rows where 'MONTH' is within the last 320 days. Then, select the count of distinct 'Product ID' values where 'MONTH' is within the last 320 days. Finally, divide the first count by the second count and multiply by 100 to calculate the percentage.\"  \n}\n\nTo generate this summary, I first analyzed the overall structure of the query:\n\n- It is calculating a percentage by dividing two counts. \n\n- The counts are based on distinct \"Product ID\" values.\n\n- The first count has an additional WHERE filter with two subqueries.\n\n- The second count only filters on \"MONTH\".\n\nI then examined the specific filter conditions in each part and summarized them in plain language, referring to the table name 'defaultview-404' and column names like 'Product ID', 'Receipts', etc.\n\nThe summary explains the logical flow of operations to provide a human-readable description of what the query is calculating.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\nCOUNT(DISTINCT \"Product ID\") FILTER (\n\tWHERE (\n\t\tSELECT SUM(\"Receipts\") = 0\n\t\tWHERE \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\t\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t\t)\n\n\tAND (\n\t\tSELECT SUM(\"Projected Stock\") = 0\n\t\tWHERE \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\t\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n\t)\n)\n/\nCOUNT(DISTINCT \"Product ID\") FILTER(\n\tWHERE \"MONTH\" >= (DATE_TRUNC('month', NOW()))\n\tAND (\"MONTH\" - DATE_TRUNC('month', NOW())) < DURATION '320days'\n)\n* 100\nFROM \"defaultview-404\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}