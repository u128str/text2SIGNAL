{"signal_description": "From the table 'defaultview-270', calculate the average of the following:\n1. Get the first end_time where event_name starts with 'Start' and 'Routing Step' is '0030'. Subtract the first end_time where event_name starts with 'Complete' and 'Routing Step' is '0020'. \n2. Get the first end_time where event_name starts with 'Start' and 'Routing Step' is '0020'. Subtract the first end_time where event_name starts with 'Complete' and 'Routing Step' is '0010'.\nAdd the results of 1 and 2 together and calculate the average.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the table 'defaultview-270', calculate the average of the following:\n1. Get the first end_time where event_name starts with 'Start' and 'Routing Step' is '0030'. Subtract the first end_time where event_name starts with 'Complete' and 'Routing Step' is '0020'. \n2. Get the first end_time where event_name starts with 'Start' and 'Routing Step' is '0020'. Subtract the first end_time where event_name starts with 'Complete' and 'Routing Step' is '0010'.\nAdd the results of 1 and 2 together and calculate the average.\"\n}\n\nTo generate this summary, I first broke down the SIGNAL query into its main clauses:\n- SELECT: indicates we are selecting/calculating some values\n- AVG(): indicates we are calculating the average \n- FROM: indicates the table name we are querying \n\nI then looked at the complex expressions inside the AVG() and explained them in plain English, calling out the specific column names, values, and operations used.\n\nThe goal was to take the technical SIGNAL syntax and describe the logical intent and steps in an easy to understand way for a human.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT AVG(\n\t(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0030'))\n  - (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0020'))\n\t)\n+\n\t(\n\t(SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Start%' AND \"Routing Step\" ='0020'))\n  - (SELECT FIRST(end_time) \n    \tFILTER( WHERE event_name LIKE 'Complete%' AND \"Routing Step\" ='0010'))\n\t)\n)\nFROM \"defaultview-270\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}