{"signal_description": "From the 'defaultview-217' table, select the truncated day of the earliest end_time as 'Day', and count the CASE_ID where the difference between the earliest end_time for events 'Change Status to To Do' and 'Create Issue' is greater than 10 days. Only include rows where the event name matches the sequence 'Create Issue' followed by 'Change Status to In Progress'. Order the results by 'Day' in ascending order with nulls first, and fill in any missing days in the timeseries with null values.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-217' table, select the truncated day of the earliest end_time as 'Day', and count the CASE_ID where the difference between the earliest end_time for events 'Change Status to To Do' and 'Create Issue' is greater than 10 days. Only include rows where the event name matches the sequence 'Create Issue' followed by 'Change Status to In Progress'. Order the results by 'Day' in ascending order with nulls first, and fill in any missing days in the timeseries with null values.\"  \n}\n\nTo generate this summary, I:\n\n- Identified the main query components - SELECT, FROM, WHERE, ORDER BY, FILL\n- Summarized the SELECT clause by describing the columns and calculations being retrieved \n- Noted the FROM table name \n- Summarized the WHERE filter conditions\n- Summarized the ORDER BY and FILL clauses\n- Wrote the summary in a human-readable, instructional style", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT DATE_TRUNC('day', (SELECT FIRST (end_time))) AS \"Day\", COUNT (CASE_ID) FILTER (WHERE (SELECT FIRST (END_TIME) WHERE EVENT_NAME IN ('Change Status to To Do')) - (SELECT FIRST (END_TIME) WHERE EVENT_NAME IN ('Create Issue')) > DURATION '10days')\nFROM \"defaultview-217\"\nWHERE EVENT_NAME MATCHES ('Create Issue' ~> 'Change Status to In Progress')\nORDER BY 1 ASC NULLS FIRST\nFILL timeseries('DAY'), NULL \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}