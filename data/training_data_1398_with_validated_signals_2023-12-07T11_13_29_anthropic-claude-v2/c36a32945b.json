{"signal_description": "From the 'defaultview-59' table, calculate the percentage of case IDs where the time duration between the last 'Create Invoice' event end time and the first 'Clear Invoice' event end time is less than 4 hours. To calculate this:\n1. Count the total number of case IDs in the table. \n2. Count the number of case IDs where the time duration filter condition is met. \n3. Divide the count from step 2 by the count from step 1 and multiply by 100 to get the percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-59' table, calculate the percentage of case IDs where the time duration between the last 'Create Invoice' event end time and the first 'Clear Invoice' event end time is less than 4 hours. To calculate this:\n1. Count the total number of case IDs in the table. \n2. Count the number of case IDs where the time duration filter condition is met. \n3. Divide the count from step 2 by the count from step 1 and multiply by 100 to get the percentage.\"\n}\n\nTo generate this summary, I first analyzed the SIGNAL query to understand the intent:\n- It is calculating a percentage based on a condition filter applied to the case_id column\n- The filter condition checks the time duration between two events related to invoice handling\n- The percentage is calculated by dividing the filtered count by total count\n\nI then mapped the key components of the query to human-readable phrases:\n- 'defaultview-59' table name\n- case_id column\n- Event names 'Create Invoice' and 'Clear Invoice'\n- Duration filter condition\n- Aggregation using count and division to calculate percentage\n\nUsing this information, I constructed simple and clear sentences to explain each step required to calculate the metric.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\ncount(case_id)\n\tFILTER (WHERE \n\t\t\t(SELECT LAST(end_time) FILTER (WHERE event_name\n\t\t\tIN ('Create Invoice'))\n\t\t-\n\tFIRST(end_time) FILTER (WHERE event_name\n\t\t\tIN ('Clear Invoice'))\n\t\t) < DURATION '4hours'\n)\n/count(case_id) *100\nFROM \"defaultview-59\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}