{"signal_description": "The query is selecting data from a table called 'defaultview-183'. It is calculating two metrics and one dimension:\n\n1. Count of all CASE_ID values in the table, aliased as 'Process Orders'. This gives the total number of process orders.\n\n2. Percentage of process orders where the EVENT_NAME contains 'Material shortage'. This is calculated by filtering the CASE_ID values where EVENT_NAME matches 'Material shortage', counting those rows, dividing by the total COUNT(CASE_ID) and multiplying by 100 to get a percentage value. This is aliased as '% Material Shortage'. \n\n3. The 'Division' column values from the table, without any aggregation.\n\nThe final output will show the 'Process Orders' count, '% Material Shortage' percentage, and 'Division' values, with one row per unique 'Division' value. The results are ordered by 'Process Orders' descending.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"The query is selecting data from a table called 'defaultview-183'. It is calculating two metrics and one dimension:\n\n1. Count of all CASE_ID values in the table, aliased as 'Process Orders'. This gives the total number of process orders.\n\n2. Percentage of process orders where the EVENT_NAME contains 'Material shortage'. This is calculated by filtering the CASE_ID values where EVENT_NAME matches 'Material shortage', counting those rows, dividing by the total COUNT(CASE_ID) and multiplying by 100 to get a percentage value. This is aliased as '% Material Shortage'. \n\n3. The 'Division' column values from the table, without any aggregation.\n\nThe final output will show the 'Process Orders' count, '% Material Shortage' percentage, and 'Division' values, with one row per unique 'Division' value. The results are ordered by 'Process Orders' descending.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT (CASE_ID) as \"Process Orders\",\nCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Material shortage')) / COUNT (CASE_ID)  * 100 AS \"% Material Shortage\",\n\"Division\"\nFROM \"defaultview-183\"\norder by 1 desc \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}