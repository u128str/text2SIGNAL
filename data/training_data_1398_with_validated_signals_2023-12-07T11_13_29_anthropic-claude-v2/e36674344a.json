{"signal_description": "1. From the 'defaultview-529' table, select rows where the EVENT_NAME matches the pattern 'Post Invoice' followed by 'Clear Invoice'.\n2. For each selected row, truncate the 'Last Inv. Item Clearing Date' to month granularity and alias it as 'Invoice Clearing Date'.  \n3. Extract the 'Inv. Company Code Text' column value and alias it as 'Company Code Name'.\n4. Calculate the percentage of invoices cleared before their due date as 'Payment Rate'. This is done by counting the number of rows where 'Last Inv. Item Due Date' is less than 'Last Inv. Item Clearing Date', dividing by the number of rows where 'Last Inv. Item Clearing Date' is not null, and multiplying by 100.\n5. Keep only the rows where 'Invoice Clearing Date' is not null.\n6. Sort the results by 'Invoice Clearing Date' in ascending order, with nulls first.\n7. Fill in any missing months in the 'Invoice Clearing Date' time series.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"1. From the 'defaultview-529' table, select rows where the EVENT_NAME matches the pattern 'Post Invoice' followed by 'Clear Invoice'.\n2. For each selected row, truncate the 'Last Inv. Item Clearing Date' to month granularity and alias it as 'Invoice Clearing Date'.  \n3. Extract the 'Inv. Company Code Text' column value and alias it as 'Company Code Name'.\n4. Calculate the percentage of invoices cleared before their due date as 'Payment Rate'. This is done by counting the number of rows where 'Last Inv. Item Due Date' is less than 'Last Inv. Item Clearing Date', dividing by the number of rows where 'Last Inv. Item Clearing Date' is not null, and multiplying by 100.\n5. Keep only the rows where 'Invoice Clearing Date' is not null.\n6. Sort the results by 'Invoice Clearing Date' in ascending order, with nulls first.\n7. Fill in any missing months in the 'Invoice Clearing Date' time series.\"\n}\n\nTo generate this summary, I first read through the SIGNAL query to understand the overall logic and operations being performed. I then described each major step in plain language, calling out the specific column names, table name, and any conditions or value transformations. The goal was to capture the query's intent in a human-readable format without SQL syntax.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  \"Invoice Clearing Date\",\n  \"Company Code Name\",\n  \"Payment Rate\"\nFROM\n  (\n    SELECT\n      DATE_TRUNC(\n        'Month',\n        (\n          SELECT\n            LAST (END_TIME) FILTER (\n              WHERE\n                EVENT_NAME IN ('Clear Invoice')\n            )\n        )\n      ) AS \"Invoice Clearing Date\",\n      \"Inv. Company Code Text\" AS \"Company Code Name\",\n      COUNT(case_id) FILTER (\n        WHERE\n          (\n            \"Last Inv. Item Due Date\" < \"Last Inv. Item Clearing Date\"\n          )\n      ) / COUNT(case_id) FILTER (\n        WHERE\n          (\"Last Inv. Item Clearing Date\" IS NOT NULL)\n      ) * 100 AS \"Payment Rate\"\n    FROM\n      \"defaultview-529\"\n    WHERE\n      EVENT_NAME MATCHES ('Post Invoice' ~> 'Clear Invoice')\n  ) AS selection\nWHERE\n  \"Invoice Clearing Date\" IS NOT NULL\nORDER BY\n  1 ASC NULLS FIRST FILL TIMESERIES('Month') \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}