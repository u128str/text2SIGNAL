{"signal_description": "From the table 'defaultview-222', select the average of 'ClearingDate' minus 'NetDueDate' for only those rows where 'EVENT_NAME' contains 'Clear'. Alias this as 'AVG Paid Late Days'.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the table 'defaultview-222', select the average of 'ClearingDate' minus 'NetDueDate' for only those rows where 'EVENT_NAME' contains 'Clear'. Alias this as 'AVG Paid Late Days'.\"\n}\n\nTo generate this description, I first identified the key components of the query:\n\n- The table name 'defaultview-222'\n- The columns referenced: 'ClearingDate', 'NetDueDate', 'EVENT_NAME' \n- The filter on 'EVENT_NAME' using a LIKE condition\n- The aggregation function AVG()\n- The alias \"AVG Paid Late Days\"\n\nI then constructed the description in plain language, mentioning the table name, referring to column names, the filter condition, the aggregation operation and the alias.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT AVG (\"ClearingDate\" - \"NetDueDate\")\nFILTER (WHERE EVENT_NAME LIKE 'Clear%'  )\n AS \"AVG Paid Late Days\"\nFROM FLATTEN(\"defaultview-222\") \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}