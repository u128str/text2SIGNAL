{"signal_description": "From the table 'defaultview-57', calculate the percentage of cases where the event name matches 'Reverse Invoice' out of all cases where the event name matches either 'Create FI Invoice' or 'Record Invoice Receipt'. To do this:\n\n1. Count the number of cases where the event name matches 'Reverse Invoice'. Call this count A.\n\n2. Count the number of cases where the event name matches 'Create FI Invoice' or 'Record Invoice Receipt'. Call this count B. \n\n3. Divide count A by count B and multiply by 100 to get the percentage.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the table 'defaultview-57', calculate the percentage of cases where the event name matches 'Reverse Invoice' out of all cases where the event name matches either 'Create FI Invoice' or 'Record Invoice Receipt'. To do this:\n\n1. Count the number of cases where the event name matches 'Reverse Invoice'. Call this count A.\n\n2. Count the number of cases where the event name matches 'Create FI Invoice' or 'Record Invoice Receipt'. Call this count B. \n\n3. Divide count A by count B and multiply by 100 to get the percentage.\"\n}\n\nTo generate this summary, I first identified the table name 'defaultview-57' and the column 'event_name' that is being filtered on. \n\nI then looked at the two COUNT aggregates - the first counts cases where event_name matches 'Reverse Invoice', and the second counts cases where event_name matches either 'Create FI Invoice' or 'Record Invoice Receipt'. \n\nI described these two counts in simple human language, assigning them temporary names A and B for clarity.\n\nFinally, I explained that the percentage is calculated by dividing A by B and multiplying by 100.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT count(case_id) \nFILTER (\n    WHERE event_name MATCHES('Reverse Invoice')\n    )\n/ COUNT(case_id) FILTER (\n\tWHERE event_name MATCHES(('Create FI Invoice'|'Record Invoice Receipt'))\n    )\n* 100\nFROM \"defaultview-57\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}