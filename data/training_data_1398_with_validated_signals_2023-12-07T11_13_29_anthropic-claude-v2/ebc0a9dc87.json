{"signal_description": "First, from the 'defaultview-183' table, count the number of 'GI for order' events where the 'Event Created By User Type' is 'System', 'Batch Job', or 'Service'. Then, count the total number of 'GI for order' events. Divide the first count by the second count, and multiply by 100 to calculate the percentage of 'GI for order' events created by 'System', 'Batch Job', or 'Service'.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"First, from the 'defaultview-183' table, count the number of 'GI for order' events where the 'Event Created By User Type' is 'System', 'Batch Job', or 'Service'. Then, count the total number of 'GI for order' events. Divide the first count by the second count, and multiply by 100 to calculate the percentage of 'GI for order' events created by 'System', 'Batch Job', or 'Service'.\"  \n}\n\nTo generate this summary, I:\n- Identified the table name 'defaultview-183' \n- Noted the column name 'Event Created By User Type' and the values 'System', 'Batch Job', 'Service' used to filter rows\n- Noted the column name 'event_name' and the value 'GI for order' used in the nested queries\n- Recognized the overall intent is to calculate a percentage based on two counts\n- Summarized in plain language each step of filtering, counting, dividing and multiplying to achieve the percentage calculation", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT SUM(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE (\"Event Created By User Type\" IN ('System','Batch Job','Service') \n        AND event_name IN ('GI for order'))\n\t)\n   ))\n/ SUM((SELECT COUNT(event_name)\n\tFILTER (\n\t\tWHERE (event_name IN ('GI for order')))))\n* 100\nFROM \"defaultview-183\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}