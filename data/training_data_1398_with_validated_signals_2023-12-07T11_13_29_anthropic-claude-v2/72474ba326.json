{"signal_description": "From the table 'defaultview-225', select the following columns after flattening the table:\n1. Group the events into 'PO events', 'Invoice events', 'Payment Events' or keep the original event name based on pattern matching of the event_name column. Alias this column as 'Group of Events'.\n2. Count distinct case_id as '# of Invoices'. \n3. Count total events as '# of Events'.\n4. Count events where 'Event Created By User Type' is 'Dialog' as '# of Manual Events'.\n5. Calculate percentage of events where 'Event Created By User Type' is 'System' or 'Service' out of total events as 'Automation Rate in %'.\nFilter the rows where 'Event Created By User Type' is not null. \nOrder the results by '# of Events' in descending order.", "llm_output": " Here is the summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the table 'defaultview-225', select the following columns after flattening the table:\n1. Group the events into 'PO events', 'Invoice events', 'Payment Events' or keep the original event name based on pattern matching of the event_name column. Alias this column as 'Group of Events'.\n2. Count distinct case_id as '# of Invoices'. \n3. Count total events as '# of Events'.\n4. Count events where 'Event Created By User Type' is 'Dialog' as '# of Manual Events'.\n5. Calculate percentage of events where 'Event Created By User Type' is 'System' or 'Service' out of total events as 'Automation Rate in %'.\nFilter the rows where 'Event Created By User Type' is not null. \nOrder the results by '# of Events' in descending order.\"\n}\n\nThis summary was constructed by:\n- Identifying the table name from the FROM clause\n- Listing out the column names and aliases from the SELECT clause\n- Explaining the CASE expression that groups events\n- Summarizing each aggregate calculation (COUNT, COUNT DISTINCT, etc) \n- Highlighting the WHERE filter criteria\n- Noting the ORDER BY clause", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  CASE\n    WHEN event_name LIKE '%PO%'\n    OR event_name LIKE '%Purchase Order%'\n    OR event_name LIKE '%Goods Receipt%'\n    OR event_name LIKE '%Make Quality Usage Decision%'\n    OR event_name LIKE '%Order Confirmation%' THEN 'PO events'\n    WHEN event_name LIKE '%Invoice%'\n    OR event_name LIKE '%Memo%'\n    OR event_name LIKE '%Change Reference Number%' THEN 'Invoice events'\n    WHEN event_name LIKE '%Payment%' THEN 'Payment Events'\n    ELSE event_name\n  END AS \"Group of Events\",\n  COUNT(DISTINCT case_id) AS \"# of Invoices\",\n  COUNT(event_name) AS \"# of Events\",\n  COUNT(event_name) FILTER(\n  \tWHERE \"Event Created By User Type\" IN ('Dialog'))\n  \tAS \"# of Manual Events\",\n  COUNT(event_name) FILTER (\n    WHERE\n      \"Event Created By User Type\" IN ('System', 'Service')\n  ) / COUNT(\"event_name\") * 100 AS \"Automation Rate in %\"\nFROM\n  FLATTEN(\"defaultview-225\")\n\tWHERE \"Event Created By User Type\" IS NOT NULL\nORDER BY\n  3 DESC \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}