{"signal_description": "First, from the table 'defaultview-383', get all rows and flatten the data. Then, filter the rows where the event name contains 'Quotation' and the ChangeType is 'Update'. Count the distinct UniqueEventId values from those filtered rows to get the number of changes. Also select the SalesDocCustomerCompany column. Group the results by SalesDocCustomerCompany and order by the number of changes descending. Finally, limit the results to the top 10 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"First, from the table 'defaultview-383', get all rows and flatten the data. Then, filter the rows where the event name contains 'Quotation' and the ChangeType is 'Update'. Count the distinct UniqueEventId values from those filtered rows to get the number of changes. Also select the SalesDocCustomerCompany column. Group the results by SalesDocCustomerCompany and order by the number of changes descending. Finally, limit the results to the top 10 rows.\"  \n}\n\nTo generate this summary, I first analyzed the SIGNAL query to understand the high-level steps:\n\n1. Selecting data from a table \n2. Filtering the rows based on conditions\n3. Aggregating using COUNT and GROUP BY\n4. Ordering and limiting the results\n\nI then described each step in simple human language, referring to the specific table name, column names and filter values used in the original query. The goal was to explain what the query is doing in an easy to understand way, while preserving the key details.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Quotation%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}