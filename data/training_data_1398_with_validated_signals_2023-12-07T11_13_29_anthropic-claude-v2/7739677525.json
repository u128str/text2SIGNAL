{"signal_description": "Select the case_id, end_time, Changed Table, Changed Field, Change Old Value, and Change New Value columns from the defaultview-225 table. Filter the results where the Changed Table is either EKKO or BSEG and the Changed Field is one of ZTERM, ZBD1T, ZBD2T, ZBD3T, ZBD1P, or ZBD2P.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"Select the case_id, end_time, Changed Table, Changed Field, Change Old Value, and Change New Value columns from the defaultview-225 table. Filter the results where the Changed Table is either EKKO or BSEG and the Changed Field is one of ZTERM, ZBD1T, ZBD2T, ZBD3T, ZBD1P, or ZBD2P.\"  \n}\n\nTo generate this summary, I first looked at the SELECT clause to see which columns are being retrieved. Then I checked the FROM clause to see the table name. Next, I examined the WHERE clause filters to understand which criteria is being applied. Using this information, I constructed simple English sentences to describe what data is being selected and what conditions are being used to filter it.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \ncase_id, \"end_time\" \n,\"Changed Table\"\n,\"Changed Field\"\n,\"Change Old Value\"\n,\"Change New Value\"\nFROM FLATTEN(\"defaultview-225\")\n--WHERE EVENT_NAME MATCHES (ILIKE 'Update PO Payment Terms')\nWHERE (\"Changed Table\" IN ('EKKO','BSEG'))\nAND (\"Changed Field\" IN  ('ZTERM', 'ZTERM', 'ZBD1T','ZBD2T','ZBD3T', 'ZBD1P', 'ZBD2P'))\n\n\n--,CASE \n--\tWHEN \"Change Old Value\" < \"Change New Value\" THEN \"Changed to later due date\"\n--    WHEN \"Change Old Value\" > \"Change New Value\" THEN \"Changed to earlier due date\"\n--    ELSE 'ok'\n-- END AS \"Changed behaviour\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}