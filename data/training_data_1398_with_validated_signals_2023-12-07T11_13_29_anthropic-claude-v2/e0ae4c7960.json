{"signal_description": "The query is selecting the count of event_name column from the defaultview-290 table where the event_name value matches the pattern 'Change Invoice%', 'Create Invoice Item Cancellation%' or 'Update Invoice%'. It groups the results by the SalesDocCustomerCompany column and orders the counts in descending order. Only the top 10 results are returned.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"The query is selecting the count of event_name column from the defaultview-290 table where the event_name value matches the pattern 'Change Invoice%', 'Create Invoice Item Cancellation%' or 'Update Invoice%'. It groups the results by the SalesDocCustomerCompany column and orders the counts in descending order. Only the top 10 results are returned.\"  \n}\n\nTo generate this summary, I first analyzed the SELECT, FROM, WHERE, GROUP BY, ORDER BY and LIMIT clauses to understand what the query is doing:\n\n- SELECT clause shows it is counting the event_name column \n- FROM clause specifies the table name defaultview-290\n- WHERE clause filters on event_name values matching the 3 specified patterns\n- GROUP BY clause groups the counts by the SalesDocCustomerCompany column\n- ORDER BY sorts the counts in descending order\n- LIMIT limits the results to top 10 rows\n\nI then described in human language what data is being selected, what conditions are applied, how it is aggregated and sorted, to provide an easy to understand summary of what the query does.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT (\"event_name\") FILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE \n 'Change Invoice%' OR event_name LIKE 'Create Invoice Item Cancellation%' OR event_name LIKE 'Update Invoice%') AS created_with_dialog MATCHES (created_with_dialog)),\"SalesDocCustomerCompany\" \nFROM FLATTEN(\"defaultview-290\")\nGROUP BY 2\norder by 1 desc\nLimit 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}