{"signal_description": "First, from the 'defaultview-197' table, count the distinct 'SalesDocument' values where the 'event_name' contains 'Reject Billing Request'. Then, also from 'defaultview-197', count the distinct 'SalesDocument' values where the 'event_name' is exactly 'Create Billing Request (DMR)'. Divide the first count by the second count, and multiply by 100 to get the percentage. This gives the percentage of billing requests that were rejected out of the total billing requests created.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"First, from the 'defaultview-197' table, count the distinct 'SalesDocument' values where the 'event_name' contains 'Reject Billing Request'. Then, also from 'defaultview-197', count the distinct 'SalesDocument' values where the 'event_name' is exactly 'Create Billing Request (DMR)'. Divide the first count by the second count, and multiply by 100 to get the percentage. This gives the percentage of billing requests that were rejected out of the total billing requests created.\"  \n}\n\nTo generate this summary, I looked at each part of the SIGNAL query:\n- The SELECT clause shows we are calculating a percentage. \n- The two COUNT(DISTINCT) parts with the FILTER clauses count distinct 'SalesDocument' values under different 'event_name' conditions.\n- The division and multiplication convert this into a percentage.\n- The FROM clause specifies the 'defaultview-197' table as the source.\n\nSo I described in plain language what each part of the query is doing and what values/columns are being used, to create a human-readable summary.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \nCOUNT(DISTINCT \"SalesDocument\") FILTER (\n\tWHERE event_name LIKE 'Reject Billing Request%')\n/\nCOUNT(DISTINCT \"SalesDocument\") FILTER (\n\tWHERE event_name ='Create Billing Request (DMR)')\n* 100\nFROM FLATTEN(\"defaultview-197\") \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}