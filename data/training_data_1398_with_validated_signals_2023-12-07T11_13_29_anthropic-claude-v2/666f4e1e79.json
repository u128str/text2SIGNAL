{"signal_description": "From the 'defaultview-529' table, calculate the percentage of cases where the event 'Remove Dunning Block' is followed by the event 'Clear Invoice', out of all cases where the event 'Post Invoice' is followed by the event 'Clear Invoice'. To do this:\n\n1. Count the number of distinct case_id values where the event name matches the pattern 'Remove Dunning Block' followed by 'Clear Invoice'. \n\n2. Count the number of distinct case_id values where the event name matches the pattern 'Post Invoice' followed by 'Clear Invoice'.\n\n3. Divide the first count by the second count. \n\n4. Multiply the result by 100 to get the percentage.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the 'defaultview-529' table, calculate the percentage of cases where the event 'Remove Dunning Block' is followed by the event 'Clear Invoice', out of all cases where the event 'Post Invoice' is followed by the event 'Clear Invoice'. To do this:\n\n1. Count the number of distinct case_id values where the event name matches the pattern 'Remove Dunning Block' followed by 'Clear Invoice'. \n\n2. Count the number of distinct case_id values where the event name matches the pattern 'Post Invoice' followed by 'Clear Invoice'.\n\n3. Divide the first count by the second count. \n\n4. Multiply the result by 100 to get the percentage.\"\n}\n\nTo generate this summary, I parsed the SIGNAL query to identify the key components:\n\n- The table name ('defaultview-529')\n- The column names (case_id, event_name)  \n- The filter conditions on event_name using MATCHES and the ~> operator\n- The aggregation (COUNT) and arithmetic operations (/ and *) to calculate a percentage\n\nI then translated these key components into plain English instructions that describe the intent of the query in a human-readable format.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE event_name \n    MATCHES('Remove Dunning Block' ~> 'Clear Invoice')\n)\n/\nCOUNT(case_id) FILTER (\n\tWHERE event_name \n    MATCHES('Post Invoice' ~> 'Clear Invoice'))\n* 100\nFROM \"defaultview-529\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}