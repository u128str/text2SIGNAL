{"signal_description": "1. From the 'defaultview-225' table, select the sum of: 2. The count of 'case_id' where 'Event Created By User Type' is 'System' or 'Service' and event_name contains 'Create Invoice', 'Create Credit Memo', 'Post Invoice', 'Post Credit Memo', 'Clear Invoice', 'Clear Credit Memo' or 'Reverse Invoice' divided by 3. The count of 'case_id' where event_name contains 'Create Invoice', 'Create Credit Memo', 'Post Invoice', 'Post Credit Memo', 'Clear Invoice', 'Clear Credit Memo' or 'Reverse Invoice' and 'Event Created By User Type' is not null. 4. Multiply the result by 100.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"1. From the 'defaultview-225' table, select the sum of: 2. The count of 'case_id' where 'Event Created By User Type' is 'System' or 'Service' and event_name contains 'Create Invoice', 'Create Credit Memo', 'Post Invoice', 'Post Credit Memo', 'Clear Invoice', 'Clear Credit Memo' or 'Reverse Invoice' divided by 3. The count of 'case_id' where event_name contains 'Create Invoice', 'Create Credit Memo', 'Post Invoice', 'Post Credit Memo', 'Clear Invoice', 'Clear Credit Memo' or 'Reverse Invoice' and 'Event Created By User Type' is not null. 4. Multiply the result by 100.\"\n}\n\nTo generate this summary, I first broke down the query into main steps:\n1. Selecting data from the 'defaultview-225' table\n2. Calculating a ratio by dividing two subqueries \n3. Multiplying the ratio by 100\n\nI then explained each subquery in plain language, referring to the specific column names and values used. For the final step, I noted that the overall result is multiplied by 100 to convert to a percentage.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  SUM(\n    (\n      SELECT\n        COUNT(\"case_id\") FILTER (\n          WHERE\n            (\n              \"Event Created By User Type\" IN ('System', 'Service')\n              AND (\n                event_name LIKE '%Create Invoice%'\n                OR event_name LIKE '%Create Credit Memo%'\n                OR event_name LIKE '%Post Invoice%'\n                OR event_name LIKE '%Post Credit Memo%'\n                OR event_name LIKE '%Clear Invoice%'\n                OR event_name LIKE '%Clear Credit Memo%'\n                OR event_name LIKE '%Reverse Invoice%'\n              )\n            )\n        )\n    )\n  ) / SUM(\n    (\n      SELECT\n        COUNT(\"case_id\") FILTER (\n          WHERE\n            event_name LIKE '%Create Invoice%'\n            OR event_name LIKE '%Create Credit Memo%'\n            OR event_name LIKE '%Post Invoice%'\n            OR event_name LIKE '%Post Credit Memo%'\n            OR event_name LIKE '%Clear Invoice%'\n            OR event_name LIKE '%Clear Credit Memo%'\n            OR event_name LIKE '%Reverse Invoice%'\n            AND \"Event Created By User Type\" IS NOT NULL\n        )\n    )\n  ) * 100\nFROM\n  \"defaultview-225\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}