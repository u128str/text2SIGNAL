{"signal_description": "From the 'defaultview-183' table, count the number of case_id values where the 'Actual Delivery Date' column is not null and the 'Actual Delivery Date' is less than the 'Scheduled Finish Date'. Divide this count by the count of case_id values where 'Actual Delivery Date' is not null. Multiply the result by 100 to get the percentage.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the 'defaultview-183' table, count the number of case_id values where the 'Actual Delivery Date' column is not null and the 'Actual Delivery Date' is less than the 'Scheduled Finish Date'. Divide this count by the count of case_id values where 'Actual Delivery Date' is not null. Multiply the result by 100 to get the percentage.\"  \n}\n\nTo generate this description, I first parsed the SIGNAL query to understand the intent:\n\n- The main query is selecting a calculation involving two aggregate counts on the case_id column. \n\n- The first count filters for non-null 'Actual Delivery Date' and 'Actual Delivery Date' < 'Scheduled Finish Date'. \n\n- The second count filters only for non-null 'Actual Delivery Date'.\n\n- Dividing the first count by the second gives the percentage of deliveries made before the scheduled finish date when there is an actual delivery date.\n\n- Multiplying this by 100 converts it to a percentage value.\n\n- The FROM clause specifies the 'defaultview-183' table as the source.\n\nWith this understanding, I summarized it in plain language, explicitly calling out the table name, column names, filters, and intent of the calculation.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT(case_id) FILTER(\n\tWHERE \"Actual Delivery Date\" IS NOT NULL AND (\"Actual Delivery Date\" - \"Scheduled Finish Date\" < DURATION '0days')\n    )\n/\nCOUNT(case_id) FILTER(\n\tWHERE \"Actual Delivery Date\" IS NOT NULL) \n*100\nFROM \"defaultview-183\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}