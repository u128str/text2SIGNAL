{"signal_description": "This query selects the percentage of manually allocated payments for each company code from the 'defaultview-222' table. It calculates the percentage by taking the count of distinct 'ARUniqueKey' values where 'event_name' is 'Clear Accounts Receivable' and 'AutomationFlag' is null, dividing by the count of distinct 'ARUniqueKey' values where 'event_name' is 'Clear Accounts Receivable', and multiplying by 100. It groups the results by 'AR_CompanyCode' and orders the results by the calculated percentage in descending order. The query limits the results to the top 10 company codes.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"This query selects the percentage of manually allocated payments for each company code from the 'defaultview-222' table. It calculates the percentage by taking the count of distinct 'ARUniqueKey' values where 'event_name' is 'Clear Accounts Receivable' and 'AutomationFlag' is null, dividing by the count of distinct 'ARUniqueKey' values where 'event_name' is 'Clear Accounts Receivable', and multiplying by 100. It groups the results by 'AR_CompanyCode' and orders the results by the calculated percentage in descending order. The query limits the results to the top 10 company codes.\"  \n}\n\nTo generate this summary, I examined the SELECT, FROM, WHERE, GROUP BY, ORDER BY, and LIMIT clauses to understand what the query is calculating, filtering, and returning. I looked at the column names, operators, and values to determine what data is being aggregated and filtered. I summarized the purpose and logic of each clause in plain language, referring to column names and values explicitly.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT (count(DISTINCT \"ARUniqueKey\"  ) FILTER\n(WHERE event_name = 'Clear Accounts Receivable' and \"AutomationFlag\" is null)\n/ \ncount(DISTINCT \"ARUniqueKey\"  ) FILTER \n(WHERE event_name IN \n('Clear Accounts Receivable'))\n) * 100 as \"% of Manually allocated Payments\",\n\"AR_CompanyCode\" AS \"Company Code\"\n\nFROM FLATTEN(\"defaultview-222\")\nGROUP BY 2\nORDER By 1 DESC\nLIMIT 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}