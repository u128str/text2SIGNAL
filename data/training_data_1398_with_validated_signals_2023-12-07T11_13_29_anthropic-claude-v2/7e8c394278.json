{"signal_description": "From the 'defaultview-222' table, select the 'Overdue Category' column, which is a CASE statement that categorizes the days overdue into buckets based on the difference between the current date (NOW()) and the NetDueDate column. It also selects the sum of the 'AmountInGlobalCurrency' column aliased as '#Receivables'. The query filters for rows where NetDueDate is not null, the event_name is 'Create Accounts Receivable', ClearingDate is null, and the current date is greater than or equal to NetDueDate. Finally, it orders the results by the 'Overdue Category' column.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-222' table, select the 'Overdue Category' column, which is a CASE statement that categorizes the days overdue into buckets based on the difference between the current date (NOW()) and the NetDueDate column. It also selects the sum of the 'AmountInGlobalCurrency' column aliased as '#Receivables'. The query filters for rows where NetDueDate is not null, the event_name is 'Create Accounts Receivable', ClearingDate is null, and the current date is greater than or equal to NetDueDate. Finally, it orders the results by the 'Overdue Category' column.\"\n}\n\nTo generate this summary, I:\n- Identified the main query actions: SELECT, CASE, SUM, FROM, WHERE, ORDER BY\n- Noted the table name 'defaultview-222' \n- Listed out the column names referenced: NetDueDate, AmountInGlobalCurrency, event_name, ClearingDate\n- Explained the CASE statement logic that categorizes by days overdue\n- Summarized the WHERE filters applied\n- Included the ORDER BY column\n- Wrote the description using natural language while touching on all key components of the query.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \nCASE \n\nWHEN \n\t\t NOW() = NetDueDate THEN '1. Due'\n              \nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '0day'\n        AND  (NOW()-NetDueDate)<= DURATION '7day'\n        THEN '2. 0-7 days'\n        \nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '7day'\n        AND  (NOW()-NetDueDate)<= DURATION '14day'\n        THEN '3. 8-14 days'\nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '14day'\n        AND  (NOW()-NetDueDate)<= DURATION '30day'\n        THEN '4. 15-30 days'\nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '30day'\n        AND  (NOW()-NetDueDate)<= DURATION '60day'\n        THEN '5. 31-60 days'\n        \nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '60day'\n        AND  (NOW()-NetDueDate)<= DURATION '90day'\n        THEN '6. 61-90 days'\n        \nWHEN \n\t\t(NOW()-NetDueDate)> DURATION '90day'\n        THEN '7. >90 days'\n        \nEND AS \"Overdue Category\",  SUM(\"AmountInGlobalCurrency\"  ) as \"#Receivables\"\nFROM FLATTEN (\"defaultview-222\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate \n ORDER BY 1 ASC\n  \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}