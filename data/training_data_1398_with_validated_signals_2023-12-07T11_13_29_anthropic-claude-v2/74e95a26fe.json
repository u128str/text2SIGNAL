{"signal_description": "First, from the table 'defaultview-383', select the distinct CASE_ID column. Then, count the number of distinct CASE_ID values and store this in a variable. Next, filter the rows where ChangeType equals 'Update'. Count the number of rows where ChangeType equals 'Update' and store this in another variable. Divide the second variable by the first variable, multiply by 100, and store this in a column named 'Change Rate'. Also select the 'InvoiceCompanyCode' and 'SalesDocItemPlant' columns. Order the results by the 'Change Rate' column in descending order. Finally, limit the results to the top 10 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"First, from the table 'defaultview-383', select the distinct CASE_ID column. Then, count the number of distinct CASE_ID values and store this in a variable. Next, filter the rows where ChangeType equals 'Update'. Count the number of rows where ChangeType equals 'Update' and store this in another variable. Divide the second variable by the first variable, multiply by 100, and store this in a column named 'Change Rate'. Also select the 'InvoiceCompanyCode' and 'SalesDocItemPlant' columns. Order the results by the 'Change Rate' column in descending order. Finally, limit the results to the top 10 rows.\"\n}\n\nTo generate this summary, I first analyzed the SIGNAL query to understand the high level logic and operations. I looked at the SELECT, FROM, WHERE, ORDER BY, and LIMIT clauses to see which columns and tables were referenced. I also looked at the aggregate functions like COUNT and Boolean expressions to understand the filtering and calculations being performed. Finally, I translated the technical query language into plain English instructions that describe each step at a high level.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT (DISTINCT CASE_ID) FILTER (\n    WHERE\n      (\n        SELECT\n          BOOL_OR (ChangeType = 'Update')          \n      )\n  ) / COUNT(DISTINCT CASE_ID) * 100 AS \"Change Rate\",\n  \"InvoiceCompanyCode\",\n  \"SalesDocItemPlant\"\nFROM\n  \"defaultview-383\"\nORDER BY\n  1 DESC\nLIMIT\n  10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}