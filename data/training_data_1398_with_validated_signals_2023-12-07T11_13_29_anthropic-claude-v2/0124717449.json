{"signal_description": "From the 'defaultview-183' table, select the 'Plant' column. Also count the number of rows where 'Event Name' is 'Create Process Order' and 'Planned Order Number' is null, and alias this count as '# Created Process Orders'. Calculate the percentage of these rows where 'Event Created By User Type' is not in ('Dialog') and alias this as 'Automation Rate'. Order the results by '# Created Process Orders' in descending order and limit to the top 10 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-183' table, select the 'Plant' column. Also count the number of rows where 'Event Name' is 'Create Process Order' and 'Planned Order Number' is null, and alias this count as '# Created Process Orders'. Calculate the percentage of these rows where 'Event Created By User Type' is not in ('Dialog') and alias this as 'Automation Rate'. Order the results by '# Created Process Orders' in descending order and limit to the top 10 rows.\"  \n}\n\nThe signal description was constructed by:\n- Identifying the table name 'defaultview-183' \n- Noting the selected columns: 'Plant', count of rows with certain conditions, and a calculated percentage\n- Summarizing the WHERE conditions: 'Event Name' = 'Create Process Order' and 'Planned Order Number' IS NULL\n- Explaining the filter on 'Event Created By User Type' NOT IN ('Dialog') used to calculate the percentage \n- Describing the ORDER BY and LIMIT clauses at the end", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT count(event_name) AS \"# Created Process Orders\" ,\n(COUNT (EVENT_NAME) FILTER (WHERE \"Event Created By User Type\" NOT IN ('Dialog'))) / (COUNT (EVENT_NAME)) * 100 AS \"Automation Rate\", \n \"Plant\" \nFROM FLATTEN(\"defaultview-183\")\nWHERE \"Planned Order Number\" IS NULL AND EVENT_NAME = 'Create Process Order'\n-- AND count(event_name) > 5000\nORDER BY 1 desc\nLIMIT 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}