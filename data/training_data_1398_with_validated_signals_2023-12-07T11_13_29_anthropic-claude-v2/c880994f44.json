{"signal_description": "From the 'defaultview-225' table, calculate the percentage of cases where the sequence of events 'Vendor Creates Invoice' followed by 'Post Invoice' followed by 'Due Date passed' followed by 'Clear Invoice' occurred, out of all cases where the event 'Clear Invoice' occurred. To do this:\n1. Count the number of distinct CASE_ID values where the EVENT_NAME column matches the sequence 'Vendor Creates Invoice' ~> 'Post Invoice' ~> 'Due Date passed' ~> 'Clear Invoice'. This is the numerator. \n2. Count the number of distinct CASE_ID values where the EVENT_NAME column matches 'Clear Invoice'. This is the denominator.\n3. Divide the numerator by the denominator and multiply by 100 to calculate the percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-225' table, calculate the percentage of cases where the sequence of events 'Vendor Creates Invoice' followed by 'Post Invoice' followed by 'Due Date passed' followed by 'Clear Invoice' occurred, out of all cases where the event 'Clear Invoice' occurred. To do this:\n1. Count the number of distinct CASE_ID values where the EVENT_NAME column matches the sequence 'Vendor Creates Invoice' ~> 'Post Invoice' ~> 'Due Date passed' ~> 'Clear Invoice'. This is the numerator. \n2. Count the number of distinct CASE_ID values where the EVENT_NAME column matches 'Clear Invoice'. This is the denominator.\n3. Divide the numerator by the denominator and multiply by 100 to calculate the percentage.\"\n}\n\nTo generate this summary, I:\n- Identified the table name 'defaultview-225' \n- Noted the column name EVENT_NAME used in the WHERE clauses\n- Extracted the specific event name values matched in the WHERE clauses\n- Explained the overall calculation flow:\n  - Numerator count of cases matching a specific sequence\n  - Denominator count of cases matching a specific event \n  - Percentage calculation from those counts", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      EVENT_NAME MATCHES (\n        'Vendor Creates Invoice' ~> 'Post Invoice' ~> 'Due Date passed' ~> 'Clear Invoice'\n      )\n  ) / COUNT (CASE_ID) FILTER (\n    WHERE\n      EVENT_NAME MATCHES ('Clear Invoice')\n  ) * 100\nFROM\n  \"defaultview-225\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}