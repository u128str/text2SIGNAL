{"signal_description": "First, from the table 'defaultview-197', calculate the percentage of billing documents cancelled as follows: Count the distinct billing documents where the event name is 'Cancel Billing Document', divide this by the count of distinct billing documents where the event name is 'Create Billing Document', and multiply by 100. This gives the 'Percentage of Billing Documents Cancelled'. \n\nThen, select the 'Project Type' column from the same table. \n\nNext, round the 'Percentage of Billing Documents Cancelled' either up or down to the nearest whole number. \n\nFinally, select the rounded 'Percentage of Billing Documents Cancelled' and the 'Project Type' columns, order by the percentage column in descending order.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"First, from the table 'defaultview-197', calculate the percentage of billing documents cancelled as follows: Count the distinct billing documents where the event name is 'Cancel Billing Document', divide this by the count of distinct billing documents where the event name is 'Create Billing Document', and multiply by 100. This gives the 'Percentage of Billing Documents Cancelled'. \n\nThen, select the 'Project Type' column from the same table. \n\nNext, round the 'Percentage of Billing Documents Cancelled' either up or down to the nearest whole number. \n\nFinally, select the rounded 'Percentage of Billing Documents Cancelled' and the 'Project Type' columns, order by the percentage column in descending order.\"\n}\n\nTo generate this description, I analyzed the SIGNAL query line-by-line:\n- The subquery calculates the percentage of cancelled billing documents using counts and filters on the event name column. \n- It also selects the 'Project Type' column.\n- The outer query rounds the percentage to the nearest whole number using a CASE expression.\n- It selects the rounded percentage and project type columns. \n- Orders the result by the percentage column descending.\n\nSo I summarized each part in plain language, referring to the specific table name, columns, and values used.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\t\n\tCASE\n    WHEN ((\"Percentage of Billing Documents cancelled\") % 1) >= 0.5 \n    THEN (\"Percentage of Billing Documents cancelled\") - \n\t((\"Percentage of Billing Documents cancelled\") % 1) + 1\n    ELSE (\"Percentage of Billing Documents cancelled\") - \n\t((\"Percentage of Billing Documents cancelled\") % 1)\n\tEND AS \"Percentage of Billing Documents cancelled\",\n    \n    \"Project Type\"\n\nFROM\n(SELECT COUNT (DISTINCT \"BillingDocument\") \nFILTER (WHERE EVENT_NAME = 'Cancel Billing Document') /\nCOUNT (DISTINCT \"BillingDocument\") \nFILTER (WHERE EVENT_NAME = 'Create Billing Document') \n* 100 as \"Percentage of Billing Documents cancelled\"\n\n, WBSE_ProjectType AS \"Project Type\"\n\nFROM FLATTEN(\"defaultview-197\") ) as selections\nORDER BY 1 DESC\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}