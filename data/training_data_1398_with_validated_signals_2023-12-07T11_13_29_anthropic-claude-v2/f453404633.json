{"signal_description": "From the 'defaultview-183' table, select the 'Division' column. Also count the number of 'Create Process Order' events and store it as '# Created Process Orders'. Calculate the percentage of 'Create Process Order' events where 'Event Created By User Type' is not 'Dialog' out of all 'Create Process Order' events, and store it as 'Automation Rate'. Only include rows where 'Planned Order Number' is null. Order the results by '# Created Process Orders' in descending order and limit to the top 10 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-183' table, select the 'Division' column. Also count the number of 'Create Process Order' events and store it as '# Created Process Orders'. Calculate the percentage of 'Create Process Order' events where 'Event Created By User Type' is not 'Dialog' out of all 'Create Process Order' events, and store it as 'Automation Rate'. Only include rows where 'Planned Order Number' is null. Order the results by '# Created Process Orders' in descending order and limit to the top 10 rows.\"  \n}\n\nThe summary was constructed by:\n\n1. Identifying the table being queried as 'defaultview-183' based on the FROM clause. \n\n2. Noting the columns referenced - 'Division', 'Event Created By User Type', 'Planned Order Number', 'Event Name'.\n\n3. Explaining the meaning of the column aliases '# Created Process Orders' and 'Automation Rate' based on the SELECT expressions. \n\n4. Summarizing the WHERE clause filters.\n\n5. Summarizing the ORDER BY and LIMIT clauses.\n\n6. Putting it together in a human readable paragraph, referring explicitly to table and column names.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT count(event_name) AS \"# Created Process Orders\" ,\n(COUNT (EVENT_NAME) FILTER (WHERE \"Event Created By User Type\" NOT IN ('Dialog'))) / (COUNT (EVENT_NAME)) * 100 AS \"Automation Rate\", \n \"Division\" \nFROM FLATTEN(\"defaultview-183\")\nWHERE \n\"Planned Order Number\" IS NULL AND \nEVENT_NAME = 'Create Process Order'\n-- AND count(event_name) > 5000\nORDER BY 1 desc\nLIMIT 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}