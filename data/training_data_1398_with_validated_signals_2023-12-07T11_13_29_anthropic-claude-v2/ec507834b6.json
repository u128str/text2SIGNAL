{"signal_description": "1. From the table 'defaultview-57', select the count of case_id where the event_name matches 'Update PO Item Material', 'Update PO Item Quantity', 'Update PO Item Net Price', 'Update PO Item Plant', or 'Update PO Item Confirmed Delivery Date'. \n\n2. From the same table, select the count of case_id where the event_name matches 'Create PO Item'.\n\n3. Divide the first count by the second count and multiply by 100 to calculate the percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"1. From the table 'defaultview-57', select the count of case_id where the event_name matches 'Update PO Item Material', 'Update PO Item Quantity', 'Update PO Item Net Price', 'Update PO Item Plant', or 'Update PO Item Confirmed Delivery Date'. \n\n2. From the same table, select the count of case_id where the event_name matches 'Create PO Item'.\n\n3. Divide the first count by the second count and multiply by 100 to calculate the percentage.\"\n}\n\nTo generate this summary:\n\n1. Identified the table name 'defaultview-57' and the column 'event_name' used in the query. \n\n2. Parsed the WHERE clauses to understand the filtering conditions on 'event_name'.\n\n3. Understood that the query calculates a percentage based on the count of two different filtered groups.\n\n4. Summarized each part of the query in simple human language, referring to the table, columns and filter values explicitly.\n\n5. Joined the summaries into coherent steps to explain the overall calculation.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES(\n    \t('Update PO Item Material'|'Update PO Item Quantity'|\n         'Update PO Item Net Price'|'Update PO Item Plant'|\n          'Update PO Confirmed Delivery Date'))))\n\t/\n\tCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES('Create PO Item'))\n\t)\n* 100\nFROM \"defaultview-57\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}