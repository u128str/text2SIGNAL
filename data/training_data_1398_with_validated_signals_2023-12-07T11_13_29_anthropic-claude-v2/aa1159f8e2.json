{"signal_description": "From the 'defaultview-217' table, calculate the percentage of cases that meet the following criteria:\n- The case has at least one 'Change Status to To Do' event \n- The time between the first 'Change Status to To Do' event and the first 'Create Issue' event is less than 2 days\nTo calculate the percentage:\n- The numerator counts the number of cases meeting the above criteria \n- The denominator counts the number of cases with at least one 'Change Status to To Do' event\n- The numerator is divided by the denominator and multiplied by 100", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-217' table, calculate the percentage of cases that meet the following criteria:\n- The case has at least one 'Change Status to To Do' event \n- The time between the first 'Change Status to To Do' event and the first 'Create Issue' event is less than 2 days\nTo calculate the percentage:\n- The numerator counts the number of cases meeting the above criteria \n- The denominator counts the number of cases with at least one 'Change Status to To Do' event\n- The numerator is divided by the denominator and multiplied by 100\"\n}\n\nTo generate this summary, I first analyzed the overall structure of the query to understand that it is calculating a percentage based on a numerator and denominator subquery. \n\nI then looked at each subquery to determine what data it was filtering and aggregating from the 'defaultview-217' table. For the numerator, I summarized the case count filter criteria. For the denominator, I summarized the case count filter criteria.\n\nFinally, I explained how the percentage is calculated using the numerator and denominator. The summary aims to provide a high-level overview of the query's purpose in plain language.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \ncount(case_id) FILTER(WHERE\n\t\t(SELECT FIRST(end_time) \n\t \tWHERE event_name IN ('Change Status to To Do'))\n    - \t(SELECT FIRST(end_time)\n       \tWHERE event_name IN ('Create Issue'))\n\t< DURATION '2days') \n/ \ncount(case_id) FILTER(WHERE (SELECT count(event_name) WHERE event_name = 'Change Status to To Do') >0)\n*100\nFROM \"defaultview-217\"\n\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}