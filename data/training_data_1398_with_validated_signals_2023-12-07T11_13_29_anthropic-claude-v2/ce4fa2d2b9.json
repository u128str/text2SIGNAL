{"signal_description": "First, from the table 'defaultview-545', count the number of CASE_ID where the EVENT_NAME matches the sequence 'Create PR Item' -> 'Create PO Item' -> 'Receive PO Item' -> 'Receive Invoice' -> 'Reconcile Invoice' -> 'Approve Invoice' -> 'Pay Invoice'. Second, from the same table, count the number of CASE_ID where the EVENT_NAME matches 'Pay Invoice'. Finally, divide the first count by the second count and multiply by 100 to calculate the percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"First, from the table 'defaultview-545', count the number of CASE_ID where the EVENT_NAME matches the sequence 'Create PR Item' -> 'Create PO Item' -> 'Receive PO Item' -> 'Receive Invoice' -> 'Reconcile Invoice' -> 'Approve Invoice' -> 'Pay Invoice'. Second, from the same table, count the number of CASE_ID where the EVENT_NAME matches 'Pay Invoice'. Finally, divide the first count by the second count and multiply by 100 to calculate the percentage.\"\n}\n\nTo generate this summary, I first parsed the SIGNAL query to identify the table name, column names, filter conditions, and aggregate functions used. I then described in plain language the sequence of steps:\n1) Counting cases matching a specific event sequence \n2) Counting cases matching a single event\n3) Dividing the first count by the second \n4) Multiplying the ratio by 100 to get a percentage", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\tCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES (\n\t^ 'Create PR Item'\n    ~> 'Create PO Item'\n    ~> 'Receive PO Item'\n    ~> 'Receive Invoice'\n    ~> 'Reconcile Invoice'\n    ~> 'Approve Invoice'\n    ~> 'Pay Invoice' $\n        )) \n\t/ COUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Pay Invoice')) \n    * 100\nFROM \"defaultview-545\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}