{"signal_description": "From the 'defaultview-183' table, calculate the percentage of process orders that do not have the 'Technically completed' event by dividing the count of case IDs where the event name does not match 'Technically completed' by the total count of case IDs and multiplying by 100. Also calculate the count of case IDs where the event name does not match 'Technically completed' to get the number of process orders without the 'Technically completed' event. Select the calculated percentage as '% of Process Orders without TECO', the calculated count as '# of Process Orders without TECO', and the 'Division' column. Order the results by the calculated percentage in descending order.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-183' table, calculate the percentage of process orders that do not have the 'Technically completed' event by dividing the count of case IDs where the event name does not match 'Technically completed' by the total count of case IDs and multiplying by 100. Also calculate the count of case IDs where the event name does not match 'Technically completed' to get the number of process orders without the 'Technically completed' event. Select the calculated percentage as '% of Process Orders without TECO', the calculated count as '# of Process Orders without TECO', and the 'Division' column. Order the results by the calculated percentage in descending order.\"\n}\n\nTo generate this summary, I:\n- Identified the table name 'defaultview-183' \n- Noted the CASE_ID and EVENT_NAME columns used in the WHERE clause filters\n- Explained the COUNT and CASE expressions to calculate the percentage and number of orders without the 'Technically completed' event\n- Listed the selected columns '% of Process Orders without TECO', '# of Process Orders without TECO', and 'Division'\n- Summarized the ORDER BY clause", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT (CASE_ID) FILTER (WHERE NOT EVENT_NAME MATCHES ('Technically completed')) / COUNT (CASE_ID) * 100 AS \"% of Process Orders without TECO\",\ncount (case_id) FILTER (WHERE NOT EVENT_NAME MATCHES ('Technically completed')) AS \"# of Process Orders without TECO\",\n\"Division\"\nFROM \"defaultview-183\"\n-- GROUP BY 2\nORDER BY 1 desc \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}