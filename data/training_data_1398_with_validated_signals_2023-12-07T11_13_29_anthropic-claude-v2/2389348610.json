{"signal_description": "From the flattened table 'defaultview-183', select all rows where the event_name column equals 'Create Process Order'. Then count the number of rows where the 'Event Created By User Type' column equals 'Dialog', divide that by the total number of rows, and multiply by 100. This calculates the percentage of 'Create Process Order' events that were created by the 'Dialog' user type.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the flattened table 'defaultview-183', select all rows where the event_name column equals 'Create Process Order'. Then count the number of rows where the 'Event Created By User Type' column equals 'Dialog', divide that by the total number of rows, and multiply by 100. This calculates the percentage of 'Create Process Order' events that were created by the 'Dialog' user type.\"  \n}\n\nTo generate this summary, I first analyzed the FROM, WHERE, SELECT and FILTER clauses to understand which table is being queried, which columns are referenced, and what conditions are applied. I then described in plain language the sequence of steps performed by the query - filtering the rows, counting specific subsets, dividing and multiplying to calculate a percentage. My goal was to explain what the query is doing in a way that would make sense to someone familiar with the data schema but not necessarily the SIGNAL syntax.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT (count(event_name) \nFILTER(WHERE \"Event Created By User Type\" IN ('Dialog')))\n/\n(count(event_name)\n)\n*100\nFROM FLATTEN(\"defaultview-183\")\nWHERE event_name = 'Create Process Order'\n\n\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}