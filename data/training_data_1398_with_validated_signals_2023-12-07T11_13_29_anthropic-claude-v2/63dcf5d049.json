{"signal_description": "From the 'defaultview-217' table, calculate the average time difference between the following events for process instances where the event 'Change Status to To Do' is directly followed by the event 'Change Status to In Progress':\n- Find the end time of the first occurrence of the 'Change Status to In Progress' event \n- Find the end time of the first occurrence of the 'Assign Issue to Person' event\nSubtract the second time from the first time to get the time difference for each process instance, then calculate the average across all process instances.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-217' table, calculate the average time difference between the following events for process instances where the event 'Change Status to To Do' is directly followed by the event 'Change Status to In Progress':\n- Find the end time of the first occurrence of the 'Change Status to In Progress' event \n- Find the end time of the first occurrence of the 'Assign Issue to Person' event\nSubtract the second time from the first time to get the time difference for each process instance, then calculate the average across all process instances.\"  \n}\n\nTo generate this summary, I:\n- Identified the table name 'defaultview-217' \n- Noted the use of the AVG() aggregate function\n- Analyzed the subqueries to understand what timestamps are being selected:\n  - The first subquery gets the end time of the first 'Change Status to In Progress' event\n  - The second subquery gets the end time of the first 'Assign Issue to Person' event\n- Explained that the difference between these two timestamps is calculated for each process instance\n- Noted the use of the MATCHES operator to filter for specific event sequences\n- Summarized in plain language the overall intent of the query: calculating the average time difference between two events for process instances matching a certain criteria.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \nAVG(\n\t\t(SELECT FIRST(end_time) \n\t \tWHERE event_name IN ('Change Status to In Progress'))\n    - \t(SELECT FIRST(end_time)\n       \tWHERE event_name IN ('Assign Issue to Person'))\n\t)\nFROM \"defaultview-217\"\nWHERE event_name MATCHES ('Change Status to To Do' ~> \n    \t\t\t\t\t\t 'Change Status to In Progress') \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}