{"signal_description": "From the table 'defaultview-545', calculate the percentage of cases where the event 'Receive Invoice' is directly followed by the event 'Create PO Item'. To do this:\n1. Count the number of CASE_ID values where the EVENT_NAME is 'Receive Invoice' directly followed by 'Create PO Item'. This is done using the MATCHES operator with the '~>' pattern. \n2. Count the total number of CASE_ID values in the table. \n3. Divide the first count by the second count.\n4. Multiply the result by 100 to get the percentage.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the table 'defaultview-545', calculate the percentage of cases where the event 'Receive Invoice' is directly followed by the event 'Create PO Item'. To do this:\n1. Count the number of CASE_ID values where the EVENT_NAME is 'Receive Invoice' directly followed by 'Create PO Item'. This is done using the MATCHES operator with the '~>' pattern. \n2. Count the total number of CASE_ID values in the table. \n3. Divide the first count by the second count.\n4. Multiply the result by 100 to get the percentage.\"\n}\n\nThe signal description was constructed by:\n1. Identifying the table name 'defaultview-545' \n2. Noting the column names CASE_ID and EVENT_NAME that are referenced\n3. Explaining that the COUNT() aggregate function is used to get the counts\n4. Describing the filter criteria using the MATCHES operator and '~>' pattern match to check for one event directly followed by another\n5. Explaining the division and multiplication to calculate the percentage", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\tCOUNT (CASE_ID) FILTER (\n    \tWHERE EVENT_NAME MATCHES ('Receive Invoice' ~> 'Create PO Item')) \n\t/ COUNT (CASE_ID) * 100\nFROM \"defaultview-545\"  \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}