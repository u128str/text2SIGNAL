{"signal_description": "From the 'defaultview-290' table, get the count of 'event_name' values where 'event_name' is like 'Change Quotation%' or 'event_name' is like 'Update Quotation%'. Filter this count to only include rows where the 'EventCreatedByUserType' column value is 'System', 'Service', or 'Batch Job'. Divide this filtered count by the total count of 'event_name' values and multiply by 100 to get the percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-290' table, get the count of 'event_name' values where 'event_name' is like 'Change Quotation%' or 'event_name' is like 'Update Quotation%'. Filter this count to only include rows where the 'EventCreatedByUserType' column value is 'System', 'Service', or 'Batch Job'. Divide this filtered count by the total count of 'event_name' values and multiply by 100 to get the percentage.\" \n}\n\nTo generate this summary, I:\n\n- Identified the table name ('defaultview-290') and column names ('event_name', 'EventCreatedByUserType') used in the query\n\n- Noted the use of LIKE filters on 'event_name' to match 'Change Quotation%' or 'Update Quotation%' \n\n- Identified the filter on 'EventCreatedByUserType' to only include certain values \n\n- Recognized the pattern of taking a filtered count divided by total count and multiplying by 100 to get a percentage\n\n- Summarized in plain language each component of the query and how they fit together", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT(\"event_name\") \n\tFILTER (WHERE BEHAVIOR (\n               \"EventCreatedByUserType\" IN ('System','Service','Batch Job')\n            )AS created_with_dialog MATCHES (created_with_dialog))\n    /COUNT(\"event_name\") * 100\nFROM FLATTEN(\"defaultview-290\")\nWHERE(event_name LIKE 'Change Quotation%' \n\tOR event_name LIKE 'Update Quotation%')\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}