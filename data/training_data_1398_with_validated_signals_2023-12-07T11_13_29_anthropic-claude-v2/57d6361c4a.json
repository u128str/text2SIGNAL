{"signal_description": "This query calculates the percentage of unique events that match the following criteria from the 'defaultview-383' table:\n1. The event name contains 'Delivery' \n2. The ChangeType is 'Update'\n3. The EventCreatedByUserType is 'Dialog'\nIt first counts the number of unique events (using UniqueEventId) that match the above criteria. \nThis count is divided by the total number of unique events where EventCreatedByUserType is not null. \nThe result is multiplied by 100 to get the percentage.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"This query calculates the percentage of unique events that match the following criteria from the 'defaultview-383' table:\n1. The event name contains 'Delivery' \n2. The ChangeType is 'Update'\n3. The EventCreatedByUserType is 'Dialog'\nIt first counts the number of unique events (using UniqueEventId) that match the above criteria. \nThis count is divided by the total number of unique events where EventCreatedByUserType is not null. \nThe result is multiplied by 100 to get the percentage.\"  \n}\n\nThe signal description was constructed by:\n1. Identifying the table name used - 'defaultview-383'\n2. Looking at the WHERE clause to understand the criteria for filtering events\n3. Understanding that COUNT(DISTINCT) is used to count unique events\n4. Recognizing that the percentage is calculated by dividing the count of matching events by total events\n5. Explaining each criteria and calculation in simple human language", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT(DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOR (\n        \"EventCreatedByUserType\" IN ('Dialog')\n        AND (\n          event_name LIKE '%Delivery%'\n          AND ChangeType = 'Update'\n        )\n      ) AS created_with_dialog MATCHES (created_with_dialog)\n  ) / COUNT(DISTINCT \"UniqueEventId\")  FILTER (\n          WHERE\n      (\"EventCreatedByUserType\" IS NOT NULL) ) * 100\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  (\n    event_name LIKE '%Delivery%'\n    AND ChangeType = 'Update'\n  ) \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}