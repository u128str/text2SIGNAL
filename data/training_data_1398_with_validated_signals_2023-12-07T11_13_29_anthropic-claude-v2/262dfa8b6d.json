{"signal_description": "From the table 'defaultview-124', calculate the average of the percentage of events with names containing 'Update'. To get this percentage for each row: Count the events with names containing 'Update', divide this by the total count of events, and multiply the result by 100.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the table 'defaultview-124', calculate the average of the percentage of events with names containing 'Update'. To get this percentage for each row: Count the events with names containing 'Update', divide this by the total count of events, and multiply the result by 100.\"  \n}\n\nThe signal query first calculates the percentage of events containing 'Update' for each row by:\n- Using a subquery to count events whose name contains 'Update' (uses ILIKE and a filter WHERE clause)\n- Dividing this by a subquery that counts all events \n- Multiplying the result by 100 to get a percentage\n\nIt then calculates the average of these percentages across all rows using the AVG() aggregate function.\n\nSo in human terms, it calculates the percentage of 'Update' events for each row, and then averages these percentages across all rows from the 'defaultview-124' table.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\nAVG(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE event_name ILIKE '%Update%')\n\t) / (SELECT COUNT(event_name))\n   ) * 100\nFROM \"defaultview-124\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}