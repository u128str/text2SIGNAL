{"signal_description": "First, from the 'defaultview-290' table, count the total number of case_id records. Then, filter these case_id records to only those where the InvoiceAccountingClearingDate column value is greater than the InvoiceDueDate column value, and count the number of records after this filter. Divide this filtered count by the total case_id count, and multiply by 100, to calculate the percentage of cases where the invoice accounting clearing date was after the invoice due date.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"First, from the 'defaultview-290' table, count the total number of case_id records. Then, filter these case_id records to only those where the InvoiceAccountingClearingDate column value is greater than the InvoiceDueDate column value, and count the number of records after this filter. Divide this filtered count by the total case_id count, and multiply by 100, to calculate the percentage of cases where the invoice accounting clearing date was after the invoice due date.\" \n}\n\nTo generate this description, I first analyzed the SIGNAL query to understand the intent - it is calculating a percentage based on certain filters and counts. I looked at the FROM clause to get the table name, and the column names used in the filters and counts. Using this information, I summarized in plain language the steps - getting a total count, applying filters to get a filtered count, dividing and multiplying to calculate a percentage.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE (\"InvoiceAccountingClearingDate\" > \"InvoiceDueDate\")) > 0\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Clear Invoice')))\n\t) \n* 100\n\nFROM \"defaultview-290\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}