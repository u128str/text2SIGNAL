{"signal_description": "The query first flattens the 'defaultview-383' table. It then selects the 'SalesDocCustomerCompany' column and counts the distinct 'UniqueEventId' values where the event name contains 'Sales' and the ChangeType is 'Update'. It groups the results by 'SalesDocCustomerCompany' and orders them by the count in descending order. Finally it limits the results to the top 10 rows.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"The query first flattens the 'defaultview-383' table. It then selects the 'SalesDocCustomerCompany' column and counts the distinct 'UniqueEventId' values where the event name contains 'Sales' and the ChangeType is 'Update'. It groups the results by 'SalesDocCustomerCompany' and orders them by the count in descending order. Finally it limits the results to the top 10 rows.\"  \n}\n\nTo generate this description, I first analyzed the SELECT, FROM, WHERE, GROUP BY, ORDER BY and LIMIT clauses to understand what the query is doing. I then summarized each part in plain language, referring to the specific column names and values used in the query. The description explains the high level logic and flow of operations in the order they are performed by the query.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Sales%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}