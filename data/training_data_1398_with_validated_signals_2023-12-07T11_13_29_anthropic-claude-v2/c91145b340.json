{"signal_description": "From the table 'defaultview-183', select the count of distinct CASE_ID values where the EVENT_NAME contains 'Create Process Order' and group the results by the 'Material ID' column. Assign the name '#Process Orders' to the count of CASE_ID and return the '#Process Orders' and 'Material ID' columns.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the table 'defaultview-183', select the count of distinct CASE_ID values where the EVENT_NAME contains 'Create Process Order' and group the results by the 'Material ID' column. Assign the name '#Process Orders' to the count of CASE_ID and return the '#Process Orders' and 'Material ID' columns.\"\n}\n\nTo generate this description, I analyzed the key components of the SIGNAL query:\n\n- The SELECT clause specifies the columns to return - COUNT(CASE_ID) is aliased as '#Process Orders' and 'Material ID' is also returned. \n\n- The FROM clause specifies the table name - 'defaultview-183'.\n\n- The WHERE clause filters for rows where EVENT_NAME contains 'Create Process Order'.\n\n- The GROUP BY clause groups the results by the 'Material ID' column.\n\nBy understanding the purpose of each clause, I was able to summarize the overall intent of the query in plain language, referring to the specific table name, column names and values used.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT (CASE_ID) AS \"#Process Orders\", \"Material ID\"\nFROM \"defaultview-183\"\nWHERE EVENT_NAME MATCHES ('Create Process Order')\nGROUP BY 2 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}