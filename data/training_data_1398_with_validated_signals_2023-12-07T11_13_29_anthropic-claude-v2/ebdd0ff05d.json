{"signal_description": "From the 'defaultview-225' table, calculate the percentage of cases where the sequence of events 'Vendor Creates Invoice' followed by 'Post Invoice' followed by 'Due Date passed' followed by 'Clear Invoice' occurred, out of all cases where the event 'Clear Invoice' occurred. To do this:\n1. Count the number of CASE_ID values where the EVENT_NAME column matches the sequence 'Vendor Creates Invoice' ~> 'Post Invoice' ~> 'Due Date passed' ~> 'Clear Invoice'. Call this value A.\n2. Count the number of CASE_ID values where the EVENT_NAME column matches 'Clear Invoice'. Call this value B. \n3. Calculate the percentage by dividing A by B and multiplying by 100. Call this value 'Conformance Rate'.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-225' table, calculate the percentage of cases where the sequence of events 'Vendor Creates Invoice' followed by 'Post Invoice' followed by 'Due Date passed' followed by 'Clear Invoice' occurred, out of all cases where the event 'Clear Invoice' occurred. To do this:\n1. Count the number of CASE_ID values where the EVENT_NAME column matches the sequence 'Vendor Creates Invoice' ~> 'Post Invoice' ~> 'Due Date passed' ~> 'Clear Invoice'. Call this value A.\n2. Count the number of CASE_ID values where the EVENT_NAME column matches 'Clear Invoice'. Call this value B. \n3. Calculate the percentage by dividing A by B and multiplying by 100. Call this value 'Conformance Rate'.\"\n}\n\nThe signal description was constructed by:\n1. Identifying the table name 'defaultview-225'\n2. Identifying the column names CASE_ID and EVENT_NAME that are referenced\n3. Analyzing the WHERE clauses to understand the filtering logic on the EVENT_NAME values\n4. Summarizing the percentage calculation in plain language using the column names\n5. Structuring the summary as a set of step-by-step instructions for a human to follow", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT (CASE_ID) FILTER (\n    WHERE\n      EVENT_NAME MATCHES (\n        'Vendor Creates Invoice' ~> 'Post Invoice' ~> 'Due Date passed' ~> 'Clear Invoice'\n      )\n  ) / COUNT (CASE_ID) FILTER (\n    WHERE\n      EVENT_NAME MATCHES ('Clear Invoice')\n  ) * 100 AS \"Conformance Rate\"\nFROM\n  \"defaultview-225\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}