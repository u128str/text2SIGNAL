{"signal_description": "From the table 'defaultview-383', get the distinct count of 'UniqueEventId' where the event_name contains 'Invoice' AND the ChangeType is 'Update'. This count is aliased as '# Changes'.", "llm_output": " Here is the summary of the given SIGNAL query in a human-readable format:\n\n{\n  \"signal_description\": \"From the table 'defaultview-383', get the distinct count of 'UniqueEventId' where the event_name contains 'Invoice' AND the ChangeType is 'Update'. This count is aliased as '# Changes'.\"\n}\n\nTo generate this description, I first looked at the main SELECT and FROM clauses to understand which table is being queried and what is being counted. I then looked at the FILTER and WHERE clauses to understand the conditions being applied to filter the data. Based on the column names and values used in the conditions, I summarized it in plain language. The query alias '# Changes' is also explicitly mentioned.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT(DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOR (\n        event_name LIKE '%Invoice%'\n        AND ChangeType = 'Update'\n      ) AS changed MATCHES (changed)\n  ) AS \"# Changes\"\nFROM\n  FLATTEN(\"defaultview-383\") \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}