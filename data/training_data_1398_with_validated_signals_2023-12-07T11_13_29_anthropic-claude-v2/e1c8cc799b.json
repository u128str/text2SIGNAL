{"signal_description": "From the table 'defaultview-225', select the columns 'Event_Name' aliased as 'Event Name', 'Following event', 'Occurence' which is the count of 'Event_Name', 'Automation Rate in %' which is the count of 'Event_Name' where 'Event Created By User Type' is 'System' or 'Service' divided by the total count of 'Event_Name' multiplied by 100, 'AVG Lead Time', 'MIN Lead Time', and 'MAX Lead Time' which are the average, minimum and maximum of 'Event_Cycle_Time'. The table is flattened and the 'Event_Cycle_Time' column is calculated as the difference between the 'End_Time' and the previous 'End_Time' for each 'Case_Id'. This is done in a subquery aliased as 'sub_query_Event_Cycle_Time'. The main query filters for non-null 'Event Created By User Type' and excludes events like '%Due Date%' and '%Vendor%'. It also excludes cases where 'Event_Name' equals 'Following event'. Finally, it groups by 'Event Name' and 'Following event' and orders by 'Occurence' descending.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the table 'defaultview-225', select the columns 'Event_Name' aliased as 'Event Name', 'Following event', 'Occurence' which is the count of 'Event_Name', 'Automation Rate in %' which is the count of 'Event_Name' where 'Event Created By User Type' is 'System' or 'Service' divided by the total count of 'Event_Name' multiplied by 100, 'AVG Lead Time', 'MIN Lead Time', and 'MAX Lead Time' which are the average, minimum and maximum of 'Event_Cycle_Time'. The table is flattened and the 'Event_Cycle_Time' column is calculated as the difference between the 'End_Time' and the previous 'End_Time' for each 'Case_Id'. This is done in a subquery aliased as 'sub_query_Event_Cycle_Time'. The main query filters for non-null 'Event Created By User Type' and excludes events like '%Due Date%' and '%Vendor%'. It also excludes cases where 'Event_Name' equals 'Following event'. Finally, it groups by 'Event Name' and 'Following event' and orders by 'Occurence' descending.\"\n}\n\nThe signal description summarizes the key aspects of the query - the table name, columns selected, any aliases, filters, calculations, aggregations, grouping and ordering. It aims to explain in simple terms what data is being selected and how it is being transformed, to help the user understand what the query is doing.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n\tEvent_Name AS \"Event Name\", \n    \"Following event\",\n    COUNT(Event_Name) AS \"Occurence\",\n    COUNT(event_name) FILTER(\n    \tWHERE \"Event Created By User Type\" IN ('System','Service'))\n    / COUNT(\"event_name\") * 100 AS \"Automation Rate in %\",\n    \n    AVG(Event_Cycle_Time) AS \"AVG Lead Time\",\n    MIN(Event_Cycle_Time) AS \"MIN Lead Time\",\n    MAX(Event_Cycle_Time) AS \"MAX Lead Time\"\n    \nFROM (\n\tSELECT\n    \tEvent_Name,\n        LAG(Event_Name) OVER () AS \"Following event\",\n        End_Time - LAG(End_Time) OVER (PARTITION BY Case_Id) AS Event_Cycle_Time,\n        \"Event Created By User Type\"\n\tFROM FLATTEN(\"defaultview-225\") \n) AS sub_query_Event_Cycle_Time\nWHERE \n\t\"Event Created By User Type\" IS NOT NULL\n    AND event_name NOT LIKE '%Due Date%' AND event_name NOT LIKE '%Vendor%'\n    AND \"Following event\" NOT LIKE '%Due Date%' AND \"Following event\" NOT LIKE '%Vendor%'\n    AND Event_name <> \"Following event\"\nGROUP BY 1, 2\nORDER BY 3 DESC\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}