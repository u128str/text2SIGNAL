{"signal_description": "From the 'defaultview-124' table, count the total number of CASE_ID values and store it in 'Total No. of Cases'. Also count the number of CASE_ID values where the END_TIME of the 'Release PO' event is more than 3 days after the END_TIME of the 'Create PO Item' event for that CASE_ID, and store it in 'Released 3 Days Later'. Then calculate the percentage of cases released 3 days later out of the total cases, by dividing 'Released 3 Days Later' by 'Total No. of Cases' and multiplying by 100.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"From the 'defaultview-124' table, count the total number of CASE_ID values and store it in 'Total No. of Cases'. Also count the number of CASE_ID values where the END_TIME of the 'Release PO' event is more than 3 days after the END_TIME of the 'Create PO Item' event for that CASE_ID, and store it in 'Released 3 Days Later'. Then calculate the percentage of cases released 3 days later out of the total cases, by dividing 'Released 3 Days Later' by 'Total No. of Cases' and multiplying by 100.\" \n}\n\nTo generate this summary, I analyzed the SIGNAL query to understand the intent behind each part:\n\n- The outer SELECT calculates a percentage based on the results from the subquery\n- The subquery aliases the aggregate results to human-readable names \n- It counts total CASE_ID values for \"Total No. of Cases\"\n- It counts CASE_ID values meeting a certain condition for \"Released 3 Days Later\" \n- The condition checks if the END_TIME of \"Release PO\" is more than 3 days after the END_TIME of \"Create PO Item\"\n\nBy examining the query structure and semantics, I was able to summarize it in a human-readable form referring to the specific table, columns, values and calculations performed.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n(\"Released 3 Days Later\"/\"Total No. of Cases\") * 100\nFROM\n(\n SELECT \n COUNT(CASE_ID) AS \"Total No. of Cases\",\n COUNT(CASE \n        WHEN (SELECT LAST(END_TIME) WHERE EVENT_NAME = 'Release PO') - (SELECT FIRST(END_TIME) WHERE EVENT_NAME = 'Create PO Item') > DURATION '3DAYS'\n        THEN CASE_ID\n        ELSE NULL\n       END) AS \"Released 3 Days Later\"\n FROM \"defaultview-124\"\n) AS SUB\n \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}