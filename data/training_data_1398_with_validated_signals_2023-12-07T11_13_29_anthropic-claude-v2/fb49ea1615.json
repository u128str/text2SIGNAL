{"signal_description": "First, from the table 'defaultview-124', select the columns CASE_ID, EVENT_NAME, and 'PO Vendor Name' aliased as 'PO Vendor'. Then, flatten the rows of this table. Next, for each row: 1) Set CHANGES to 1 if EVENT_NAME is in the list of update events, otherwise set it to NULL. 2) Count the distinct CASE_ID values to get the total number of cases. 3) Count the distinct CASE_ID values where CHANGES = 1 to get the number of cases with changes. 4) Group by 'PO Vendor' and order the results by the total number of cases descending. Limit the results to 20 rows. Finally, output the columns 'Total No. of Cases', 'Cases with Changes', and 'PO Vendor'.", "llm_output": " Here is the human-readable summary of the given SIGNAL query:\n\n{\n  \"signal_description\": \"First, from the table 'defaultview-124', select the columns CASE_ID, EVENT_NAME, and 'PO Vendor Name' aliased as 'PO Vendor'. Then, flatten the rows of this table. Next, for each row: 1) Set CHANGES to 1 if EVENT_NAME is in the list of update events, otherwise set it to NULL. 2) Count the distinct CASE_ID values to get the total number of cases. 3) Count the distinct CASE_ID values where CHANGES = 1 to get the number of cases with changes. 4) Group by 'PO Vendor' and order the results by the total number of cases descending. Limit the results to 20 rows. Finally, output the columns 'Total No. of Cases', 'Cases with Changes', and 'PO Vendor'.\"  \n}\n\nThis summary was constructed by:\n1) Identifying the main query blocks - the subqueries, the outer SELECT, and the ORDER BY/LIMIT clauses.\n2) Describing the purpose of each block - selecting and flattening data, computing new columns, grouping and aggregation, sorting and limiting.\n3) Referring to column names, table names, and literal values directly used in the query.\n4) Putting it together in a step-by-step narrative to explain what the query is doing.", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\nCOUNT(DISTINCT CASE_ID) AS \"Total No. of Cases\",\nCOUNT(DISTINCT IF(CHANGES = 1, CASE_ID, NULL)) AS \"Cases with Changes\",\n\"PO Vendor\"\nFROM\n(\n SELECT\n   CASE_ID,\n   IF(EVENT_NAME IN ('Update Contract Net Price' ,'Update Contract Target Quantity' ,'Update Order Confirmation' ,'Update PO Confirmed Delivery Date' ,'Update PO Currency' ,'Update PO Item Material' ,'Update PO Item Net Price' ,'Update PO Item Plant' ,'Update PO Item Quantity' ,'Update PO Payment Terms' ,'Update PO Vendor' ,'Update PR Delivery Date' ,'Update PR Material' ,'Update PR Net Price' ,'Update PR Quantity'),1,NULL) AS CHANGES,\n   \"PO Vendor\"\n FROM\n  (\n     SELECT\n        CASE_ID,\n        EVENT_NAME,\n        \"PO Vendor Name\" AS \"PO Vendor\"\n     FROM FLATTEN(\"defaultview-124\")\n     --WHERE \"PO Purchasing Group\" IS NOT NULL\n    ) AS SUB1\n) AS SUB2\nORDER BY 1 DESC\nLIMIT 20 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}