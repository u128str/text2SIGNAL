{"signal_description": "The SIGNAL query is designed to analyze data from the table named 'defaultview-383'. It starts by counting the distinct 'UniqueEventId' values, but only for those records where the 'EVENT_NAME' contains the word 'Sales' and the 'ChangeType' is set to 'Update'. This count is labeled as '# Changes'. Along with this count, the query also selects the 'SalesDocCustomerCompany' column. The results are then grouped by the 'SalesDocCustomerCompany' column. Finally, the query sorts the results in descending order based on the count of '# Changes' and limits the output to the top 10 records.", "llm_output": "{\n\"signal_description\": \"The SIGNAL query is designed to analyze data from the table named 'defaultview-383'. It starts by counting the distinct 'UniqueEventId' values, but only for those records where the 'EVENT_NAME' contains the word 'Sales' and the 'ChangeType' is set to 'Update'. This count is labeled as '# Changes'. Along with this count, the query also selects the 'SalesDocCustomerCompany' column. The results are then grouped by the 'SalesDocCustomerCompany' column. Finally, the query sorts the results in descending order based on the count of '# Changes' and limits the output to the top 10 records.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Sales%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}