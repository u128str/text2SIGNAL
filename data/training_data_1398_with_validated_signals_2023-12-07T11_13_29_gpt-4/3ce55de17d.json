{"signal_description": "The SIGNAL query is designed to perform several operations on the table named 'defaultview-183'. Firstly, it filters the rows where the difference between the 'Actual Start Date' and 'Scheduled Start Date' is greater than 0 seconds. For these filtered rows, it counts the number of 'CASE_ID'. This count is then divided by the total count of 'CASE_ID' in the table, and the result is multiplied by 100. This operation essentially calculates the percentage of cases where the 'Actual Start Date' is later than the 'Scheduled Start Date'. The query also selects the 'Division' column. The query then filters the rows where the 'Planned Order Number' is null. The results are grouped by the 'Division' column (indicated by GROUP BY 2, as 'Division' is the second column selected). Finally, the results are ordered in descending order by the calculated percentage (indicated by ORDER BY 1 desc, as the calculated percentage is the first column in the result set).", "llm_output": "{\n\"signal_description\": \"The SIGNAL query is designed to perform several operations on the table named 'defaultview-183'. Firstly, it filters the rows where the difference between the 'Actual Start Date' and 'Scheduled Start Date' is greater than 0 seconds. For these filtered rows, it counts the number of 'CASE_ID'. This count is then divided by the total count of 'CASE_ID' in the table, and the result is multiplied by 100. This operation essentially calculates the percentage of cases where the 'Actual Start Date' is later than the 'Scheduled Start Date'. The query also selects the 'Division' column. The query then filters the rows where the 'Planned Order Number' is null. The results are grouped by the 'Division' column (indicated by GROUP BY 2, as 'Division' is the second column selected). Finally, the results are ordered in descending order by the calculated percentage (indicated by ORDER BY 1 desc, as the calculated percentage is the first column in the result set).\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT (COUNT (CASE_ID) FILTER (WHERE \"Actual Start Date\" - \"Scheduled Start Date\" > DURATION '0seconds') / COUNT (CASE_ID)) * 100, \n\"Division\"\nFROM \"defaultview-183\"\nWHERE \"Planned Order Number\" IS NULL\nGROUP BY 2\nORDER BY 1 desc \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}