{"signal_description": "The SIGNAL query is designed to analyze data from the table named 'defaultview-183'. It calculates two metrics: the number of process orders released early and the percentage of orders released early. An order is considered 'early' if the 'Actual Release Date' is earlier than the 'Scheduled Release Date'. The query counts the number of such cases and labels this count as '# Process Orders Released Early'. The percentage of early released orders is calculated by dividing the number of early orders by the total number of orders, and multiplying the result by 100. This percentage is labeled as '% Released Early'. The query also selects the 'Plant' column from the table. The results are sorted in descending order based on the number of early released orders, and only the top 10 records are returned.", "llm_output": "{\n\"signal_description\": \"The SIGNAL query is designed to analyze data from the table named 'defaultview-183'. It calculates two metrics: the number of process orders released early and the percentage of orders released early. An order is considered 'early' if the 'Actual Release Date' is earlier than the 'Scheduled Release Date'. The query counts the number of such cases and labels this count as '# Process Orders Released Early'. The percentage of early released orders is calculated by dividing the number of early orders by the total number of orders, and multiplying the result by 100. This percentage is labeled as '% Released Early'. The query also selects the 'Plant' column from the table. The results are sorted in descending order based on the number of early released orders, and only the top 10 records are returned.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT (CASE_ID) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') AS \"# Process Orders Released Early\",\nCOUNT (CASE_ID) FILTER (WHERE \"Actual Release Date\" - \"Scheduled Release Date\" < DURATION '0seconds') / COUNT (CASE_ID)  * 100 AS \"% Released Early\",\n\"Plant\"\nFROM \"defaultview-183\"\nORDER BY 1 desc\nLIMIT 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}