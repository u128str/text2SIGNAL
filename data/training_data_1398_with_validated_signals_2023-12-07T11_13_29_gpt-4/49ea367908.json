{"signal_description": "The SIGNAL query is calculating the percentage of unique events, identified by 'UniqueEventId', that were created automatically by either 'System' or 'Service' user types and involved an 'Update' change type in a 'Delivery' event. This is done by counting the distinct 'UniqueEventId' where 'EventCreatedByUserType' is either 'System' or 'Service', the event name contains 'Delivery', and 'ChangeType' is 'Update'. This count is then divided by the total count of distinct 'UniqueEventId' where 'EventCreatedByUserType' is not null. The result is multiplied by 100 to convert it into a percentage. The query is performed on the table 'defaultview-383' and only considers rows where the event name contains 'Delivery' and 'ChangeType' is 'Update'.", "llm_output": "{\n\"signal_description\": \"The SIGNAL query is calculating the percentage of unique events, identified by 'UniqueEventId', that were created automatically by either 'System' or 'Service' user types and involved an 'Update' change type in a 'Delivery' event. This is done by counting the distinct 'UniqueEventId' where 'EventCreatedByUserType' is either 'System' or 'Service', the event name contains 'Delivery', and 'ChangeType' is 'Update'. This count is then divided by the total count of distinct 'UniqueEventId' where 'EventCreatedByUserType' is not null. The result is multiplied by 100 to convert it into a percentage. The query is performed on the table 'defaultview-383' and only considers rows where the event name contains 'Delivery' and 'ChangeType' is 'Update'.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT(DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOR (\n        \"EventCreatedByUserType\" IN ('System', 'Service')\n        AND (\n          event_name LIKE '%Delivery%'\n          AND ChangeType = 'Update'\n        )\n      ) AS created_auto MATCHES (created_auto)\n  ) / COUNT(DISTINCT \"UniqueEventId\")  FILTER (\n          WHERE\n      (\"EventCreatedByUserType\" IS NOT NULL) ) * 100\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  (\n    event_name LIKE '%Delivery%'\n    AND ChangeType = 'Update'\n  ) \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}