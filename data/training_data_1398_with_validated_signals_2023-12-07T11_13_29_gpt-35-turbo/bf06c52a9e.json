{"signal_description": "Calculate the percentage of events where the event name contains 'Invoice' and the change type is 'Update' and the event was created by a user of type 'Dialog' out of all events where the event name contains 'Invoice' and the change type is 'Update'. The result is multiplied by 100.\n\nTo do this, count the number of distinct unique event IDs where the event name contains 'Invoice' and the change type is 'Update' and the event was created by a user of type 'Dialog' and store it in the variable 'created_with_dialog'. Then, count the number of distinct unique event IDs where the event name contains 'Invoice' and the change type is 'Update' and the event was created by any user (not null). Finally, divide the count of 'created_with_dialog' by the count of all events and multiply the result by 100.", "llm_output": "{\n  \"signal_description\": \"Calculate the percentage of events where the event name contains 'Invoice' and the change type is 'Update' and the event was created by a user of type 'Dialog' out of all events where the event name contains 'Invoice' and the change type is 'Update'. The result is multiplied by 100.\\n\\nTo do this, count the number of distinct unique event IDs where the event name contains 'Invoice' and the change type is 'Update' and the event was created by a user of type 'Dialog' and store it in the variable 'created_with_dialog'. Then, count the number of distinct unique event IDs where the event name contains 'Invoice' and the change type is 'Update' and the event was created by any user (not null). Finally, divide the count of 'created_with_dialog' by the count of all events and multiply the result by 100.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT(DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOR (\n        \"EventCreatedByUserType\" IN ('Dialog')\n        AND (\n          event_name LIKE '%Invoice%'\n          AND ChangeType = 'Update'\n        )\n      ) AS created_with_dialog MATCHES (created_with_dialog)\n  ) / COUNT(DISTINCT \"UniqueEventId\") FILTER (\n          WHERE\n      (\"EventCreatedByUserType\" IS NOT NULL) ) * 100\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  (\n    event_name LIKE '%Invoice%'\n    AND ChangeType = 'Update'\n  ) \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}