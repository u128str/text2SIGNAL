{"signal_description": "Count the number of events with event names that start with 'Change Invoice', 'Create Invoice Item Cancellation', or 'Update Invoice' from the 'defaultview-290' table. Sort the result in descending order based on the count of events.", "llm_output": "{\n  \"signal_description\": \"Count the number of events with event names that start with 'Change Invoice', 'Create Invoice Item Cancellation', or 'Update Invoice' from the 'defaultview-290' table. Sort the result in descending order based on the count of events.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n\tevent_name AS \"Event Name\",\n    COUNT(event_name) AS \"# of Events\"\n\nFROM FLATTEN(\"defaultview-290\" )\nWHERE\n    (   event_name LIKE 'Change Invoice%' OR event_name LIKE 'Create Invoice Item Cancellation%' OR event_name LIKE 'Update Invoice%')\nORDER BY 2 desc \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}