{"signal_description": "The query is summarizing events based on their names and grouping them into different categories. If the event name contains keywords like 'PO', 'Purchase Order', 'Goods Receipt', 'Make Quality Usage Decision', or 'Order Confirmation', it is classified as 'PO events'. If the event name contains keywords like 'Invoice', 'Memo', or 'Change Reference Number', it is classified as 'Invoice events'. If the event name contains the keyword 'Payment', it is classified as 'Payment Events'. For all other event names, the original event name is used. The query also calculates the number of distinct case IDs as '# of Invoices', the total number of events as '# of Events', the number of events created by users of type 'Dialog' as '# of Manual Events', and the automation rate in percentage as 'Automation Rate in %'. The data is retrieved from the 'defaultview-225' table, and only events with a non-null value for the 'Event Created By User Type' column are considered. The results are ordered by the third column in descending order.", "llm_output": "{\n  \"signal_description\": \"The query is summarizing events based on their names and grouping them into different categories. If the event name contains keywords like 'PO', 'Purchase Order', 'Goods Receipt', 'Make Quality Usage Decision', or 'Order Confirmation', it is classified as 'PO events'. If the event name contains keywords like 'Invoice', 'Memo', or 'Change Reference Number', it is classified as 'Invoice events'. If the event name contains the keyword 'Payment', it is classified as 'Payment Events'. For all other event names, the original event name is used. The query also calculates the number of distinct case IDs as '# of Invoices', the total number of events as '# of Events', the number of events created by users of type 'Dialog' as '# of Manual Events', and the automation rate in percentage as 'Automation Rate in %'. The data is retrieved from the 'defaultview-225' table, and only events with a non-null value for the 'Event Created By User Type' column are considered. The results are ordered by the third column in descending order.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  CASE\n    WHEN event_name LIKE '%PO%'\n    OR event_name LIKE '%Purchase Order%'\n    OR event_name LIKE '%Goods Receipt%'\n    OR event_name LIKE '%Make Quality Usage Decision%'\n    OR event_name LIKE '%Order Confirmation%' THEN 'PO events'\n    WHEN event_name LIKE '%Invoice%'\n    OR event_name LIKE '%Memo%'\n    OR event_name LIKE '%Change Reference Number%' THEN 'Invoice events'\n    WHEN event_name LIKE '%Payment%' THEN 'Payment Events'\n    ELSE event_name\n  END AS \"Group of Events\",\n  COUNT(DISTINCT case_id) AS \"# of Invoices\",\n  COUNT(event_name) AS \"# of Events\",\n  COUNT(event_name) FILTER(\n  \tWHERE \"Event Created By User Type\" IN ('Dialog'))\n  \tAS \"# of Manual Events\",\n  COUNT(event_name) FILTER (\n    WHERE\n      \"Event Created By User Type\" IN ('System', 'Service')\n  ) / COUNT(\"event_name\") * 100 AS \"Automation Rate in %\"\nFROM\n  FLATTEN(\"defaultview-225\")\n\tWHERE \"Event Created By User Type\" IS NOT NULL\nORDER BY\n  3 DESC \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}