{"signal_description": "Retrieve the company code, customer name, and the number of overdue receivables from the 'defaultview-222' table. Filter the results to include only records where the 'NetDueDate' column is not null, the 'event_name' column is 'Create Accounts Receivable', the 'ClearingDate' column is null, and the current date and time is greater than or equal to the 'NetDueDate' column. Sort the results by the number of overdue receivables in descending order and then by the customer name in descending order. For each record, determine the aging category of the last dunning date based on the difference between the current date and the 'AR_CustomerLastDunningDate' column. If the difference is between 0 and 7 days, assign the category '2. 0-7 days'. If the difference is between 7 and 14 days, assign the category '3. 8-14 days'. If the difference is between 14 and 30 days, assign the category '4. 15-30 days'. If the difference is between 30 and 60 days, assign the category '5. 31-60 days'. If the difference is between 60 and 90 days, assign the category '6. 61-90 days'. If the difference is greater than 90 days, assign the category '7. >90 days'. If there is no dunning date, assign the category '1. No Dunning'. Include the last dunning date in the results.", "llm_output": "{\n  \"signal_description\": \"Retrieve the company code, customer name, and the number of overdue receivables from the 'defaultview-222' table. Filter the results to include only records where the 'NetDueDate' column is not null, the 'event_name' column is 'Create Accounts Receivable', the 'ClearingDate' column is null, and the current date and time is greater than or equal to the 'NetDueDate' column. Sort the results by the number of overdue receivables in descending order and then by the customer name in descending order. For each record, determine the aging category of the last dunning date based on the difference between the current date and the 'AR_CustomerLastDunningDate' column. If the difference is between 0 and 7 days, assign the category '2. 0-7 days'. If the difference is between 7 and 14 days, assign the category '3. 8-14 days'. If the difference is between 14 and 30 days, assign the category '4. 15-30 days'. If the difference is between 30 and 60 days, assign the category '5. 31-60 days'. If the difference is between 60 and 90 days, assign the category '6. 61-90 days'. If the difference is greater than 90 days, assign the category '7. >90 days'. If there is no dunning date, assign the category '1. No Dunning'. Include the last dunning date in the results.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\"AR_CompanyCode\" AS \"Company Code\",\nAR_CustomerName AS \"Customer\",\ncount(DISTINCT \"ARUniqueKey\" ) as \"# Overdue Receivables\",\nCASE \n\nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '0day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '7day'\n        THEN '2. 0-7 days'\n        \nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '7day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '14day'\n        THEN '3. 8-14 days'\nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '14day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '30day'\n        THEN '4. 15-30 days'\nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '30day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '60day'\n        THEN '5. 31-60 days'\n        \nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '60day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '90day'\n        THEN '6. 61-90 days'\n        \nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '90day'\n        THEN '7. >90 days'\nELSE '1.No Dunning'        \nEND AS \"Last Dunning Aging Category\"\n,AR_CustomerLastDunningDate AS \"Last Dunning Date\"\nFROM FLATTEN (\"defaultview-222\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate\n ORDER BY 3 DESC, 2 DESC \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}