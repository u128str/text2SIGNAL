{"signal_description": "Calculate the percentage difference between the count of case_id where the event_name matches 'Create Goods Receipt' and the count of case_id where the event_name matches 'Reverse Goods Receipt', divided by the count of case_id where the event_name matches 'Create Goods Receipt', multiplied by 100. The data is retrieved from the 'defaultview-57' table.", "llm_output": "{\n  \"signal_description\": \"Calculate the percentage difference between the count of case_id where the event_name matches 'Create Goods Receipt' and the count of case_id where the event_name matches 'Reverse Goods Receipt', divided by the count of case_id where the event_name matches 'Create Goods Receipt', multiplied by 100. The data is retrieved from the 'defaultview-57' table.\"\n}", "error_message": null, "llm_input": "You are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT (COUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES('Create Goods Receipt'))\n\t)\n\t-\n\tCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES('Reverse Goods Receipt'))\n\t))\n\t/\n\tCOUNT(case_id) FILTER (\n\tWHERE (event_name MATCHES('Create Goods Receipt'))\n\t)\n\t* 100\nFROM \"defaultview-57\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n"}