{"signal_description": "Get the percentage of on-time deliveries for the 'DeliveryGoodsMovementOnTime' event. Filter the results to only include cases where the count of 'DeliveryGoodsMovementOnTime' events is greater than 0. Calculate the percentage by dividing the count of case IDs that match the filter by the total count of case IDs, then multiplying by 100.", "llm_output": " {\n\"signal_description\": \"Get the percentage of on-time deliveries for the 'DeliveryGoodsMovementOnTime' event. Filter the results to only include cases where the count of 'DeliveryGoodsMovementOnTime' events is greater than 0. Calculate the percentage by dividing the count of case IDs that match the filter by the total count of case IDs, then multiplying by 100.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable way.\n\n* The first part of the query is \"SELECT COUNT(case_id)\". This part is selecting the count of the \"case_id\" column from the \"defaultview-383\" table.\n* The next part is \"FILTER (WHERE (SELECT COUNT(event_name) WHERE (\\\"DeliveryGoodsMovementOnTime\\\" = 'Yes')) > 0)\". This part is filtering the results to only include cases where the count of \"event_name\" columns with a value of 'Yes' for the \"DeliveryGoodsMovementOnTime\" event is greater than 0.\n* The third part is \"/ COUNT(case_id)\". This part is dividing the count of case IDs that match the filter by the total count of case IDs.\n* The final part is \"* 100\". This part is multiplying the result by 100 to express it as a percentage.\n\nThe signal_description describes each part of the query in a human-readable way, using the table and column names, and the respective values used in the query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE (\"DeliveryGoodsMovementOnTime\" = 'Yes')) > 0\n\t)\n/ COUNT(case_id)\n* 100\nFROM \"defaultview-383\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}