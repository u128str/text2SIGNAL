{"signal_description": "For every unique ARUniqueKey, calculate the percentage of accounts receivable cleared within 1 day from the due date, by dividing the count of such accounts by the total count of accounts receivable cleared, and then multiplying by 100.", "llm_output": " {\n\"signal_description\": \"For every unique ARUniqueKey, calculate the percentage of accounts receivable cleared within 1 day from the due date, by dividing the count of such accounts by the total count of accounts receivable cleared, and then multiplying by 100.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable format.\n\n1. SELECT: The query starts by selecting a set of data from the FLATTEN(\"defaultview-222\") table.\n2. COUNT (DISTINCT ARUniqueKey): This part of the query calculates the number of unique ARUniqueKey values in the selected data.\n3. FILTER (WHERE EVENT_NAME LIKE '%Clear Accounts Receivable%'): This part of the query filters the data to only include rows where the EVENT_NAME column contains the string '%Clear Accounts Receivable%'.\n4. AND (ClearingDate - NetDueDate) > DURATION '1day': This part of the query filters the data further to only include rows where the ClearingDate is greater than the NetDueDate by more than 1 day.\n5. COUNT (DISTINCT ARUniqueKey): This part of the query calculates the number of unique ARUniqueKey values in the filtered data.\n6. / COUNT (DISTINCT ARUniqueKey): This part of the query divides the number of unique ARUniqueKey values in the filtered data by the total number of unique ARUniqueKey values in the original data.\n7. * 100: This part of the query multiplies the result of the division by 100 to express it as a percentage.\n\nThe signal_description summarizes the query by describing the calculation performed on the FLATTEN(\"defaultview-222\") table, highlighting the column names and respective values used in the query, and providing a clear instruction-like description of the query's purpose.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT (\nCOUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE '%Clear Accounts Receivable%' \nAND (ClearingDate   - NetDueDate)  > DURATION '1day')  \n/ COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE '%Clear Accounts Receivable%' ) \n) * 100\nFROM FLATTEN(\"defaultview-222\") \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}