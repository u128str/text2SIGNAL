{"signal_description": "For every case, count the number of events where the invoice clearing date is greater than the invoice due date, and then divide that number by the total number of cases. The result is then multiplied by 100.", "llm_output": " {\n\"signal_description\": \"For every case, count the number of events where the invoice clearing date is greater than the invoice due date, and then divide that number by the total number of cases. The result is then multiplied by 100.\"\n}\n\nThis signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable way.\n\n* The first part of the query is \"SELECT COUNT(case_id)\". This selects the number of unique case IDs in the table.\n* The next part is \"FILTER (WHERE (SELECT COUNT(event_name) WHERE (\\\"InvoiceAccountingClearingDate\\\" > \\\"InvoiceDueDate\\\")) > 0)\". This filters the cases where the number of events with a clearing date greater than the due date is greater than zero.\n* The third part is \"COUNT(case_id) FILTER (WHERE (SELECT BOOL_OR(event_name IN ('Clear Invoice')))\". This filters the cases where the event name is 'Clear Invoice'.\n* The final part is \"* 100\". This multiplies the result by 100.\n\nPutting it all together, the signal_description describes the query as counting the number of events where the clearing date is greater than the due date, filtering out cases where this number is zero, and then dividing the result by the total number of cases and multiplying by 100.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE (\"InvoiceAccountingClearingDate\" > \"InvoiceDueDate\")) > 0\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Clear Invoice')))\n\t) \n* 100\n\nFROM \"defaultview-290\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}