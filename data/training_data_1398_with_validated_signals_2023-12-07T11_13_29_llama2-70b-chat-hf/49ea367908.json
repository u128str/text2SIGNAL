{"signal_description": "Count of unique event IDs that have 'System' or 'Service' as EventCreatedByUserType and event name contains 'Delivery' and ChangeType is 'Update', divided by total count of unique event IDs where EventCreatedByUserType is not null, expressed as a percentage.", "llm_output": " {\n\"signal_description\": \"Count of unique event IDs that have 'System' or 'Service' as EventCreatedByUserType and event name contains 'Delivery' and ChangeType is 'Update', divided by total count of unique event IDs where EventCreatedByUserType is not null, expressed as a percentage.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable format.\n\n* SELECT: The query selects two columns, COUNT(DISTINCT \"UniqueEventId\") and COUNT(DISTINCT \"UniqueEventId\") / COUNT(DISTINCT \"UniqueEventId\") * 100.\n* FILTER: The query applies two filters, one that filters the events created by user type and another that filters the events with the name containing 'Delivery' and ChangeType is 'Update'.\n* BEHAVIOR: The query uses the BEHAVIOR function to check if the event was created by a system or service user.\n* MATCHES: The query uses the MATCHES function to check if the created auto matches the created auto.\n* FLATTEN: The query flattens the defaultview-383 table.\n* WHERE: The query applies two filters, one that filters the events with the name containing 'Delivery' and ChangeType is 'Update' and another that filters the events where EventCreatedByUserType is not null.\n\nThe signal_description is a concise summary of the SIGNAL query, describing the table name, column names, and respective values used in the query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT(DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOR (\n        \"EventCreatedByUserType\" IN ('System', 'Service')\n        AND (\n          event_name LIKE '%Delivery%'\n          AND ChangeType = 'Update'\n        )\n      ) AS created_auto MATCHES (created_auto)\n  ) / COUNT(DISTINCT \"UniqueEventId\")  FILTER (\n          WHERE\n      (\"EventCreatedByUserType\" IS NOT NULL) ) * 100\nFROM\n  FLATTEN(\"defaultview-383\")\nWHERE\n  (\n    event_name LIKE '%Delivery%'\n    AND ChangeType = 'Update'\n  ) \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}