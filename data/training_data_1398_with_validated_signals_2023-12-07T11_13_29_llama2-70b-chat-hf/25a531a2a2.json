{"signal_description": "Retrieve the last epic for each case, count the number of cases where the status was changed to 'In Progress' more than once, and calculate the percentage of cases with more than one 'In Progress' status change out of all cases with at least one 'In Progress' status change. Sort the results by the count of cases with more than one 'In Progress' status change in descending order and then by the percentage of cases with more than one 'In Progress' status change in descending order.", "llm_output": " {\n\"signal_description\": \"Retrieve the last epic for each case, count the number of cases where the status was changed to 'In Progress' more than once, and calculate the percentage of cases with more than one 'In Progress' status change out of all cases with at least one 'In Progress' status change. Sort the results by the count of cases with more than one 'In Progress' status change in descending order and then by the percentage of cases with more than one 'In Progress' status change in descending order.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable format.\n\n* The first part of the query selects the \"LastEpic\" column and counts the number of case_id's that have at least one \"Change Status to In Progress\" event.\n* The second part of the query counts the number of case_id's that have more than one \"Change Status to In Progress\" event.\n* The third part of the query calculates the percentage of case_id's with more than one \"Change Status to In Progress\" event out of all case_id's with at least one \"Change Status to In Progress\" event.\n* The fourth part of the query sorts the results by the count of case_id's with more than one \"Change Status to In Progress\" event in descending order and then by the percentage of case_id's with more than one \"Change Status to In Progress\" event in descending order.\n\nThe signal_description is a concise summary of the SIGNAL query that provides an overview of the data being retrieved and the calculations being performed. It is written in a human-readable format that is easy to understand for someone familiar with the table name, column names, and respective values.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n\"LastEpic\" ,\nCOUNT(case_id) FILTER (\nWHERE (SELECT count(event_name) \nWHERE event_name = 'Change Status to In Progress' ) > 0 ) as \"Count\",\n\nCOUNT(case_id) \nFILTER (\n\tWHERE (SELECT count(event_name) WHERE event_name = 'Change Status to In Progress' ) > 1 )\n/ COUNT(case_id) FILTER (\nWHERE (SELECT count(event_name) \n\nWHERE event_name = 'Change Status to In Progress' ) > 0 )\n* 100 as \"Rework\"\nFROM \"defaultview-217\"\nORDER BY 3 DESC, 2 DESC \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}