{"signal_description": "Retrieve the percentage of reverse invoices from the 'defaultview-225' table. First, filter the rows where the 'event_name' column matches 'Reverse Invoice'. Then, divide the count of filtered rows by the total count of rows and multiply the result by 100.", "llm_output": " {\n\"signal_description\": \"Retrieve the percentage of reverse invoices from the 'defaultview-225' table. First, filter the rows where the 'event_name' column matches 'Reverse Invoice'. Then, divide the count of filtered rows by the total count of rows and multiply the result by 100.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its components and describing each part in a human-readable format.\n\n* SELECT: The query starts by selecting a column from the table.\n* COUNT(case_id): The selected column is 'case_id', and the aggregation function COUNT is applied to it.\n* FILTER (WHERE event_name MATCHES('Reverse Invoice')): A filter is applied to the rows before aggregation. The filter condition is that the 'event_name' column must match the string 'Reverse Invoice'.\n* COUNT(case_id) * 100: The result of the filter is then divided by the total count of rows in the table and multiplied by 100.\n* FROM \"defaultview-225\": The query is executed on the table named \"defaultview-225\".\n\nTherefore, the signal_description provides a step-by-step explanation of the query, referencing the table and column names and describing the operations performed in each step.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT(case_id) FILTER (\n    WHERE\n      event_name MATCHES('Reverse Invoice')\n  ) / COUNT(case_id) * 100\nFROM\n  \"defaultview-225\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}