{"signal_description": "Retrieves the total number of cases, cases with changes, and the invoice payment term. Cases are filtered based on events such as updates to contract net price, target quantity, order confirmation, PO confirmed delivery date, currency, item material, item net price, item plant, item quantity, payment terms, vendor, PR delivery date, material, net price, quantity, and last FI invoice item terms of payment key. The result is sorted in descending order by the total number of cases and limited to 20 rows.", "llm_output": " {\n\"signal_description\": \"Retrieves the total number of cases, cases with changes, and the invoice payment term. Cases are filtered based on events such as updates to contract net price, target quantity, order confirmation, PO confirmed delivery date, currency, item material, item net price, item plant, item quantity, payment terms, vendor, PR delivery date, material, net price, quantity, and last FI invoice item terms of payment key. The result is sorted in descending order by the total number of cases and limited to 20 rows.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable format.\n\n1. SELECT clause:\nThe query selects three columns:\n* COUNT(DISTINCT CASE_ID) AS \"Total No. of Cases\"\n* COUNT(DISTINCT IF(CHANGES = 1, CASE_ID, NULL)) AS \"Cases with Changes\"\n* \"Invoice Payment Term\"\n2. FROM clause:\nThe query uses a subquery to retrieve the data from a flattened view called \"defaultview-124\". The subquery selects the CASE_ID, EVENT_NAME, and \"Last FI Invoice Item Terms of Payment Key\" as \"Invoice Payment Term\".\n3. WHERE clause:\nThe query filters the data based on the EVENT_NAME being in a specific list of values, which are related to updates of contract net price, target quantity, order confirmation, PO confirmed delivery date, currency, item material, item net price, item plant, item quantity, payment terms, vendor, PR delivery date, material, net price, quantity, and last FI invoice item terms of payment key.\n4. ORDER BY clause:\nThe query sorts the result in descending order by the total number of cases.\n5. LIMIT clause:\nThe query limits the result to 20 rows.\n\nBy combining these parts, the signal_description provides a clear and concise summary of the SIGNAL query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\nCOUNT(DISTINCT CASE_ID) AS \"Total No. of Cases\",\nCOUNT(DISTINCT IF(CHANGES = 1, CASE_ID, NULL)) AS \"Cases with Changes\",\n\"Invoice Payment Term\"\nFROM\n(\n SELECT\n   CASE_ID,\n   IF(EVENT_NAME IN ('Update Contract Net Price' ,'Update Contract Target Quantity' ,'Update Order Confirmation' ,'Update PO Confirmed Delivery Date' ,'Update PO Currency' ,'Update PO Item Material' ,'Update PO Item Net Price' ,'Update PO Item Plant' ,'Update PO Item Quantity' ,'Update PO Payment Terms' ,'Update PO Vendor' ,'Update PR Delivery Date' ,'Update PR Material' ,'Update PR Net Price' ,'Update PR Quantity'),1,NULL) AS CHANGES,\n   \"Invoice Payment Term\"\n FROM\n  (\n     SELECT\n        CASE_ID,\n        EVENT_NAME,\n        \"Last FI Invoice Item Terms of Payment Key\" AS \"Invoice Payment Term\"\n     FROM FLATTEN(\"defaultview-124\")\n    ) AS SUB1\n) AS SUB2\nORDER BY 1 DESC\nLIMIT 20 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}