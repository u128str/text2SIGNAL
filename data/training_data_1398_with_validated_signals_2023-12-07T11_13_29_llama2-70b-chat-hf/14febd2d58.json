{"signal_description": "Retrieve the number of affected invoices, last activity, and days until the due date for cases where the last invoice item clearing date is null, the inv. accounting document number is not null, and the due date has not passed. Order the results by the affected invoice volume in descending order.", "llm_output": " {\n\"signal_description\": \"Retrieve the number of affected invoices, last activity, and days until the due date for cases where the last invoice item clearing date is null, the inv. accounting document number is not null, and the due date has not passed. Order the results by the affected invoice volume in descending order.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable format.\n\n* \"SELECT\": The query selects three columns: \"Affected Invoice Volume\", \"Last Activity\", and \"Days until Due\".\n* \"COUNT(case_id) AS 'Affected Invoice Volume'\": The first column counts the number of unique case IDs and aliases it as \"Affected Invoice Volume\".\n* \", LAST(event_name) AS 'Last Activity'\": The second column selects the last event name from the table and aliases it as \"Last Activity\".\n* \", 'Last Inv. Item Due Date' - DATE_TRUNC('day', NOW()) AS 'Days until Due'\": The third column calculates the difference between the last invoice item due date and the current date, truncated to the day level, and aliases it as \"Days until Due\".\n* \"FROM FLATTEN('defaultview-225')\": The query retrieves data from a flattened view named \"defaultview-225\".\n* \"WHERE ('Last Inv. Item Clearing Date' IS NULL) AND ('Inv. Accounting Document Number' IS NOT NULL)\": The query filters the data to only include cases where the last invoice item clearing date is null and the inv. accounting document number is not null.\n* \"ORDER BY 1 desc\": The query orders the results by the first column (affected invoice volume) in descending order.\n\nThe expected output result is a JSON object with a single key, \"signal_description\", containing a human-readable description of the SIGNAL query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \nCOUNT(case_id) AS \"Affected Invoice Volume\"\n,LAST(event_name) AS \"Last Activity\"\n,\"Last Inv. Item Due Date\"- DATE_TRUNC('day', NOW()) AS \"Days until Due\"\n\nFROM FLATTEN(\"defaultview-225\")\nWHERE (\"Last Inv. Item Clearing Date\" IS NULL)\nAND \"Inv. Accounting Document Number\" IS NOT NULL\nORDER BY 1 desc\n\n-- TODO: exclude \"due date pasesd\" for all future cases. use one activity before last (line 3) with lagging/window function. \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}