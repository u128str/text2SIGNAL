{"signal_description": "Retrieve case_id, end_time, Changed Table, Changed Field, Change Old Value, and Change New Value from the FLATTEN('defaultview-225') table. Filter the results to only include updates to the PO Payment Terms table, and specifically look for changes to the ZTERM, ZBD1T, ZBD2T, ZBD3T, ZBD1P, and ZBD2P fields. If the old value is less than the new value, describe the change as 'Changed to later due date'; if the old value is greater than the new value, describe the change as 'Changed to earlier due date'; otherwise, describe the change as 'ok'.", "llm_output": " {\n\"signal_description\": \"Retrieve case_id, end_time, Changed Table, Changed Field, Change Old Value, and Change New Value from the FLATTEN('defaultview-225') table. Filter the results to only include updates to the PO Payment Terms table, and specifically look for changes to the ZTERM, ZBD1T, ZBD2T, ZBD3T, ZBD1P, and ZBD2P fields. If the old value is less than the new value, describe the change as 'Changed to later due date'; if the old value is greater than the new value, describe the change as 'Changed to earlier due date'; otherwise, describe the change as 'ok'.\"\n}\n\nThis signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable way.\n\n* First, we have the SELECT clause, which specifies the columns that we want to retrieve: case_id, end_time, Changed Table, Changed Field, Change Old Value, and Change New Value.\n* Next, we have the FROM clause, which specifies the table to retrieve the data from: FLATTEN(\"defaultview-225\").\n* Then, we have the WHERE clause, which filters the results to only include updates to the PO Payment Terms table. This is done using the EVENT_NAME MATCHES (ILIKE 'Update PO Payment Terms') clause.\n* Finally, we have the AND clause, which filters the results further to only include changes to specific fields: ZTERM, ZBD1T, ZBD2T, ZBD3T, ZBD1P, and ZBD2P.\n* The CASE clause is used to describe the change in a human-readable way, based on the values of the Change Old Value and Change New Value columns.\n\nBy combining these parts, we get a clear and concise description of the SIGNAL query, which can help users understand what data the query is retrieving and how it is being filtered and processed.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \ncase_id, \"end_time\" \n,\"Changed Table\"\n,\"Changed Field\"\n,\"Change Old Value\"\n,\"Change New Value\"\nFROM FLATTEN(\"defaultview-225\")\n--WHERE EVENT_NAME MATCHES (ILIKE 'Update PO Payment Terms')\nWHERE (\"Changed Table\" IN ('EKKO','BSEG'))\nAND (\"Changed Field\" IN  ('ZTERM', 'ZTERM', 'ZBD1T','ZBD2T','ZBD3T', 'ZBD1P', 'ZBD2P'))\n\n\n--,CASE \n--\tWHEN \"Change Old Value\" < \"Change New Value\" THEN \"Changed to later due date\"\n--    WHEN \"Change Old Value\" > \"Change New Value\" THEN \"Changed to earlier due date\"\n--    ELSE 'ok'\n-- END AS \"Changed behaviour\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}