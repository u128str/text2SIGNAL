{"signal_description": "For every billing document created, calculate the percentage of billing documents canceled. Using the 'defaultview-222' table, filter the billing documents created and canceled events, and then divide the count of distinct billing documents canceled by the count of distinct billing documents created and multiply by 100.", "llm_output": " {\n\"signal_description\": \"For every billing document created, calculate the percentage of billing documents canceled. Using the 'defaultview-222' table, filter the billing documents created and canceled events, and then divide the count of distinct billing documents canceled by the count of distinct billing documents created and multiply by 100.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its components and describing each part's purpose.\n\n1. SELECT: This clause selects the columns and calculations to be performed in the query.\n2. COUNT(DISTINCT \"BillingDocument\") FILTER (WHERE event_name ='Cancel Billing Document'): This clause calculates the count of distinct billing documents that have a cancel event. The filter clause filters the rows where the event name is 'Cancel Billing Document'.\n3. COUNT(DISTINCT \"BillingDocument\") FILTER (WHERE event_name ='Create Billing Document'): This clause calculates the count of distinct billing documents that have a create event. The filter clause filters the rows where the event name is 'Create Billing Document'.\n4. * 100: This clause multiplies the result of the two counts by 100 to express the result as a percentage.\n5. FROM FLATTEN(\"defaultview-222\"): This clause specifies the table to use for the query. In this case, it is the \"defaultview-222\" table.\n\nThe signal_description explains the purpose of each clause and how they are used to calculate the percentage of billing documents canceled. It also references the table and column names used in the query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \nCOUNT(DISTINCT \"BillingDocument\") FILTER (\n\tWHERE event_name ='Cancel Billing Document')\n/\nCOUNT(DISTINCT \"BillingDocument\") FILTER (\n\tWHERE event_name ='Create Billing Document')\n* 100\nFROM FLATTEN(\"defaultview-222\") \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}