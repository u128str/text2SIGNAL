{"signal_description": "Calculate the percentage of overdue accounts receivable cleared, by summing the amount in global currency for events named 'Clear Accounts Receivable' with a clearing date greater than one day from the net due date, and then dividing that sum by the total amount in global currency for all events named 'Clear Accounts Receivable', and then multiplying by 100.", "llm_output": " {\n\"signal_description\": \"Calculate the percentage of overdue accounts receivable cleared, by summing the amount in global currency for events named 'Clear Accounts Receivable' with a clearing date greater than one day from the net due date, and then dividing that sum by the total amount in global currency for all events named 'Clear Accounts Receivable', and then multiplying by 100.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable format.\n\n1. SELECT: The query starts by selecting a column or columns from a table. In this case, the column selected is \"AmountInGlobalCurrency\".\n2. FILTER: The query then applies a filter to the selected column(s) using the WHERE clause. In this case, the filter is applied to the column \"EVENT_NAME\" and the condition is that the value must be 'Clear Accounts Receivable'.\n3. SUM: The query then applies a summary operation to the filtered column(s) using the SUM aggregation function. In this case, the summary operation is applied to the column \"AmountInGlobalCurrency\".\n4. FILTER: Another filter is applied to the summary result using the WHERE clause. In this case, the filter is applied to the column \"ClearingDate\" and the condition is that the value must be greater than the net due date.\n5. SUM: Another summary operation is applied to the filtered result using the SUM aggregation function. In this case, the summary operation is applied to the column \"AmountInGlobalCurrency\".\n6. /: The query then divides the result of the first summary operation by the result of the second summary operation.\n7. * 100: The result of the division is then multiplied by 100.\n8. FROM: The query specifies the table to use for the operation. In this case, the table is \"FLATTEN(\\\"defaultview-222\\\")\".\n\nThe signal_description is constructed by describing each part of the query in a human-readable format, using the column names and values mentioned in the query. The description is written as a set of instructions that a human could follow to understand what the query is doing.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT (\nSUM (\"AmountInGlobalCurrency\" ) \nFILTER (WHERE EVENT_NAME LIKE 'Clear Accounts Receivable'  \nAND (ClearingDate   - NetDueDate)  > DURATION '1day')  \n/ SUM (\"AmountInGlobalCurrency\" )\nFILTER (WHERE EVENT_NAME LIKE 'Clear Accounts Receivable' )\n) * 100\nFROM FLATTEN(\"defaultview-222\") \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}