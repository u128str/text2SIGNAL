{"signal_description": "For the defaultview-124 table, calculate the percentage of cases affected by rework. First, filter the cases where the occurrence of an event is greater than 3. Then, count the number of case IDs and divide that by the total number of case IDs. Finally, multiply the result by 100.", "llm_output": " {\n\"signal_description\": \"For the defaultview-124 table, calculate the percentage of cases affected by rework. First, filter the cases where the occurrence of an event is greater than 3. Then, count the number of case IDs and divide that by the total number of case IDs. Finally, multiply the result by 100.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each step in a human-readable format.\n\n1. \"SELECT COUNT (CASE_ID)\": This line selects the column \"CASE_ID\" from the table \"defaultview-124\" and counts the number of unique values in that column.\n2. \"FILTER (WHERE (SELECT BOOL_OR (occurrence > 3) FROM (SELECT OCCURRENCE(EVENT_NAME) AS occurrence) AS sub))\": This line filters the cases where the occurrence of an event is greater than 3. It does this by selecting the boolean OR of the occurrence column from a subquery that selects the occurrence of events from the \"defaultview-124\" table.\n3. \"/ COUNT (CASE_ID) * 100\": This line divides the number of case IDs that pass the filter by the total number of case IDs and multiplies the result by 100.\n4. \"FROM defaultview-124\": This line specifies the table to query.\n5. \"WHERE ((SELECT BOOL_OR(\\\"Event Created By User Type\\\" IN ('Dialog'))))\": This line filters the rows where the \"Event Created By User Type\" column contains the value 'Dialog'.\n\nThe signal_description summarizes the query by describing each step in a human-readable format, using the table and column names, and explaining the logic behind the filter and calculation.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \nCOUNT (CASE_ID) FILTER (WHERE (SELECT BOOL_OR (occurrence > 3) FROM (SELECT OCCURRENCE(EVENT_NAME) AS occurrence) AS sub)) / COUNT (CASE_ID) * 100 AS \"Percent of cases affected by rework\"\nFROM \"defaultview-124\"\nWHERE ((SELECT BOOL_OR(\"Event Created By User Type\" IN ('Dialog')))) \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}