{"signal_description": "For every unique ARUniqueKey, calculate the percentage of accounts receivable cleared within 1 day from the due date, by dividing the count of such accounts by the total count of accounts receivable cleared, and then multiplying by 100.", "llm_output": " {\n\"signal_description\": \"For every unique ARUniqueKey, calculate the percentage of accounts receivable cleared within 1 day from the due date, by dividing the count of such accounts by the total count of accounts receivable cleared, and then multiplying by 100.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its components and understanding what each part does.\n\n* The first part of the query is \"COUNT (DISTINCT ARUniqueKey)\". This part counts the number of unique values in the ARUniqueKey column.\n* The second part is \"FILTER (WHERE EVENT_NAME LIKE 'Clear Accounts Receivable' AND (ClearingDate - NetDueDate) > DURATION '1day')\". This part filters the data to only include rows where the EVENT_NAME is 'Clear Accounts Receivable' and the difference between the ClearingDate and NetDueDate is greater than 1 day.\n* The third part is \"/ COUNT (DISTINCT ARUniqueKey)\". This part divides the count of unique ARUniqueKey values that meet the filter criteria by the total count of unique ARUniqueKey values.\n* The fourth part is \"FILTER (WHERE EVENT_NAME LIKE 'Clear Accounts Receivable')\". This part filters the data to only include rows where the EVENT_NAME is 'Clear Accounts Receivable'.\n* The fifth part is \") * 100\". This part multiplies the result of the previous parts by 100.\n\nBased on this breakdown, the signal_description was constructed as a human-readable description of what the SIGNAL query does. It explains the purpose of the query, which is to calculate the percentage of accounts receivable cleared within 1 day from the due date, and how it does it by using the COUNT, FILTER, and DURATION functions.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT (\nCOUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear Accounts Receivable' \nAND (ClearingDate   - NetDueDate)  > DURATION '1day')  \n/ COUNT (DISTINCT ARUniqueKey) \nFILTER (WHERE EVENT_NAME LIKE 'Clear Accounts Receivable' ) \n) * 100\nFROM FLATTEN(\"defaultview-222\") \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}