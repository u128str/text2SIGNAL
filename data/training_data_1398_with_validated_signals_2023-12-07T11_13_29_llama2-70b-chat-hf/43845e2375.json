{"signal_description": "Calculate the average percentage of events with names containing 'Update' or 'Change' out of all events in the 'defaultview-225' table.", "llm_output": " {\n\"signal_description\": \"Calculate the average percentage of events with names containing 'Update' or 'Change' out of all events in the 'defaultview-225' table.\"\n}\n\nThe signal_description was constructed by first identifying the main components of the SIGNAL query:\n\n1. The table name: \"defaultview-225\"\n2. The column names: event_name\n3. The filter condition: event_name ILIKE '%Update%' OR event_name ILIKE '%Change%'\n4. The aggregation function: COUNT(event_name)\n5. The division operator: /\n6. The multiplication operator: *\n7. The constant value: 100\n\nThen, the signal_description was constructed in a human-readable format, using plain English instructions that reference the table name, column names, and respective values. The instructions are written as if a human who knows the table schema and data is explaining the query to someone who doesn't.\n\nHere's a breakdown of the signal_description:\n\n* \"Calculate the average percentage\" - This phrase indicates that the query is calculating a percentage, which is a value between 0 and 100.\n* \"of events with names containing 'Update' or 'Change'\" - This phrase describes the filter condition, which selects events with names that contain either 'Update' or 'Change'.\n* \"out of all events\" - This phrase indicates that the filter condition is applied to all events in the table.\n* \"in the 'defaultview-225' table\" - This phrase references the table name and indicates that the query is operating on a specific table.\n\nOverall, the signal_description provides a clear and concise explanation of the SIGNAL query, making it easier for users to understand the query's purpose and how it works.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT AVG(\n\t(SELECT COUNT(event_name) FILTER (\n\t\tWHERE event_name ILIKE '%Update%' OR event_name ILIKE '%Change%')\n\t) / (SELECT COUNT(event_name))\n   ) * 100 \nFROM \"defaultview-225\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}