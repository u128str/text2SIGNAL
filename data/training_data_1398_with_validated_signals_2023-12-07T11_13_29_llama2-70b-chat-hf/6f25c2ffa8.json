{"signal_description": "Retrieve the number of unique event IDs for updates with 'Delivery' in the event name, grouped by customer company, and sorted in descending order by the number of changes, limited to 10 rows.", "llm_output": " {\n\"signal_description\": \"Retrieve the number of unique event IDs for updates with 'Delivery' in the event name, grouped by customer company, and sorted in descending order by the number of changes, limited to 10 rows.\"\n}\n\nThe signal_description was constructed by:\n\n1. Identifying the main components of the SIGNAL query:\n\t* SELECT clause: COUNT(DISTINCT \"UniqueEventId\")\n\t* FILTER clause: WHERE BEHAVIOUR (EVENT_NAME LIKE '%Delivery%' AND ChangeType = 'Update') AS changes MATCHES (changes)\n\t* FROM clause: FLATTEN(\"defaultview-383\")\n\t* GROUP BY clause: 2\n\t* ORDER BY clause: 1 DESC\n\t* LIMIT clause: 10\n2. Breaking down the query into smaller parts and describing each part in a human-readable format:\n\t* COUNT(DISTINCT \"UniqueEventId\"): Retrieves the number of unique event IDs.\n\t* FILTER clause: Filters the events that have 'Delivery' in the event name and updates in the changetype.\n\t* BEHAVIOUR (EVENT_NAME LIKE '%Delivery%' AND ChangeType = 'Update'): Specifies the condition for the events to be included in the query.\n\t* MATCHES (changes): Matches the changes made to the events.\n\t* FLATTEN(\"defaultview-383\"): Flattens the data from the \"defaultview-383\" table.\n\t* GROUP BY clause: Groups the data by the second column (SalesDocCustomerCompany).\n\t* ORDER BY clause: Sorts the data in descending order by the first column (number of changes).\n\t* LIMIT clause: Limits the number of rows to 10.\n3. Combining the descriptions of each part to create a human-readable summary of the SIGNAL query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Delivery%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}