{"signal_description": "Retrieve case_id, end_time, Changed Table, Changed Field, Change Old Value, and Change New Value from the FLATTEN('defaultview-225') table where Changed Table is in ('EKKO', 'BSEG') and Changed Field is in ('ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', 'ZBD2P')", "llm_output": " {\n\"signal_description\": \"Retrieve case_id, end_time, Changed Table, Changed Field, Change Old Value, and Change New Value from the FLATTEN('defaultview-225') table where Changed Table is in ('EKKO', 'BSEG') and Changed Field is in ('ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', 'ZBD2P')\"\n}\n\nThe signal_description was constructed by:\n\n1. Identifying the main components of the SIGNAL query:\n\t* SELECT clause: case_id, end_time, Changed Table, Changed Field, Change Old Value, and Change New Value\n\t* FROM clause: FLATTEN(\"defaultview-225\")\n\t* WHERE clause: Changed Table IN ('EKKO', 'BSEG') AND Changed Field IN ('ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', 'ZBD2P')\n2. Breaking down the SELECT clause into its individual components:\n\t* case_id\n\t* end_time\n\t* Changed Table\n\t* Changed Field\n\t* Change Old Value\n\t* Change New Value\n3. Identifying the tables and columns referenced in the query:\n\t* FLATTEN(\"defaultview-225\")\n\t* Changed Table (referenced in the WHERE clause)\n\t* Changed Field (referenced in the WHERE clause)\n4. Creating a human-readable description of the query by combining the information from steps 2 and 3:\n\"Retrieve case_id, end_time, Changed Table, Changed Field, Change Old Value, and Change New Value from the FLATTEN('defaultview-225') table where Changed Table is in ('EKKO', 'BSEG') and Changed Field is in ('ZTERM', 'ZBD1T', 'ZBD2T', 'ZBD3T', 'ZBD1P', 'ZBD2P')\"\n\nNote: The signal_description is a JSON object with a single key, \"signal_description\", whose value is a string that summarizes the SIGNAL query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \ncase_id, \"end_time\" \n--,\"Changed Table\"\n, CASE\n\tWHEN \"Changed Table\" = 'EKKO' THEN 'Purchasing Document Header'\n    WHEN \"Changed Table\" = 'BSEG' THEN 'Accounting Document Segment'\n    ELSE 'Others'\n    END AS \"Changed Table\"\n, CASE\n\tWHEN \"Changed Field\" = 'ZBD1P' THEN 'Cash Discount Percentage 1'\n    WHEN \"Changed Field\" = 'ZBD2P' THEN 'Cash Discount Percentage 2'\n    WHEN \"Changed Field\" = 'ZBD1T' THEN 'Cash discount days 1'\n    WHEN \"Changed Field\" = 'ZBD2T' THEN 'Cash discount days 2'\n    WHEN \"Changed Field\" = 'ZBD3T' THEN 'Net Payment Terms Period'\n    WHEN \"Changed Field\" = 'ZTERM' THEN 'Terms of Payment Key'\n    ELSE 'Others'\n\tEND AS \"Changed Field\"\n,\"Change Old Value\"\n,\"Change New Value\"\nFROM FLATTEN(\"defaultview-225\")\n--WHERE EVENT_NAME MATCHES (ILIKE 'Update PO Payment Terms')\nWHERE (\"Changed Table\" IN ('EKKO','BSEG'))\nAND (\"Changed Field\" IN  ('ZTERM', 'ZTERM', 'ZBD1T','ZBD2T','ZBD3T', 'ZBD1P', 'ZBD2P')) \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}