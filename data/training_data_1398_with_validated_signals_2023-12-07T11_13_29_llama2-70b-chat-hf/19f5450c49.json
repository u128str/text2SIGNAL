{"signal_description": "Calculate the percentage of on-time deliveries for the 'DeliveryGoodsMovementOnTime' event. First, filter the cases where the count of 'DeliveryGoodsMovementOnTime' events is greater than zero. Then, divide the filtered count of case IDs by the total count of case IDs, and multiply the result by 100.", "llm_output": " {\n\"signal_description\": \"Calculate the percentage of on-time deliveries for the 'DeliveryGoodsMovementOnTime' event. First, filter the cases where the count of 'DeliveryGoodsMovementOnTime' events is greater than zero. Then, divide the filtered count of case IDs by the total count of case IDs, and multiply the result by 100.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable format.\n\n1. SELECT clause:\nThe query selects two columns:\n* COUNT(case_id)\n* COUNT(event_name)\n2. FILTER clause:\nThe query filters the data using two separate conditions:\n* The first condition is applied to the event_name column, and filters for rows where the value is 'Yes' for the \"DeliveryGoodsMovementOnTime\" event.\n* The second condition is applied to the event_name column, and filters for rows where the value is 'Create Outbound Delivery' or any other string that contains the word 'Create Outbound Delivery'.\n3. Mathematical operations:\nThe query performs two mathematical operations:\n* Divides the filtered count of case IDs by the total count of case IDs.\n* Multiplies the result by 100.\n4. FROM clause:\nThe query specifies the table name as \"defaultview-290\".\n\nThe signal_description summarizes the query by describing the table name, column names, and respective values used in the query, and provides a step-by-step explanation of how the query is executed.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \n\nSELECT\nCOUNT(case_id) FILTER (\n\tWHERE (SELECT COUNT(event_name)\n\t\t\tWHERE (\"DeliveryGoodsMovementOnTime\" = 'Yes')) > 0\n\t)\n/ COUNT(case_id) FILTER (\n\tWHERE (SELECT BOOL_OR(event_name IN ('Create Outbound Delivery')))\n\t) \n* 100\nFROM \"defaultview-290\"\n                 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}