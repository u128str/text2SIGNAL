{"signal_description": "Retrieves the total number of cases, cases with changes, and PO type from the 'defaultview-124' table. The query first filters the events that have 'Update Contract Net Price', 'Update Contract Target Quantity', 'Update Order Confirmation', 'Update PO Confirmed Delivery Date', 'Update PO Currency', 'Update PO Item Material', 'Update PO Item Net Price', 'Update PO Item Plant', 'Update PO Item Quantity', 'Update PO Payment Terms', 'Update PO Vendor', 'Update PR Delivery Date', 'Update PR Material', 'Update PR Net Price', or 'Update PR Quantity' in the 'EVENT_NAME' column. Then, it counts the distinct case IDs and filters out null values. Finally, it sorts the results in descending order and limits them to the top 20 rows.", "llm_output": " {\n\"signal_description\": \"Retrieves the total number of cases, cases with changes, and PO type from the 'defaultview-124' table. The query first filters the events that have 'Update Contract Net Price', 'Update Contract Target Quantity', 'Update Order Confirmation', 'Update PO Confirmed Delivery Date', 'Update PO Currency', 'Update PO Item Material', 'Update PO Item Net Price', 'Update PO Item Plant', 'Update PO Item Quantity', 'Update PO Payment Terms', 'Update PO Vendor', 'Update PR Delivery Date', 'Update PR Material', 'Update PR Net Price', or 'Update PR Quantity' in the 'EVENT_NAME' column. Then, it counts the distinct case IDs and filters out null values. Finally, it sorts the results in descending order and limits them to the top 20 rows.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each step in a human-readable format. The table name, column names, and respective values used in the query are explicitly referenced in the description. The description is written in a style that resembles a set of instructions written by a human who knows the table schema and the values in the columns.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\nCOUNT(DISTINCT CASE_ID) AS \"Total No. of Cases\",\nCOUNT(DISTINCT IF(CHANGES = 1, CASE_ID, NULL)) AS \"Cases with Changes\",\n\"PO Type\"\nFROM\n(\n SELECT\n   CASE_ID,\n   IF(EVENT_NAME IN ('Update Contract Net Price' ,'Update Contract Target Quantity' ,'Update Order Confirmation' ,'Update PO Confirmed Delivery Date' ,'Update PO Currency' ,'Update PO Item Material' ,'Update PO Item Net Price' ,'Update PO Item Plant' ,'Update PO Item Quantity' ,'Update PO Payment Terms' ,'Update PO Vendor' ,'Update PR Delivery Date' ,'Update PR Material' ,'Update PR Net Price' ,'Update PR Quantity'),1,NULL) AS CHANGES,\n   \"PO Type\"\n FROM\n  (\n     SELECT\n        CASE_ID,\n        EVENT_NAME,\n        \"PO Type\" AS \"PO Type\"\n     FROM FLATTEN(\"defaultview-124\")\n     --WHERE \"PO Purchasing Group\" IS NOT NULL\n    ) AS SUB1\n) AS SUB2\nORDER BY 1 DESC\nLIMIT 20 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}