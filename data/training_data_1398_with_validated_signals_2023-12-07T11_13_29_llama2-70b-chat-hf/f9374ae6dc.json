{"signal_description": "Calculate the percentage of cases where at least one change was made to the contract, order, or payment terms, out of all cases. The changes are identified by the event names: 'Update Contract Net Price', 'Update Contract Target Quantity', ..., 'Update PO Vendor', 'Update PR Delivery Date', 'Update PR Material', 'Update PR Net Price', 'Update PR Quantity'. The calculation is done by counting the distinct case IDs that have at least one change (represented by the 'CHANGES' column), dividing that by the total number of distinct case IDs, and multiplying the result by 100.", "llm_output": " {\n\"signal_description\": \"Calculate the percentage of cases where at least one change was made to the contract, order, or payment terms, out of all cases. The changes are identified by the event names: 'Update Contract Net Price', 'Update Contract Target Quantity', ..., 'Update PO Vendor', 'Update PR Delivery Date', 'Update PR Material', 'Update PR Net Price', 'Update PR Quantity'. The calculation is done by counting the distinct case IDs that have at least one change (represented by the 'CHANGES' column), dividing that by the total number of distinct case IDs, and multiplying the result by 100.\"\n}\n\nThis signal_description was constructed by:\n\n1. Reading the SIGNAL query and identifying the main components:\n\t* The query is selecting a single column, `COUNT(DISTINCT IF(CHANGES = 1, CASE_ID, NULL))/COUNT(DISTINCT CASE_ID) * 100`, which is a calculation involving the `CASE_ID` column and a derived column `CHANGES`.\n\t* The `CHANGES` column is defined as an `IF` function that checks if the `EVENT_NAME` is in a list of specific values.\n\t* The `EVENT_NAME` column is selected from a subquery that flattens a table named `defaultview-124`.\n2. Understanding the purpose of the query:\n\t* The query is aiming to calculate the percentage of cases where at least one change was made to the contract, order, or payment terms.\n\t* The changes are identified by the event names specified in the `IF` function.\n\t* The calculation is done by counting the distinct case IDs that have at least one change, dividing that by the total number of distinct case IDs, and multiplying the result by 100.\n3. Crafting the signal_description:\n\t* The signal_description should provide a clear and concise explanation of the query's purpose and how it is calculated.\n\t* The description should reference the table name, column names, and respective values used in the Signal query.\n\t* The description should be written in a style that looks like a set of instructions written by a human who knows the table name, columns schema, and respective values.\n\nThe resulting signal_description accurately summarizes the purpose and calculation of the SIGNAL query, making it easier for users to understand the query without having to read the entire query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\nCOUNT(DISTINCT IF(CHANGES = 1, CASE_ID, NULL))/COUNT(DISTINCT CASE_ID) * 100\nFROM\n(\n SELECT\n   CASE_ID,\n   IF(EVENT_NAME IN ('Update Contract Net Price' ,'Update Contract Target Quantity' ,'Update Order Confirmation' ,'Update PO Confirmed Delivery Date' ,'Update PO Currency' ,'Update PO Item Material' ,'Update PO Item Net Price' ,'Update PO Item Plant' ,'Update PO Item Quantity' ,'Update PO Payment Terms' ,'Update PO Vendor' ,'Update PR Delivery Date' ,'Update PR Material' ,'Update PR Net Price' ,'Update PR Quantity'),1,NULL) AS CHANGES\n FROM\n  (\n     SELECT \n        CASE_ID,\n       EVENT_NAME\n    FROM FLATTEN(\"defaultview-124\")\n    ) AS SUB1\n) AS SUB2 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}