{"signal_description": "Retrieve the number of invoices, late delivery rate, and company code text for the top 10 invoices with non-null company code text. Filter the results to show only invoices with a clearing date after the due date.", "llm_output": " {\n\"signal_description\": \"Retrieve the number of invoices, late delivery rate, and company code text for the top 10 invoices with non-null company code text. Filter the results to show only invoices with a clearing date after the due date.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable format.\n\n1. SELECT clause:\n\t* COUNT (CASE_ID) AS \"No. of Invoices\" - Retrieve the count of unique invoice IDs.\n\t* COUNT (CASE_ID) FILTER (WHERE (\"Last Inv. Item Due Date\" < \"Last Inv. Item Clearing Date\")) / COUNT (CASE_ID) FILTER (WHERE (\"Last Inv. Item Clearing Date\" IS NOT NULL)) * 100 AS \"Late Delivery Rate\" - Calculate the percentage of invoices with a late delivery rate by dividing the count of invoices with a due date before the clearing date by the total count of invoices with a non-null clearing date, and then multiplying by 100.\n\t* \"Inv. Company Code Text\" - Retrieve the company code text for the invoices.\n2. FROM clause:\n\t* \"defaultview-225\" - The query is executed on a specific view named \"defaultview-225\".\n3. WHERE clause:\n\t* \"Inv. Company Code Text\" IS NOT NULL - Filter the results to only include invoices with a non-null company code text.\n4. ORDER BY clause:\n\t* ORDER BY 1 DESC - Sort the results in descending order based on the first column (No. of Invoices).\n5. LIMIT clause:\n\t* LIMIT 10 - Limit the number of results to the top 10 invoices.\n\nThe signal_description summarizes the query by describing the main components of the query, including the table name, column names, and respective values used in the filter and calculation parts of the query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n  COUNT (CASE_ID) AS \"No. of Invoices\",\n  COUNT (CASE_ID) FILTER (\n    \tWHERE (\"Last Inv. Item Due Date\" \n        \t< \"Last Inv. Item Clearing Date\" )) \n\t/ COUNT (CASE_ID) FILTER (\n    \tWHERE (\"Last Inv. Item Clearing Date\"  IS NOT NULL)) \n    * 100 AS \"Late Delivery Rate\", \"Inv. Company Code Text\" \n    \nFROM \"defaultview-225\"\nWHERE \"Inv. Company Code Text\" IS NOT NULL\nORDER BY 1 DESC\nLIMIT 10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}