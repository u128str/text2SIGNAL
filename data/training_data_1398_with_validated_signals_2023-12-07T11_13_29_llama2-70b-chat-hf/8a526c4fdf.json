{"signal_description": "Retrieve the number of cases (Process Orders) and the percentage of material shortage cases for each division. The percentage is calculated by dividing the number of cases with material shortage by the total number of cases and multiplying by 100. Sort the results in descending order by the number of Process Orders.", "llm_output": " {\n\"signal_description\": \"Retrieve the number of cases (Process Orders) and the percentage of material shortage cases for each division. The percentage is calculated by dividing the number of cases with material shortage by the total number of cases and multiplying by 100. Sort the results in descending order by the number of Process Orders.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its components and describing each part in a human-readable format.\n\n* The first part of the query is \"SELECT COUNT (CASE_ID) as 'Process Orders'\". This part is selecting the count of the CASE_ID column and assigning it to a label called \"Process Orders\".\n* The second part is \"COUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Material shortage')) / COUNT (CASE_ID) * 100 AS '% Material Shortage'\". This part is counting the number of cases where the EVENT_NAME column matches 'Material shortage' and dividing it by the total number of cases, then multiplying by 100 to get the percentage. This percentage is assigned to a label called \"% Material Shortage\".\n* The third part is \"\\\"Division\\\"\". This part is selecting the Division column.\n* The last part is \"FROM \\\"defaultview-183\\\" order by 1 desc\". This part is specifying the table to query (defaultview-183) and sorting the results in descending order by the first column (Process Orders).\n\nBy combining these parts, we get the overall description of the SIGNAL query, which is to retrieve the number of cases and percentage of material shortage cases for each division, sorted in descending order by the number of Process Orders.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT COUNT (CASE_ID) as \"Process Orders\",\nCOUNT (CASE_ID) FILTER (WHERE EVENT_NAME MATCHES ('Material shortage')) / COUNT (CASE_ID)  * 100 AS \"% Material Shortage\",\n\"Division\"\nFROM \"defaultview-183\"\norder by 1 desc \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}