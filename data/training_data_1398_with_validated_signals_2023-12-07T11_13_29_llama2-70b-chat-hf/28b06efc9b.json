{"signal_description": "Retrieve the following information from the 'defaultview-222' table: Company Code, Customer, number of overdue receivables, and last dunning aging category. Filter the results to only include records where the net due date is not null, the event name is 'Create Accounts Receivable', the clearing date is null, and the current date is greater than or equal to the net due date. Order the results by the last dunning aging category in descending order and then by the customer in descending order.", "llm_output": " {\n\"signal_description\": \"Retrieve the following information from the 'defaultview-222' table: Company Code, Customer, number of overdue receivables, and last dunning aging category. Filter the results to only include records where the net due date is not null, the event name is 'Create Accounts Receivable', the clearing date is null, and the current date is greater than or equal to the net due date. Order the results by the last dunning aging category in descending order and then by the customer in descending order.\"\n}\n\nThis signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a natural language format.\n\n* The first part of the query selects the columns that are of interest: \"AR_CompanyCode\" AS \"Company Code\", \"AR_CustomerName\" AS \"Customer\", count(DISTINCT \"ARUniqueKey\") as \"# Overdue Receivables\", and \"CASE\" AS \"Last Dunning Aging Category\".\n* The second part of the query uses a CASE statement to define the last dunning aging category based on the difference between the current date and the last dunning date. The categories are defined as:\n\t+ '1.No Dunning' if the last dunning date is null or the difference between the current date and the last dunning date is greater than 90 days.\n\t+ '2. 0-7 days' if the difference between the current date and the last dunning date is between 0 and 7 days.\n\t+ '3. 8-14 days' if the difference between the current date and the last dunning date is between 8 and 14 days.\n\t+ '4. 15-30 days' if the difference between the current date and the last dunning date is between 15 and 30 days.\n\t+ '5. 31-60 days' if the difference between the current date and the last dunning date is between 31 and 60 days.\n\t+ '6. 61-90 days' if the difference between the current date and the last dunning date is between 61 and 90 days.\n\t+ '7. >90 days' if the difference between the current date and the last dunning date is greater than 90 days.\n* The third part of the query filters the results to only include records where the net due date is not null, the event name is 'Create Accounts Receivable', the clearing date is null, and the current date is greater than or equal to the net due date.\n* The final part of the query orders the results by the last dunning aging category in descending order and then by the customer in descending order.\n\nOverall, this signal_description provides a clear and concise summary of the SIGNAL query, making it easier for users to understand the purpose and functionality of the query without having to read through the actual SQL code.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT \n\"AR_CompanyCode\" AS \"Company Code\",\nAR_CustomerName AS \"Customer\",\ncount(DISTINCT \"ARUniqueKey\" ) as \"# Overdue Receivables\",\nCASE \n\nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '0day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '7day'\n        THEN '2. 0-7 days'\n        \nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '7day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '14day'\n        THEN '3. 8-14 days'\nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '14day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '30day'\n        THEN '4. 15-30 days'\nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '30day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '60day'\n        THEN '5. 31-60 days'\n        \nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '60day'\n        AND  (NOW()-AR_CustomerLastDunningDate)<= DURATION '90day'\n        THEN '6. 61-90 days'\n        \nWHEN \n\t\t(NOW()-AR_CustomerLastDunningDate)> DURATION '90day'\n        THEN '7. >90 days'\nELSE '1.No Dunning'        \nEND AS \"Last Dunning Aging Category\"\n,AR_CustomerLastDunningDate AS \"Last Dunning Date\"\nFROM FLATTEN (\"defaultview-222\")\n\nWHERE NetDueDate is not null \n\t\tAND event_name = 'Create Accounts Receivable'\n        AND ClearingDate IS NULL\n        AND NOW() >= NetDueDate\n ORDER BY 3 DESC, 2 DESC \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}