{"signal_description": "Retrieve the number of unique events with the name containing 'Invoice' and ChangeType = 'Update', grouped by SalesDocCustomerCompany, sorted in descending order by the number of changes, limited to 10 rows.", "llm_output": " {\n\"signal_description\": \"Retrieve the number of unique events with the name containing 'Invoice' and ChangeType = 'Update', grouped by SalesDocCustomerCompany, sorted in descending order by the number of changes, limited to 10 rows.\"\n}\n\nThe signal_description was constructed by:\n\n1. Identifying the main components of the SIGNAL query:\n\t* SELECT clause: COUNT (DISTINCT \"UniqueEventId\")\n\t* FILTER clause: WHERE BEHAVIOUR (EVENT_NAME LIKE '%Invoice%' AND ChangeType = 'Update') AS changes MATCHES (changes)\n\t* FROM clause: FLATTEN(\"defaultview-383\")\n\t* GROUP BY clause: 2\n\t* ORDER BY clause: 1 DESC\n\t* LIMIT clause: 10\n2. Breaking down the query into smaller parts and describing each part in a human-readable format:\n\t* COUNT (DISTINCT \"UniqueEventId\"): Retrieves the number of unique event IDs.\n\t* FILTER (WHERE BEHAVIOUR (EVENT_NAME LIKE '%Invoice%' AND ChangeType = 'Update') AS changes MATCHES (changes)): Filters the events based on the specified conditions, such as event name containing 'Invoice' and ChangeType = 'Update'.\n\t* \"SalesDocCustomerCompany\": The column name used in the GROUP BY clause.\n\t* FLATTEN(\"defaultview-383\"): The table name used in the FROM clause.\n\t* GROUP BY 2: Groups the data by the second column (SalesDocCustomerCompany).\n\t* ORDER BY 1 DESC: Sorts the data in descending order based on the first column (number of changes).\n\t* LIMIT 10: Limits the number of rows returned to 10.\n3. Combining the descriptions of each part to create a human-readable summary of the SIGNAL query.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  COUNT (DISTINCT \"UniqueEventId\") FILTER (\n    WHERE\n      BEHAVIOUR (\n        EVENT_NAME LIKE '%Invoice%'\n        AND ChangeType = 'Update'\n      ) AS changes MATCHES (changes)\n  ) AS \"# Changes\",\n  \"SalesDocCustomerCompany\"\nFROM\n  FLATTEN(\"defaultview-383\")\nGROUP BY\n  2\nORDER BY\n  1 DESC\nLIMIT\n  10 \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}