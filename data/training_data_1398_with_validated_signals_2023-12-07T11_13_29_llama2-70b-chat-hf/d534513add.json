{"signal_description": "Count of CASE_ID where Last GR Item Delivery Date is greater than PO Requested Delivery Date and PO Delivery Status is Received, divided by count of CASE_ID where PO Delivery Status is Received, multiplied by 100.", "llm_output": " {\n\"signal_description\": \"Count of CASE_ID where Last GR Item Delivery Date is greater than PO Requested Delivery Date and PO Delivery Status is Received, divided by count of CASE_ID where PO Delivery Status is Received, multiplied by 100.\"\n}\n\nThe signal_description was constructed by breaking down the SIGNAL query into its component parts and describing each part in a human-readable format.\n\n* The first part of the query is \"COUNT(CASE_ID) FILTER (WHERE DATE_TRUNC('day', 'Last GR Item Delivery Date') > 'PO Requested Delivery Date' AND 'PO Delivery Status' = 'Received')\". This part counts the number of CASE_ID where the last GR item delivery date is greater than the PO requested delivery date and the PO delivery status is received.\n* The second part of the query is \"COUNT(case_id) FILTER (WHERE 'PO Delivery Status' = 'Received')\". This part counts the number of CASE_ID where the PO delivery status is received.\n* The third part of the query is \"/\". This is a division operator that divides the first part of the query by the second part.\n* The fourth part of the query is \"* 100\". This part multiplies the result of the division by 100.\n\nThe signal_description describes each part of the query in a human-readable format, using the table and column names to provide context. The description also includes the mathematical operations performed in the query, such as division and multiplication. The result of the query is a percentage, which is calculated by dividing the count of CASE_ID where the last GR item delivery date is greater than the PO requested delivery date and the PO delivery status is received, by the count of CASE_ID where the PO delivery status is received, and then multiplying by 100.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\nCOUNT(CASE_ID) FILTER (\n\tWHERE DATE_TRUNC('day', \"Last GR Item Delivery Date\") \n    \t> \"PO Requested Delivery Date\"\n\t\tAND \"PO Delivery Status\" = 'Received')\n/\nCOUNT(case_id) FILTER (\n\tWHERE \"PO Delivery Status\" = 'Received')\n* 100\nFROM \"defaultview-545\" \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}