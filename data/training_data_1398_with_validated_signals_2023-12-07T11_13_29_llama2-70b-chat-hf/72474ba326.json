{"signal_description": "Selecting columns: Group of Events, # of Invoices, # of Events, # of Manual Events, Automation Rate in % \nfrom FLATTEN(defaultview-225) \nwhere Event Created By User Type is not null \ngroup by Group of Events \nsort by # of Events desc", "llm_output": " {\n\"signal_description\": \"Selecting columns: Group of Events, # of Invoices, # of Events, # of Manual Events, Automation Rate in % \\nfrom FLATTEN(defaultview-225) \\nwhere Event Created By User Type is not null \\ngroup by Group of Events \\nsort by # of Events desc\"\n}\n\nThe signal_description is constructed by summarizing the given SIGNAL query into a human-readable description. The description includes the following information:\n\n* Selecting columns: The query selects five columns, which are identified by their alias names: Group of Events, # of Invoices, # of Events, # of Manual Events, and Automation Rate in %.\n* From: The query is selecting data from the FLATTEN(defaultview-225) table.\n* Where: The query filters the data to only include rows where the Event Created By User Type column is not null.\n* Group by: The query groups the data by the Group of Events column.\n* Sort by: The query sorts the data by the # of Events column in descending order.\n\nThe signal_description is constructed by concatenating these pieces of information into a single string, using natural language phrasing to make it easy to understand.", "error_message": null, "llm_input": "[INST]\nYou are SIGNAL assistant, a part of SAP Signavio's Process Intelligence Suite. \nSIGNAL stands for Signavio Analytics Language. \nSIGNAL is a dialect of SQL.\nYour goal is to help users craft SIGNAL \nqueries and understand the SIGNAL language better. \n\nTask to solve:\n\nSummarize the given SIGNAL query as a human-readable description with explicit reference to the table name,\nthe column names and respective values if they are used in the Signal query.\nSummarization style should look like a set of the instructions written by human who knows the table name, columns schema and respective values. \nExplain how this signal_description was constructed.\n\nSIGNAL query: \nSELECT\n  CASE\n    WHEN event_name LIKE '%PO%'\n    OR event_name LIKE '%Purchase Order%'\n    OR event_name LIKE '%Goods Receipt%'\n    OR event_name LIKE '%Make Quality Usage Decision%'\n    OR event_name LIKE '%Order Confirmation%' THEN 'PO events'\n    WHEN event_name LIKE '%Invoice%'\n    OR event_name LIKE '%Memo%'\n    OR event_name LIKE '%Change Reference Number%' THEN 'Invoice events'\n    WHEN event_name LIKE '%Payment%' THEN 'Payment Events'\n    ELSE event_name\n  END AS \"Group of Events\",\n  COUNT(DISTINCT case_id) AS \"# of Invoices\",\n  COUNT(event_name) AS \"# of Events\",\n  COUNT(event_name) FILTER(\n  \tWHERE \"Event Created By User Type\" IN ('Dialog'))\n  \tAS \"# of Manual Events\",\n  COUNT(event_name) FILTER (\n    WHERE\n      \"Event Created By User Type\" IN ('System', 'Service')\n  ) / COUNT(\"event_name\") * 100 AS \"Automation Rate in %\"\nFROM\n  FLATTEN(\"defaultview-225\")\n\tWHERE \"Event Created By User Type\" IS NOT NULL\nORDER BY\n  3 DESC \n \nExpected output result is in JSON format:\n{\n\"signal_description\": text of the Signal summary should be here\n}\nDo not output any other text, apart from the above JSON.\n[/INST]\n"}