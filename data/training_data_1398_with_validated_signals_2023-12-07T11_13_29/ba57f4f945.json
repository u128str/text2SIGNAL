{
  "Unnamed: 0.1": 9755,
  "Unnamed: 0": 4359,
  "name": "Time Series: Active cases by month",
  "query": "SELECT \"Month\"\n       ,IF(count_started IS NOT NULL, count_started, 0) - IF(LAG(count_finished) OVER () IS NOT NULL, LAG(count_finished) OVER (), 0) AS \"Active Cases\"\n  FROM (SELECT \"Month\"\n             , SUM(count_started) OVER (ORDER BY \"Month\") AS count_started\n             , SUM(count_finished) OVER (ORDER BY \"Month\") AS count_finished\n          FROM (SELECT \"Month\"\n                     , COUNT(1) FILTER (WHERE started = 1) AS count_started\n                     , COUNT(1) FILTER (WHERE started = 0) AS count_finished\n                  FROM (SELECT date_trunc('month', (SELECT FIRST(end_time))) AS \"Month\", \n                  \t\t\t   1 AS started\n                        FROM \"defaultview-9\"\n                        UNION ALL\n                        SELECT date_trunc('month', (SELECT LAST(end_time))) AS \"Month\", \n                               0 AS started\n                        FROM \"defaultview-9\") AS sub\n                 GROUP BY 1\n                 FILL TIMESERIES('month')\n               ) AS sub2\n       ) AS sub3",
  "description": null,
  "meta": "investigation",
  "metric_vars": null,
  "view": "defaultview-9",
  "signalFragment": "SELECT \"Month\"\n       ,IF(count_started IS NOT NULL, count_started, 0) - IF(LAG(count_finished) OVER () IS NOT NULL, LAG(count_finished) OVER (), 0) AS \"Active Cases\"\n  FROM (SELECT \"Month\"\n             , SUM(count_started) OVER (ORDER BY \"Month\") AS count_started\n             , SUM(count_finished) OVER (ORDER BY \"Month\") AS count_finished\n          FROM (SELECT \"Month\"\n                     , COUNT(1) FILTER (WHERE started = 1) AS count_started\n                     , COUNT(1) FILTER (WHERE started = 0) AS count_finished\n                  FROM (SELECT date_trunc('month', (SELECT FIRST(end_time))) AS \"Month\", \n                  \t\t\t   1 AS started\n                        FROM THIS_PROCESS\n                        UNION ALL\n                        SELECT date_trunc('month', (SELECT LAST(end_time))) AS \"Month\", \n                               0 AS started\n                        FROM THIS_PROCESS) AS sub\n                 GROUP BY 1\n                 FILL TIMESERIES('month')\n               ) AS sub2\n       ) AS sub3",
  "process": "demo01",
  "origin": "../data/From_API/Process AI/demo01/investigations/AskData POC_2023-12-04.json",
  "workspace_name": "Process AI",
  "FragmentWordCount": 102,
  "descriptionWordCount": 0,
  "nameWordCount": 6,
  "FragmentLength": 1023,
  "descriptionLength": 0,
  "nameLength": 34,
  "parser_column_names": "[\"count_started\", \"end_time\", \"count_finished\", \"date_trunc\"]",
  "parser_values": "[\"defaultview-9\", \"month\", \"Month\", \"Active Cases\"]",
  "parser_error": "Expecting ). Line 1, Col: 967.\n  d                         FROM \"defaultview-9\") AS sub                  GROUP BY 1                  \u001b[4mFILL\u001b[0m TIMESERIES(\"month\")                ) AS sub2        ) AS sub3",
  "parser": "regexp",
  "APIvalidated": "ok",
  "validationDataResponse": "[[1546300800000.0, 804.0], [1548979200000.0, 715.0], [1551398400000.0, 545.0], [1554076800000.0, 430",
  "validationDataLength": 12,
  "view_columns": [
    "CaseId",
    "Activity",
    "End time",
    "Accounts Receivable Turnover Rate",
    "Automation Rate",
    "Average Days Delinquent",
    "Collection Effectiveness Index",
    "Cost per 1k Revenue",
    "Credit Reviews per Credit FTE",
    "Credit Score",
    "Data Set",
    "Days Sales Outstanding",
    "Delivered on Time",
    "Dispute Case",
    "FTEs per 1Bil Revenue",
    "Gross Sales",
    "Invoice Due Date",
    "Net Sales",
    "Overdue receivable",
    "Receivable",
    "Rejected",
    "Risk Class"
  ],
  "filename": "ba57f4f945"
}